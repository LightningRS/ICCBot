CLINIT edge: $r1 = new com.csipsimple.service.PreferenceProvider in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <com.csipsimple.service.PreferenceProvider: void <clinit>()>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.filters.EditFilter dummyMainMethod_com_csipsimple_ui_filters_EditFilter(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.filters.EditFilter dummyMainMethod_com_csipsimple_ui_filters_EditFilter(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.incall.InCallActivity dummyMainMethod_com_csipsimple_ui_incall_InCallActivity(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.incall.InCallActivity dummyMainMethod_com_csipsimple_ui_incall_InCallActivity(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.service.SipService dummyMainMethod_com_csipsimple_service_SipService(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.service.SipService dummyMainMethod_com_csipsimple_service_SipService(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.favorites.FavListFragment dummyMainMethod_com_csipsimple_ui_favorites_FavListFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.favorites.FavListFragment dummyMainMethod_com_csipsimple_ui_favorites_FavListFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.account.AccountEdit dummyMainMethod_com_csipsimple_ui_account_AccountEdit(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.account.AccountEdit dummyMainMethod_com_csipsimple_ui_account_AccountEdit(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.db.DBProvider dummyMainMethod_com_csipsimple_db_DBProvider(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.db.DBProvider dummyMainMethod_com_csipsimple_db_DBProvider(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.widgets.AccountWidgetConfigure dummyMainMethod_com_csipsimple_widgets_AccountWidgetConfigure(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.widgets.AccountWidgetConfigure dummyMainMethod_com_csipsimple_widgets_AccountWidgetConfigure(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.plugins.telephony.CallHandler dummyMainMethod_com_csipsimple_plugins_telephony_CallHandler(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.plugins.telephony.CallHandler dummyMainMethod_com_csipsimple_plugins_telephony_CallHandler(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.prefs.hc.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_hc_MainPrefs(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.prefs.hc.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_hc_MainPrefs(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.prefs.AudioTester dummyMainMethod_com_csipsimple_ui_prefs_AudioTester(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.prefs.AudioTester dummyMainMethod_com_csipsimple_ui_prefs_AudioTester(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.prefs.CodecsFragment dummyMainMethod_com_csipsimple_ui_prefs_CodecsFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.prefs.CodecsFragment dummyMainMethod_com_csipsimple_ui_prefs_CodecsFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.warnings.WarningFragment dummyMainMethod_com_csipsimple_ui_warnings_WarningFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.warnings.WarningFragment dummyMainMethod_com_csipsimple_ui_warnings_WarningFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.prefs.cupcake.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_cupcake_MainPrefs(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.prefs.cupcake.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_cupcake_MainPrefs(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.help.Faq dummyMainMethod_com_csipsimple_ui_help_Faq(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.help.Faq dummyMainMethod_com_csipsimple_ui_help_Faq(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.messages.MessageActivity dummyMainMethod_com_csipsimple_ui_messages_MessageActivity(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.messages.MessageActivity dummyMainMethod_com_csipsimple_ui_messages_MessageActivity(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.account.AccountEditFragment dummyMainMethod_com_csipsimple_ui_account_AccountEditFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.account.AccountEditFragment dummyMainMethod_com_csipsimple_ui_account_AccountEditFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetConfigure dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetConfigure(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetConfigure dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetConfigure(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallChooser dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallChooser(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallChooser dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallChooser(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.incall.DtmfDialogFragment dummyMainMethod_com_csipsimple_ui_incall_DtmfDialogFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.incall.DtmfDialogFragment dummyMainMethod_com_csipsimple_ui_incall_DtmfDialogFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallListFragment dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallListFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallListFragment dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallListFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.prefs.Codecs dummyMainMethod_com_csipsimple_ui_prefs_Codecs(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.prefs.Codecs dummyMainMethod_com_csipsimple_ui_prefs_Codecs(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.widgets.CSSListFragment dummyMainMethod_com_csipsimple_widgets_CSSListFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.widgets.CSSListFragment dummyMainMethod_com_csipsimple_widgets_CSSListFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity dummyMainMethod_com_csipsimple_ui_prefs_cupcake_PrefsLoaderActivity(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity dummyMainMethod_com_csipsimple_ui_prefs_cupcake_PrefsLoaderActivity(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.account.AccountsChooserListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsChooserListFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.account.AccountsChooserListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsChooserListFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.service.DeviceStateReceiver dummyMainMethod_com_csipsimple_service_DeviceStateReceiver(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.service.DeviceStateReceiver dummyMainMethod_com_csipsimple_service_DeviceStateReceiver(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.filters.AccountFilters dummyMainMethod_com_csipsimple_ui_filters_AccountFilters(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.filters.AccountFilters dummyMainMethod_com_csipsimple_ui_filters_AccountFilters(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsActivity dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsActivity(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsActivity dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsActivity(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.plugins.codecs.ReceiverSilk dummyMainMethod_com_csipsimple_plugins_codecs_ReceiverSilk(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.plugins.codecs.ReceiverSilk dummyMainMethod_com_csipsimple_plugins_codecs_ReceiverSilk(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetProvider dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetProvider(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetProvider dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetProvider(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.actionbarsherlock.app.SherlockFragment dummyMainMethod_com_actionbarsherlock_app_SherlockFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.actionbarsherlock.app.SherlockFragment dummyMainMethod_com_actionbarsherlock_app_SherlockFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.wizards.WizardChooser dummyMainMethod_com_csipsimple_wizards_WizardChooser(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.wizards.WizardChooser dummyMainMethod_com_csipsimple_wizards_WizardChooser(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.help.Help dummyMainMethod_com_csipsimple_ui_help_Help(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.help.Help dummyMainMethod_com_csipsimple_ui_help_Help(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.service.HeadsetButtonReceiver dummyMainMethod_com_csipsimple_service_HeadsetButtonReceiver(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.service.HeadsetButtonReceiver dummyMainMethod_com_csipsimple_service_HeadsetButtonReceiver(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.prefs.PrefsFilters dummyMainMethod_com_csipsimple_ui_prefs_PrefsFilters(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.prefs.PrefsFilters dummyMainMethod_com_csipsimple_ui_prefs_PrefsFilters(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.account.AccountsEditList dummyMainMethod_com_csipsimple_ui_account_AccountsEditList(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.account.AccountsEditList dummyMainMethod_com_csipsimple_ui_account_AccountsEditList(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.PickupSipUri dummyMainMethod_com_csipsimple_ui_PickupSipUri(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.PickupSipUri dummyMainMethod_com_csipsimple_ui_PickupSipUri(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.actionbarsherlock.app.SherlockDialogFragment dummyMainMethod_com_actionbarsherlock_app_SherlockDialogFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.actionbarsherlock.app.SherlockDialogFragment dummyMainMethod_com_actionbarsherlock_app_SherlockDialogFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.service.Downloader dummyMainMethod_com_csipsimple_service_Downloader(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.service.Downloader dummyMainMethod_com_csipsimple_service_Downloader(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.SipHome dummyMainMethod_com_csipsimple_ui_SipHome(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.SipHome dummyMainMethod_com_csipsimple_ui_SipHome(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerAutocompleteDetailsFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerAutocompleteDetailsFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.service.PreferenceProvider dummyMainMethod_com_csipsimple_service_PreferenceProvider(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.service.PreferenceProvider dummyMainMethod_com_csipsimple_service_PreferenceProvider(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.prefs.hc.PrefsLoaderFragment dummyMainMethod_com_csipsimple_ui_prefs_hc_PrefsLoaderFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.prefs.hc.PrefsLoaderFragment dummyMainMethod_com_csipsimple_ui_prefs_hc_PrefsLoaderFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.calllog.CallLogListFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogListFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.calllog.CallLogListFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogListFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.wizards.BasePrefsWizard dummyMainMethod_com_csipsimple_wizards_BasePrefsWizard(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.wizards.BasePrefsWizard dummyMainMethod_com_csipsimple_wizards_BasePrefsWizard(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.incall.InCallMediaControl dummyMainMethod_com_csipsimple_ui_incall_InCallMediaControl(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.incall.InCallMediaControl dummyMainMethod_com_csipsimple_ui_incall_InCallMediaControl(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.prefs.PrefsFast dummyMainMethod_com_csipsimple_ui_prefs_PrefsFast(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.prefs.PrefsFast dummyMainMethod_com_csipsimple_ui_prefs_PrefsFast(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.wizards.impl.MondotalkCreate dummyMainMethod_com_csipsimple_wizards_impl_MondotalkCreate(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.wizards.impl.MondotalkCreate dummyMainMethod_com_csipsimple_wizards_impl_MondotalkCreate(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.actionbarsherlock.app.SherlockListFragment dummyMainMethod_com_actionbarsherlock_app_SherlockListFragment(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.actionbarsherlock.app.SherlockListFragment dummyMainMethod_com_actionbarsherlock_app_SherlockListFragment(android.content.Intent,android.app.Activity)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.service.OutgoingCall dummyMainMethod_com_csipsimple_service_OutgoingCall(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.service.OutgoingCall dummyMainMethod_com_csipsimple_service_OutgoingCall(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.widgets.AccountWidgetProvider dummyMainMethod_com_csipsimple_widgets_AccountWidgetProvider(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.widgets.AccountWidgetProvider dummyMainMethod_com_csipsimple_widgets_AccountWidgetProvider(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.csipsimple.ui.help.Legal dummyMainMethod_com_csipsimple_ui_help_Legal(android.content.Intent,android.app.Activity)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.csipsimple.ui.help.Legal dummyMainMethod_com_csipsimple_ui_help_Legal(android.content.Intent,android.app.Activity)>
CLINIT edge: $r2 = new com.csipsimple.db.DBProvider in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <com.csipsimple.db.DBProvider: void <clinit>()>
CLINIT edge: $r0 = new com.csipsimple.service.SipService in <dummyMainClass: com.csipsimple.service.SipService dummyMainMethod_com_csipsimple_service_SipService(android.content.Intent)> ==> <com.csipsimple.service.SipService: void <clinit>()>
CLINIT edge: $r0 = new com.csipsimple.db.DBProvider in <dummyMainClass: com.csipsimple.db.DBProvider dummyMainMethod_com_csipsimple_db_DBProvider(android.content.Intent)> ==> <com.csipsimple.db.DBProvider: void <clinit>()>
CLINIT edge: $r7 = newarray (java.lang.String)[1] in <dummyMainClass: com.csipsimple.db.DBProvider dummyMainMethod_com_csipsimple_db_DBProvider(android.content.Intent)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r0 = new com.csipsimple.plugins.telephony.CallHandler in <dummyMainClass: com.csipsimple.plugins.telephony.CallHandler dummyMainMethod_com_csipsimple_plugins_telephony_CallHandler(android.content.Intent)> ==> <com.csipsimple.plugins.telephony.CallHandler: void <clinit>()>
CLINIT edge: $r0 = new com.csipsimple.ui.calllog.CallLogDetailsFragment in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: void <clinit>()>
CLINIT edge: $r0 = new com.csipsimple.ui.prefs.CodecsFragment in <dummyMainClass: com.csipsimple.ui.prefs.CodecsFragment dummyMainMethod_com_csipsimple_ui_prefs_CodecsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void <clinit>()>
CLINIT edge: $r0 = new com.csipsimple.ui.help.Faq in <dummyMainClass: com.csipsimple.ui.help.Faq dummyMainMethod_com_csipsimple_ui_help_Faq(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Faq: void <clinit>()>
CLINIT edge: $r0 = new com.csipsimple.ui.account.AccountsEditListFragment in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void <clinit>()>
CLINIT edge: $r0 = new com.csipsimple.widgets.ShortcutWidgetConfigure in <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetConfigure dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetConfigure(android.content.Intent)> ==> <com.csipsimple.widgets.ShortcutWidgetConfigure: void <clinit>()>
CLINIT edge: $r0 = new com.csipsimple.widgets.ShortcutWidgetProvider in <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetProvider dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetProvider(android.content.Intent)> ==> <com.csipsimple.widgets.ShortcutWidgetProvider: void <clinit>()>
CLINIT edge: $r0 = new com.csipsimple.service.HeadsetButtonReceiver in <dummyMainClass: com.csipsimple.service.HeadsetButtonReceiver dummyMainMethod_com_csipsimple_service_HeadsetButtonReceiver(android.content.Intent)> ==> <com.csipsimple.service.HeadsetButtonReceiver: void <clinit>()>
CLINIT edge: $r0 = new com.csipsimple.service.PreferenceProvider in <dummyMainClass: com.csipsimple.service.PreferenceProvider dummyMainMethod_com_csipsimple_service_PreferenceProvider(android.content.Intent)> ==> <com.csipsimple.service.PreferenceProvider: void <clinit>()>
CLINIT edge: $r5 = newarray (java.lang.String)[1] in <dummyMainClass: com.csipsimple.service.PreferenceProvider dummyMainMethod_com_csipsimple_service_PreferenceProvider(android.content.Intent)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r0 = new com.csipsimple.service.OutgoingCall in <dummyMainClass: com.csipsimple.service.OutgoingCall dummyMainMethod_com_csipsimple_service_OutgoingCall(android.content.Intent)> ==> <com.csipsimple.service.OutgoingCall: void <clinit>()>
CLINIT edge: $r0 = new com.csipsimple.widgets.AccountWidgetProvider in <dummyMainClass: com.csipsimple.widgets.AccountWidgetProvider dummyMainMethod_com_csipsimple_widgets_AccountWidgetProvider(android.content.Intent)> ==> <com.csipsimple.widgets.AccountWidgetProvider: void <clinit>()>
STATIC edge: $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(2) in <com.csipsimple.db.DBProvider: void <clinit>()> ==> <java.lang.Integer: java.lang.String toString(int)>
CLINIT edge: $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1) in <com.csipsimple.db.DBProvider: void <clinit>()> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r1 = newarray (java.lang.String)[52] in <com.csipsimple.db.DBProvider: void <clinit>()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r0 = newarray (java.lang.String)[7] in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void <clinit>()> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r0 = staticinvoke <com.csipsimple.utils.CustomDistribution: java.lang.String getFaqLink()>() in <com.csipsimple.ui.help.Faq: void <clinit>()> ==> <com.csipsimple.utils.CustomDistribution: java.lang.String getFaqLink()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.String toString(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>(java.lang.String)> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Throwable: void <init>()>() in <java.lang.Exception: void <init>()> ==> <java.lang.Throwable: void <init>()>
FINALIZE edge: null in <java.lang.Object: void <init>()> ==> <java.lang.Object: void finalize()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.widgets.ShortcutWidgetConfigure$Shortcut: void <init>(int,int,android.content.Intent)>(2131427808, 2130837653, $r2) in <com.csipsimple.widgets.ShortcutWidgetConfigure: void <clinit>()> ==> <com.csipsimple.widgets.ShortcutWidgetConfigure$Shortcut: void <init>(int,int,android.content.Intent)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.widgets.ShortcutWidgetConfigure$Shortcut: void <init>(int,int,android.content.Intent)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.ui.help.Legal$1: void <init>(com.csipsimple.ui.help.Legal)>($r0) in <dummyMainClass: com.csipsimple.ui.help.Legal dummyMainMethod_com_csipsimple_ui_help_Legal(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Legal$1: void <init>(com.csipsimple.ui.help.Legal)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.ui.help.Legal$1: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: com.csipsimple.ui.help.Legal dummyMainMethod_com_csipsimple_ui_help_Legal(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Legal$1: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.help.Legal$1: void <init>(com.csipsimple.ui.help.Legal)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.help.Legal: void <init>()>() in <dummyMainClass: com.csipsimple.ui.help.Legal dummyMainMethod_com_csipsimple_ui_help_Legal(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Legal: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockDialogFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.help.Legal dummyMainMethod_com_csipsimple_ui_help_Legal(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<com.csipsimple.ui.help.Legal: android.app.Dialog onCreateDialog(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.help.Legal dummyMainMethod_com_csipsimple_ui_help_Legal(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Legal: android.app.Dialog onCreateDialog(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockDialogFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.help.Legal dummyMainMethod_com_csipsimple_ui_help_Legal(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void onDetach()>
CLINIT edge: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5) in <com.actionbarsherlock.app.SherlockDialogFragment: void onAttach(android.app.Activity)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5) in <com.actionbarsherlock.app.SherlockDialogFragment: void onAttach(android.app.Activity)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.help.Legal$1: void <init>(com.csipsimple.ui.help.Legal)>(r0) in <com.csipsimple.ui.help.Legal: android.app.Dialog onCreateDialog(android.os.Bundle)> ==> <com.csipsimple.ui.help.Legal$1: void <init>(com.csipsimple.ui.help.Legal)>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.ui.help.Legal: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>($r5, null, $r1) in <com.csipsimple.ui.help.Legal: android.app.Dialog onCreateDialog(android.os.Bundle)> ==> <com.csipsimple.ui.help.Legal: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
VIRTUAL edge: $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.app.SherlockDialogFragment: void onAttach(android.app.Activity)> ==> <java.lang.Object: java.lang.Class getClass()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: java.lang.Class getClass()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockDialogFragment: void <init>()>() in <com.csipsimple.ui.help.Legal: void <init>()> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.widgets.AccountWidgetProvider: void <init>()>() in <dummyMainClass: com.csipsimple.widgets.AccountWidgetProvider dummyMainMethod_com_csipsimple_widgets_AccountWidgetProvider(android.content.Intent)> ==> <com.csipsimple.widgets.AccountWidgetProvider: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.widgets.AccountWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: com.csipsimple.widgets.AccountWidgetProvider dummyMainMethod_com_csipsimple_widgets_AccountWidgetProvider(android.content.Intent)> ==> <com.csipsimple.widgets.AccountWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.widgets.AccountWidgetProvider: void onDeleted(android.content.Context,int[])>(null, $r1) in <dummyMainClass: com.csipsimple.widgets.AccountWidgetProvider dummyMainMethod_com_csipsimple_widgets_AccountWidgetProvider(android.content.Intent)> ==> <com.csipsimple.widgets.AccountWidgetProvider: void onDeleted(android.content.Context,int[])>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.widgets.AccountWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>(null, null, $r2) in <dummyMainClass: com.csipsimple.widgets.AccountWidgetProvider dummyMainMethod_com_csipsimple_widgets_AccountWidgetProvider(android.content.Intent)> ==> <com.csipsimple.widgets.AccountWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
CLINIT edge: staticinvoke <com.csipsimple.widgets.AccountWidgetProvider: void updateWidget(android.content.Context)>($r1) in <com.csipsimple.widgets.AccountWidgetProvider: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.widgets.AccountWidgetProvider: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.widgets.AccountWidgetProvider: void updateWidget(android.content.Context)>($r1) in <com.csipsimple.widgets.AccountWidgetProvider: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.widgets.AccountWidgetProvider: void updateWidget(android.content.Context)>
STATIC edge: staticinvoke <com.csipsimple.widgets.AccountWidgetConfigure: void deleteWidget(android.content.Context,int)>($r1, i0) in <com.csipsimple.widgets.AccountWidgetProvider: void onDeleted(android.content.Context,int[])> ==> <com.csipsimple.widgets.AccountWidgetConfigure: void deleteWidget(android.content.Context,int)>
CLINIT edge: $r4 = staticinvoke <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)>($r1, i0) in <com.csipsimple.widgets.AccountWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])> ==> <com.csipsimple.widgets.AccountWidgetProvider: void <clinit>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)>($r1, i0) in <com.csipsimple.widgets.AccountWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])> ==> <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)>
CLINIT edge: $r2 = <com.csipsimple.widgets.AccountWidgetProvider: android.content.ComponentName THIS_APPWIDGET> in <com.csipsimple.widgets.AccountWidgetProvider: void updateWidget(android.content.Context)> ==> <com.csipsimple.widgets.AccountWidgetProvider: void <clinit>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)>($r0, i0) in <com.csipsimple.widgets.AccountWidgetProvider: void updateWidget(android.content.Context)> ==> <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.widgets.AccountWidgetConfigure: java.lang.String getPrefsKey(int)>($i0) in <com.csipsimple.widgets.AccountWidgetConfigure: void deleteWidget(android.content.Context,int)> ==> <com.csipsimple.widgets.AccountWidgetConfigure: java.lang.String getPrefsKey(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Widget provider", "Something went wrong while retrieving the account", r2) in <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2130837599) in <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r12 = staticinvoke <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)>($r0, $l1) in <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)>
STATIC edge: $r11 = staticinvoke <com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)>($r0, $l1, $z1) in <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.wizards.WizardUtils: int getWizardIconRes(java.lang.String)>($r4) in <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <com.csipsimple.wizards.WizardUtils: int getWizardIconRes(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Widget provider", $r4) in <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $l1 = staticinvoke <com.csipsimple.widgets.AccountWidgetConfigure: long getAccountForWidget(android.content.Context,int)>($r0, $i0) in <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <com.csipsimple.widgets.AccountWidgetConfigure: long getAccountForWidget(android.content.Context,int)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Widget provider", "Something went wrong while retrieving the account", r2) in <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2130837599) in <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r11 = staticinvoke <com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)>($r0, $l1, $z1) in <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <com.csipsimple.widgets.AccountWidgetProvider: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <com.csipsimple.wizards.WizardUtils: int getWizardIconRes(java.lang.String)>($r4) in <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <com.csipsimple.wizards.WizardUtils: void <clinit>()>
CLINIT edge: $r8 = newarray (java.lang.String)[4] in <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r7 = <com.csipsimple.api.SipProfile: android.net.Uri ACCOUNT_ID_URI_BASE> in <com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
CLINIT edge: $i0 = <com.csipsimple.utils.Log: int logLevel> in <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r8 = <com.csipsimple.api.SipProfile: android.net.Uri ACCOUNT_STATUS_ID_URI_BASE> in <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
STATIC edge: $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r12) in <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountListUtils", "Error on looping over sip profiles states", r3) in <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
CLINIT edge: $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r12) in <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountListUtils", "Error on looping over sip profiles states", r3) in <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: r2 = new com.csipsimple.api.SipProfileState in <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)> ==> <com.csipsimple.api.SipProfileState: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Widget provider", $r3) in <com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Widget provider", $r3) in <com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r1 = staticinvoke <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)>($r0) in <com.csipsimple.wizards.WizardUtils: int getWizardIconRes(java.lang.String)> ==> <com.csipsimple.wizards.WizardUtils: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)>($r0) in <com.csipsimple.wizards.WizardUtils: int getWizardIconRes(java.lang.String)> ==> <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)>
CLINIT edge: $i0 = <com.csipsimple.utils.Log: int logLevel> in <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.widgets.AccountWidgetConfigure: java.lang.String getPrefsKey(int)>($i0) in <com.csipsimple.widgets.AccountWidgetConfigure: long getAccountForWidget(android.content.Context,int)> ==> <com.csipsimple.widgets.AccountWidgetConfigure: java.lang.String getPrefsKey(int)>
CLINIT edge: $r1 = newarray (java.lang.String)[7] in <com.csipsimple.api.SipProfile: void <clinit>()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r0 = newarray (java.lang.String)[10] in <com.csipsimple.api.SipProfileState: void <clinit>()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $z0 = <com.csipsimple.wizards.WizardUtils: boolean initDone> in <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)> ==> <com.csipsimple.wizards.WizardUtils: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.wizards.WizardUtils: void initWizards()>() in <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)> ==> <com.csipsimple.wizards.WizardUtils: void initWizards()>
CLINIT edge: <com.csipsimple.wizards.WizardUtils: java.util.HashMap WIZARDS_DICT> = $r0 in <com.csipsimple.wizards.WizardUtils: void initWizards()> ==> <com.csipsimple.wizards.WizardUtils: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.CustomDistribution: com.csipsimple.wizards.WizardUtils$WizardInfo getCustomDistributionWizard()>() in <com.csipsimple.wizards.WizardUtils: void initWizards()> ==> <com.csipsimple.utils.CustomDistribution: com.csipsimple.wizards.WizardUtils$WizardInfo getCustomDistributionWizard()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.wizards.WizardUtils: java.util.Locale locale(java.lang.String)>("el_CY") in <com.csipsimple.wizards.WizardUtils: void initWizards()> ==> <com.csipsimple.wizards.WizardUtils: java.util.Locale locale(java.lang.String)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.CustomDistribution: boolean distributionWantsOtherProviders()>() in <com.csipsimple.wizards.WizardUtils: void initWizards()> ==> <com.csipsimple.utils.CustomDistribution: boolean distributionWantsOtherProviders()>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("_") in <com.csipsimple.wizards.WizardUtils: java.util.Locale locale(java.lang.String)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>() in <com.csipsimple.wizards.WizardUtils: java.util.Locale locale(java.lang.String)> ==> <java.lang.String: java.lang.String toLowerCase()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String toLowerCase()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String[] split(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.wizards.WizardUtils$WizardInfo: void <init>(java.lang.String,java.lang.String,int,int,java.util.Locale[],boolean,boolean,java.lang.Class)>("BASIC", "Basic", 2130837720, 50, $r2, 1, 0, class "Lcom/csipsimple/wizards/impl/Basic;") in <com.csipsimple.wizards.WizardUtils: void initWizards()> ==> <com.csipsimple.wizards.WizardUtils$WizardInfo: void <init>(java.lang.String,java.lang.String,int,int,java.util.Locale[],boolean,boolean,java.lang.Class)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.WizardUtils$WizardInfo: void <init>(java.lang.String,java.lang.String,int,int,java.util.Locale[],boolean,boolean,java.lang.Class)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.api.SipProfileState$2: void <init>()>() in <com.csipsimple.api.SipProfileState: void <clinit>()> ==> <com.csipsimple.api.SipProfileState$2: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipProfileState$2: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.api.SipProfileState$1: void <init>()>() in <com.csipsimple.api.SipProfileState: void <clinit>()> ==> <com.csipsimple.api.SipProfileState$1: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipProfileState$1: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.api.SipProfile$1: void <init>()>() in <com.csipsimple.api.SipProfile: void <clinit>()> ==> <com.csipsimple.api.SipProfile$1: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipProfile$1: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.api.SipProfileState: void <init>(android.database.Cursor)>($r9) in <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)> ==> <com.csipsimple.api.SipProfileState: void <init>(android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipProfileState: void <init>(android.database.Cursor)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.api.SipProfileState: void createFromDb(android.database.Cursor)>($r1) in <com.csipsimple.api.SipProfileState: void <init>(android.database.Cursor)> ==> <com.csipsimple.api.SipProfileState: void createFromDb(android.database.Cursor)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.api.SipProfileState: void createFromContentValue(android.content.ContentValues)>(r2) in <com.csipsimple.api.SipProfileState: void createFromDb(android.database.Cursor)> ==> <com.csipsimple.api.SipProfileState: void createFromContentValue(android.content.ContentValues)>
VIRTUAL edge: $z0 = virtualinvoke r6.<com.csipsimple.api.SipProfileState: boolean isActive()>() in <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)> ==> <com.csipsimple.api.SipProfileState: boolean isActive()>
VIRTUAL edge: $i1 = virtualinvoke r6.<com.csipsimple.api.SipProfileState: int getAddedStatus()>() in <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)> ==> <com.csipsimple.api.SipProfileState: int getAddedStatus()>
VIRTUAL edge: $r4 = virtualinvoke r6.<com.csipsimple.api.SipProfileState: java.lang.String getRegUri()>() in <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)> ==> <com.csipsimple.api.SipProfileState: java.lang.String getRegUri()>
VIRTUAL edge: $z0 = virtualinvoke r6.<com.csipsimple.api.SipProfileState: boolean isAddedToStack()>() in <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)> ==> <com.csipsimple.api.SipProfileState: boolean isAddedToStack()>
VIRTUAL edge: $r4 = virtualinvoke r6.<com.csipsimple.api.SipProfileState: java.lang.String getStatusText()>() in <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)> ==> <com.csipsimple.api.SipProfileState: java.lang.String getStatusText()>
VIRTUAL edge: $i1 = virtualinvoke r6.<com.csipsimple.api.SipProfileState: int getStatusCode()>() in <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)> ==> <com.csipsimple.api.SipProfileState: int getStatusCode()>
VIRTUAL edge: $i1 = virtualinvoke r6.<com.csipsimple.api.SipProfileState: int getExpires()>() in <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)> ==> <com.csipsimple.api.SipProfileState: int getExpires()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.utils.AccountListUtils$AccountStatusDisplay: void <init>()>() in <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)> ==> <com.csipsimple.utils.AccountListUtils$AccountStatusDisplay: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.AccountListUtils$AccountStatusDisplay: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.Integer valueOf(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) in <com.csipsimple.widgets.AccountWidgetProvider: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.widgets.AccountWidgetProvider: android.content.Intent getIntent()>() in <com.csipsimple.widgets.AccountWidgetProvider: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.widgets.AccountWidgetProvider: android.content.Intent getIntent()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.AccountWidgetProvider: void onDeleted(android.content.Context,int[])>($r1, $r6) in <com.csipsimple.widgets.AccountWidgetProvider: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.widgets.AccountWidgetProvider: void onDeleted(android.content.Context,int[])>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.service.OutgoingCall: void <init>()>() in <dummyMainClass: com.csipsimple.service.OutgoingCall dummyMainMethod_com_csipsimple_service_OutgoingCall(android.content.Intent)> ==> <com.csipsimple.service.OutgoingCall: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: com.csipsimple.service.OutgoingCall dummyMainMethod_com_csipsimple_service_OutgoingCall(android.content.Intent)> ==> <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)>
CLINIT edge: <com.csipsimple.service.OutgoingCall: java.lang.String ignoreNext> = "" in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.service.OutgoingCall: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Outgoing RCV", "Can\'t use SIP, pass number along") in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r12 = staticinvoke <com.csipsimple.api.SipUri: android.net.Uri forgeSipUri(java.lang.String,java.lang.String)>("sip", $r4) in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.api.SipUri: android.net.Uri forgeSipUri(java.lang.String,java.lang.String)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.models.Filter: boolean isMustCallNumber(android.content.Context,long,java.lang.String)>($r1, $l1, $r4) in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.models.Filter: boolean isMustCallNumber(android.content.Context,long,java.lang.String)>
STATIC edge: $r10 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>($r1, $r3) in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>
STATIC edge: $r8 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)>($r6) in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Outgoing RCV", "Can\'t use SIP, pass number along") in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r12 = staticinvoke <com.csipsimple.api.SipUri: android.net.Uri forgeSipUri(java.lang.String,java.lang.String)>("sip", $r4) in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.api.SipUri: void <clinit>()>
CLINIT edge: $z0 = staticinvoke <com.csipsimple.models.Filter: boolean isMustCallNumber(android.content.Context,long,java.lang.String)>($r1, $l1, $r4) in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.models.Filter: void <clinit>()>
CLINIT edge: $r8 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)>($r6) in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.CallHandlerPlugin: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)>($r0, $l0) in <com.csipsimple.models.Filter: boolean isMustCallNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)>($r0, $l0) in <com.csipsimple.models.Filter: boolean isMustCallNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)>
CLINIT edge: $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1) in <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)> ==> <java.lang.Long: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("CallHandlerPlugin", "Can\'t retrieve call handler cache id - reset") in <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1) in <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("CallHandlerPlugin", "Can\'t retrieve call handler cache id - reset") in <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r3 = <com.csipsimple.utils.CallHandlerPlugin: java.util.Map AVAILABLE_HANDLERS> in <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)> ==> <com.csipsimple.utils.CallHandlerPlugin: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallHandlerPlugin", $r11) in <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallHandlerPlugin", $r11) in <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r0 = newarray (java.lang.String)[5] in <com.csipsimple.models.Filter: void <clinit>()> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) in <com.csipsimple.models.Filter: void <clinit>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.models.Filter: void <clinit>()> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r3 = <com.csipsimple.models.Filter: java.util.Map FILTERS_PER_ACCOUNT> in <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)> ==> <com.csipsimple.models.Filter: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Filter", "Error on looping over sip profiles", r2) in <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.models.Filter: android.database.Cursor getFiltersCursorForAccount(android.content.Context,long)>($r0, $l0) in <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)> ==> <com.csipsimple.models.Filter: android.database.Cursor getFiltersCursorForAccount(android.content.Context,long)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Filter", "Error on looping over sip profiles", r2) in <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)> ==> <java.lang.Long: void <clinit>()>
CLINIT edge: $i0 = <com.csipsimple.utils.Log: int logLevel> in <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r1 = <com.csipsimple.api.SipManager: android.net.Uri FILTER_URI> in <com.csipsimple.models.Filter: android.database.Cursor getFiltersCursorForAccount(android.content.Context,long)> ==> <com.csipsimple.api.SipManager: void <clinit>()>
STATIC edge: $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0) in <com.csipsimple.models.Filter: android.database.Cursor getFiltersCursorForAccount(android.content.Context,long)> ==> <java.lang.Long: java.lang.String toString(long)>
CLINIT edge: $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0) in <com.csipsimple.models.Filter: android.database.Cursor getFiltersCursorForAccount(android.content.Context,long)> ==> <java.lang.Long: void <clinit>()>
CLINIT edge: $r4 = newarray (java.lang.String)[1] in <com.csipsimple.models.Filter: android.database.Cursor getFiltersCursorForAccount(android.content.Context,long)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r2 = <com.csipsimple.models.Filter: java.lang.String[] FULL_PROJ> in <com.csipsimple.models.Filter: android.database.Cursor getFiltersCursorForAccount(android.content.Context,long)> ==> <com.csipsimple.models.Filter: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.String toString(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Long: java.lang.Long valueOf(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.models.Filter: void <init>(android.database.Cursor)>($r5) in <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)> ==> <com.csipsimple.models.Filter: void <init>(android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.models.Filter: void <init>(android.database.Cursor)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.models.Filter: void createFromDb(android.database.Cursor)>($r1) in <com.csipsimple.models.Filter: void <init>(android.database.Cursor)> ==> <com.csipsimple.models.Filter: void createFromDb(android.database.Cursor)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.models.Filter: void createFromContentValue(android.content.ContentValues)>(r2) in <com.csipsimple.models.Filter: void createFromDb(android.database.Cursor)> ==> <com.csipsimple.models.Filter: void createFromContentValue(android.content.ContentValues)>
VIRTUAL edge: $r4 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>() in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Class: java.lang.String getName()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.String getName()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>($r6) in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>("integrate_with_native_dialer", 1) in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForOutgoing()>() in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForOutgoing()>
CLINIT edge: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)> ==> <java.lang.Boolean: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)>($r2, $r1, $r3) in <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)> ==> <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)>
STATIC edge: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
CLINIT edge: $r3 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)>($r2, $r1, $r3) in <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
CLINIT edge: $r4 = staticinvoke <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>($r1) in <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>($r1) in <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)> ==> <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>
CLINIT edge: r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)> ==> <java.lang.Boolean: void <clinit>()>
CLINIT edge: $r1 = <com.csipsimple.api.SipConfigManager: android.net.Uri PREF_ID_URI_BASE> in <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Boolean: java.lang.Boolean valueOf(boolean)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>() in <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)> ==> <java.lang.Class: java.lang.String getName()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>("has_been_quit", 0) in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForOutgoing()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionFor(android.net.NetworkInfo,java.lang.String)>($r2, "out") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForOutgoing()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionFor(android.net.NetworkInfo,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Prefs", "We are valid for WIFI") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionFor(android.net.NetworkInfo,java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Prefs", "We are valid ANYWAY") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionFor(android.net.NetworkInfo,java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidWifiConnectionFor(android.net.NetworkInfo,java.lang.String)>($r1, $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionFor(android.net.NetworkInfo,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidWifiConnectionFor(android.net.NetworkInfo,java.lang.String)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidMobileConnectionFor(android.net.NetworkInfo,java.lang.String)>($r1, $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionFor(android.net.NetworkInfo,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidMobileConnectionFor(android.net.NetworkInfo,java.lang.String)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidOtherConnectionFor(android.net.NetworkInfo,java.lang.String)>($r1, $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionFor(android.net.NetworkInfo,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidOtherConnectionFor(android.net.NetworkInfo,java.lang.String)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidAnywayConnectionFor(android.net.NetworkInfo,java.lang.String)>($r1, $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionFor(android.net.NetworkInfo,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidAnywayConnectionFor(android.net.NetworkInfo,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>($r2, 0) in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidAnywayConnectionFor(android.net.NetworkInfo,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>($r2, 1) in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidOtherConnectionFor(android.net.NetworkInfo,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>($r4, 0) in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidMobileConnectionFor(android.net.NetworkInfo,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>($r2, 1) in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidWifiConnectionFor(android.net.NetworkInfo,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.service.OutgoingCall: android.content.Intent getIntent()>() in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.service.OutgoingCall: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void <init>()>() in <dummyMainClass: com.actionbarsherlock.app.SherlockListFragment dummyMainMethod_com_actionbarsherlock_app_SherlockListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.actionbarsherlock.app.SherlockListFragment dummyMainMethod_com_actionbarsherlock_app_SherlockListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: boolean onOptionsItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: com.actionbarsherlock.app.SherlockListFragment dummyMainMethod_com_actionbarsherlock_app_SherlockListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onPrepareOptionsMenu(android.view.Menu)>(null) in <dummyMainClass: com.actionbarsherlock.app.SherlockListFragment dummyMainMethod_com_actionbarsherlock_app_SherlockListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onPrepareOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>(null, null) in <dummyMainClass: com.actionbarsherlock.app.SherlockListFragment dummyMainMethod_com_actionbarsherlock_app_SherlockListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onDetach()>() in <dummyMainClass: com.actionbarsherlock.app.SherlockListFragment dummyMainMethod_com_actionbarsherlock_app_SherlockListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onDetach()>
CLINIT edge: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5) in <com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5) in <com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>($r1) in <com.actionbarsherlock.app.SherlockListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.app.SherlockListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>($r3, $r4) in <com.actionbarsherlock.app.SherlockListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>($r1) in <com.actionbarsherlock.app.SherlockListFragment: void onPrepareOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.app.SherlockListFragment: void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>($r2) in <com.actionbarsherlock.app.SherlockListFragment: void onPrepareOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void <init>(android.view.MenuItem)>($r1) in <com.actionbarsherlock.app.SherlockListFragment: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void <init>(android.view.MenuItem)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void <init>(android.view.MenuItem)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListFragment: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r2) in <com.actionbarsherlock.app.SherlockListFragment: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockListFragment: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)> ==> <java.lang.Object: java.lang.Class getClass()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.impl.MondotalkCreate: void <init>()>() in <dummyMainClass: com.csipsimple.wizards.impl.MondotalkCreate dummyMainMethod_com_csipsimple_wizards_impl_MondotalkCreate(android.content.Intent)> ==> <com.csipsimple.wizards.impl.MondotalkCreate: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.wizards.impl.MondotalkCreate: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.wizards.impl.MondotalkCreate dummyMainMethod_com_csipsimple_wizards_impl_MondotalkCreate(android.content.Intent)> ==> <com.csipsimple.wizards.impl.MondotalkCreate: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.wizards.impl.MondotalkCreate: void onDestroy()>() in <dummyMainClass: com.csipsimple.wizards.impl.MondotalkCreate dummyMainMethod_com_csipsimple_wizards_impl_MondotalkCreate(android.content.Intent)> ==> <com.csipsimple.wizards.impl.MondotalkCreate: void onDestroy()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.wizards.impl.MondotalkCreate$1: void <init>(com.csipsimple.wizards.impl.MondotalkCreate)>(r0) in <com.csipsimple.wizards.impl.MondotalkCreate: void onCreate(android.os.Bundle)> ==> <com.csipsimple.wizards.impl.MondotalkCreate$1: void <init>(com.csipsimple.wizards.impl.MondotalkCreate)>
VIRTUAL edge: virtualinvoke r2.<java.lang.Thread: void start()>() in <com.csipsimple.wizards.impl.MondotalkCreate: void onCreate(android.os.Bundle)> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke r2.<java.lang.Thread: void start()>() in <com.csipsimple.wizards.impl.MondotalkCreate: void onCreate(android.os.Bundle)> ==> <com.csipsimple.wizards.impl.MondotalkCreate$1: void run()>
STATIC edge: staticinvoke <com.csipsimple.wizards.impl.MondotalkCreate: boolean access$4(com.csipsimple.wizards.impl.MondotalkCreate)>($r1) in <com.csipsimple.wizards.impl.MondotalkCreate$1: void run()> ==> <com.csipsimple.wizards.impl.MondotalkCreate: boolean access$4(com.csipsimple.wizards.impl.MondotalkCreate)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void start()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.csipsimple.wizards.impl.MondotalkCreate$1: void <init>(com.csipsimple.wizards.impl.MondotalkCreate)> ==> <java.lang.Thread: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.MondotalkCreate: boolean canSave()>() in <com.csipsimple.wizards.impl.MondotalkCreate: void onCreate(android.os.Bundle)> ==> <com.csipsimple.wizards.impl.MondotalkCreate: boolean canSave()>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.wizards.impl.MondotalkCreate: boolean checkEmptyText(android.widget.EditText)>($r1) in <com.csipsimple.wizards.impl.MondotalkCreate: boolean canSave()> ==> <com.csipsimple.wizards.impl.MondotalkCreate: boolean checkEmptyText(android.widget.EditText)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.wizards.impl.MondotalkCreate$MondotalkHandler: void <init>(com.csipsimple.wizards.impl.MondotalkCreate)>(r0) in <com.csipsimple.wizards.impl.MondotalkCreate: void <init>()> ==> <com.csipsimple.wizards.impl.MondotalkCreate$MondotalkHandler: void <init>(com.csipsimple.wizards.impl.MondotalkCreate)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.prefs.PrefsFast: void <init>()>() in <dummyMainClass: com.csipsimple.ui.prefs.PrefsFast dummyMainMethod_com_csipsimple_ui_prefs_PrefsFast(android.content.Intent)> ==> <com.csipsimple.ui.prefs.PrefsFast: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.PrefsFast: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.PrefsFast dummyMainMethod_com_csipsimple_ui_prefs_PrefsFast(android.content.Intent)> ==> <com.csipsimple.ui.prefs.PrefsFast: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.PrefsFast dummyMainMethod_com_csipsimple_ui_prefs_PrefsFast(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.ui.prefs.PrefsFast dummyMainMethod_com_csipsimple_ui_prefs_PrefsFast(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockActivity: void onPause()>() in <dummyMainClass: com.csipsimple.ui.prefs.PrefsFast dummyMainMethod_com_csipsimple_ui_prefs_PrefsFast(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockActivity: void onStop()>() in <dummyMainClass: com.csipsimple.ui.prefs.PrefsFast dummyMainMethod_com_csipsimple_ui_prefs_PrefsFast(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.PrefsFast: void onDestroy()>() in <dummyMainClass: com.csipsimple.ui.prefs.PrefsFast dummyMainMethod_com_csipsimple_ui_prefs_PrefsFast(android.content.Intent)> ==> <com.csipsimple.ui.prefs.PrefsFast: void onDestroy()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockActivity: void onDestroy()>() in <com.csipsimple.ui.prefs.PrefsFast: void onDestroy()> ==> <com.actionbarsherlock.app.SherlockActivity: void onDestroy()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.PrefsFast: void applyPrefs()>() in <com.csipsimple.ui.prefs.PrefsFast: void onDestroy()> ==> <com.csipsimple.ui.prefs.PrefsFast: void applyPrefs()>
CLINIT edge: r2 = <com.csipsimple.ui.prefs.PrefsFast$Profile: com.csipsimple.ui.prefs.PrefsFast$Profile UNKOWN> in <com.csipsimple.ui.prefs.PrefsFast: void applyPrefs()> ==> <com.csipsimple.ui.prefs.PrefsFast$Profile: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>(r0, "lock_wifi", $z0) in <com.csipsimple.ui.prefs.PrefsFast: void applyPrefs()> ==> <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>
CLINIT edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>(r0, "integrate_with_native_dialer", $z1) in <com.csipsimple.ui.prefs.PrefsFast: void applyPrefs()> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
CLINIT edge: $r3 = staticinvoke <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>($r1) in <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>($r1) in <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)> ==> <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>
CLINIT edge: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)> ==> <java.lang.Boolean: void <clinit>()>
VIRTUAL edge: $r1 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>() in <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)> ==> <java.lang.Class: java.lang.String getName()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.prefs.PrefsFast$Profile: void <init>(java.lang.String,int)>("UNKOWN", 0) in <com.csipsimple.ui.prefs.PrefsFast$Profile: void <clinit>()> ==> <com.csipsimple.ui.prefs.PrefsFast$Profile: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <com.csipsimple.ui.prefs.PrefsFast$Profile: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
FINALIZE edge: null in <java.lang.Enum: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void finalize()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Enum: void finalize()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Enum: void <init>(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Enum: void <init>(java.lang.String,int)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void onDestroy()> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
CLINIT edge: $r1 = staticinvoke <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>(r0, 1) in <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()> ==> <com.actionbarsherlock.ActionBarSherlock: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>(r0, 1) in <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()> ==> <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>
CLINIT edge: $r0 = <java.lang.Integer: java.lang.Class TYPE> in <com.actionbarsherlock.ActionBarSherlock: void <clinit>()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: staticinvoke <com.actionbarsherlock.ActionBarSherlock: void registerImplementation(java.lang.Class)>(class "Lcom/actionbarsherlock/internal/ActionBarSherlockNative;") in <com.actionbarsherlock.ActionBarSherlock: void <clinit>()> ==> <com.actionbarsherlock.ActionBarSherlock: void registerImplementation(java.lang.Class)>
CLINIT edge: $r2 = <com.actionbarsherlock.ActionBarSherlock: java.util.HashMap IMPLEMENTATIONS> in <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)> ==> <com.actionbarsherlock.ActionBarSherlock: void <clinit>()>
STATIC edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)> ==> <java.lang.Integer: void <clinit>()>
VIRTUAL edge: $z0 = virtualinvoke r0.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Lcom/actionbarsherlock/ActionBarSherlock$Implementation;") in <com.actionbarsherlock.ActionBarSherlock: void registerImplementation(java.lang.Class)> ==> <java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>
VIRTUAL edge: $r3 = virtualinvoke r0.<java.lang.Class: java.lang.String getSimpleName()>() in <com.actionbarsherlock.ActionBarSherlock: void registerImplementation(java.lang.Class)> ==> <java.lang.Class: java.lang.String getSimpleName()>
VIRTUAL edge: $r5 = virtualinvoke r0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/actionbarsherlock/ActionBarSherlock$Implementation;") in <com.actionbarsherlock.ActionBarSherlock: void registerImplementation(java.lang.Class)> ==> <java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.String getSimpleName()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: boolean isAnnotationPresent(java.lang.Class)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r17) in <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.Throwable)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.RuntimeException: void <init>(java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>(java.lang.Throwable)> ==> <java.lang.Exception: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void onStop()> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void onPause()> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void onPostResume()> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void onPostCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.prefs.PrefsFast: void setContentView(int)>(2130903091) in <com.csipsimple.ui.prefs.PrefsFast: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockActivity: void setContentView(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.PrefsFast: void updateFromPrefs()>() in <com.csipsimple.ui.prefs.PrefsFast: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.PrefsFast: void updateFromPrefs()>
CLINIT edge: $r2 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>(r0, "integrate_with_native_dialer") in <com.csipsimple.ui.prefs.PrefsFast: void updateFromPrefs()> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)>(r0, "lock_wifi", $r2) in <com.csipsimple.ui.prefs.PrefsFast: void updateFromPrefs()> ==> <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)>
STATIC edge: $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <com.csipsimple.ui.prefs.PrefsFast: void updateFromPrefs()> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>(r0, "integrate_with_native_dialer") in <com.csipsimple.ui.prefs.PrefsFast: void updateFromPrefs()> ==> <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>
CLINIT edge: r3 = <com.csipsimple.ui.prefs.PrefsFast$Profile: com.csipsimple.ui.prefs.PrefsFast$Profile UNKOWN> in <com.csipsimple.ui.prefs.PrefsFast: void updateFromPrefs()> ==> <com.csipsimple.ui.prefs.PrefsFast$Profile: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <com.csipsimple.ui.prefs.PrefsFast: void updateFromPrefs()> ==> <java.lang.Boolean: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)>($r0, $r1, null) in <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)>($r0, $r1, null) in <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.PrefsFast: void setProfile(com.csipsimple.ui.prefs.PrefsFast$Profile)>(r3) in <com.csipsimple.ui.prefs.PrefsFast: void updateFromPrefs()> ==> <com.csipsimple.ui.prefs.PrefsFast: void setProfile(com.csipsimple.ui.prefs.PrefsFast$Profile)>
CLINIT edge: $r3 = <com.csipsimple.ui.prefs.PrefsFast$Profile: com.csipsimple.ui.prefs.PrefsFast$Profile ALWAYS> in <com.csipsimple.ui.prefs.PrefsFast: void setProfile(com.csipsimple.ui.prefs.PrefsFast$Profile)> ==> <com.csipsimple.ui.prefs.PrefsFast$Profile: void <clinit>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void setContentView(int)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockActivity: void <init>()>() in <com.csipsimple.ui.prefs.PrefsFast: void <init>()> ==> <com.actionbarsherlock.app.SherlockActivity: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.incall.InCallMediaControl: void <init>()>() in <dummyMainClass: com.csipsimple.ui.incall.InCallMediaControl dummyMainMethod_com_csipsimple_ui_incall_InCallMediaControl(android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallMediaControl: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.incall.InCallMediaControl: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.incall.InCallMediaControl dummyMainMethod_com_csipsimple_ui_incall_InCallMediaControl(android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallMediaControl: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.incall.InCallMediaControl: void onResume()>() in <dummyMainClass: com.csipsimple.ui.incall.InCallMediaControl dummyMainMethod_com_csipsimple_ui_incall_InCallMediaControl(android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallMediaControl: void onResume()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.incall.InCallMediaControl: void onPause()>() in <dummyMainClass: com.csipsimple.ui.incall.InCallMediaControl dummyMainMethod_com_csipsimple_ui_incall_InCallMediaControl(android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallMediaControl: void onPause()>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void <init>(com.csipsimple.ui.incall.InCallMediaControl,com.csipsimple.ui.incall.InCallMediaControl$MonitorThread)>(r0, null) in <com.csipsimple.ui.incall.InCallMediaControl: void onResume()> ==> <com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void <init>(com.csipsimple.ui.incall.InCallMediaControl,com.csipsimple.ui.incall.InCallMediaControl$MonitorThread)>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void start()>() in <com.csipsimple.ui.incall.InCallMediaControl: void onResume()> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke $r6.<com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void start()>() in <com.csipsimple.ui.incall.InCallMediaControl: void onResume()> ==> <com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void run()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("inCallMediaCtrl", "Problem with remote service", r5) in <com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void run()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("inCallMediaCtrl", "Interupted monitor thread", r6) in <com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void run()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void sleep(long)>(100L) in <com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void run()> ==> <java.lang.Thread: void sleep(long)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.ui.incall.InCallMediaControl: com.csipsimple.api.ISipService access$0(com.csipsimple.ui.incall.InCallMediaControl)>($r1) in <com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void run()> ==> <com.csipsimple.ui.incall.InCallMediaControl: com.csipsimple.api.ISipService access$0(com.csipsimple.ui.incall.InCallMediaControl)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void sleep(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.incall.InCallMediaControl$UpdateConfLevelRunnable: void <init>(com.csipsimple.ui.incall.InCallMediaControl,int,int)>($r1, $i2, $i3) in <com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void run()> ==> <com.csipsimple.ui.incall.InCallMediaControl$UpdateConfLevelRunnable: void <init>(com.csipsimple.ui.incall.InCallMediaControl,int,int)>
EXECUTOR edge: virtualinvoke $r3.<com.csipsimple.ui.incall.InCallMediaControl: void runOnUiThread(java.lang.Runnable)>($r4) in <com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void run()> ==> <com.csipsimple.ui.incall.InCallMediaControl$UpdateConfLevelRunnable: void run()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.ui.incall.InCallMediaControl: android.widget.ProgressBar access$3(com.csipsimple.ui.incall.InCallMediaControl)>($r1) in <com.csipsimple.ui.incall.InCallMediaControl$UpdateConfLevelRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallMediaControl: android.widget.ProgressBar access$3(com.csipsimple.ui.incall.InCallMediaControl)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.ui.incall.InCallMediaControl: android.widget.ProgressBar access$4(com.csipsimple.ui.incall.InCallMediaControl)>($r1) in <com.csipsimple.ui.incall.InCallMediaControl$UpdateConfLevelRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallMediaControl: android.widget.ProgressBar access$4(com.csipsimple.ui.incall.InCallMediaControl)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.InCallMediaControl$UpdateConfLevelRunnable: void <init>(com.csipsimple.ui.incall.InCallMediaControl,int,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void run()>() in <com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void run()> ==> <java.lang.Thread: void run()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void <init>(com.csipsimple.ui.incall.InCallMediaControl)>($r1) in <com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void <init>(com.csipsimple.ui.incall.InCallMediaControl,com.csipsimple.ui.incall.InCallMediaControl$MonitorThread)> ==> <com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void <init>(com.csipsimple.ui.incall.InCallMediaControl)>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void <init>(com.csipsimple.ui.incall.InCallMediaControl)> ==> <java.lang.Thread: void <init>()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.InCallMediaControl: void delayedQuit(int)>(3000) in <com.csipsimple.ui.incall.InCallMediaControl: void onResume()> ==> <com.csipsimple.ui.incall.InCallMediaControl: void delayedQuit(int)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.incall.InCallMediaControl$LockTimerTask: void <init>(com.csipsimple.ui.incall.InCallMediaControl,com.csipsimple.ui.incall.InCallMediaControl$LockTimerTask)>(r0, null) in <com.csipsimple.ui.incall.InCallMediaControl: void delayedQuit(int)> ==> <com.csipsimple.ui.incall.InCallMediaControl$LockTimerTask: void <init>(com.csipsimple.ui.incall.InCallMediaControl,com.csipsimple.ui.incall.InCallMediaControl$LockTimerTask)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallMediaControl$LockTimerTask: void <init>(com.csipsimple.ui.incall.InCallMediaControl)>($r1) in <com.csipsimple.ui.incall.InCallMediaControl$LockTimerTask: void <init>(com.csipsimple.ui.incall.InCallMediaControl,com.csipsimple.ui.incall.InCallMediaControl$LockTimerTask)> ==> <com.csipsimple.ui.incall.InCallMediaControl$LockTimerTask: void <init>(com.csipsimple.ui.incall.InCallMediaControl)>
VIRTUAL edge: virtualinvoke $r1.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r2, $l1) in <com.csipsimple.ui.incall.InCallMediaControl: void delayedQuit(int)> ==> <java.util.Timer: void schedule(java.util.TimerTask,long)>
VIRTUAL edge: virtualinvoke param0.<java.util.TimerTask: void run()>() in <java.util.Timer: void schedule(java.util.TimerTask,long)> ==> <com.csipsimple.ui.incall.InCallMediaControl$LockTimerTask: void run()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.incall.InCallMediaControl$2: void <init>(com.csipsimple.ui.incall.InCallMediaControl)>(r0) in <com.csipsimple.ui.incall.InCallMediaControl: void <init>()> ==> <com.csipsimple.ui.incall.InCallMediaControl$2: void <init>(com.csipsimple.ui.incall.InCallMediaControl)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.InCallMediaControl$2: void <init>(com.csipsimple.ui.incall.InCallMediaControl)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.ui.incall.InCallMediaControl$1: void <init>(com.csipsimple.ui.incall.InCallMediaControl)>(r0) in <com.csipsimple.ui.incall.InCallMediaControl: void <init>()> ==> <com.csipsimple.ui.incall.InCallMediaControl$1: void <init>(com.csipsimple.ui.incall.InCallMediaControl)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.BasePrefsWizard: void <init>()>() in <dummyMainClass: com.csipsimple.wizards.BasePrefsWizard dummyMainMethod_com_csipsimple_wizards_BasePrefsWizard(android.content.Intent)> ==> <com.csipsimple.wizards.BasePrefsWizard: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.wizards.BasePrefsWizard: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.wizards.BasePrefsWizard dummyMainMethod_com_csipsimple_wizards_BasePrefsWizard(android.content.Intent)> ==> <com.csipsimple.wizards.BasePrefsWizard: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.wizards.BasePrefsWizard dummyMainMethod_com_csipsimple_wizards_BasePrefsWizard(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.wizards.BasePrefsWizard: void onResume()>() in <dummyMainClass: com.csipsimple.wizards.BasePrefsWizard dummyMainMethod_com_csipsimple_wizards_BasePrefsWizard(android.content.Intent)> ==> <com.csipsimple.wizards.BasePrefsWizard: void onResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.wizards.BasePrefsWizard dummyMainMethod_com_csipsimple_wizards_BasePrefsWizard(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.wizards.BasePrefsWizard: void onPause()>() in <dummyMainClass: com.csipsimple.wizards.BasePrefsWizard dummyMainMethod_com_csipsimple_wizards_BasePrefsWizard(android.content.Intent)> ==> <com.csipsimple.wizards.BasePrefsWizard: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onStop()>() in <dummyMainClass: com.csipsimple.wizards.BasePrefsWizard dummyMainMethod_com_csipsimple_wizards_BasePrefsWizard(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.wizards.BasePrefsWizard: void onDestroy()>() in <dummyMainClass: com.csipsimple.wizards.BasePrefsWizard dummyMainMethod_com_csipsimple_wizards_BasePrefsWizard(android.content.Intent)> ==> <com.csipsimple.wizards.BasePrefsWizard: void onDestroy()>
CLINIT edge: $r4 = <com.csipsimple.db.DBProvider: java.lang.String[] ACCOUNT_FULL_PROJECTION> in <com.csipsimple.wizards.BasePrefsWizard: void onCreate(android.os.Bundle)> ==> <com.csipsimple.db.DBProvider: void <clinit>()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])>(r0, $l0, $r4) in <com.csipsimple.wizards.BasePrefsWizard: void onCreate(android.os.Bundle)> ==> <com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])>
CLINIT edge: $r5 = staticinvoke <com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])>(r0, $l0, $r4) in <com.csipsimple.wizards.BasePrefsWizard: void onCreate(android.os.Bundle)> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
CLINIT edge: r4 = new com.csipsimple.api.SipProfile in <com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>($r7) in <com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])> ==> <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>
CLINIT edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.api.SipProfile: void createFromDb(android.database.Cursor)>($r1) in <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)> ==> <com.csipsimple.api.SipProfile: void createFromDb(android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.api.SipProfile: void createFromContentValue(android.content.ContentValues)>(r2) in <com.csipsimple.api.SipProfile: void createFromDb(android.database.Cursor)> ==> <com.csipsimple.api.SipProfile: void createFromContentValue(android.content.ContentValues)>
SPECIAL edge: specialinvoke r4.<com.csipsimple.api.SipProfile: void <init>()>() in <com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])> ==> <com.csipsimple.api.SipProfile: void <init>()>
CLINIT edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <com.csipsimple.api.SipProfile: void <init>()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <com.csipsimple.api.SipProfile: void <init>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipProfile: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void onDestroy()>() in <com.csipsimple.wizards.BasePrefsWizard: void onDestroy()> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onDestroy()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.wizards.BasePrefsWizard: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("Wizard", 0) in <com.csipsimple.wizards.BasePrefsWizard: void onDestroy()> ==> <com.csipsimple.wizards.BasePrefsWizard: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onDestroy()> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
CLINIT edge: $r1 = staticinvoke <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>(r0, 1) in <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()> ==> <com.actionbarsherlock.ActionBarSherlock: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>(r0, 1) in <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()> ==> <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onStop()> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void onPause()>() in <com.csipsimple.wizards.BasePrefsWizard: void onPause()> ==> <com.csipsimple.ui.prefs.GenericPrefs: void onPause()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onPause()>() in <com.csipsimple.ui.prefs.GenericPrefs: void onPause()> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPause()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPause()> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostResume()> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void onResume()>() in <com.csipsimple.wizards.BasePrefsWizard: void onResume()> ==> <com.csipsimple.ui.prefs.GenericPrefs: void onResume()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.BasePrefsWizard: void updateDescriptions()>() in <com.csipsimple.wizards.BasePrefsWizard: void onResume()> ==> <com.csipsimple.wizards.BasePrefsWizard: void updateDescriptions()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.BasePrefsWizard: void updateValidation()>() in <com.csipsimple.wizards.BasePrefsWizard: void onResume()> ==> <com.csipsimple.wizards.BasePrefsWizard: void updateValidation()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void updateDescriptions()>() in <com.csipsimple.ui.prefs.GenericPrefs: void onResume()> ==> <com.csipsimple.wizards.BasePrefsWizard: void updateDescriptions()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.wizards.BasePrefsWizard$2: void <init>(com.csipsimple.wizards.BasePrefsWizard)>(r0) in <com.csipsimple.wizards.BasePrefsWizard: void onCreate(android.os.Bundle)> ==> <com.csipsimple.wizards.BasePrefsWizard$2: void <init>(com.csipsimple.wizards.BasePrefsWizard)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.BasePrefsWizard$2: void <init>(com.csipsimple.wizards.BasePrefsWizard)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.wizards.BasePrefsWizard$1: void <init>(com.csipsimple.wizards.BasePrefsWizard)>(r0) in <com.csipsimple.wizards.BasePrefsWizard: void onCreate(android.os.Bundle)> ==> <com.csipsimple.wizards.BasePrefsWizard$1: void <init>(com.csipsimple.wizards.BasePrefsWizard)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.BasePrefsWizard$1: void <init>(com.csipsimple.wizards.BasePrefsWizard)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.BasePrefsWizard: boolean setWizardId(java.lang.String)>($r3) in <com.csipsimple.wizards.BasePrefsWizard: void onCreate(android.os.Bundle)> ==> <com.csipsimple.wizards.BasePrefsWizard: boolean setWizardId(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void onCreate(android.os.Bundle)>($r1) in <com.csipsimple.wizards.BasePrefsWizard: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void onCreate(android.os.Bundle)>
CLINIT edge: $r3 = staticinvoke <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)>($r1) in <com.csipsimple.wizards.BasePrefsWizard: boolean setWizardId(java.lang.String)> ==> <com.csipsimple.wizards.WizardUtils: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Base Prefs wizard", "Can\'t access wizard class", r8) in <com.csipsimple.wizards.BasePrefsWizard: boolean setWizardId(java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)>($r1) in <com.csipsimple.wizards.BasePrefsWizard: boolean setWizardId(java.lang.String)> ==> <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Base Prefs wizard", "Can\'t access wizard class", r8) in <com.csipsimple.wizards.BasePrefsWizard: boolean setWizardId(java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void beforeBuildPrefs()>() in <com.csipsimple.ui.prefs.GenericPrefs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.wizards.BasePrefsWizard: void beforeBuildPrefs()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: int getXmlPreferences()>() in <com.csipsimple.ui.prefs.GenericPrefs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.wizards.BasePrefsWizard: int getXmlPreferences()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void afterBuildPrefs()>() in <com.csipsimple.ui.prefs.GenericPrefs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void afterBuildPrefs()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.BasePrefsWizard: void setContentView(int)>(2130903132) in <com.csipsimple.wizards.BasePrefsWizard: void beforeBuildPrefs()> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void setContentView(int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void setContentView(int)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("EXPERT") in <com.csipsimple.wizards.BasePrefsWizard: boolean setWizardId(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void <init>()>() in <com.csipsimple.wizards.BasePrefsWizard: void <init>()> ==> <com.csipsimple.ui.prefs.GenericPrefs: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void <init>()>() in <com.csipsimple.ui.prefs.GenericPrefs: void <init>()> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.calllog.CallLogListFragment$1: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)>($r0) in <dummyMainClass: com.csipsimple.ui.calllog.CallLogListFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.calllog.CallLogListFragment$1: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.ui.calllog.CallLogListFragment$1: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>(null, null, 0, 0L) in <dummyMainClass: com.csipsimple.ui.calllog.CallLogListFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.calllog.CallLogListFragment$1: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>
STATIC edge: staticinvoke <com.csipsimple.ui.calllog.CallLogListFragment: void access$4(com.csipsimple.ui.calllog.CallLogListFragment)>($r3) in <com.csipsimple.ui.calllog.CallLogListFragment$1: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void access$4(com.csipsimple.ui.calllog.CallLogListFragment)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.ui.calllog.CallLogListFragment: com.actionbarsherlock.view.ActionMode access$5(com.csipsimple.ui.calllog.CallLogListFragment)>($r3) in <com.csipsimple.ui.calllog.CallLogListFragment$1: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: com.actionbarsherlock.view.ActionMode access$5(com.csipsimple.ui.calllog.CallLogListFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.CallLogListFragment$1: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.calllog.CallLogListFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.calllog.CallLogListFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.calllog.CallLogListFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.csipsimple.ui.calllog.CallLogListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>(null, null, null) in <dummyMainClass: com.csipsimple.ui.calllog.CallLogListFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.calllog.CallLogListFragment: void onViewCreated(android.view.View,android.os.Bundle)>(null, null) in <dummyMainClass: com.csipsimple.ui.calllog.CallLogListFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void onViewCreated(android.view.View,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.calllog.CallLogListFragment: void onActivityCreated(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.calllog.CallLogListFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void onActivityCreated(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.calllog.CallLogListFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onDetach()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void onActivityCreated(android.os.Bundle)>($r1) in <com.csipsimple.ui.calllog.CallLogListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.widgets.CSSListFragment: void onActivityCreated(android.os.Bundle)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.ui.calllog.CallLogListFragment$1: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)>(r0) in <com.csipsimple.ui.calllog.CallLogListFragment: void onViewCreated(android.view.View,android.os.Bundle)> ==> <com.csipsimple.ui.calllog.CallLogListFragment$1: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void <init>()>() in <com.csipsimple.ui.calllog.CallLogListFragment: void <init>()> ==> <com.csipsimple.widgets.CSSListFragment: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockListFragment: void <init>()>() in <com.csipsimple.widgets.CSSListFragment: void <init>()> ==> <com.actionbarsherlock.app.SherlockListFragment: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.prefs.hc.PrefsLoaderFragment dummyMainMethod_com_csipsimple_ui_prefs_hc_PrefsLoaderFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.hc.PrefsLoaderFragment dummyMainMethod_com_csipsimple_ui_prefs_hc_PrefsLoaderFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void onCreate(android.os.Bundle)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.ui.prefs.PrefsLogic: int getXmlResourceForType(int)>($i0) in <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.PrefsLogic: int getXmlResourceForType(int)>
STATIC edge: staticinvoke <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)>($r2, r0, $i0) in <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)>
CLINIT edge: r4 = new com.csipsimple.utils.PreferencesWrapper in <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
STATIC edge: $r15 = staticinvoke <com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)>($r0, "com.csipsimple.plugins.action.REGISTER_VIDEO") in <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)> ==> <com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.CustomDistribution: boolean supportCallRecord()>() in <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)> ==> <com.csipsimple.utils.CustomDistribution: boolean supportCallRecord()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.CustomDistribution: boolean forceNoMultipleCalls()>() in <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)> ==> <com.csipsimple.utils.CustomDistribution: boolean forceNoMultipleCalls()>
STATIC edge: $r10 = staticinvoke <com.csipsimple.utils.Theme: java.util.HashMap getAvailableThemes(android.content.Context)>($r0) in <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)> ==> <com.csipsimple.utils.Theme: java.util.HashMap getAvailableThemes(android.content.Context)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(9) in <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
CLINIT edge: $r15 = staticinvoke <com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)>($r0, "com.csipsimple.plugins.action.REGISTER_VIDEO") in <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)> ==> <com.csipsimple.utils.ExtraPlugins: void <clinit>()>
CLINIT edge: $r8 = <com.csipsimple.utils.ExtraPlugins: java.util.Map CACHED_RESOLUTION> in <com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.ExtraPlugins: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExtraPlugins", "Error while retrieving infos from dyn codec ", r5) in <com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("ExtraPlugins", "Error while retrieving infos from dyn codec ", r5) in <com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Theme", $r6) in <com.csipsimple.utils.Theme: java.util.HashMap getAvailableThemes(android.content.Context)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Theme", $r6) in <com.csipsimple.utils.Theme: java.util.HashMap getAvailableThemes(android.content.Context)> ==> <com.csipsimple.utils.Log: void <clinit>()>
SPECIAL edge: specialinvoke r4.<com.csipsimple.utils.ExtraPlugins$DynCodecInfos: void <init>(android.content.Context,android.content.ComponentName)>($r0, r3) in <com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.ExtraPlugins$DynCodecInfos: void <init>(android.content.Context,android.content.ComponentName)>
STATIC edge: $r10 = staticinvoke <com.csipsimple.pjsip.NativeLibManager: java.io.File getLibFileFromPackage(android.content.pm.ApplicationInfo,java.lang.String,boolean)>($r9, $r6, 1) in <com.csipsimple.utils.ExtraPlugins$DynCodecInfos: void <init>(android.content.Context,android.content.ComponentName)> ==> <com.csipsimple.pjsip.NativeLibManager: java.io.File getLibFileFromPackage(android.content.pm.ApplicationInfo,java.lang.String,boolean)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("NativeLibMgr", $r4) in <com.csipsimple.pjsip.NativeLibManager: java.io.File getLibFileFromPackage(android.content.pm.ApplicationInfo,java.lang.String,boolean)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("NativeLibMgr", "Cant get field for native lib dir", r2) in <com.csipsimple.pjsip.NativeLibManager: java.io.File getLibFileFromPackage(android.content.pm.ApplicationInfo,java.lang.String,boolean)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("NativeLibMgr", "Found native lib using clean way") in <com.csipsimple.pjsip.NativeLibManager: java.io.File getLibFileFromPackage(android.content.pm.ApplicationInfo,java.lang.String,boolean)> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(9) in <com.csipsimple.pjsip.NativeLibManager: java.io.File getLibFileFromPackage(android.content.pm.ApplicationInfo,java.lang.String,boolean)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
CLINIT edge: $i0 = <com.csipsimple.utils.Log: int logLevel> in <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
VIRTUAL edge: $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("nativeLibraryDir") in <com.csipsimple.pjsip.NativeLibManager: java.io.File getLibFileFromPackage(android.content.pm.ApplicationInfo,java.lang.String,boolean)> ==> <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.ExtraPlugins$DynCodecInfos: void <init>(android.content.Context,android.content.ComponentName)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.PreferencesWrapper$3: void <init>()>() in <com.csipsimple.utils.PreferencesWrapper: void <clinit>()> ==> <com.csipsimple.utils.PreferencesWrapper$3: void <init>()>
CLINIT edge: $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F) in <com.csipsimple.utils.PreferencesWrapper$3: void <init>()> ==> <java.lang.Float: void <clinit>()>
STATIC edge: $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(8.0F) in <com.csipsimple.utils.PreferencesWrapper$3: void <init>()> ==> <java.lang.Float: java.lang.Float valueOf(float)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Float: java.lang.Float valueOf(float)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.utils.PreferencesWrapper$2: void <init>()>() in <com.csipsimple.utils.PreferencesWrapper: void <clinit>()> ==> <com.csipsimple.utils.PreferencesWrapper$2: void <init>()>
CLINIT edge: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <com.csipsimple.utils.PreferencesWrapper$2: void <init>()> ==> <java.lang.Boolean: void <clinit>()>
STATIC edge: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <com.csipsimple.utils.PreferencesWrapper$2: void <init>()> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.utils.PreferencesWrapper$1: void <init>()>() in <com.csipsimple.utils.PreferencesWrapper: void <clinit>()> ==> <com.csipsimple.utils.PreferencesWrapper$1: void <init>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.CustomDistribution: java.lang.String getUserAgent()>() in <com.csipsimple.utils.PreferencesWrapper$1: void <init>()> ==> <com.csipsimple.utils.CustomDistribution: java.lang.String getUserAgent()>
SPECIAL edge: specialinvoke r4.<com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>($r0) in <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)> ==> <com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke r4.<com.csipsimple.utils.PreferencesWrapper: boolean isAdvancedUser()>() in <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)> ==> <com.csipsimple.utils.PreferencesWrapper: boolean isAdvancedUser()>
VIRTUAL edge: $z0 = virtualinvoke r4.<com.csipsimple.utils.PreferencesWrapper: boolean getLibCapability(java.lang.String)>("cap_tls") in <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)> ==> <com.csipsimple.utils.PreferencesWrapper: boolean getLibCapability(java.lang.String)>
CLINIT edge: $z0 = <com.csipsimple.utils.PreferencesWrapper: boolean HAS_MANAGED_VERSION_UPGRADE> in <com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: $r4 = specialinvoke r0.<com.csipsimple.utils.PreferencesWrapper: java.lang.Integer needUpgrade()>() in <com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer needUpgrade()>
CLINIT edge: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer needUpgrade()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.Compatibility: int getApiLevel()>() in <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer needUpgrade()> ==> <com.csipsimple.utils.Compatibility: int getApiLevel()>
STATIC edge: staticinvoke <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)>(r0, $i0, $i1) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer needUpgrade()> ==> <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PreferencesWrapper", $r7) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer needUpgrade()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)>(r0, $i0, $i1) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer needUpgrade()> ==> <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)>
STATIC edge: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer needUpgrade()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.PreferencesProviderWrapper: android.content.pm.PackageInfo getCurrentPackageInfos(android.content.Context)>($r2) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer needUpgrade()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: android.content.pm.PackageInfo getCurrentPackageInfos(android.content.Context)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PreferencesWrapper", $r7) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer needUpgrade()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean shouldUseRoutingApi()>() in <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean shouldUseRoutingApi()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean shouldFocusAudio()>() in <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean shouldFocusAudio()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean needPspWorkaround()>() in <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean needPspWorkaround()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(9) in <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Compatibility: java.lang.String getDefaultMicroSource()>() in <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: java.lang.String getDefaultMicroSource()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Compatibility: java.lang.String guessInCallMode()>() in <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: java.lang.String guessInCallMode()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean needSGSWorkaround()>() in <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean needSGSWorkaround()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean needToneWorkaround()>() in <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean needToneWorkaround()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean shouldUseModeApi()>() in <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean shouldUseModeApi()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean shouldFocusAudio()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean shouldFocusAudio()>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1) in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <java.lang.Integer: java.lang.String toString(int)>
STATIC edge: $i1 = staticinvoke <com.csipsimple.utils.Compatibility: int getDefaultAudioImplementation()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: int getDefaultAudioImplementation()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean needPspWorkaround()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean needPspWorkaround()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean shouldUsePriviledgedIntegration(android.content.Context)>($r2) in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean shouldUsePriviledgedIntegration(android.content.Context)>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean shouldUseRoutingApi()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean shouldUseRoutingApi()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean shouldUseModeApi()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean shouldUseModeApi()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)>($r2) in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean needToneWorkaround()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean needToneWorkaround()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean needWebRTCImplementation()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean needWebRTCImplementation()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isTabletScreen(android.content.Context)>($r2) in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean isTabletScreen(android.content.Context)>
STATIC edge: staticinvoke <com.csipsimple.utils.Compatibility: void resetCodecsSettings(com.csipsimple.utils.PreferencesWrapper)>($r0) in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: void resetCodecsSettings(com.csipsimple.utils.PreferencesWrapper)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Compatibility: java.lang.String getDefaultFrequency()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: java.lang.String getDefaultFrequency()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Compatibility: java.lang.String guessInCallMode()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: java.lang.String guessInCallMode()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Compatibility: java.lang.String getDefaultMicroSource()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: java.lang.String getDefaultMicroSource()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean needSGSWorkaround()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean needSGSWorkaround()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(9) in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
CLINIT edge: $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1) in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $z1 = staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)>($r2) in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.PhoneCapabilityTester: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Prefs", "Impossible to find version of current package !!") in <com.csipsimple.utils.PreferencesProviderWrapper: android.content.pm.PackageInfo getCurrentPackageInfos(android.content.Context)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Prefs", "Impossible to find version of current package !!") in <com.csipsimple.utils.PreferencesProviderWrapper: android.content.pm.PackageInfo getCurrentPackageInfos(android.content.Context)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(4) in <com.csipsimple.utils.Compatibility: boolean shouldUseRoutingApi()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Compat", $r1) in <com.csipsimple.utils.Compatibility: boolean shouldUseRoutingApi()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Compat", $r1) in <com.csipsimple.utils.Compatibility: boolean shouldUseRoutingApi()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(15) in <com.csipsimple.utils.Compatibility: boolean shouldFocusAudio()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(9) in <com.csipsimple.utils.Compatibility: boolean needPspWorkaround()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(0) in <com.csipsimple.utils.Compatibility: java.lang.String getDefaultMicroSource()> ==> <java.lang.Integer: java.lang.String toString(int)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(10) in <com.csipsimple.utils.Compatibility: java.lang.String getDefaultMicroSource()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
CLINIT edge: $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(0) in <com.csipsimple.utils.Compatibility: java.lang.String getDefaultMicroSource()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(0) in <com.csipsimple.utils.Compatibility: java.lang.String guessInCallMode()> ==> <java.lang.Integer: java.lang.String toString(int)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(5) in <com.csipsimple.utils.Compatibility: java.lang.String guessInCallMode()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
CLINIT edge: $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(0) in <com.csipsimple.utils.Compatibility: java.lang.String guessInCallMode()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(9) in <com.csipsimple.utils.Compatibility: boolean needSGSWorkaround()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Compat", $r1) in <com.csipsimple.utils.Compatibility: boolean shouldUseModeApi()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Compat", $r1) in <com.csipsimple.utils.Compatibility: boolean shouldUseModeApi()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(11) in <com.csipsimple.utils.Compatibility: int getDefaultAudioImplementation()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
CLINIT edge: $z0 = staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)>($r0) in <com.csipsimple.utils.Compatibility: boolean shouldUsePriviledgedIntegration(android.content.Context)> ==> <com.csipsimple.utils.PhoneCapabilityTester: void <clinit>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)>($r0) in <com.csipsimple.utils.Compatibility: boolean shouldUsePriviledgedIntegration(android.content.Context)> ==> <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)>
CLINIT edge: $z0 = <com.csipsimple.utils.PhoneCapabilityTester: boolean sIsInitialized> in <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)> ==> <com.csipsimple.utils.PhoneCapabilityTester: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)>($r0) in <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)> ==> <com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(4) in <com.csipsimple.utils.Compatibility: boolean isTabletScreen(android.content.Context)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Compatibility: java.lang.String getCpuAbi()>() in <com.csipsimple.utils.Compatibility: void resetCodecsSettings(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: java.lang.String getCpuAbi()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(4) in <com.csipsimple.utils.Compatibility: java.lang.String getDefaultFrequency()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
CLINIT edge: <com.csipsimple.utils.PhoneCapabilityTester: boolean sIsPhone> = $z0 in <com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)> ==> <com.csipsimple.utils.PhoneCapabilityTester: void <clinit>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)>($r0, $r3) in <com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)> ==> <com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)>("123") in <com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)> ==> <com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("Compat", "Announce to be android 1.6 but no CPU ABI field", r0) in <com.csipsimple.utils.Compatibility: java.lang.String getCpuAbi()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("Compat", "Announce to be android 1.6 but no CPU ABI field", r0) in <com.csipsimple.utils.Compatibility: java.lang.String getCpuAbi()> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(4) in <com.csipsimple.utils.Compatibility: java.lang.String getCpuAbi()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
CLINIT edge: $i0 = <com.csipsimple.utils.Log: int logLevel> in <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)> ==> <com.csipsimple.utils.Log: void <clinit>()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("CPU_ABI") in <com.csipsimple.utils.Compatibility: java.lang.String getCpuAbi()> ==> <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("mips") in <com.csipsimple.utils.Compatibility: void resetCodecsSettings(com.csipsimple.utils.PreferencesWrapper)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <java.lang.String: java.lang.String toUpperCase()>
VIRTUAL edge: $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("GT-I9000") in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <java.lang.String: boolean startsWith(java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("htc_supersonic") in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <java.lang.String: java.lang.String toLowerCase()>
VIRTUAL edge: $z1 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("droid2") in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
VIRTUAL edge: $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("GT-P1010") in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean contains(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean startsWith(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String toUpperCase()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void startEditing()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.PreferencesWrapper: void startEditing()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceFloatValue(java.lang.String,float)>("snd_mic_level", 0.4F) in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceFloatValue(java.lang.String,float)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>("stun_server") in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("stun_server", "stun.counterpath.com") in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 0) in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("G7221/16000/1", "wb", "0") in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: android.content.Context getContext()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.PreferencesWrapper: android.content.Context getContext()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void endEditing()>() in <com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.PreferencesWrapper: void endEditing()>
CLINIT edge: $r1 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.lang.String gPrefStringValue(android.content.SharedPreferences,java.lang.String)>($r2, $r1) in <com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.lang.String gPrefStringValue(android.content.SharedPreferences,java.lang.String)>($r2, $r1) in <com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.String gPrefStringValue(android.content.SharedPreferences,java.lang.String)>
CLINIT edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)>($r1, $r2) in <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)>($r1, $r2) in <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)>
CLINIT edge: $r2 = <com.csipsimple.utils.PreferencesWrapper: java.util.HashMap STRING_PREFS> in <com.csipsimple.utils.PreferencesWrapper: java.lang.String gPrefStringValue(android.content.SharedPreferences,java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
VIRTUAL edge: $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("/") in <com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>() in <com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String toLowerCase()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>($r1, $r3) in <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("PCMU/8000/1", "nb", "60") in <com.csipsimple.utils.Compatibility: void resetCodecsSettings(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("band_for_wifi", "wb") in <com.csipsimple.utils.Compatibility: void resetCodecsSettings(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void startEditing()>() in <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.PreferencesWrapper: void startEditing()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("use_routing_api", $z0) in <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("sip_audio_mode", $r1) in <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceFloatValue(java.lang.String,float)>("snd_mic_level", 1.0F) in <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceFloatValue(java.lang.String,float)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void endEditing()>() in <com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)> ==> <com.csipsimple.utils.PreferencesWrapper: void endEditing()>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: int getPreferenceType()>() in <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: int getPreferenceType()>
INTERFACE edge: interfaceinvoke $r1.<com.csipsimple.ui.prefs.IPreferenceHelper: void hidePreference(java.lang.String,java.lang.String)>("audio_quality", "has_io_queue") in <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)> ==> <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void hidePreference(java.lang.String,java.lang.String)>
INTERFACE edge: interfaceinvoke $r1.<com.csipsimple.ui.prefs.IPreferenceHelper: void setPreferenceScreenType(java.lang.String,int)>("audio_troubleshooting", 2) in <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)> ==> <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setPreferenceScreenType(java.lang.String,int)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Generic prefs", $r1) in <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void hidePreference(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Generic prefs", $r1) in <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void hidePreference(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setPreferenceScreenType(java.lang.String,int)> ==> <java.lang.Object: java.lang.Class getClass()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setPreferenceScreenType(java.lang.Class,java.lang.String,int)>($r2, $r1, $i0) in <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setPreferenceScreenType(java.lang.String,int)> ==> <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setPreferenceScreenType(java.lang.Class,java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.service.PreferenceProvider: void <init>()>() in <dummyMainClass: com.csipsimple.service.PreferenceProvider dummyMainMethod_com_csipsimple_service_PreferenceProvider(android.content.Intent)> ==> <com.csipsimple.service.PreferenceProvider: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.csipsimple.service.PreferenceProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(null, null) in <dummyMainClass: com.csipsimple.service.PreferenceProvider dummyMainMethod_com_csipsimple_service_PreferenceProvider(android.content.Intent)> ==> <com.csipsimple.service.PreferenceProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<com.csipsimple.service.PreferenceProvider: java.lang.String getType(android.net.Uri)>(null) in <dummyMainClass: com.csipsimple.service.PreferenceProvider dummyMainMethod_com_csipsimple_service_PreferenceProvider(android.content.Intent)> ==> <com.csipsimple.service.PreferenceProvider: java.lang.String getType(android.net.Uri)>
VIRTUAL edge: $i1 = virtualinvoke $r0.<com.csipsimple.service.PreferenceProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(null, null, "", $r3) in <dummyMainClass: com.csipsimple.service.PreferenceProvider dummyMainMethod_com_csipsimple_service_PreferenceProvider(android.content.Intent)> ==> <com.csipsimple.service.PreferenceProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
VIRTUAL edge: $i2 = virtualinvoke $r0.<com.csipsimple.service.PreferenceProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(null, "", $r4) in <dummyMainClass: com.csipsimple.service.PreferenceProvider dummyMainMethod_com_csipsimple_service_PreferenceProvider(android.content.Intent)> ==> <com.csipsimple.service.PreferenceProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
VIRTUAL edge: $r7 = virtualinvoke $r0.<com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(null, $r5, "", $r6, "") in <dummyMainClass: com.csipsimple.service.PreferenceProvider dummyMainMethod_com_csipsimple_service_PreferenceProvider(android.content.Intent)> ==> <com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
CLINIT edge: $r2 = <com.csipsimple.service.PreferenceProvider: android.content.UriMatcher URI_MATCHER> in <com.csipsimple.service.PreferenceProvider: java.lang.String getType(android.net.Uri)> ==> <com.csipsimple.service.PreferenceProvider: void <clinit>()>
CLINIT edge: $r6 = <com.csipsimple.service.PreferenceProvider: android.content.UriMatcher URI_MATCHER> in <com.csipsimple.service.PreferenceProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.service.PreferenceProvider: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PrefsProvider", "Impossible to retrieve class from selection") in <com.csipsimple.service.PreferenceProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $r10 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3) in <com.csipsimple.service.PreferenceProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: r8 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.lang.Class gPrefClass(java.lang.String)>($r7) in <com.csipsimple.service.PreferenceProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.Class gPrefClass(java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PrefsProvider", "Impossible to retrieve class from selection") in <com.csipsimple.service.PreferenceProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: r8 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.lang.Class gPrefClass(java.lang.String)>($r7) in <com.csipsimple.service.PreferenceProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
CLINIT edge: $r2 = newarray (java.lang.String)[2] in <com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.String: void <clinit>()>
STATIC edge: r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) in <com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PrefsProvider", "Impossible to retrieve class from selection") in <com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $r13 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3) in <com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: r9 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.lang.Class gPrefClass(java.lang.String)>($r5) in <com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.Class gPrefClass(java.lang.String)>
CLINIT edge: r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) in <com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PrefsProvider", "Impossible to retrieve class from selection") in <com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: r9 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.lang.Class gPrefClass(java.lang.String)>($r5) in <com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
CLINIT edge: $r8 = <com.csipsimple.service.PreferenceProvider: android.content.UriMatcher URI_MATCHER> in <com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <com.csipsimple.service.PreferenceProvider: void <clinit>()>
CLINIT edge: $r1 = <com.csipsimple.utils.PreferencesWrapper: java.util.HashMap STRING_PREFS> in <com.csipsimple.utils.PreferencesWrapper: java.lang.Class gPrefClass(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Class forName(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerAutocompleteDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerAutocompleteDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerAutocompleteDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onViewCreated(android.view.View,android.os.Bundle)>(null, null) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerAutocompleteDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onViewCreated(android.view.View,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onSaveInstanceState(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerAutocompleteDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onSaveInstanceState(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>(null, null, 0, 0L) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerAutocompleteDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerAutocompleteDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onDetach()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void proposeRestoreFromBundle(android.os.Bundle)>($r2) in <com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onViewCreated(android.view.View,android.os.Bundle)> ==> <com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void proposeRestoreFromBundle(android.os.Bundle)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void filter(java.lang.CharSequence)>($r2) in <com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void proposeRestoreFromBundle(android.os.Bundle)> ==> <com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void filter(java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.contacts.ContactsSearchAdapter: void <init>(android.content.Context)>($r3) in <com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.contacts.ContactsSearchAdapter: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockListFragment: void <init>()>() in <com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void <init>()> ==> <com.actionbarsherlock.app.SherlockListFragment: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.SipHome: void <init>()>() in <dummyMainClass: com.csipsimple.ui.SipHome dummyMainMethod_com_csipsimple_ui_SipHome(android.content.Intent)> ==> <com.csipsimple.ui.SipHome: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.SipHome dummyMainMethod_com_csipsimple_ui_SipHome(android.content.Intent)> ==> <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.SipHome dummyMainMethod_com_csipsimple_ui_SipHome(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.SipHome: void onResume()>() in <dummyMainClass: com.csipsimple.ui.SipHome dummyMainMethod_com_csipsimple_ui_SipHome(android.content.Intent)> ==> <com.csipsimple.ui.SipHome: void onResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.ui.SipHome dummyMainMethod_com_csipsimple_ui_SipHome(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.SipHome: void onPause()>() in <dummyMainClass: com.csipsimple.ui.SipHome dummyMainMethod_com_csipsimple_ui_SipHome(android.content.Intent)> ==> <com.csipsimple.ui.SipHome: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>() in <dummyMainClass: com.csipsimple.ui.SipHome dummyMainMethod_com_csipsimple_ui_SipHome(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.SipHome: void onDestroy()>() in <dummyMainClass: com.csipsimple.ui.SipHome dummyMainMethod_com_csipsimple_ui_SipHome(android.content.Intent)> ==> <com.csipsimple.ui.SipHome: void onDestroy()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void setLogLevel(int)>($i0) in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void setLogLevel(int)>($i0) in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.Log: void setLogLevel(int)>
STATIC edge: $r11 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>($r9, "alpha", $r10) in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.CustomDistribution: boolean supportMessaging()>() in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.CustomDistribution: boolean supportMessaging()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP_HOME", "On Resume SIPHOME") in <com.csipsimple.ui.SipHome: void onResume()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP_HOME", "WE CAN NOW start SIP service") in <com.csipsimple.ui.SipHome: void onResume()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP_HOME", "On Pause SIPHOME") in <com.csipsimple.ui.SipHome: void onPause()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP_HOME", "On Pause SIPHOME") in <com.csipsimple.ui.SipHome: void onPause()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP_HOME", "---DESTROY SIP HOME END---") in <com.csipsimple.ui.SipHome: void onDestroy()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP_HOME", "---DESTROY SIP HOME END---") in <com.csipsimple.ui.SipHome: void onDestroy()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: <com.csipsimple.utils.Log: int logLevel> = $i0 in <com.csipsimple.utils.Log: void setLogLevel(int)> ==> <com.csipsimple.utils.Log: void <clinit>()>
SPECIAL edge: specialinvoke r3.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void <init>(java.lang.Object,java.lang.String)>($r0, $r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void <init>(java.lang.Object,java.lang.String)>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setIntValues(int[])>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setIntValues(int[])>
CLINIT edge: $r3 = newarray (com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder)[1] in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setIntValues(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>($r4, $r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setIntValues(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>
CLINIT edge: $r3 = <java.lang.Integer: java.lang.Class TYPE> in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <clinit>()> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r3 = <java.lang.Double: java.lang.Class TYPE> in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <clinit>()> ==> <java.lang.Double: void <clinit>()>
CLINIT edge: $r3 = <java.lang.Float: java.lang.Class TYPE> in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <clinit>()> ==> <java.lang.Float: void <clinit>()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,int[])>($r0, $r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,int[])>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder)>($r1, null) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setIntValues(int[])>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setIntValues(int[])>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setIntValues(int[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setIntValues(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setIntValues(int[])>
CLINIT edge: $r3 = <java.lang.Integer: java.lang.Class TYPE> in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setIntValues(int[])> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofInt(int[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setIntValues(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofInt(int[])>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float,int)>($f0, $i2) in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofInt(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float,int)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float)>(0.0F) in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofInt(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float)>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: void <init>(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: void <init>(float)>
CLINIT edge: $r1 = <java.lang.Integer: java.lang.Class TYPE> in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: void <init>(float)> ==> <java.lang.Integer: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: void <init>(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: void <init>(float,int)>($f0, $i0) in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float,int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: void <init>(float,int)>
CLINIT edge: $r1 = <java.lang.Integer: java.lang.Class TYPE> in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: void <init>(float,int)> ==> <java.lang.Integer: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: void <init>(float,int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe[])>(r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofInt(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe[])>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <clinit>()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <clinit>()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setIntValues(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setIntValues(int[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setIntValues(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setIntValues(int[])>
CLINIT edge: $r3 = newarray (com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder)[1] in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setIntValues(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <clinit>()>
STATIC edge: r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>("", $r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setIntValues(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>
VIRTUAL edge: virtualinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setIntValues(int[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setIntValues(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setIntValues(int[])>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setIntValues(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>
VIRTUAL edge: $r3 = virtualinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getPropertyName()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getPropertyName()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void <init>(java.lang.Object,java.lang.String)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setPropertyName(java.lang.String)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void <init>(java.lang.Object,java.lang.String)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setPropertyName(java.lang.String)>
CLINIT edge: $r1 = <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: android.view.animation.Interpolator sDefaultInterpolator> in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()>
SPECIAL edge: specialinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4: void <init>()>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1: void <init>()>
VIRTUAL edge: $r3 = virtualinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getPropertyName()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setPropertyName(java.lang.String)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getPropertyName()>
VIRTUAL edge: virtualinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setPropertyName(java.lang.String)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setPropertyName(java.lang.String)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setPropertyName(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.SipHome: void disconnect(boolean)>(0) in <com.csipsimple.ui.SipHome: void onDestroy()> ==> <com.csipsimple.ui.SipHome: void disconnect(boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>() in <com.csipsimple.ui.SipHome: void onDestroy()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP_HOME", "True disconnection...") in <com.csipsimple.ui.SipHome: void disconnect(boolean)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP_HOME", "True disconnection...") in <com.csipsimple.ui.SipHome: void disconnect(boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
CLINIT edge: $r1 = staticinvoke <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>(r0, 1) in <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()> ==> <com.actionbarsherlock.ActionBarSherlock: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>(r0, 1) in <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()> ==> <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>() in <com.csipsimple.ui.SipHome: void onPause()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.SipHome: void sendFragmentVisibilityChange(int,boolean)>($i0, 1) in <com.csipsimple.ui.SipHome: void onResume()> ==> <com.csipsimple.ui.SipHome: void sendFragmentVisibilityChange(int,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.SipHome: void startSipService()>() in <com.csipsimple.ui.SipHome: void onResume()> ==> <com.csipsimple.ui.SipHome: void startSipService()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.SipHome: void applyTheme()>() in <com.csipsimple.ui.SipHome: void onResume()> ==> <com.csipsimple.ui.SipHome: void applyTheme()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP_HOME", "Fragment not anymore managed") in <com.csipsimple.ui.SipHome: void sendFragmentVisibilityChange(int,boolean)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP_HOME", "Fragment not anymore managed") in <com.csipsimple.ui.SipHome: void sendFragmentVisibilityChange(int,boolean)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Theme: com.csipsimple.utils.Theme getCurrentTheme(android.content.Context)>(r0) in <com.csipsimple.ui.SipHome: void applyTheme()> ==> <com.csipsimple.utils.Theme: com.csipsimple.utils.Theme getCurrentTheme(android.content.Context)>
STATIC edge: $r15 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.csipsimple.ui.SipHome: void applyTheme()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
CLINIT edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String)>($r0, "selected_theme") in <com.csipsimple.utils.Theme: com.csipsimple.utils.Theme getCurrentTheme(android.content.Context)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String)>($r0, "selected_theme") in <com.csipsimple.utils.Theme: com.csipsimple.utils.Theme getCurrentTheme(android.content.Context)> ==> <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String)>
CLINIT edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)>($r0, $r1, null) in <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)>($r0, $r1, null) in <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)>
CLINIT edge: $r4 = staticinvoke <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>($r1) in <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>($r1) in <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r1.<com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>("split_background") in <com.csipsimple.ui.SipHome: void applyTheme()> ==> <com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.Theme: void applyBackgroundStateListSelectableDrawable(android.view.View,java.lang.String)>($r14, "tab") in <com.csipsimple.ui.SipHome: void applyTheme()> ==> <com.csipsimple.utils.Theme: void applyBackgroundStateListSelectableDrawable(android.view.View,java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r1.<com.csipsimple.utils.Theme: java.lang.Integer getDimension(java.lang.String)>("tab_divider_padding") in <com.csipsimple.ui.SipHome: void applyTheme()> ==> <com.csipsimple.utils.Theme: java.lang.Integer getDimension(java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Theme", "No results yet !! ") in <com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Theme", "No results yet !! ") in <com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.utils.Theme: void applyBackgroundStateListSelectableDrawable(android.view.View,java.lang.String)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r12 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.csipsimple.utils.Theme: void applyBackgroundStateListSelectableDrawable(android.view.View,java.lang.String)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.utils.Theme: void applyBackgroundStateListSelectableDrawable(android.view.View,java.lang.String)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
CLINIT edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.utils.Theme: java.lang.Integer getDimension(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Theme", "No results yet !! ") in <com.csipsimple.utils.Theme: java.lang.Integer getDimension(java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.utils.Theme: java.lang.Integer getDimension(java.lang.String)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Theme", "No results yet !! ") in <com.csipsimple.utils.Theme: java.lang.Integer getDimension(java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>($r4) in <com.csipsimple.utils.Theme: void applyBackgroundStateListSelectableDrawable(android.view.View,java.lang.String)> ==> <com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>() in <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.String getName()>
SPECIAL edge: specialinvoke $r6.<com.actionbarsherlock.internal.utils.Utility4: void <init>()>() in <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()> ==> <com.actionbarsherlock.internal.utils.Utility4: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.utils.UtilityWrapper: void <init>()>() in <com.actionbarsherlock.internal.utils.Utility4: void <init>()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.utils.UtilityWrapper: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r5.<com.actionbarsherlock.internal.utils.Utility7: void <init>()>() in <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()> ==> <com.actionbarsherlock.internal.utils.Utility7: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.utils.Utility5: void <init>()>() in <com.actionbarsherlock.internal.utils.Utility7: void <init>()> ==> <com.actionbarsherlock.internal.utils.Utility5: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.utils.Utility4: void <init>()>() in <com.actionbarsherlock.internal.utils.Utility5: void <init>()> ==> <com.actionbarsherlock.internal.utils.Utility4: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.utils.Utility8: void <init>()>() in <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()> ==> <com.actionbarsherlock.internal.utils.Utility8: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.utils.Utility7: void <init>()>() in <com.actionbarsherlock.internal.utils.Utility8: void <init>()> ==> <com.actionbarsherlock.internal.utils.Utility7: void <init>()>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.utils.Utility11: void <init>()>() in <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()> ==> <com.actionbarsherlock.internal.utils.Utility11: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.utils.Utility9: void <init>()>() in <com.actionbarsherlock.internal.utils.Utility11: void <init>()> ==> <com.actionbarsherlock.internal.utils.Utility9: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.utils.Utility8: void <init>()>() in <com.actionbarsherlock.internal.utils.Utility9: void <init>()> ==> <com.actionbarsherlock.internal.utils.Utility8: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.utils.Utility14: void <init>()>() in <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()> ==> <com.actionbarsherlock.internal.utils.Utility14: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.utils.Utility11: void <init>()>() in <com.actionbarsherlock.internal.utils.Utility14: void <init>()> ==> <com.actionbarsherlock.internal.utils.Utility11: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.internal.utils.Utility16: void <init>()>() in <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()> ==> <com.actionbarsherlock.internal.utils.Utility16: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.utils.Utility14: void <init>()>() in <com.actionbarsherlock.internal.utils.Utility16: void <init>()> ==> <com.actionbarsherlock.internal.utils.Utility14: void <init>()>
VIRTUAL edge: virtualinvoke $r12.<com.actionbarsherlock.internal.utils.UtilityWrapper: void setBackgroundDrawable(android.view.View,android.graphics.drawable.Drawable)>($r1, r10) in <com.csipsimple.utils.Theme: void applyBackgroundStateListSelectableDrawable(android.view.View,java.lang.String)> ==> <com.actionbarsherlock.internal.utils.Utility16: void setBackgroundDrawable(android.view.View,android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke $r12.<com.actionbarsherlock.internal.utils.UtilityWrapper: void setBackgroundDrawable(android.view.View,android.graphics.drawable.Drawable)>($r1, r10) in <com.csipsimple.utils.Theme: void applyBackgroundStateListSelectableDrawable(android.view.View,java.lang.String)> ==> <com.actionbarsherlock.internal.utils.Utility4: void setBackgroundDrawable(android.view.View,android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke $r15.<com.actionbarsherlock.internal.utils.UtilityWrapper: void setLinearLayoutDividerDrawable(android.widget.LinearLayout,android.graphics.drawable.Drawable)>($r16, $r9) in <com.csipsimple.ui.SipHome: void applyTheme()> ==> <com.actionbarsherlock.internal.utils.Utility11: void setLinearLayoutDividerDrawable(android.widget.LinearLayout,android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke $r15.<com.actionbarsherlock.internal.utils.UtilityWrapper: void setLinearLayoutDividerPadding(android.widget.LinearLayout,int)>($r16, $i1) in <com.csipsimple.ui.SipHome: void applyTheme()> ==> <com.actionbarsherlock.internal.utils.Utility14: void setLinearLayoutDividerPadding(android.widget.LinearLayout,int)>
VIRTUAL edge: virtualinvoke $r15.<com.actionbarsherlock.internal.utils.UtilityWrapper: void setLinearLayoutDividerPadding(android.widget.LinearLayout,int)>($r16, $i1) in <com.csipsimple.ui.SipHome: void applyTheme()> ==> <com.actionbarsherlock.internal.utils.Utility4: void setLinearLayoutDividerPadding(android.widget.LinearLayout,int)>
VIRTUAL edge: virtualinvoke $r15.<com.actionbarsherlock.internal.utils.UtilityWrapper: void setLinearLayoutDividerDrawable(android.widget.LinearLayout,android.graphics.drawable.Drawable)>($r16, $r9) in <com.csipsimple.ui.SipHome: void applyTheme()> ==> <com.actionbarsherlock.internal.utils.Utility4: void setLinearLayoutDividerDrawable(android.widget.LinearLayout,android.graphics.drawable.Drawable)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.utils.Utility11: void setLinearLayoutDividerPadding(android.widget.LinearLayout,int)>($r1, $i0) in <com.actionbarsherlock.internal.utils.Utility14: void setLinearLayoutDividerPadding(android.widget.LinearLayout,int)> ==> <com.actionbarsherlock.internal.utils.Utility4: void setLinearLayoutDividerPadding(android.widget.LinearLayout,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.utils.Utility9: void setLinearLayoutDividerDrawable(android.widget.LinearLayout,android.graphics.drawable.Drawable)>($r1, $r2) in <com.actionbarsherlock.internal.utils.Utility11: void setLinearLayoutDividerDrawable(android.widget.LinearLayout,android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.utils.Utility4: void setLinearLayoutDividerDrawable(android.widget.LinearLayout,android.graphics.drawable.Drawable)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.Theme: void <init>(android.content.Context,java.lang.String)>($r0, $r1) in <com.csipsimple.utils.Theme: com.csipsimple.utils.Theme getCurrentTheme(android.content.Context)> ==> <com.csipsimple.utils.Theme: void <init>(android.content.Context,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Theme", $r2) in <com.csipsimple.utils.Theme: void <init>(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Theme", $r2) in <com.csipsimple.utils.Theme: void <init>(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.Theme: void <init>(android.content.Context,java.lang.String)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.ui.SipHome: com.actionbarsherlock.app.ActionBar getSupportActionBar()>() in <com.csipsimple.ui.SipHome: void applyTheme()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
SPECIAL edge: $r7 = specialinvoke r0.<com.csipsimple.ui.SipHome: java.util.ArrayList getVisibleLeafs(android.view.View)>($r6) in <com.csipsimple.ui.SipHome: void applyTheme()> ==> <com.csipsimple.ui.SipHome: java.util.ArrayList getVisibleLeafs(android.view.View)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.ui.SipHome$3: void <init>(com.csipsimple.ui.SipHome,java.lang.String)>(r0, "StartSip") in <com.csipsimple.ui.SipHome: void startSipService()> ==> <com.csipsimple.ui.SipHome$3: void <init>(com.csipsimple.ui.SipHome,java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<java.lang.Thread: void start()>() in <com.csipsimple.ui.SipHome: void startSipService()> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke r1.<java.lang.Thread: void start()>() in <com.csipsimple.ui.SipHome: void startSipService()> ==> <com.csipsimple.ui.SipHome$3: void run()>
STATIC edge: staticinvoke <com.csipsimple.ui.SipHome: void access$4(com.csipsimple.ui.SipHome)>($r3) in <com.csipsimple.ui.SipHome$3: void run()> ==> <com.csipsimple.ui.SipHome: void access$4(com.csipsimple.ui.SipHome)>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>($r2) in <com.csipsimple.ui.SipHome$3: void <init>(com.csipsimple.ui.SipHome,java.lang.String)> ==> <java.lang.Thread: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>(java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: $r2 = specialinvoke r0.<com.csipsimple.ui.SipHome: android.support.v4.app.Fragment getFragmentAt(int)>($i0) in <com.csipsimple.ui.SipHome: void sendFragmentVisibilityChange(int,boolean)> ==> <com.csipsimple.ui.SipHome: android.support.v4.app.Fragment getFragmentAt(int)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
SPECIAL edge: specialinvoke $r17.<com.csipsimple.ui.SipHome$2: void <init>(com.csipsimple.ui.SipHome)>(r0) in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.SipHome$2: void <init>(com.csipsimple.ui.SipHome)>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.csipsimple.ui.SipHome$2: void <init>(com.csipsimple.ui.SipHome)> ==> <java.lang.Thread: void <init>()>
SPECIAL edge: specialinvoke $r15.<com.csipsimple.ui.SipHome$TabsAdapter: void <init>(com.csipsimple.ui.SipHome,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)>(r0, r0, $r3, $r14) in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.SipHome$TabsAdapter: void <init>(com.csipsimple.ui.SipHome,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)>
VIRTUAL edge: virtualinvoke $r15.<com.csipsimple.ui.SipHome$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class,int)>($r4, class "Lcom/csipsimple/ui/dialpad/DialerFragment;", 0) in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.SipHome$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class,int)>
CLINIT edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.SipHome$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class,int)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.SipHome$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r4 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>() in <com.csipsimple.ui.SipHome$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class,int)> ==> <java.lang.Class: java.lang.String getName()>
VIRTUAL edge: virtualinvoke $r11.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long)>(1500L) in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long)>
VIRTUAL edge: virtualinvoke $r11.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setRepeatCount(int)>(-1) in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setRepeatCount(int)>
VIRTUAL edge: virtualinvoke $r11.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setRepeatMode(int)>(2) in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setRepeatMode(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long)>($l0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>(r0) in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("prevent_screen_rotation") in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: int getLogLevel()>() in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getLogLevel()>
CLINIT edge: $r3 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>($r2, $r1) in <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>($r2, $r1) in <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>
CLINIT edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.utils.PreferencesProviderWrapper: int getLogLevel()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)>($r1, "log_level", $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: int getLogLevel()> ==> <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.utils.PreferencesProviderWrapper: int getLogLevel()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: $r2 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)>($r1, "log_level", $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: int getLogLevel()> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
CLINIT edge: $r4 = staticinvoke <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>($r1) in <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>($r1) in <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)> ==> <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>
CLINIT edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)> ==> <java.lang.Integer: void <clinit>()>
VIRTUAL edge: $r1 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>() in <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)> ==> <java.lang.Class: java.lang.String getName()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.SipHome: void setContentView(int)>(2130903134) in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(int)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.ui.SipHome: com.actionbarsherlock.app.ActionBar getSupportActionBar()>() in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.SipHome: void selectTabWithAction(android.content.Intent)>($r16) in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.SipHome: void selectTabWithAction(android.content.Intent)>
STATIC edge: r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) in <com.csipsimple.ui.SipHome: void selectTabWithAction(android.content.Intent)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) in <com.csipsimple.ui.SipHome: void selectTabWithAction(android.content.Intent)> ==> <java.lang.Integer: void <clinit>()>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.ui.SipHome: com.actionbarsherlock.app.ActionBar getSupportActionBar()>() in <com.csipsimple.ui.SipHome: void selectTabWithAction(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
VIRTUAL edge: $r7 = virtualinvoke $r6.<com.csipsimple.ui.SipHome$TabsAdapter: java.lang.Integer getPositionForId(int)>(0) in <com.csipsimple.ui.SipHome: void selectTabWithAction(android.content.Intent)> ==> <com.csipsimple.ui.SipHome$TabsAdapter: java.lang.Integer getPositionForId(int)>
CLINIT edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.SipHome$TabsAdapter: java.lang.Integer getPositionForId(int)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.SipHome$TabsAdapter: java.lang.Integer getPositionForId(int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(int)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r18.<java.lang.Thread: void start()>() in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke $r18.<java.lang.Thread: void start()>() in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.SipHome$2: void run()>
STATIC edge: staticinvoke <com.csipsimple.ui.SipHome: void access$3(com.csipsimple.ui.SipHome)>($r1) in <com.csipsimple.ui.SipHome$2: void run()> ==> <com.csipsimple.ui.SipHome: void access$3(com.csipsimple.ui.SipHome)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.SipHome: void asyncSanityCheck()>() in <com.csipsimple.ui.SipHome: void access$3(com.csipsimple.ui.SipHome)> ==> <com.csipsimple.ui.SipHome: void asyncSanityCheck()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP_HOME", "Sanity check : we have a nightly build here") in <com.csipsimple.ui.SipHome: void asyncSanityCheck()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnSDCard(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)>(r0, $r8) in <com.csipsimple.ui.SipHome: void asyncSanityCheck()> ==> <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnSDCard(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnVpnIcs(com.csipsimple.utils.PreferencesProviderWrapper)>($r8) in <com.csipsimple.ui.SipHome: void asyncSanityCheck()> ==> <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnVpnIcs(com.csipsimple.utils.PreferencesProviderWrapper)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnNoStun(com.csipsimple.utils.PreferencesProviderWrapper)>($r8) in <com.csipsimple.ui.SipHome: void asyncSanityCheck()> ==> <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnNoStun(com.csipsimple.utils.PreferencesProviderWrapper)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnPrivilegedIntent(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)>(r0, $r8) in <com.csipsimple.ui.SipHome: void asyncSanityCheck()> ==> <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnPrivilegedIntent(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP_HOME", "Sanity check : we have a nightly build here") in <com.csipsimple.ui.SipHome: void asyncSanityCheck()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.NightlyUpdater: boolean isNightlyBuild(android.content.Context)>(r0) in <com.csipsimple.ui.SipHome: void asyncSanityCheck()> ==> <com.csipsimple.utils.NightlyUpdater: boolean isNightlyBuild(android.content.Context)>
CLINIT edge: $r7 = <com.csipsimple.ui.warnings.WarningUtils: java.lang.String WARNING_PRIVILEGED_INTENT> in <com.csipsimple.ui.SipHome: void asyncSanityCheck()> ==> <com.csipsimple.ui.warnings.WarningUtils: void <clinit>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isInstalledOnSdCard(android.content.Context)>($r0) in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnSDCard(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.utils.Compatibility: boolean isInstalledOnSdCard(android.content.Context)>
CLINIT edge: r1 = <com.csipsimple.ui.warnings.WarningUtils: java.lang.String WARNING_VPN_ICS> in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnVpnIcs(com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.ui.warnings.WarningUtils: void <clinit>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(14) in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnVpnIcs(com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: r1 = staticinvoke <com.csipsimple.ui.warnings.WarningUtils: java.lang.String getIgnoreKey(java.lang.String)>(r1) in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnVpnIcs(com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.ui.warnings.WarningUtils: java.lang.String getIgnoreKey(java.lang.String)>
CLINIT edge: r2 = newarray (java.lang.String)[2] in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnVpnIcs(com.csipsimple.utils.PreferencesProviderWrapper)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r1 = <com.csipsimple.ui.warnings.WarningUtils: java.lang.String WARNING_NO_STUN> in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnNoStun(com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.ui.warnings.WarningUtils: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.ui.warnings.WarningUtils: java.lang.String getIgnoreKey(java.lang.String)>($r1) in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnNoStun(com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.ui.warnings.WarningUtils: java.lang.String getIgnoreKey(java.lang.String)>
CLINIT edge: $r2 = <com.csipsimple.ui.warnings.WarningUtils: java.lang.String WARNING_PRIVILEGED_INTENT> in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnPrivilegedIntent(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.ui.warnings.WarningUtils: void <clinit>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: android.content.pm.ResolveInfo resolveActivityForPriviledgedCall(android.content.Context)>($r0) in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnPrivilegedIntent(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.utils.PhoneCapabilityTester: android.content.pm.ResolveInfo resolveActivityForPriviledgedCall(android.content.Context)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: java.util.List resolveActivitiesForPriviledgedCall(android.content.Context)>($r0) in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnPrivilegedIntent(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.utils.PhoneCapabilityTester: java.util.List resolveActivitiesForPriviledgedCall(android.content.Context)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)>($r0) in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnPrivilegedIntent(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.ui.warnings.WarningUtils: java.lang.String getIgnoreKey(java.lang.String)>($r2) in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnPrivilegedIntent(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.ui.warnings.WarningUtils: java.lang.String getIgnoreKey(java.lang.String)>
CLINIT edge: $z0 = staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)>($r0) in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnPrivilegedIntent(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.utils.PhoneCapabilityTester: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("NightlyUpdater", "Not able to get self app info", r1) in <com.csipsimple.utils.NightlyUpdater: boolean isNightlyBuild(android.content.Context)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.NightlyUpdater: android.os.Bundle getApplicationMetaData(android.content.Context)>($r0) in <com.csipsimple.utils.NightlyUpdater: boolean isNightlyBuild(android.content.Context)> ==> <com.csipsimple.utils.NightlyUpdater: android.os.Bundle getApplicationMetaData(android.content.Context)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("NightlyUpdater", "Not able to get self app info", r1) in <com.csipsimple.utils.NightlyUpdater: boolean isNightlyBuild(android.content.Context)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(8) in <com.csipsimple.utils.Compatibility: boolean isInstalledOnSdCard(android.content.Context)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
CLINIT edge: $z0 = <com.csipsimple.utils.PhoneCapabilityTester: boolean sIsInitialized> in <com.csipsimple.utils.PhoneCapabilityTester: android.content.pm.ResolveInfo resolveActivityForPriviledgedCall(android.content.Context)> ==> <com.csipsimple.utils.PhoneCapabilityTester: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)>($r0) in <com.csipsimple.utils.PhoneCapabilityTester: android.content.pm.ResolveInfo resolveActivityForPriviledgedCall(android.content.Context)> ==> <com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)>
CLINIT edge: $z0 = <com.csipsimple.utils.PhoneCapabilityTester: boolean sIsInitialized> in <com.csipsimple.utils.PhoneCapabilityTester: java.util.List resolveActivitiesForPriviledgedCall(android.content.Context)> ==> <com.csipsimple.utils.PhoneCapabilityTester: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)>($r0) in <com.csipsimple.utils.PhoneCapabilityTester: java.util.List resolveActivitiesForPriviledgedCall(android.content.Context)> ==> <com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3) in <com.csipsimple.utils.NightlyUpdater: boolean isNightlyBuild(android.content.Context)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1) in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnVpnIcs(com.csipsimple.utils.PreferencesProviderWrapper)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r9) in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnPrivilegedIntent(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.utils.NightlyUpdater: void <init>(android.content.Context)>(r0) in <com.csipsimple.ui.SipHome: void asyncSanityCheck()> ==> <com.csipsimple.utils.NightlyUpdater: void <init>(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke r1.<com.csipsimple.utils.NightlyUpdater: boolean ignoreCheckByUser()>() in <com.csipsimple.ui.SipHome: void asyncSanityCheck()> ==> <com.csipsimple.utils.NightlyUpdater: boolean ignoreCheckByUser()>
VIRTUAL edge: $l1 = virtualinvoke r1.<com.csipsimple.utils.NightlyUpdater: long lastCheck()>() in <com.csipsimple.ui.SipHome: void asyncSanityCheck()> ==> <com.csipsimple.utils.NightlyUpdater: long lastCheck()>
VIRTUAL edge: $r5 = virtualinvoke r1.<com.csipsimple.utils.NightlyUpdater: com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher getUpdaterPopup(boolean)>(0) in <com.csipsimple.ui.SipHome: void asyncSanityCheck()> ==> <com.csipsimple.utils.NightlyUpdater: com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher getUpdaterPopup(boolean)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.NightlyUpdater: java.lang.String getChannelFolder(android.content.Context)>($r1) in <com.csipsimple.utils.NightlyUpdater: void <init>(android.content.Context)> ==> <com.csipsimple.utils.NightlyUpdater: java.lang.String getChannelFolder(android.content.Context)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.PreferencesProviderWrapper: android.content.pm.PackageInfo getCurrentPackageInfos(android.content.Context)>($r1) in <com.csipsimple.utils.NightlyUpdater: void <init>(android.content.Context)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: android.content.pm.PackageInfo getCurrentPackageInfos(android.content.Context)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("NightlyUpdater", "Not able to get self app info", r1) in <com.csipsimple.utils.NightlyUpdater: java.lang.String getChannelFolder(android.content.Context)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.NightlyUpdater: android.os.Bundle getApplicationMetaData(android.content.Context)>($r0) in <com.csipsimple.utils.NightlyUpdater: java.lang.String getChannelFolder(android.content.Context)> ==> <com.csipsimple.utils.NightlyUpdater: android.os.Bundle getApplicationMetaData(android.content.Context)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("NightlyUpdater", "Not able to get self app info", r1) in <com.csipsimple.utils.NightlyUpdater: java.lang.String getChannelFolder(android.content.Context)> ==> <com.csipsimple.utils.Log: void <clinit>()>
EXECUTOR edge: virtualinvoke r0.<com.csipsimple.ui.SipHome: void runOnUiThread(java.lang.Runnable)>($r5) in <com.csipsimple.ui.SipHome: void asyncSanityCheck()> ==> <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: void run()>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$3: void <init>(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>(r0) in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: void run()> ==> <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$3: void <init>(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$3: void <init>(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r7.<com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$2: void <init>(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>(r0) in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: void run()> ==> <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$2: void <init>(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$2: void <init>(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$1: void <init>(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>(r0) in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: void run()> ==> <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$1: void <init>(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$1: void <init>(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: void <init>(com.csipsimple.utils.NightlyUpdater,android.content.Context,int)>(r0, $r5, $i0) in <com.csipsimple.utils.NightlyUpdater: com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher getUpdaterPopup(boolean)> ==> <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: void <init>(com.csipsimple.utils.NightlyUpdater,android.content.Context,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: void <init>(com.csipsimple.utils.NightlyUpdater,android.content.Context,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.utils.NightlyUpdater: int getLastOnlineVersion()>() in <com.csipsimple.utils.NightlyUpdater: com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher getUpdaterPopup(boolean)> ==> <com.csipsimple.utils.NightlyUpdater: int getLastOnlineVersion()>
SPECIAL edge: $r6 = specialinvoke r0.<com.csipsimple.utils.NightlyUpdater: java.io.File getCachedFile()>() in <com.csipsimple.utils.NightlyUpdater: com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher getUpdaterPopup(boolean)> ==> <com.csipsimple.utils.NightlyUpdater: java.io.File getCachedFile()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("NightlyUpdater", $r4) in <com.csipsimple.utils.NightlyUpdater: int getLastOnlineVersion()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("NightlyUpdater", "Invalid number format", r10) in <com.csipsimple.utils.NightlyUpdater: int getLastOnlineVersion()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4) in <com.csipsimple.utils.NightlyUpdater: int getLastOnlineVersion()> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("NightlyUpdater", $r4) in <com.csipsimple.utils.NightlyUpdater: int getLastOnlineVersion()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4) in <com.csipsimple.utils.NightlyUpdater: int getLastOnlineVersion()> ==> <java.lang.Integer: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int parseInt(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.NightlyUpdater: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.SipHome: void applyWarning(java.lang.String,boolean)>($r7, $z0) in <com.csipsimple.ui.SipHome: void asyncSanityCheck()> ==> <com.csipsimple.ui.SipHome: void applyWarning(java.lang.String,boolean)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>($r2, 0) in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnPrivilegedIntent(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>($r1, 0) in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnNoStun(com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("enable_stun") in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnNoStun(com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>(r1, 0) in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnVpnIcs(com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: $i0 = virtualinvoke $r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>("network_route_polling") in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnVpnIcs(com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>
VIRTUAL edge: r1 = virtualinvoke $r0.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getSystemProp(java.lang.String)>(r1) in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnVpnIcs(com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getSystemProp(java.lang.String)>
CLINIT edge: $r3 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String)>($r2, $r1) in <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String)>($r2, $r1) in <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String)>
CLINIT edge: $r2 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)>($r0, $r1, null) in <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)>($r0, $r1, null) in <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("use_wifi_in") in <com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnSDCard(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.SipHome$1: void <init>(com.csipsimple.ui.SipHome)>(r0) in <com.csipsimple.ui.SipHome: void <init>()> ==> <com.csipsimple.ui.SipHome$1: void <init>(com.csipsimple.ui.SipHome)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.SipHome$1: void <init>(com.csipsimple.ui.SipHome)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>() in <com.csipsimple.ui.SipHome: void <init>()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.service.Downloader: void <init>()>() in <dummyMainClass: com.csipsimple.service.Downloader dummyMainMethod_com_csipsimple_service_Downloader(android.content.Intent)> ==> <com.csipsimple.service.Downloader: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.service.Downloader: void onCreate()>() in <dummyMainClass: com.csipsimple.service.Downloader dummyMainMethod_com_csipsimple_service_Downloader(android.content.Intent)> ==> <com.csipsimple.service.Downloader: void onCreate()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.service.Downloader: void onHandleIntent(android.content.Intent)>(null) in <dummyMainClass: com.csipsimple.service.Downloader dummyMainMethod_com_csipsimple_service_Downloader(android.content.Intent)> ==> <com.csipsimple.service.Downloader: void onHandleIntent(android.content.Intent)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.csipsimple.service.Downloader: android.os.IBinder onBind(android.content.Intent)>(null) in <dummyMainClass: com.csipsimple.service.Downloader dummyMainMethod_com_csipsimple_service_Downloader(android.content.Intent)> ==> <com.csipsimple.service.Downloader: android.os.IBinder onBind(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.service.Downloader: void onDestroy()>() in <dummyMainClass: com.csipsimple.service.Downloader dummyMainMethod_com_csipsimple_service_Downloader(android.content.Intent)> ==> <com.csipsimple.service.Downloader: void onDestroy()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("Downloader", "Invalid pending intent for finish !!!") in <com.csipsimple.service.Downloader: void onHandleIntent(android.content.Intent)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Downloader", "Unable to make the apk file readable", r30) in <com.csipsimple.service.Downloader: void onHandleIntent(android.content.Intent)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10) in <com.csipsimple.service.Downloader: void onHandleIntent(android.content.Intent)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Downloader", $r10) in <com.csipsimple.service.Downloader: void onHandleIntent(android.content.Intent)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.MD5: boolean checkMD5(java.lang.String,java.io.File)>($r11, r6) in <com.csipsimple.service.Downloader: void onHandleIntent(android.content.Intent)> ==> <com.csipsimple.utils.MD5: boolean checkMD5(java.lang.String,java.io.File)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Downloader", "Unable to make the apk file readable", r30) in <com.csipsimple.service.Downloader: void onHandleIntent(android.content.Intent)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10) in <com.csipsimple.service.Downloader: void onHandleIntent(android.content.Intent)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $i0 = <com.csipsimple.utils.Log: int logLevel> in <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.MD5: java.lang.String calculateMD5(java.io.File)>($r1) in <com.csipsimple.utils.MD5: boolean checkMD5(java.lang.String,java.io.File)> ==> <com.csipsimple.utils.MD5: java.lang.String calculateMD5(java.io.File)>
STATIC edge: $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%32s", $r6) in <com.csipsimple.utils.MD5: java.lang.String calculateMD5(java.io.File)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
CLINIT edge: $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%32s", $r6) in <com.csipsimple.utils.MD5: java.lang.String calculateMD5(java.io.File)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to process file for MD5", r9) in <com.csipsimple.utils.MD5: java.lang.String calculateMD5(java.io.File)> ==> <java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)> ==> <java.lang.Exception: void <init>()>
VIRTUAL edge: parameter0 = virtualinvoke this.<com.csipsimple.service.Downloader: android.content.Intent getIntent()>() in <com.csipsimple.service.Downloader: android.os.IBinder onBind(android.content.Intent)> ==> <com.csipsimple.service.Downloader: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r36.<com.csipsimple.service.Downloader$1: void <init>(com.csipsimple.service.Downloader,android.app.Notification)>(r0, $r15) in <com.csipsimple.service.Downloader: void onHandleIntent(android.content.Intent)> ==> <com.csipsimple.service.Downloader$1: void <init>(com.csipsimple.service.Downloader,android.app.Notification)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.service.Downloader$1: void <init>(com.csipsimple.service.Downloader,android.app.Notification)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r37.<com.csipsimple.service.Downloader$FileStreamResponseHandler: void <init>(com.csipsimple.service.Downloader,java.io.File,com.csipsimple.service.Downloader$Progress)>(r0, r6, $r17) in <com.csipsimple.service.Downloader: void onHandleIntent(android.content.Intent)> ==> <com.csipsimple.service.Downloader$FileStreamResponseHandler: void <init>(com.csipsimple.service.Downloader,java.io.File,com.csipsimple.service.Downloader$Progress)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.service.Downloader$FileStreamResponseHandler: void <init>(com.csipsimple.service.Downloader,java.io.File,com.csipsimple.service.Downloader$Progress)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.service.Downloader: android.content.Intent getIntent()>() in <com.csipsimple.service.Downloader: void onHandleIntent(android.content.Intent)> ==> <com.csipsimple.service.Downloader: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r7.<com.csipsimple.ui.dialpad.DialerFragment$7: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>($r0) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment$7: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.ui.dialpad.DialerFragment$7: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment$7: void onClick(android.content.DialogInterface,int)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.ui.dialpad.DialerFragment: android.app.AlertDialog access$4(com.csipsimple.ui.dialpad.DialerFragment)>($r2) in <com.csipsimple.ui.dialpad.DialerFragment$7: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.ui.dialpad.DialerFragment: android.app.AlertDialog access$4(com.csipsimple.ui.dialpad.DialerFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.dialpad.DialerFragment$7: void <init>(com.csipsimple.ui.dialpad.DialerFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.dialpad.DialerFragment$6: void <init>(com.csipsimple.ui.dialpad.DialerFragment,long)>($r0, 0L) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment$6: void <init>(com.csipsimple.ui.dialpad.DialerFragment,long)>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.ui.dialpad.DialerFragment$6: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment$6: void onClick(android.content.DialogInterface,int)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.ui.dialpad.DialerFragment: android.app.AlertDialog access$4(com.csipsimple.ui.dialpad.DialerFragment)>($r3) in <com.csipsimple.ui.dialpad.DialerFragment$6: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.ui.dialpad.DialerFragment: android.app.AlertDialog access$4(com.csipsimple.ui.dialpad.DialerFragment)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("DialerFragment", $r8) in <com.csipsimple.ui.dialpad.DialerFragment$6: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("DialerFragment", $r8) in <com.csipsimple.ui.dialpad.DialerFragment$6: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r11 = <com.csipsimple.api.SipProfile: android.net.Uri ACCOUNT_ID_URI_BASE> in <com.csipsimple.ui.dialpad.DialerFragment$6: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.dialpad.DialerFragment$6: void <init>(com.csipsimple.ui.dialpad.DialerFragment,long)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.ui.dialpad.DialerFragment$8: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>($r0) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment$8: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.ui.dialpad.DialerFragment$8: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment$8: void onClick(android.content.DialogInterface,int)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.ui.dialpad.DialerFragment: android.app.AlertDialog access$4(com.csipsimple.ui.dialpad.DialerFragment)>($r2) in <com.csipsimple.ui.dialpad.DialerFragment$8: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.ui.dialpad.DialerFragment: android.app.AlertDialog access$4(com.csipsimple.ui.dialpad.DialerFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.dialpad.DialerFragment$8: void <init>(com.csipsimple.ui.dialpad.DialerFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.dialpad.DialerFragment$2: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>($r0) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment$2: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
VIRTUAL edge: $z0 = virtualinvoke $r4.<com.csipsimple.ui.dialpad.DialerFragment$2: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>(null, 0, null) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment$2: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.dialpad.DialerFragment$2: void <init>(com.csipsimple.ui.dialpad.DialerFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.dialpad.DialerFragment$OnAutoCompleteListItemClicked: void <init>(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.utils.contacts.ContactsSearchAdapter)>($r0, $r2) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment$OnAutoCompleteListItemClicked: void <init>(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.utils.contacts.ContactsSearchAdapter)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.ui.dialpad.DialerFragment$OnAutoCompleteListItemClicked: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, null, 0, 0L) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment$OnAutoCompleteListItemClicked: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.dialpad.DialerFragment$OnAutoCompleteListItemClicked: void <init>(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.utils.contacts.ContactsSearchAdapter)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.contacts.ContactsSearchAdapter: void <init>(android.content.Context)>(null) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.utils.contacts.ContactsSearchAdapter: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.dialpad.DialerFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.dialpad.DialerFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.dialpad.DialerFragment: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void onCreate(android.os.Bundle)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.csipsimple.ui.dialpad.DialerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>(null, null, null) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.dialpad.DialerFragment: void onResume()>() in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void onResume()>
VIRTUAL edge: $z1 = virtualinvoke $r0.<com.csipsimple.ui.dialpad.DialerFragment: boolean onLongClick(android.view.View)>(null) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment: boolean onLongClick(android.view.View)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.dialpad.DialerFragment: void onClick(android.view.View)>(null) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void onClick(android.view.View)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.dialpad.DialerFragment: void afterTextChanged(android.text.Editable)>(null) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void afterTextChanged(android.text.Editable)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.dialpad.DialerFragment: void onSaveInstanceState(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void onSaveInstanceState(android.os.Bundle)>
VIRTUAL edge: $z2 = virtualinvoke $r0.<com.csipsimple.ui.dialpad.DialerFragment: boolean onKey(android.view.View,int,android.view.KeyEvent)>(null, 0, null) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment: boolean onKey(android.view.View,int,android.view.KeyEvent)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.dialpad.DialerFragment: void onTextChanged(java.lang.CharSequence,int,int,int)>(null, 0, 0, 0) in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void onTextChanged(java.lang.CharSequence,int,int,int)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.dialpad.DialerFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void onDetach()>
CLINIT edge: $r5 = new com.csipsimple.utils.PreferencesWrapper in <com.csipsimple.ui.dialpad.DialerFragment: void onAttach(android.app.Activity)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("DialerFragment", "Unable to un bind", r1) in <com.csipsimple.ui.dialpad.DialerFragment: void onDetach()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("DialerFragment", "Unable to un bind", r1) in <com.csipsimple.ui.dialpad.DialerFragment: void onDetach()> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragment: void onDetach()>() in <com.csipsimple.ui.dialpad.DialerFragment: void onDetach()> ==> <com.actionbarsherlock.app.SherlockFragment: void onDetach()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: void afterTextChanged(android.text.Editable)>($r3) in <com.csipsimple.ui.dialpad.DialerFragment: void onTextChanged(java.lang.CharSequence,int,int,int)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void afterTextChanged(android.text.Editable)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragment: void onSaveInstanceState(android.os.Bundle)>($r1) in <com.csipsimple.ui.dialpad.DialerFragment: void onSaveInstanceState(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockFragment: void onSaveInstanceState(android.os.Bundle)>
SPECIAL edge: z0 = specialinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: boolean hasAutocompleteList()>() in <com.csipsimple.ui.dialpad.DialerFragment: void afterTextChanged(android.text.Editable)> ==> <com.csipsimple.ui.dialpad.DialerFragment: boolean hasAutocompleteList()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: void keyPressed(int)>(81) in <com.csipsimple.ui.dialpad.DialerFragment: boolean onLongClick(android.view.View)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void keyPressed(int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()>() in <com.csipsimple.ui.dialpad.DialerFragment: boolean onLongClick(android.view.View)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()>
CLINIT edge: $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()> ==> <java.lang.Long: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("DialerFragment", "Not possible to ignore next") in <com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $r20 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>($r5, $r8) in <com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()> ==> <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])>($r5, l0, $r6) in <com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()> ==> <com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])>
STATIC edge: $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) in <com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()> ==> <java.lang.Long: java.lang.Long valueOf(long)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("DialerFragment", "Not possible to ignore next") in <com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r20 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>($r5, $r8) in <com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()> ==> <com.csipsimple.utils.CallHandlerPlugin: void <clinit>()>
CLINIT edge: $r7 = staticinvoke <com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])>($r5, l0, $r6) in <com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
CLINIT edge: $r6 = newarray (java.lang.String)[1] in <com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r25.<com.csipsimple.ui.dialpad.DialerFragment$8: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()> ==> <com.csipsimple.ui.dialpad.DialerFragment$8: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
SPECIAL edge: specialinvoke $r15.<com.csipsimple.ui.dialpad.DialerFragment$7: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()> ==> <com.csipsimple.ui.dialpad.DialerFragment$7: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
SPECIAL edge: specialinvoke $r14.<com.csipsimple.ui.dialpad.DialerFragment$6: void <init>(com.csipsimple.ui.dialpad.DialerFragment,long)>(r0, l0) in <com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()> ==> <com.csipsimple.ui.dialpad.DialerFragment$6: void <init>(com.csipsimple.ui.dialpad.DialerFragment,long)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: void initButtons(android.view.View)>($r4) in <com.csipsimple.ui.dialpad.DialerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void initButtons(android.view.View)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean,boolean)>($z0, 1) in <com.csipsimple.ui.dialpad.DialerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: void applyTheme(android.view.View)>($r4) in <com.csipsimple.ui.dialpad.DialerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void applyTheme(android.view.View)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.Theme: com.csipsimple.utils.Theme getCurrentTheme(android.content.Context)>($r2) in <com.csipsimple.ui.dialpad.DialerFragment: void applyTheme(android.view.View)> ==> <com.csipsimple.utils.Theme: com.csipsimple.utils.Theme getCurrentTheme(android.content.Context)>
STATIC edge: staticinvoke <com.csipsimple.utils.Theme: void fixRepeatableBackground(android.view.View)>($r7) in <com.csipsimple.ui.dialpad.DialerFragment: void applyTheme(android.view.View)> ==> <com.csipsimple.utils.Theme: void fixRepeatableBackground(android.view.View)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Theme: boolean needRepeatableFix()>() in <com.csipsimple.utils.Theme: void fixRepeatableBackground(android.view.View)> ==> <com.csipsimple.utils.Theme: boolean needRepeatableFix()>
STATIC edge: staticinvoke <com.csipsimple.utils.Theme: void fixRepeatableDrawable(android.graphics.drawable.Drawable)>($r1) in <com.csipsimple.utils.Theme: void fixRepeatableBackground(android.view.View)> ==> <com.csipsimple.utils.Theme: void fixRepeatableDrawable(android.graphics.drawable.Drawable)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(14) in <com.csipsimple.utils.Theme: boolean needRepeatableFix()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Theme: boolean needRepeatableFix()>() in <com.csipsimple.utils.Theme: void fixRepeatableDrawable(android.graphics.drawable.Drawable)> ==> <com.csipsimple.utils.Theme: boolean needRepeatableFix()>
STATIC edge: staticinvoke <com.csipsimple.utils.Theme: void fixRepeatableBitmapDrawable(android.graphics.drawable.BitmapDrawable)>(r2) in <com.csipsimple.utils.Theme: void fixRepeatableDrawable(android.graphics.drawable.Drawable)> ==> <com.csipsimple.utils.Theme: void fixRepeatableBitmapDrawable(android.graphics.drawable.BitmapDrawable)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Theme: boolean needRepeatableFix()>() in <com.csipsimple.utils.Theme: void fixRepeatableBitmapDrawable(android.graphics.drawable.BitmapDrawable)> ==> <com.csipsimple.utils.Theme: boolean needRepeatableFix()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.utils.Theme: void applyBackgroundDrawable(android.view.View,java.lang.String)>($r5, "btn_dial_delete") in <com.csipsimple.ui.dialpad.DialerFragment: void applyTheme(android.view.View)> ==> <com.csipsimple.utils.Theme: void applyBackgroundDrawable(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.utils.Theme: void applyLayoutMargin(android.view.View,java.lang.String)>($r5, "btn_dial_delete_margin") in <com.csipsimple.ui.dialpad.DialerFragment: void applyTheme(android.view.View)> ==> <com.csipsimple.utils.Theme: void applyLayoutMargin(android.view.View,java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.utils.Theme: void applyImageDrawable(android.widget.ImageView,java.lang.String)>(r6, "ic_dial_action_delete") in <com.csipsimple.ui.dialpad.DialerFragment: void applyTheme(android.view.View)> ==> <com.csipsimple.utils.Theme: void applyImageDrawable(android.widget.ImageView,java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.utils.Theme: void applyLayoutSize(android.view.View,java.lang.String)>($r5, "btn_dial_divider") in <com.csipsimple.ui.dialpad.DialerFragment: void applyTheme(android.view.View)> ==> <com.csipsimple.utils.Theme: void applyLayoutSize(android.view.View,java.lang.String)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.csipsimple.utils.Theme: void applyBackgroundDrawable(android.view.View,java.lang.String)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
CLINIT edge: $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.utils.Theme: void applyLayoutMargin(android.view.View,java.lang.String)> ==> <java.lang.String: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Theme", $r8) in <com.csipsimple.utils.Theme: void applyLayoutMargin(android.view.View,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.utils.Theme: void applyLayoutMargin(android.view.View,java.lang.String)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Theme", $r8) in <com.csipsimple.utils.Theme: void applyLayoutMargin(android.view.View,java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.utils.Theme: void applyLayoutSize(android.view.View,java.lang.String)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.utils.Theme: void applyLayoutSize(android.view.View,java.lang.String)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.utils.UtilityWrapper: void setBackgroundDrawable(android.view.View,android.graphics.drawable.Drawable)>($r1, $r3) in <com.csipsimple.utils.Theme: void applyBackgroundDrawable(android.view.View,java.lang.String)> ==> <com.actionbarsherlock.internal.utils.Utility16: void setBackgroundDrawable(android.view.View,android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.utils.UtilityWrapper: void setBackgroundDrawable(android.view.View,android.graphics.drawable.Drawable)>($r1, $r3) in <com.csipsimple.utils.Theme: void applyBackgroundDrawable(android.view.View,java.lang.String)> ==> <com.actionbarsherlock.internal.utils.Utility4: void setBackgroundDrawable(android.view.View,android.graphics.drawable.Drawable)>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.utils.Theme: java.lang.Integer getDimension(java.lang.String)>($r5) in <com.csipsimple.utils.Theme: void applyLayoutSize(android.view.View,java.lang.String)> ==> <com.csipsimple.utils.Theme: java.lang.Integer getDimension(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>($r2) in <com.csipsimple.utils.Theme: void applyImageDrawable(android.widget.ImageView,java.lang.String)> ==> <com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke r0.<com.csipsimple.utils.Theme: java.lang.Integer getDimension(java.lang.String)>($r8) in <com.csipsimple.utils.Theme: void applyLayoutMargin(android.view.View,java.lang.String)> ==> <com.csipsimple.utils.Theme: java.lang.Integer getDimension(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>($r2) in <com.csipsimple.utils.Theme: void applyBackgroundDrawable(android.view.View,java.lang.String)> ==> <com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: boolean hasAutocompleteList()>() in <com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean,boolean)> ==> <com.csipsimple.ui.dialpad.DialerFragment: boolean hasAutocompleteList()>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity()>() in <com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean,boolean)> ==> <com.actionbarsherlock.app.SherlockFragment: com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: void afterTextChanged(android.text.Editable)>($r5) in <com.csipsimple.ui.dialpad.DialerFragment: void initButtons(android.view.View)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void afterTextChanged(android.text.Editable)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)>($r1, i0, 1) in <com.csipsimple.ui.dialpad.DialerFragment: void initButtons(android.view.View)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("DialerFragment", $r4) in <com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("DialerFragment", $r4) in <com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.dialpad.DialerFragment$OnAutoCompleteListItemClicked: void <init>(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.utils.contacts.ContactsSearchAdapter)>(r0, $r4) in <com.csipsimple.ui.dialpad.DialerFragment: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.dialpad.DialerFragment$OnAutoCompleteListItemClicked: void <init>(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.utils.contacts.ContactsSearchAdapter)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.utils.contacts.ContactsSearchAdapter: void <init>(android.content.Context)>($r5) in <com.csipsimple.ui.dialpad.DialerFragment: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.contacts.ContactsSearchAdapter: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.utils.DialingFeedback: void <init>(android.app.Activity,boolean)>($r2, 0) in <com.csipsimple.ui.dialpad.DialerFragment: void onAttach(android.app.Activity)> ==> <com.csipsimple.utils.DialingFeedback: void <init>(android.app.Activity,boolean)>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.utils.DialingFeedback: void resume()>() in <com.csipsimple.ui.dialpad.DialerFragment: void onAttach(android.app.Activity)> ==> <com.csipsimple.utils.DialingFeedback: void resume()>
CLINIT edge: $r3 = new com.csipsimple.utils.PreferencesWrapper in <com.csipsimple.utils.DialingFeedback: void <init>(android.app.Activity,boolean)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>($r1) in <com.csipsimple.utils.DialingFeedback: void <init>(android.app.Activity,boolean)> ==> <com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r2.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.DialingFeedback: void <init>(android.app.Activity,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>($r2) in <com.csipsimple.ui.dialpad.DialerFragment: void onAttach(android.app.Activity)> ==> <com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragment: void onAttach(android.app.Activity)>($r1) in <com.csipsimple.ui.dialpad.DialerFragment: void onAttach(android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void onAttach(android.app.Activity)>
CLINIT edge: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5) in <com.actionbarsherlock.app.SherlockFragment: void onAttach(android.app.Activity)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5) in <com.actionbarsherlock.app.SherlockFragment: void onAttach(android.app.Activity)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.app.SherlockFragment: void onAttach(android.app.Activity)> ==> <java.lang.Object: java.lang.Class getClass()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.dialpad.DialerFragment$3: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: void <init>()> ==> <com.csipsimple.ui.dialpad.DialerFragment$3: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.dialpad.DialerFragment$3: void <init>(com.csipsimple.ui.dialpad.DialerFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.dialpad.DialerFragment$2: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: void <init>()> ==> <com.csipsimple.ui.dialpad.DialerFragment$2: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.dialpad.DialerFragment$1: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: void <init>()> ==> <com.csipsimple.ui.dialpad.DialerFragment$1: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.dialpad.DialerFragment$1: void <init>(com.csipsimple.ui.dialpad.DialerFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragment: void <init>()>() in <com.csipsimple.ui.dialpad.DialerFragment: void <init>()> ==> <com.actionbarsherlock.app.SherlockFragment: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.app.SherlockDialogFragment: void <init>()>() in <dummyMainClass: com.actionbarsherlock.app.SherlockDialogFragment dummyMainMethod_com_actionbarsherlock_app_SherlockDialogFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockDialogFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.actionbarsherlock.app.SherlockDialogFragment dummyMainMethod_com_actionbarsherlock_app_SherlockDialogFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockDialogFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>(null, null) in <dummyMainClass: com.actionbarsherlock.app.SherlockDialogFragment dummyMainMethod_com_actionbarsherlock_app_SherlockDialogFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockDialogFragment: void onPrepareOptionsMenu(android.view.Menu)>(null) in <dummyMainClass: com.actionbarsherlock.app.SherlockDialogFragment dummyMainMethod_com_actionbarsherlock_app_SherlockDialogFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void onPrepareOptionsMenu(android.view.Menu)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<com.actionbarsherlock.app.SherlockDialogFragment: boolean onOptionsItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: com.actionbarsherlock.app.SherlockDialogFragment dummyMainMethod_com_actionbarsherlock_app_SherlockDialogFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockDialogFragment: void onDetach()>() in <dummyMainClass: com.actionbarsherlock.app.SherlockDialogFragment dummyMainMethod_com_actionbarsherlock_app_SherlockDialogFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void onDetach()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void <init>(android.view.MenuItem)>($r1) in <com.actionbarsherlock.app.SherlockDialogFragment: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void <init>(android.view.MenuItem)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockDialogFragment: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r2) in <com.actionbarsherlock.app.SherlockDialogFragment: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>($r1) in <com.actionbarsherlock.app.SherlockDialogFragment: void onPrepareOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.app.SherlockDialogFragment: void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>($r2) in <com.actionbarsherlock.app.SherlockDialogFragment: void onPrepareOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>($r1) in <com.actionbarsherlock.app.SherlockDialogFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.app.SherlockDialogFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>($r3, $r4) in <com.actionbarsherlock.app.SherlockDialogFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.PickupSipUri: void <init>()>() in <dummyMainClass: com.csipsimple.ui.PickupSipUri dummyMainMethod_com_csipsimple_ui_PickupSipUri(android.content.Intent)> ==> <com.csipsimple.ui.PickupSipUri: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.PickupSipUri: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.PickupSipUri dummyMainMethod_com_csipsimple_ui_PickupSipUri(android.content.Intent)> ==> <com.csipsimple.ui.PickupSipUri: void onCreate(android.os.Bundle)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.PickupSipUri$1: void <init>(com.csipsimple.ui.PickupSipUri)>(r0) in <com.csipsimple.ui.PickupSipUri: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.PickupSipUri$1: void <init>(com.csipsimple.ui.PickupSipUri)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.PickupSipUri$1: void <init>(com.csipsimple.ui.PickupSipUri)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.account.AccountsEditList: void <init>()>() in <dummyMainClass: com.csipsimple.ui.account.AccountsEditList dummyMainMethod_com_csipsimple_ui_account_AccountsEditList(android.content.Intent)> ==> <com.csipsimple.ui.account.AccountsEditList: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.account.AccountsEditList: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.account.AccountsEditList dummyMainMethod_com_csipsimple_ui_account_AccountsEditList(android.content.Intent)> ==> <com.csipsimple.ui.account.AccountsEditList: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.account.AccountsEditList dummyMainMethod_com_csipsimple_ui_account_AccountsEditList(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.ui.account.AccountsEditList dummyMainMethod_com_csipsimple_ui_account_AccountsEditList(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>() in <dummyMainClass: com.csipsimple.ui.account.AccountsEditList dummyMainMethod_com_csipsimple_ui_account_AccountsEditList(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>() in <dummyMainClass: com.csipsimple.ui.account.AccountsEditList dummyMainMethod_com_csipsimple_ui_account_AccountsEditList(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>() in <dummyMainClass: com.csipsimple.ui.account.AccountsEditList dummyMainMethod_com_csipsimple_ui_account_AccountsEditList(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.account.AccountsEditList: void setContentView(int)>(2130903067) in <com.csipsimple.ui.account.AccountsEditList: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(int)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.ui.account.AccountsEditList: com.actionbarsherlock.app.ActionBar getSupportActionBar()>() in <com.csipsimple.ui.account.AccountsEditList: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>() in <com.csipsimple.ui.account.AccountsEditList: void <init>()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.prefs.PrefsFilters: void <init>()>() in <dummyMainClass: com.csipsimple.ui.prefs.PrefsFilters dummyMainMethod_com_csipsimple_ui_prefs_PrefsFilters(android.content.Intent)> ==> <com.csipsimple.ui.prefs.PrefsFilters: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.PrefsFilters: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.PrefsFilters dummyMainMethod_com_csipsimple_ui_prefs_PrefsFilters(android.content.Intent)> ==> <com.csipsimple.ui.prefs.PrefsFilters: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.PrefsFilters dummyMainMethod_com_csipsimple_ui_prefs_PrefsFilters(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.ui.prefs.PrefsFilters dummyMainMethod_com_csipsimple_ui_prefs_PrefsFilters(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>() in <dummyMainClass: com.csipsimple.ui.prefs.PrefsFilters dummyMainMethod_com_csipsimple_ui_prefs_PrefsFilters(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>() in <dummyMainClass: com.csipsimple.ui.prefs.PrefsFilters dummyMainMethod_com_csipsimple_ui_prefs_PrefsFilters(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>() in <dummyMainClass: com.csipsimple.ui.prefs.PrefsFilters dummyMainMethod_com_csipsimple_ui_prefs_PrefsFilters(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)>($r1) in <com.csipsimple.ui.prefs.PrefsFilters: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.ui.prefs.PrefsFilters: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.csipsimple.ui.prefs.PrefsFilters: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.account.AccountsChooserListActivity: void setContentView(int)>(2130903064) in <com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.ui.account.AccountsChooserListActivity: boolean showInternalAccounts()>() in <com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.PrefsFilters: boolean showInternalAccounts()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.account.AccountsChooserListActivity: void <init>()>() in <com.csipsimple.ui.prefs.PrefsFilters: void <init>()> ==> <com.csipsimple.ui.account.AccountsChooserListActivity: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>() in <com.csipsimple.ui.account.AccountsChooserListActivity: void <init>()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.service.HeadsetButtonReceiver: void <init>()>() in <dummyMainClass: com.csipsimple.service.HeadsetButtonReceiver dummyMainMethod_com_csipsimple_service_HeadsetButtonReceiver(android.content.Intent)> ==> <com.csipsimple.service.HeadsetButtonReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.service.HeadsetButtonReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: com.csipsimple.service.HeadsetButtonReceiver dummyMainMethod_com_csipsimple_service_HeadsetButtonReceiver(android.content.Intent)> ==> <com.csipsimple.service.HeadsetButtonReceiver: void onReceive(android.content.Context,android.content.Intent)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("HeadsetButtonReceiver", "onReceive") in <com.csipsimple.service.HeadsetButtonReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("HeadsetButtonReceiver", $r4) in <com.csipsimple.service.HeadsetButtonReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: $r3 = <com.csipsimple.service.HeadsetButtonReceiver: com.csipsimple.pjsip.UAStateReceiver uaReceiver> in <com.csipsimple.service.HeadsetButtonReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.service.HeadsetButtonReceiver: void <clinit>()>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5) in <com.csipsimple.service.HeadsetButtonReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.service.HeadsetButtonReceiver: android.content.Intent getIntent()>() in <com.csipsimple.service.HeadsetButtonReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.service.HeadsetButtonReceiver: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.help.Help$1: void <init>(com.csipsimple.ui.help.Help)>($r0) in <dummyMainClass: com.csipsimple.ui.help.Help dummyMainMethod_com_csipsimple_ui_help_Help(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Help$1: void <init>(com.csipsimple.ui.help.Help)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.help.Help$1: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: com.csipsimple.ui.help.Help dummyMainMethod_com_csipsimple_ui_help_Help(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Help$1: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.help.Help$1: void <init>(com.csipsimple.ui.help.Help)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.help.Help: void <init>()>() in <dummyMainClass: com.csipsimple.ui.help.Help dummyMainMethod_com_csipsimple_ui_help_Help(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Help: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.help.Help: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.help.Help dummyMainMethod_com_csipsimple_ui_help_Help(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Help: void onAttach(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.help.Help: void onResume()>() in <dummyMainClass: com.csipsimple.ui.help.Help dummyMainMethod_com_csipsimple_ui_help_Help(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Help: void onResume()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>(null, null, 0, 0L) in <dummyMainClass: com.csipsimple.ui.help.Help dummyMainMethod_com_csipsimple_ui_help_Help(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.help.Help: void onActivityResult(int,int,android.content.Intent)>(0, 0, null) in <dummyMainClass: com.csipsimple.ui.help.Help dummyMainMethod_com_csipsimple_ui_help_Help(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Help: void onActivityResult(int,int,android.content.Intent)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.csipsimple.ui.help.Help: android.app.Dialog onCreateDialog(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.help.Help dummyMainMethod_com_csipsimple_ui_help_Help(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Help: android.app.Dialog onCreateDialog(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockDialogFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.help.Help dummyMainMethod_com_csipsimple_ui_help_Help(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void onDetach()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>("Help", $r8) in <com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void setLogLevel(int)>(4) in <com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.utils.Log: void setLogLevel(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Help", "Impossible to send logs...", r3) in <com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: r4 = staticinvoke <com.csipsimple.utils.CollectLogs: android.content.Intent getLogReportIntent(java.lang.String,android.content.Context)>("<<<PLEASE ADD THE BUG DESCRIPTION HERE>>>", $r17) in <com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.utils.CollectLogs: android.content.Intent getLogReportIntent(java.lang.String,android.content.Context)>
STATIC edge: $r15 = staticinvoke <com.csipsimple.ui.help.Legal: com.csipsimple.ui.help.Legal newInstance()>() in <com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.ui.help.Legal: com.csipsimple.ui.help.Legal newInstance()>
STATIC edge: $r13 = staticinvoke <com.csipsimple.ui.help.Faq: com.csipsimple.ui.help.Faq newInstance()>() in <com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.ui.help.Faq: com.csipsimple.ui.help.Faq newInstance()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>("Help", $r8) in <com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>
CLINIT edge: r4 = staticinvoke <com.csipsimple.utils.CollectLogs: android.content.Intent getLogReportIntent(java.lang.String,android.content.Context)>("<<<PLEASE ADD THE BUG DESCRIPTION HERE>>>", $r17) in <com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.utils.CollectLogs: void <clinit>()>
CLINIT edge: $r13 = staticinvoke <com.csipsimple.ui.help.Faq: com.csipsimple.ui.help.Faq newInstance()>() in <com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.ui.help.Faq: void <clinit>()>
CLINIT edge: $r4 = staticinvoke <com.csipsimple.utils.CollectLogs: com.csipsimple.utils.CollectLogs$LogResult getLogs(android.content.Context)>($r1) in <com.csipsimple.utils.CollectLogs: android.content.Intent getLogReportIntent(java.lang.String,android.content.Context)> ==> <com.csipsimple.utils.CollectLogs: void <clinit>()>
STATIC edge: $r8 = staticinvoke <com.csipsimple.utils.CollectLogs: java.lang.StringBuilder getDeviceInfo()>() in <com.csipsimple.utils.CollectLogs: android.content.Intent getLogReportIntent(java.lang.String,android.content.Context)> ==> <com.csipsimple.utils.CollectLogs: java.lang.StringBuilder getDeviceInfo()>
STATIC edge: $r6 = staticinvoke <com.csipsimple.utils.CollectLogs: java.lang.String getApplicationInfo(android.content.Context)>($r1) in <com.csipsimple.utils.CollectLogs: android.content.Intent getLogReportIntent(java.lang.String,android.content.Context)> ==> <com.csipsimple.utils.CollectLogs: java.lang.String getApplicationInfo(android.content.Context)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.utils.CustomDistribution: java.lang.String getSupportEmail()>() in <com.csipsimple.utils.CollectLogs: android.content.Intent getLogReportIntent(java.lang.String,android.content.Context)> ==> <com.csipsimple.utils.CustomDistribution: java.lang.String getSupportEmail()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.CollectLogs: com.csipsimple.utils.CollectLogs$LogResult getLogs(android.content.Context)>($r1) in <com.csipsimple.utils.CollectLogs: android.content.Intent getLogReportIntent(java.lang.String,android.content.Context)> ==> <com.csipsimple.utils.CollectLogs: com.csipsimple.utils.CollectLogs$LogResult getLogs(android.content.Context)>
CLINIT edge: $r5 = newarray (java.lang.String)[1] in <com.csipsimple.utils.CollectLogs: android.content.Intent getLogReportIntent(java.lang.String,android.content.Context)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r0 = new com.csipsimple.ui.help.Faq in <com.csipsimple.ui.help.Faq: com.csipsimple.ui.help.Faq newInstance()> ==> <com.csipsimple.ui.help.Faq: void <clinit>()>
CLINIT edge: $i0 = <com.csipsimple.utils.Log: int logLevel> in <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r1 = <com.csipsimple.utils.CollectLogs: java.lang.Object LINE_SEPARATOR> in <com.csipsimple.utils.CollectLogs: java.lang.StringBuilder getDeviceInfo()> ==> <com.csipsimple.utils.CollectLogs: void <clinit>()>
CLINIT edge: $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("") in <com.csipsimple.utils.CollectLogs: java.lang.String getApplicationInfo(android.content.Context)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) in <com.csipsimple.utils.CollectLogs: java.lang.String getApplicationInfo(android.content.Context)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.utils.PreferencesProviderWrapper: android.content.pm.PackageInfo getCurrentPackageInfos(android.content.Context)>($r0) in <com.csipsimple.utils.CollectLogs: java.lang.String getApplicationInfo(android.content.Context)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: android.content.pm.PackageInfo getCurrentPackageInfos(android.content.Context)>
CLINIT edge: staticinvoke <com.csipsimple.utils.PreferencesWrapper: void cleanLogsFiles(android.content.Context)>($r0) in <com.csipsimple.utils.CollectLogs: com.csipsimple.utils.CollectLogs$LogResult getLogs(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Collect Logs", "Collect logs failed : ", r3) in <com.csipsimple.utils.CollectLogs: com.csipsimple.utils.CollectLogs$LogResult getLogs(android.content.Context)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFile(android.content.Context,boolean)>($r0, 0) in <com.csipsimple.utils.CollectLogs: com.csipsimple.utils.CollectLogs$LogResult getLogs(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFile(android.content.Context,boolean)>
STATIC edge: staticinvoke <com.csipsimple.utils.PreferencesWrapper: void cleanLogsFiles(android.content.Context)>($r0) in <com.csipsimple.utils.CollectLogs: com.csipsimple.utils.CollectLogs$LogResult getLogs(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: void cleanLogsFiles(android.content.Context)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Collect Logs", "Collect logs failed : ", r3) in <com.csipsimple.utils.CollectLogs: com.csipsimple.utils.CollectLogs$LogResult getLogs(android.content.Context)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r14 = <com.csipsimple.utils.CollectLogs: java.lang.Object LINE_SEPARATOR> in <com.csipsimple.utils.CollectLogs: com.csipsimple.utils.CollectLogs$LogResult getLogs(android.content.Context)> ==> <com.csipsimple.utils.CollectLogs: void <clinit>()>
CLINIT edge: $r9 = newarray (java.lang.String)[0] in <com.csipsimple.utils.CollectLogs: com.csipsimple.utils.CollectLogs$LogResult getLogs(android.content.Context)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r3 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFolder(android.content.Context)>($r0) in <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFile(android.content.Context,boolean)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFolder(android.content.Context)>($r0) in <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFile(android.content.Context,boolean)> ==> <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFolder(android.content.Context)>
CLINIT edge: r1 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFolder(android.content.Context)>($r0) in <com.csipsimple.utils.PreferencesWrapper: void cleanLogsFiles(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
STATIC edge: r1 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFolder(android.content.Context)>($r0) in <com.csipsimple.utils.PreferencesWrapper: void cleanLogsFiles(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFolder(android.content.Context)>
CLINIT edge: $r1 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getSubFolder(android.content.Context,java.lang.String,boolean)>($r0, "logs", 0) in <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFolder(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getSubFolder(android.content.Context,java.lang.String,boolean)>($r0, "logs", 0) in <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFolder(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: java.io.File getSubFolder(android.content.Context,java.lang.String,boolean)>
CLINIT edge: $r2 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getStorageFolder(android.content.Context,boolean)>($r0, $z0) in <com.csipsimple.utils.PreferencesWrapper: java.io.File getSubFolder(android.content.Context,java.lang.String,boolean)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getStorageFolder(android.content.Context,boolean)>($r0, $z0) in <com.csipsimple.utils.PreferencesWrapper: java.io.File getSubFolder(android.content.Context,java.lang.String,boolean)> ==> <com.csipsimple.utils.PreferencesWrapper: java.io.File getStorageFolder(android.content.Context,boolean)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PreferencesWrapper", $r4) in <com.csipsimple.utils.PreferencesWrapper: java.io.File getStorageFolder(android.content.Context,boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <com.csipsimple.utils.PreferencesWrapper: java.io.File getStorageFolder(android.content.Context,boolean)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PreferencesWrapper", $r4) in <com.csipsimple.utils.PreferencesWrapper: java.io.File getStorageFolder(android.content.Context,boolean)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <com.csipsimple.utils.PreferencesWrapper: java.io.File getStorageFolder(android.content.Context,boolean)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke r2.<java.lang.StringBuffer: void <init>()>() in <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFile(android.content.Context,boolean)> ==> <java.lang.StringBuffer: void <init>()>
VIRTUAL edge: virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("pjsip") in <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFile(android.content.Context,boolean)> ==> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
VIRTUAL edge: virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>($r4) in <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFile(android.content.Context,boolean)> ==> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>
VIRTUAL edge: $r7 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>() in <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFile(android.content.Context,boolean)> ==> <java.lang.StringBuffer: java.lang.String toString()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r19.<com.csipsimple.utils.CollectLogs$LogResult: void <init>(java.lang.StringBuilder,java.io.File)>(r4, r5) in <com.csipsimple.utils.CollectLogs: com.csipsimple.utils.CollectLogs$LogResult getLogs(android.content.Context)> ==> <com.csipsimple.utils.CollectLogs$LogResult: void <init>(java.lang.StringBuilder,java.io.File)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.CollectLogs$LogResult: void <init>(java.lang.StringBuilder,java.io.File)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.help.Faq: void <init>()>() in <com.csipsimple.ui.help.Faq: com.csipsimple.ui.help.Faq newInstance()> ==> <com.csipsimple.ui.help.Faq: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockDialogFragment: void <init>()>() in <com.csipsimple.ui.help.Faq: void <init>()> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.help.Legal: void <init>()>() in <com.csipsimple.ui.help.Legal: com.csipsimple.ui.help.Legal newInstance()> ==> <com.csipsimple.ui.help.Legal: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.help.Help$1: void <init>(com.csipsimple.ui.help.Help)>(r0) in <com.csipsimple.ui.help.Help: android.app.Dialog onCreateDialog(android.os.Bundle)> ==> <com.csipsimple.ui.help.Help$1: void <init>(com.csipsimple.ui.help.Help)>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.ui.help.Help: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>($r5, null, $r1) in <com.csipsimple.ui.help.Help: android.app.Dialog onCreateDialog(android.os.Bundle)> ==> <com.csipsimple.ui.help.Help: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
STATIC edge: $r8 = staticinvoke <com.csipsimple.utils.CollectLogs: java.lang.String getApplicationInfo(android.content.Context)>($r10) in <com.csipsimple.ui.help.Help: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.utils.CollectLogs: java.lang.String getApplicationInfo(android.content.Context)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.NightlyUpdater: boolean isNightlyBuild(android.content.Context)>($r10) in <com.csipsimple.ui.help.Help: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.utils.NightlyUpdater: boolean isNightlyBuild(android.content.Context)>
STATIC edge: $r8 = staticinvoke <com.csipsimple.utils.CustomDistribution: java.lang.String getSupportEmail()>() in <com.csipsimple.ui.help.Help: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.utils.CustomDistribution: java.lang.String getSupportEmail()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.CustomDistribution: boolean showIssueList()>() in <com.csipsimple.ui.help.Help: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.utils.CustomDistribution: boolean showIssueList()>
STATIC edge: $r8 = staticinvoke <com.csipsimple.utils.CustomDistribution: java.lang.String getFaqLink()>() in <com.csipsimple.ui.help.Help: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.utils.CustomDistribution: java.lang.String getFaqLink()>
CLINIT edge: $r8 = staticinvoke <com.csipsimple.utils.CollectLogs: java.lang.String getApplicationInfo(android.content.Context)>($r10) in <com.csipsimple.ui.help.Help: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.utils.CollectLogs: void <clinit>()>
SPECIAL edge: specialinvoke $r11.<com.csipsimple.ui.help.Help$HelpArrayAdapter: void <init>(com.csipsimple.ui.help.Help,android.content.Context,java.util.List)>(r0, $r10, r4) in <com.csipsimple.ui.help.Help: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.help.Help$HelpArrayAdapter: void <init>(com.csipsimple.ui.help.Help,android.content.Context,java.util.List)>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.ui.help.Help$HelpEntry: void <init>(com.csipsimple.ui.help.Help,int,int,int)>(r0, 17301569, 2131427818, 0) in <com.csipsimple.ui.help.Help: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.help.Help$HelpEntry: void <init>(com.csipsimple.ui.help.Help,int,int,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.help.Help$HelpEntry: void <init>(com.csipsimple.ui.help.Help,int,int,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.ui.help.Help: boolean isRecording()>() in <com.csipsimple.ui.help.Help: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.help.Help: boolean isRecording()>
SPECIAL edge: specialinvoke r6.<com.csipsimple.ui.help.Help$2: void <init>(com.csipsimple.ui.help.Help,com.csipsimple.utils.NightlyUpdater)>(r0, r5) in <com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.ui.help.Help$2: void <init>(com.csipsimple.ui.help.Help,com.csipsimple.utils.NightlyUpdater)>
VIRTUAL edge: virtualinvoke r6.<java.lang.Thread: void start()>() in <com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke r6.<java.lang.Thread: void start()>() in <com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.ui.help.Help$2: void run()>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.csipsimple.ui.help.Help$2: void <init>(com.csipsimple.ui.help.Help,com.csipsimple.utils.NightlyUpdater)> ==> <java.lang.Thread: void <init>()>
SPECIAL edge: specialinvoke r5.<com.csipsimple.utils.NightlyUpdater: void <init>(android.content.Context)>($r17) in <com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.utils.NightlyUpdater: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>($r3) in <com.csipsimple.ui.help.Help: void onAttach(android.app.Activity)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockDialogFragment: void onAttach(android.app.Activity)>($r1) in <com.csipsimple.ui.help.Help: void onAttach(android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void onAttach(android.app.Activity)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockDialogFragment: void <init>()>() in <com.csipsimple.ui.help.Help: void <init>()> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.WizardChooser: void <init>()>() in <dummyMainClass: com.csipsimple.wizards.WizardChooser dummyMainMethod_com_csipsimple_wizards_WizardChooser(android.content.Intent)> ==> <com.csipsimple.wizards.WizardChooser: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.wizards.WizardChooser: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.wizards.WizardChooser dummyMainMethod_com_csipsimple_wizards_WizardChooser(android.content.Intent)> ==> <com.csipsimple.wizards.WizardChooser: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.wizards.WizardChooser dummyMainMethod_com_csipsimple_wizards_WizardChooser(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.wizards.WizardChooser dummyMainMethod_com_csipsimple_wizards_WizardChooser(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: void onPause()>() in <dummyMainClass: com.csipsimple.wizards.WizardChooser dummyMainMethod_com_csipsimple_wizards_WizardChooser(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: void onStop()>() in <dummyMainClass: com.csipsimple.wizards.WizardChooser dummyMainMethod_com_csipsimple_wizards_WizardChooser(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: void onDestroy()>() in <dummyMainClass: com.csipsimple.wizards.WizardChooser dummyMainMethod_com_csipsimple_wizards_WizardChooser(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: void onDestroy()>
CLINIT edge: $r5 = staticinvoke <com.csipsimple.wizards.WizardUtils: java.util.ArrayList getWizardsGroupedList()>() in <com.csipsimple.wizards.WizardChooser: void onCreate(android.os.Bundle)> ==> <com.csipsimple.wizards.WizardUtils: void <clinit>()>
STATIC edge: $r9 = staticinvoke <com.csipsimple.wizards.WizardUtils: java.util.ArrayList getWizardsGroups(android.content.Context)>($r8) in <com.csipsimple.wizards.WizardChooser: void onCreate(android.os.Bundle)> ==> <com.csipsimple.wizards.WizardUtils: java.util.ArrayList getWizardsGroups(android.content.Context)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.wizards.WizardUtils: java.util.ArrayList getWizardsGroupedList()>() in <com.csipsimple.wizards.WizardChooser: void onCreate(android.os.Bundle)> ==> <com.csipsimple.wizards.WizardUtils: java.util.ArrayList getWizardsGroupedList()>
CLINIT edge: $r3 = newarray (java.lang.String)[1] in <com.csipsimple.wizards.WizardChooser: void onCreate(android.os.Bundle)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.CustomDistribution: boolean distributionWantsOtherProviders()>() in <com.csipsimple.wizards.WizardUtils: java.util.ArrayList getWizardsGroups(android.content.Context)> ==> <com.csipsimple.utils.CustomDistribution: boolean distributionWantsOtherProviders()>
CLINIT edge: $r7 = staticinvoke <com.csipsimple.wizards.WizardUtils: java.util.HashMap getWizardsList()>() in <com.csipsimple.wizards.WizardUtils: java.util.ArrayList getWizardsGroupedList()> ==> <com.csipsimple.wizards.WizardUtils: void <clinit>()>
STATIC edge: $r14 = staticinvoke <com.csipsimple.wizards.WizardUtils: java.util.Map wizardInfoToMap(com.csipsimple.wizards.WizardUtils$WizardInfo,boolean)>($r12, 0) in <com.csipsimple.wizards.WizardUtils: java.util.ArrayList getWizardsGroupedList()> ==> <com.csipsimple.wizards.WizardUtils: java.util.Map wizardInfoToMap(com.csipsimple.wizards.WizardUtils$WizardInfo,boolean)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.wizards.WizardUtils: java.util.HashMap getWizardsList()>() in <com.csipsimple.wizards.WizardUtils: java.util.ArrayList getWizardsGroupedList()> ==> <com.csipsimple.wizards.WizardUtils: java.util.HashMap getWizardsList()>
CLINIT edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.wizards.WizardUtils: java.util.Map wizardInfoToMap(com.csipsimple.wizards.WizardUtils$WizardInfo,boolean)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.wizards.WizardUtils: java.util.Map wizardInfoToMap(com.csipsimple.wizards.WizardUtils$WizardInfo,boolean)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.wizards.WizardUtils: java.util.Map wizardInfoToMap(com.csipsimple.wizards.WizardUtils$WizardInfo,boolean)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.wizards.WizardUtils: java.util.Map wizardInfoToMap(com.csipsimple.wizards.WizardUtils$WizardInfo,boolean)> ==> <java.lang.Boolean: void <clinit>()>
CLINIT edge: $z0 = <com.csipsimple.wizards.WizardUtils: boolean initDone> in <com.csipsimple.wizards.WizardUtils: java.util.HashMap getWizardsList()> ==> <com.csipsimple.wizards.WizardUtils: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.wizards.WizardUtils: void initWizards()>() in <com.csipsimple.wizards.WizardUtils: java.util.HashMap getWizardsList()> ==> <com.csipsimple.wizards.WizardUtils: void initWizards()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.WizardUtils$WizardPrioComparator: void <init>(com.csipsimple.wizards.WizardUtils$WizardPrioComparator)>(null) in <com.csipsimple.wizards.WizardUtils: java.util.ArrayList getWizardsGroupedList()> ==> <com.csipsimple.wizards.WizardUtils$WizardPrioComparator: void <init>(com.csipsimple.wizards.WizardUtils$WizardPrioComparator)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.WizardUtils$WizardPrioComparator: void <init>()>() in <com.csipsimple.wizards.WizardUtils$WizardPrioComparator: void <init>(com.csipsimple.wizards.WizardUtils$WizardPrioComparator)> ==> <com.csipsimple.wizards.WizardUtils$WizardPrioComparator: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.WizardUtils$WizardPrioComparator: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onDestroy()> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
CLINIT edge: $r1 = staticinvoke <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>(r0, 1) in <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()> ==> <com.actionbarsherlock.ActionBarSherlock: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>(r0, 1) in <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()> ==> <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onStop()> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onPause()> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onPostResume()> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onPostCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
SPECIAL edge: specialinvoke $r12.<com.csipsimple.wizards.WizardChooser$1: void <init>(com.csipsimple.wizards.WizardChooser)>(r0) in <com.csipsimple.wizards.WizardChooser: void onCreate(android.os.Bundle)> ==> <com.csipsimple.wizards.WizardChooser$1: void <init>(com.csipsimple.wizards.WizardChooser)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.WizardChooser$1: void <init>(com.csipsimple.wizards.WizardChooser)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.wizards.WizardChooser$WizardsListAdapter: void <init>(com.csipsimple.wizards.WizardChooser,android.content.Context,java.util.List,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>(r0, r0, $r9, 17367046, $r3, $r4, $r5, 2130903133, $r6, $r7) in <com.csipsimple.wizards.WizardChooser: void onCreate(android.os.Bundle)> ==> <com.csipsimple.wizards.WizardChooser$WizardsListAdapter: void <init>(com.csipsimple.wizards.WizardChooser,android.content.Context,java.util.List,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.WizardChooser: void setContentView(int)>(2130903068) in <com.csipsimple.wizards.WizardChooser: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: void setContentView(int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void setContentView(int)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: void <init>()>() in <com.csipsimple.wizards.WizardChooser: void <init>()> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: void <init>()>() in <dummyMainClass: com.actionbarsherlock.app.SherlockFragment dummyMainMethod_com_actionbarsherlock_app_SherlockFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.actionbarsherlock.app.SherlockFragment dummyMainMethod_com_actionbarsherlock_app_SherlockFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: void onPrepareOptionsMenu(android.view.Menu)>(null) in <dummyMainClass: com.actionbarsherlock.app.SherlockFragment dummyMainMethod_com_actionbarsherlock_app_SherlockFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void onPrepareOptionsMenu(android.view.Menu)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: void onSaveInstanceState(android.os.Bundle)>(null) in <dummyMainClass: com.actionbarsherlock.app.SherlockFragment dummyMainMethod_com_actionbarsherlock_app_SherlockFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void onSaveInstanceState(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>(null, null) in <dummyMainClass: com.actionbarsherlock.app.SherlockFragment dummyMainMethod_com_actionbarsherlock_app_SherlockFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: boolean onOptionsItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: com.actionbarsherlock.app.SherlockFragment dummyMainMethod_com_actionbarsherlock_app_SherlockFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: void onDetach()>() in <dummyMainClass: com.actionbarsherlock.app.SherlockFragment dummyMainMethod_com_actionbarsherlock_app_SherlockFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void onDetach()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void <init>(android.view.MenuItem)>($r1) in <com.actionbarsherlock.app.SherlockFragment: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void <init>(android.view.MenuItem)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragment: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r2) in <com.actionbarsherlock.app.SherlockFragment: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockFragment: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>($r1) in <com.actionbarsherlock.app.SherlockFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>($r3, $r4) in <com.actionbarsherlock.app.SherlockFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)> ==> <com.actionbarsherlock.app.SherlockFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>($r1) in <com.actionbarsherlock.app.SherlockFragment: void onPrepareOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragment: void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>($r2) in <com.actionbarsherlock.app.SherlockFragment: void onPrepareOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockFragment: void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.widgets.ShortcutWidgetProvider: void <init>()>() in <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetProvider dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetProvider(android.content.Intent)> ==> <com.csipsimple.widgets.ShortcutWidgetProvider: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.widgets.ShortcutWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetProvider dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetProvider(android.content.Intent)> ==> <com.csipsimple.widgets.ShortcutWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.widgets.ShortcutWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>(null, null, $r1) in <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetProvider dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetProvider(android.content.Intent)> ==> <com.csipsimple.widgets.ShortcutWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.widgets.ShortcutWidgetProvider: void onDeleted(android.content.Context,int[])>(null, $r2) in <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetProvider dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetProvider(android.content.Intent)> ==> <com.csipsimple.widgets.ShortcutWidgetProvider: void onDeleted(android.content.Context,int[])>
CLINIT edge: $r4 = staticinvoke <com.csipsimple.widgets.ShortcutWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)>($r1, i0) in <com.csipsimple.widgets.ShortcutWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])> ==> <com.csipsimple.widgets.ShortcutWidgetProvider: void <clinit>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.widgets.ShortcutWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)>($r1, i0) in <com.csipsimple.widgets.ShortcutWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])> ==> <com.csipsimple.widgets.ShortcutWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)>
CLINIT edge: staticinvoke <com.csipsimple.widgets.ShortcutWidgetConfigure: void deleteWidget(android.content.Context,int)>($r1, i0) in <com.csipsimple.widgets.ShortcutWidgetProvider: void onDeleted(android.content.Context,int[])> ==> <com.csipsimple.widgets.ShortcutWidgetConfigure: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.widgets.ShortcutWidgetConfigure: void deleteWidget(android.content.Context,int)>($r1, i0) in <com.csipsimple.widgets.ShortcutWidgetProvider: void onDeleted(android.content.Context,int[])> ==> <com.csipsimple.widgets.ShortcutWidgetConfigure: void deleteWidget(android.content.Context,int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("ShortcutWidgetProvider", $r3) in <com.csipsimple.widgets.ShortcutWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.widgets.ShortcutWidgetConfigure: int getActionForWidget(android.content.Context,int)>($r0, $i0) in <com.csipsimple.widgets.ShortcutWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <com.csipsimple.widgets.ShortcutWidgetConfigure: int getActionForWidget(android.content.Context,int)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("ShortcutWidgetProvider", $r3) in <com.csipsimple.widgets.ShortcutWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <com.csipsimple.widgets.ShortcutWidgetConfigure: int getActionForWidget(android.content.Context,int)>($r0, $i0) in <com.csipsimple.widgets.ShortcutWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)> ==> <com.csipsimple.widgets.ShortcutWidgetConfigure: void <clinit>()>
CLINIT edge: $r3 = staticinvoke <com.csipsimple.widgets.ShortcutWidgetConfigure: java.lang.String getPrefsKey(int)>($i0) in <com.csipsimple.widgets.ShortcutWidgetConfigure: void deleteWidget(android.content.Context,int)> ==> <com.csipsimple.widgets.ShortcutWidgetConfigure: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.widgets.ShortcutWidgetConfigure: java.lang.String getPrefsKey(int)>($i0) in <com.csipsimple.widgets.ShortcutWidgetConfigure: void deleteWidget(android.content.Context,int)> ==> <com.csipsimple.widgets.ShortcutWidgetConfigure: java.lang.String getPrefsKey(int)>
CLINIT edge: $r2 = staticinvoke <com.csipsimple.widgets.ShortcutWidgetConfigure: java.lang.String getPrefsKey(int)>($i0) in <com.csipsimple.widgets.ShortcutWidgetConfigure: int getActionForWidget(android.content.Context,int)> ==> <com.csipsimple.widgets.ShortcutWidgetConfigure: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.widgets.ShortcutWidgetConfigure: java.lang.String getPrefsKey(int)>($i0) in <com.csipsimple.widgets.ShortcutWidgetConfigure: int getActionForWidget(android.content.Context,int)> ==> <com.csipsimple.widgets.ShortcutWidgetConfigure: java.lang.String getPrefsKey(int)>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) in <com.csipsimple.widgets.ShortcutWidgetProvider: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.widgets.ShortcutWidgetProvider: android.content.Intent getIntent()>() in <com.csipsimple.widgets.ShortcutWidgetProvider: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.widgets.ShortcutWidgetProvider: android.content.Intent getIntent()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.ShortcutWidgetProvider: void onDeleted(android.content.Context,int[])>($r1, $r6) in <com.csipsimple.widgets.ShortcutWidgetProvider: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.widgets.ShortcutWidgetProvider: void onDeleted(android.content.Context,int[])>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.plugins.codecs.ReceiverSilk: void <init>()>() in <dummyMainClass: com.csipsimple.plugins.codecs.ReceiverSilk dummyMainMethod_com_csipsimple_plugins_codecs_ReceiverSilk(android.content.Intent)> ==> <com.csipsimple.plugins.codecs.ReceiverSilk: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.plugins.codecs.ReceiverSilk: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: com.csipsimple.plugins.codecs.ReceiverSilk dummyMainMethod_com_csipsimple_plugins_codecs_ReceiverSilk(android.content.Intent)> ==> <com.csipsimple.plugins.codecs.ReceiverSilk: void onReceive(android.content.Context,android.content.Intent)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.plugins.codecs.ReceiverSilk: android.content.Intent getIntent()>() in <com.csipsimple.plugins.codecs.ReceiverSilk: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.plugins.codecs.ReceiverSilk: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.filters.AccountFiltersListFragment$3: void <init>(com.csipsimple.ui.filters.AccountFiltersListFragment)>($r0) in <dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment$3: void <init>(com.csipsimple.ui.filters.AccountFiltersListFragment)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.filters.AccountFiltersListFragment$3: void onClick(android.view.View)>(null) in <dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment$3: void onClick(android.view.View)>
STATIC edge: staticinvoke <com.csipsimple.ui.filters.AccountFiltersListFragment: void access$0(com.csipsimple.ui.filters.AccountFiltersListFragment)>($r2) in <com.csipsimple.ui.filters.AccountFiltersListFragment$3: void onClick(android.view.View)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void access$0(com.csipsimple.ui.filters.AccountFiltersListFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.filters.AccountFiltersListFragment$3: void <init>(com.csipsimple.ui.filters.AccountFiltersListFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void onCreate(android.os.Bundle)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>(null, null, null) in <dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: void onActivityCreated(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void onActivityCreated(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: void onResume()>() in <dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void onResume()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: boolean onContextItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: boolean onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>(null, null, 0, 0L) in <dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, null, null) in <dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: void onSaveInstanceState(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void onSaveInstanceState(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onDetach()>
CLINIT edge: $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void <init>()> ==> <java.lang.Long: void <clinit>()>
STATIC edge: $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void <init>()> ==> <java.lang.Long: java.lang.Long valueOf(long)>
CLINIT edge: $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onActivityCreated(android.os.Bundle)> ==> <java.lang.Long: void <clinit>()>
STATIC edge: $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onActivityCreated(android.os.Bundle)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
CLINIT edge: $r5 = <com.csipsimple.api.SipManager: android.net.Uri FILTER_ID_URI_BASE> in <com.csipsimple.ui.filters.AccountFiltersListFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.api.SipManager: void <clinit>()>
CLINIT edge: $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <java.lang.Long: void <clinit>()>
STATIC edge: $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
SPECIAL edge: $l0 = specialinvoke r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: long filterIdFromContextMenuInfo(android.view.ContextMenu$ContextMenuInfo)>($r3) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: long filterIdFromContextMenuInfo(android.view.ContextMenu$ContextMenuInfo)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: void showDetails(long)>($l1) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void showDetails(long)>
SPECIAL edge: $l0 = specialinvoke r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: long filterIdFromContextMenuInfo(android.view.ContextMenu$ContextMenuInfo)>($r2) in <com.csipsimple.ui.filters.AccountFiltersListFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: long filterIdFromContextMenuInfo(android.view.ContextMenu$ContextMenuInfo)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: void showDetails(long)>($l0) in <com.csipsimple.ui.filters.AccountFiltersListFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void showDetails(long)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.filters.AccountFiltersListAdapter: void <init>(android.content.Context,android.database.Cursor)>($r3, null) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.ui.filters.AccountFiltersListAdapter: void <init>(android.content.Context,android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void onActivityCreated(android.os.Bundle)>($r1) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.widgets.CSSListFragment: void onActivityCreated(android.os.Bundle)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: void setListShown(boolean)>(0) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.widgets.CSSListFragment: void setListShown(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: void updateCheckedItem()>() in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void updateCheckedItem()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void setListShown(boolean,boolean)>($z0, 1) in <com.csipsimple.widgets.CSSListFragment: void setListShown(boolean)> ==> <com.csipsimple.widgets.CSSListFragment: void setListShown(boolean,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void ensureCustomList()>() in <com.csipsimple.widgets.CSSListFragment: void setListShown(boolean,boolean)> ==> <com.csipsimple.widgets.CSSListFragment: void ensureCustomList()>
SPECIAL edge: specialinvoke r4.<com.csipsimple.ui.filters.AccountFiltersListFragment$3: void <init>(com.csipsimple.ui.filters.AccountFiltersListFragment)>(r0) in <com.csipsimple.ui.filters.AccountFiltersListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment$3: void <init>(com.csipsimple.ui.filters.AccountFiltersListFragment)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.ui.filters.AccountFiltersListFragment$2: void <init>(com.csipsimple.ui.filters.AccountFiltersListFragment,com.csipsimple.widgets.DragnDropListView)>(r0, r7) in <com.csipsimple.ui.filters.AccountFiltersListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment$2: void <init>(com.csipsimple.ui.filters.AccountFiltersListFragment,com.csipsimple.widgets.DragnDropListView)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.filters.AccountFiltersListFragment$2: void <init>(com.csipsimple.ui.filters.AccountFiltersListFragment,com.csipsimple.widgets.DragnDropListView)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void <init>()>() in <com.csipsimple.ui.filters.AccountFiltersListFragment: void <init>()> ==> <com.csipsimple.widgets.CSSListFragment: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.calllog.CallLogDetailsActivity: void <init>()>() in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsActivity dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsActivity(android.content.Intent)> ==> <com.csipsimple.ui.calllog.CallLogDetailsActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.calllog.CallLogDetailsActivity: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsActivity dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsActivity(android.content.Intent)> ==> <com.csipsimple.ui.calllog.CallLogDetailsActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.calllog.CallLogDetailsActivity: void onStart()>() in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsActivity dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsActivity(android.content.Intent)> ==> <com.csipsimple.ui.calllog.CallLogDetailsActivity: void onStart()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsActivity dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsActivity dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>() in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsActivity dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>() in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsActivity dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>() in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsActivity dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>
CLINIT edge: r2 = new com.csipsimple.ui.calllog.CallLogDetailsFragment in <com.csipsimple.ui.calllog.CallLogDetailsActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: void <clinit>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.ui.calllog.CallLogDetailsActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>() in <com.csipsimple.ui.calllog.CallLogDetailsActivity: void onStart()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.ui.calllog.CallLogDetailsFragment: void <init>()>() in <com.csipsimple.ui.calllog.CallLogDetailsActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: void <init>()>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.ui.calllog.CallLogDetailsFragment: void setOnQuitListener(com.csipsimple.ui.calllog.CallLogDetailsFragment$OnQuitListener)>(r0) in <com.csipsimple.ui.calllog.CallLogDetailsActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: void setOnQuitListener(com.csipsimple.ui.calllog.CallLogDetailsFragment$OnQuitListener)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.ui.calllog.CallLogDetailsFragment$1: void <init>(com.csipsimple.ui.calllog.CallLogDetailsFragment)>(r0) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void <init>()> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment$1: void <init>(com.csipsimple.ui.calllog.CallLogDetailsFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.CallLogDetailsFragment$1: void <init>(com.csipsimple.ui.calllog.CallLogDetailsFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragment: void <init>()>() in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void <init>()> ==> <com.actionbarsherlock.app.SherlockFragment: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>() in <com.csipsimple.ui.calllog.CallLogDetailsActivity: void <init>()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.filters.AccountFilters: void <init>()>() in <dummyMainClass: com.csipsimple.ui.filters.AccountFilters dummyMainMethod_com_csipsimple_ui_filters_AccountFilters(android.content.Intent)> ==> <com.csipsimple.ui.filters.AccountFilters: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.filters.AccountFilters: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.filters.AccountFilters dummyMainMethod_com_csipsimple_ui_filters_AccountFilters(android.content.Intent)> ==> <com.csipsimple.ui.filters.AccountFilters: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.filters.AccountFilters dummyMainMethod_com_csipsimple_ui_filters_AccountFilters(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.ui.filters.AccountFilters dummyMainMethod_com_csipsimple_ui_filters_AccountFilters(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>() in <dummyMainClass: com.csipsimple.ui.filters.AccountFilters dummyMainMethod_com_csipsimple_ui_filters_AccountFilters(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>() in <dummyMainClass: com.csipsimple.ui.filters.AccountFilters dummyMainMethod_com_csipsimple_ui_filters_AccountFilters(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>() in <dummyMainClass: com.csipsimple.ui.filters.AccountFilters dummyMainMethod_com_csipsimple_ui_filters_AccountFilters(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("AccountFilters", "You provide an empty account id....") in <com.csipsimple.ui.filters.AccountFilters: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("AccountFilters", "You provide an empty account id....") in <com.csipsimple.ui.filters.AccountFilters: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.filters.AccountFilters: void setContentView(int)>(2130903061) in <com.csipsimple.ui.filters.AccountFilters: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(int)>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.ui.filters.AccountFilters: com.actionbarsherlock.app.ActionBar getSupportActionBar()>() in <com.csipsimple.ui.filters.AccountFilters: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>() in <com.csipsimple.ui.filters.AccountFilters: void <init>()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.service.DeviceStateReceiver: void <init>()>() in <dummyMainClass: com.csipsimple.service.DeviceStateReceiver dummyMainMethod_com_csipsimple_service_DeviceStateReceiver(android.content.Intent)> ==> <com.csipsimple.service.DeviceStateReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: com.csipsimple.service.DeviceStateReceiver dummyMainMethod_com_csipsimple_service_DeviceStateReceiver(android.content.Intent)> ==> <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Device State", "Try to start service if not already started") in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: void deinit()>() in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.PhoneCapabilityTester: void deinit()>
STATIC edge: staticinvoke <com.csipsimple.utils.ExtraPlugins: void clearDynPlugins()>() in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.ExtraPlugins: void clearDynPlugins()>
STATIC edge: staticinvoke <com.csipsimple.utils.RewriterPlugin: void clearAvailableRewriters()>() in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.RewriterPlugin: void clearAvailableRewriters()>
STATIC edge: staticinvoke <com.csipsimple.utils.CallHandlerPlugin: void clearAvailableCallHandlers()>() in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.CallHandlerPlugin: void clearAvailableCallHandlers()>
STATIC edge: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Device State", "Try to start service if not already started") in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: void deinit()>() in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.PhoneCapabilityTester: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.ExtraPlugins: void clearDynPlugins()>() in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.ExtraPlugins: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.RewriterPlugin: void clearAvailableRewriters()>() in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.RewriterPlugin: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.CallHandlerPlugin: void clearAvailableCallHandlers()>() in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.CallHandlerPlugin: void <clinit>()>
CLINIT edge: $r9 = <com.csipsimple.api.SipProfile: android.net.Uri ACCOUNT_ID_URI_BASE> in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
CLINIT edge: $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.Boolean: void <clinit>()>
CLINIT edge: <com.csipsimple.utils.PhoneCapabilityTester: boolean sIsInitialized> = 0 in <com.csipsimple.utils.PhoneCapabilityTester: void deinit()> ==> <com.csipsimple.utils.PhoneCapabilityTester: void <clinit>()>
CLINIT edge: $r0 = <com.csipsimple.utils.ExtraPlugins: java.util.Map CACHED_RESOLUTION> in <com.csipsimple.utils.ExtraPlugins: void clearDynPlugins()> ==> <com.csipsimple.utils.ExtraPlugins: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.pjsip.PjSipService: void resetCodecs()>() in <com.csipsimple.utils.ExtraPlugins: void clearDynPlugins()> ==> <com.csipsimple.pjsip.PjSipService: void resetCodecs()>
CLINIT edge: staticinvoke <com.csipsimple.pjsip.PjSipService: void resetCodecs()>() in <com.csipsimple.utils.ExtraPlugins: void clearDynPlugins()> ==> <com.csipsimple.pjsip.PjSipService: void <clinit>()>
CLINIT edge: <com.csipsimple.utils.RewriterPlugin: java.util.Map AVAILABLE_REWRITERS> = null in <com.csipsimple.utils.RewriterPlugin: void clearAvailableRewriters()> ==> <com.csipsimple.utils.RewriterPlugin: void <clinit>()>
CLINIT edge: <com.csipsimple.utils.CallHandlerPlugin: java.util.Map AVAILABLE_HANDLERS> = null in <com.csipsimple.utils.CallHandlerPlugin: void clearAvailableCallHandlers()> ==> <com.csipsimple.utils.CallHandlerPlugin: void <clinit>()>
CLINIT edge: $r0 = <com.csipsimple.pjsip.PjSipService: java.util.ArrayList codecs> in <com.csipsimple.pjsip.PjSipService: void resetCodecs()> ==> <com.csipsimple.pjsip.PjSipService: void <clinit>()>
SPECIAL edge: specialinvoke r4.<com.csipsimple.utils.NightlyUpdater: void <init>(android.content.Context)>($r1) in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.NightlyUpdater: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r4.<com.csipsimple.utils.NightlyUpdater: void applyUpdate(android.content.Intent)>($r2) in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.NightlyUpdater: void applyUpdate(android.content.Intent)>
SPECIAL edge: $r2 = specialinvoke r0.<com.csipsimple.utils.NightlyUpdater: java.io.File getCachedFile()>() in <com.csipsimple.utils.NightlyUpdater: void applyUpdate(android.content.Intent)> ==> <com.csipsimple.utils.NightlyUpdater: java.io.File getCachedFile()>
VIRTUAL edge: $z0 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6) in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r6) in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r5.<com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>($r1) in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke r5.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForIncoming()>() in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForIncoming()>
VIRTUAL edge: $z0 = virtualinvoke r5.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("has_been_quit") in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionFor(android.net.NetworkInfo,java.lang.String)>($r2, "in") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForIncoming()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionFor(android.net.NetworkInfo,java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.service.DeviceStateReceiver: android.content.Intent getIntent()>() in <com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.service.DeviceStateReceiver: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.account.AccountsChooserListFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.account.AccountsChooserListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsChooserListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsChooserListFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.account.AccountsChooserListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsChooserListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.account.AccountsChooserListFragment: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.account.AccountsChooserListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsChooserListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsChooserListFragment: void onCreate(android.os.Bundle)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.csipsimple.ui.account.AccountsChooserListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>(null, null, null) in <dummyMainClass: com.csipsimple.ui.account.AccountsChooserListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsChooserListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsChooserListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.account.AccountsChooserListFragment: void onActivityCreated(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.account.AccountsChooserListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsChooserListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsChooserListFragment: void onActivityCreated(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.account.AccountsChooserListFragment: void onResume()>() in <dummyMainClass: com.csipsimple.ui.account.AccountsChooserListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsChooserListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsChooserListFragment: void onResume()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.account.AccountsChooserListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>(null, null, 0, 0L) in <dummyMainClass: com.csipsimple.ui.account.AccountsChooserListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsChooserListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsChooserListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.account.AccountsChooserListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsChooserListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onDetach()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.account.AccountsChooserListFragment: void attachAdapter()>() in <com.csipsimple.ui.account.AccountsChooserListFragment: void onResume()> ==> <com.csipsimple.ui.account.AccountsChooserListFragment: void attachAdapter()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: void <init>(com.csipsimple.ui.account.AccountsChooserListFragment,android.content.Context,android.database.Cursor)>(r0, $r3, null) in <com.csipsimple.ui.account.AccountsChooserListFragment: void attachAdapter()> ==> <com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: void <init>(com.csipsimple.ui.account.AccountsChooserListFragment,android.content.Context,android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void onActivityCreated(android.os.Bundle)>($r1) in <com.csipsimple.ui.account.AccountsChooserListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.widgets.CSSListFragment: void onActivityCreated(android.os.Bundle)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void <init>()>() in <com.csipsimple.ui.account.AccountsChooserListFragment: void <init>()> ==> <com.csipsimple.widgets.CSSListFragment: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void <init>()>() in <dummyMainClass: com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity dummyMainMethod_com_csipsimple_ui_prefs_cupcake_PrefsLoaderActivity(android.content.Intent)> ==> <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity dummyMainMethod_com_csipsimple_ui_prefs_cupcake_PrefsLoaderActivity(android.content.Intent)> ==> <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity dummyMainMethod_com_csipsimple_ui_prefs_cupcake_PrefsLoaderActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.GenericPrefs: void onResume()>() in <dummyMainClass: com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity dummyMainMethod_com_csipsimple_ui_prefs_cupcake_PrefsLoaderActivity(android.content.Intent)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void onResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity dummyMainMethod_com_csipsimple_ui_prefs_cupcake_PrefsLoaderActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.GenericPrefs: void onPause()>() in <dummyMainClass: com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity dummyMainMethod_com_csipsimple_ui_prefs_cupcake_PrefsLoaderActivity(android.content.Intent)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onStop()>() in <dummyMainClass: com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity dummyMainMethod_com_csipsimple_ui_prefs_cupcake_PrefsLoaderActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onDestroy()>() in <dummyMainClass: com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity dummyMainMethod_com_csipsimple_ui_prefs_cupcake_PrefsLoaderActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onDestroy()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.ui.prefs.PrefsLogic: int getTitleResourceForType(int)>($i0) in <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.PrefsLogic: int getTitleResourceForType(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void onCreate(android.os.Bundle)>($r1) in <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void onCreate(android.os.Bundle)>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: int getPreferenceType()>() in <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: int getPreferenceType()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>() in <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void <init>()>() in <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void <init>()> ==> <com.csipsimple.ui.prefs.GenericPrefs: void <init>()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void beforeBuildPrefs()>() in <com.csipsimple.ui.prefs.GenericPrefs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void beforeBuildPrefs()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: int getXmlPreferences()>() in <com.csipsimple.ui.prefs.GenericPrefs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: int getXmlPreferences()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void afterBuildPrefs()>() in <com.csipsimple.ui.prefs.GenericPrefs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void afterBuildPrefs()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.ui.prefs.PrefsLogic: int getXmlResourceForType(int)>($i0) in <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: int getXmlPreferences()> ==> <com.csipsimple.ui.prefs.PrefsLogic: int getXmlResourceForType(int)>
STATIC edge: staticinvoke <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)>(r0, r0, $i0) in <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void afterBuildPrefs()> ==> <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void afterBuildPrefs()>() in <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void afterBuildPrefs()> ==> <com.csipsimple.ui.prefs.GenericPrefs: void afterBuildPrefs()>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: int getPreferenceType()>() in <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void afterBuildPrefs()> ==> <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: int getPreferenceType()>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: int getPreferenceType()>() in <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: int getXmlPreferences()> ==> <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: int getPreferenceType()>
INTERFACE edge: interfaceinvoke $r1.<com.csipsimple.ui.prefs.IPreferenceHelper: void hidePreference(java.lang.String,java.lang.String)>("audio_quality", "has_io_queue") in <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void hidePreference(java.lang.String,java.lang.String)>
INTERFACE edge: interfaceinvoke $r1.<com.csipsimple.ui.prefs.IPreferenceHelper: void setPreferenceScreenType(java.lang.String,int)>("audio_troubleshooting", 2) in <com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenType(java.lang.String,int)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("Generic prefs", $r1) in <com.csipsimple.ui.prefs.GenericPrefs: void hidePreference(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("Generic prefs", $r1) in <com.csipsimple.ui.prefs.GenericPrefs: void hidePreference(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenType(java.lang.String,int)> ==> <java.lang.Object: java.lang.Class getClass()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenType(java.lang.Class,java.lang.String,int)>($r2, $r1, $i0) in <com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenType(java.lang.String,int)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenType(java.lang.Class,java.lang.String,int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void updateDescriptions()>() in <com.csipsimple.ui.prefs.GenericPrefs: void onResume()> ==> <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void updateDescriptions()>
STATIC edge: staticinvoke <com.csipsimple.ui.prefs.PrefsLogic: void updateDescriptionForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)>(r0, r0, $i0) in <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void updateDescriptions()> ==> <com.csipsimple.ui.prefs.PrefsLogic: void updateDescriptionForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: int getPreferenceType()>() in <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void updateDescriptions()> ==> <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: int getPreferenceType()>
INTERFACE edge: interfaceinvoke $r1.<com.csipsimple.ui.prefs.IPreferenceHelper: void setStringFieldSummary(java.lang.String)>("stun_server") in <com.csipsimple.ui.prefs.PrefsLogic: void updateDescriptionForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void setStringFieldSummary(java.lang.String)>
VIRTUAL edge: r6 = virtualinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.ui.prefs.GenericPrefs: void setStringFieldSummary(java.lang.String)> ==> <com.csipsimple.ui.prefs.GenericPrefs: java.lang.String getDefaultFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceSummary(android.preference.Preference,java.lang.CharSequence)>($r4, r6) in <com.csipsimple.ui.prefs.GenericPrefs: void setStringFieldSummary(java.lang.String)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceSummary(android.preference.Preference,java.lang.CharSequence)>
CLINIT edge: $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1) in <com.csipsimple.ui.prefs.GenericPrefs: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1) in <com.csipsimple.ui.prefs.GenericPrefs: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1) in <com.csipsimple.ui.prefs.GenericPrefs: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1) in <com.csipsimple.ui.prefs.GenericPrefs: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
VIRTUAL edge: $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>($r1) in <com.csipsimple.ui.prefs.GenericPrefs: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.messages.ConversationsListFragment$1: void <init>(com.csipsimple.ui.messages.ConversationsListFragment)>($r0) in <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.ConversationsListFragment$1: void <init>(com.csipsimple.ui.messages.ConversationsListFragment)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.ui.messages.ConversationsListFragment$1: void onClick(android.view.View)>(null) in <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.ConversationsListFragment$1: void onClick(android.view.View)>
STATIC edge: staticinvoke <com.csipsimple.ui.messages.ConversationsListFragment: void access$0(com.csipsimple.ui.messages.ConversationsListFragment)>($r2) in <com.csipsimple.ui.messages.ConversationsListFragment$1: void onClick(android.view.View)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void access$0(com.csipsimple.ui.messages.ConversationsListFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.messages.ConversationsListFragment$1: void <init>(com.csipsimple.ui.messages.ConversationsListFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.messages.ConversationsListFragment$4: void <init>(com.csipsimple.ui.messages.ConversationsListFragment,java.lang.String)>($r0, "") in <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.ConversationsListFragment$4: void <init>(com.csipsimple.ui.messages.ConversationsListFragment,java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.messages.ConversationsListFragment$4: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.ConversationsListFragment$4: void onClick(android.content.DialogInterface,int)>
CLINIT edge: $r6 = <com.csipsimple.api.SipMessage: android.net.Uri THREAD_ID_URI_BASE> in <com.csipsimple.ui.messages.ConversationsListFragment$4: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.api.SipMessage: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.messages.ConversationsListFragment$4: void <init>(com.csipsimple.ui.messages.ConversationsListFragment,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.messages.ConversationsListFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.csipsimple.ui.messages.ConversationsListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>(null, null, null) in <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.ConversationsListFragment: void onViewCreated(android.view.View,android.os.Bundle)>(null, null) in <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void onViewCreated(android.view.View,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.ConversationsListFragment: void onActivityCreated(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void onActivityCreated(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.ConversationsListFragment: void onResume()>() in <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void onResume()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<com.csipsimple.ui.messages.ConversationsListFragment: boolean onContextItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: boolean onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.ConversationsListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>(null, null, 0, 0L) in <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.ConversationsListFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, null, null) in <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onDetach()>
CLINIT edge: r1 = new com.csipsimple.service.SipNotifications in <com.csipsimple.ui.messages.ConversationsListFragment: void onResume()> ==> <com.csipsimple.service.SipNotifications: void <clinit>()>
CLINIT edge: $r1 = <java.lang.Integer: java.lang.Class TYPE> in <com.csipsimple.service.SipNotifications: void <clinit>()> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r1 = <java.lang.Boolean: java.lang.Class TYPE> in <com.csipsimple.service.SipNotifications: void <clinit>()> ==> <java.lang.Boolean: void <clinit>()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)>($i0, r4) in <com.csipsimple.ui.messages.ConversationsListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,java.lang.String,java.lang.String)>($i0, $r2, r3) in <com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,java.lang.String,java.lang.String)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.ui.messages.MessageFragment: android.os.Bundle getArguments(java.lang.String,java.lang.String)>($r1, $r2) in <com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,java.lang.String,java.lang.String)> ==> <com.csipsimple.ui.messages.MessageFragment: android.os.Bundle getArguments(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.ui.messages.MessageFragment: void <init>()>() in <com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,java.lang.String,java.lang.String)> ==> <com.csipsimple.ui.messages.MessageFragment: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.ui.messages.MessageFragment$1: void <init>(com.csipsimple.ui.messages.MessageFragment)>(r0) in <com.csipsimple.ui.messages.MessageFragment: void <init>()> ==> <com.csipsimple.ui.messages.MessageFragment$1: void <init>(com.csipsimple.ui.messages.MessageFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.messages.MessageFragment$1: void <init>(com.csipsimple.ui.messages.MessageFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockListFragment: void <init>()>() in <com.csipsimple.ui.messages.MessageFragment: void <init>()> ==> <com.actionbarsherlock.app.SherlockListFragment: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.messages.ConversationsListFragment: void confirmDeleteThread(java.lang.String)>($r7) in <com.csipsimple.ui.messages.ConversationsListFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void confirmDeleteThread(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)>($i0, r6) in <com.csipsimple.ui.messages.ConversationsListFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.messages.ConversationsListFragment$4: void <init>(com.csipsimple.ui.messages.ConversationsListFragment,java.lang.String)>(r0, $r1) in <com.csipsimple.ui.messages.ConversationsListFragment: void confirmDeleteThread(java.lang.String)> ==> <com.csipsimple.ui.messages.ConversationsListFragment$4: void <init>(com.csipsimple.ui.messages.ConversationsListFragment,java.lang.String)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.service.SipNotifications: void <init>(android.content.Context)>($r2) in <com.csipsimple.ui.messages.ConversationsListFragment: void onResume()> ==> <com.csipsimple.service.SipNotifications: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r1.<com.csipsimple.service.SipNotifications: void cancelMessages()>() in <com.csipsimple.ui.messages.ConversationsListFragment: void onResume()> ==> <com.csipsimple.service.SipNotifications: void cancelMessages()>
CLINIT edge: $z0 = <com.csipsimple.service.SipNotifications: boolean isInit> in <com.csipsimple.service.SipNotifications: void <init>(android.content.Context)> ==> <com.csipsimple.service.SipNotifications: void <clinit>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(9) in <com.csipsimple.service.SipNotifications: void <init>(android.content.Context)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.service.SipNotifications: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipNotifications: void cancelAll()>() in <com.csipsimple.service.SipNotifications: void <init>(android.content.Context)> ==> <com.csipsimple.service.SipNotifications: void cancelAll()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipNotifications: void cancelCalls()>() in <com.csipsimple.service.SipNotifications: void <init>(android.content.Context)> ==> <com.csipsimple.service.SipNotifications: void cancelCalls()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipNotifications: void searchNotificationPrimaryText(android.content.Context)>($r1) in <com.csipsimple.service.SipNotifications: void <init>(android.content.Context)> ==> <com.csipsimple.service.SipNotifications: void searchNotificationPrimaryText(android.content.Context)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Notifications", "Can\'t retrieve the color", r2) in <com.csipsimple.service.SipNotifications: void searchNotificationPrimaryText(android.content.Context)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Notifications", "Can\'t retrieve the color", r2) in <com.csipsimple.service.SipNotifications: void searchNotificationPrimaryText(android.content.Context)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r6 = <com.csipsimple.service.SipNotifications: java.lang.String TO_SEARCH> in <com.csipsimple.service.SipNotifications: void searchNotificationPrimaryText(android.content.Context)> ==> <com.csipsimple.service.SipNotifications: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipNotifications: boolean recurseSearchNotificationPrimaryText(android.view.ViewGroup)>(r8) in <com.csipsimple.service.SipNotifications: void searchNotificationPrimaryText(android.content.Context)> ==> <com.csipsimple.service.SipNotifications: boolean recurseSearchNotificationPrimaryText(android.view.ViewGroup)>
CLINIT edge: $r6 = <com.csipsimple.service.SipNotifications: java.lang.String TO_SEARCH> in <com.csipsimple.service.SipNotifications: boolean recurseSearchNotificationPrimaryText(android.view.ViewGroup)> ==> <com.csipsimple.service.SipNotifications: void <clinit>()>
STATIC edge: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.service.SipNotifications: boolean recurseSearchNotificationPrimaryText(android.view.ViewGroup)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.service.SipNotifications: boolean recurseSearchNotificationPrimaryText(android.view.ViewGroup)> ==> <java.lang.Integer: void <clinit>()>
VIRTUAL edge: $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5) in <com.csipsimple.service.SipNotifications: boolean recurseSearchNotificationPrimaryText(android.view.ViewGroup)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipNotifications: void cancelRegisters()>() in <com.csipsimple.service.SipNotifications: void cancelAll()> ==> <com.csipsimple.service.SipNotifications: void cancelRegisters()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipNotifications: void cancelMessages()>() in <com.csipsimple.service.SipNotifications: void cancelAll()> ==> <com.csipsimple.service.SipNotifications: void cancelMessages()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipNotifications: void cancelMissedCalls()>() in <com.csipsimple.service.SipNotifications: void cancelAll()> ==> <com.csipsimple.service.SipNotifications: void cancelMissedCalls()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipNotifications: void cancelVoicemails()>() in <com.csipsimple.service.SipNotifications: void cancelAll()> ==> <com.csipsimple.service.SipNotifications: void cancelVoicemails()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Notifications", "Trying to cancel a service notification from outside the service") in <com.csipsimple.service.SipNotifications: void cancelRegisters()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Notifications", "Trying to cancel a service notification from outside the service") in <com.csipsimple.service.SipNotifications: void cancelRegisters()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipNotifications: void stopForegroundCompat(int)>(1) in <com.csipsimple.service.SipNotifications: void cancelRegisters()> ==> <com.csipsimple.service.SipNotifications: void stopForegroundCompat(int)>
CLINIT edge: $r3 = <java.lang.Boolean: java.lang.Boolean TRUE> in <com.csipsimple.service.SipNotifications: void stopForegroundCompat(int)> ==> <java.lang.Boolean: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipNotifications: void invokeMethod(java.lang.reflect.Method,java.lang.Object[])>($r1, $r2) in <com.csipsimple.service.SipNotifications: void stopForegroundCompat(int)> ==> <com.csipsimple.service.SipNotifications: void invokeMethod(java.lang.reflect.Method,java.lang.Object[])>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("Notifications", "Unable to invoke method", r4) in <com.csipsimple.service.SipNotifications: void invokeMethod(java.lang.reflect.Method,java.lang.Object[])> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("Notifications", "Unable to invoke method", r5) in <com.csipsimple.service.SipNotifications: void invokeMethod(java.lang.reflect.Method,java.lang.Object[])> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void onActivityCreated(android.os.Bundle)>($r1) in <com.csipsimple.ui.messages.ConversationsListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.widgets.CSSListFragment: void onActivityCreated(android.os.Bundle)>
SPECIAL edge: specialinvoke r4.<com.csipsimple.ui.messages.ConversationsListFragment$1: void <init>(com.csipsimple.ui.messages.ConversationsListFragment)>(r0) in <com.csipsimple.ui.messages.ConversationsListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.messages.ConversationsListFragment$1: void <init>(com.csipsimple.ui.messages.ConversationsListFragment)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void <init>()>() in <com.csipsimple.ui.messages.ConversationsListFragment: void <init>()> ==> <com.csipsimple.widgets.CSSListFragment: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.prefs.Codecs: void <init>()>() in <dummyMainClass: com.csipsimple.ui.prefs.Codecs dummyMainMethod_com_csipsimple_ui_prefs_Codecs(android.content.Intent)> ==> <com.csipsimple.ui.prefs.Codecs: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.Codecs: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.Codecs dummyMainMethod_com_csipsimple_ui_prefs_Codecs(android.content.Intent)> ==> <com.csipsimple.ui.prefs.Codecs: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.Codecs dummyMainMethod_com_csipsimple_ui_prefs_Codecs(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.ui.prefs.Codecs dummyMainMethod_com_csipsimple_ui_prefs_Codecs(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>() in <dummyMainClass: com.csipsimple.ui.prefs.Codecs dummyMainMethod_com_csipsimple_ui_prefs_Codecs(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>() in <dummyMainClass: com.csipsimple.ui.prefs.Codecs dummyMainMethod_com_csipsimple_ui_prefs_Codecs(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>() in <dummyMainClass: com.csipsimple.ui.prefs.Codecs dummyMainMethod_com_csipsimple_ui_prefs_Codecs(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>
CLINIT edge: $r6 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>(r0, "codecs_per_bandwidth") in <com.csipsimple.ui.prefs.Codecs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r6 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>(r0, "use_video") in <com.csipsimple.ui.prefs.Codecs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.ui.prefs.Codecs$TabsAdapter: void <init>(com.csipsimple.ui.prefs.Codecs,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)>(r0, r0, $r3, $r5) in <com.csipsimple.ui.prefs.Codecs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.Codecs$TabsAdapter: void <init>(com.csipsimple.ui.prefs.Codecs,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.ui.prefs.Codecs$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class)>($r8, class "Lcom/csipsimple/ui/prefs/CodecsFragment;") in <com.csipsimple.ui.prefs.Codecs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.Codecs$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class)>
VIRTUAL edge: $r4 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>() in <com.csipsimple.ui.prefs.Codecs$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class)> ==> <java.lang.Class: java.lang.String getName()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.prefs.Codecs: void setContentView(int)>(2130903078) in <com.csipsimple.ui.prefs.Codecs: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(int)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.ui.prefs.Codecs: com.actionbarsherlock.app.ActionBar getSupportActionBar()>() in <com.csipsimple.ui.prefs.Codecs: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>() in <com.csipsimple.ui.prefs.Codecs: void <init>()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallListFragment dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallListFragment dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallListFragment dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onActivityCreated(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallListFragment dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onActivityCreated(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onResume()>() in <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallListFragment dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onResume()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>(null, null, 0, 0L) in <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallListFragment dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallListFragment dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onDetach()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)>($r5) in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("OutgoingCallListFragment", "Unable to make the call", r7) in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("OutgoingCallListFragment", "Ignore next outgoing number failed") in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("OutgoingCallListFragment", $r6) in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("OutgoingCallListFragment", "Call handler not anymore available in loader... something gone wrong") in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("OutgoingCallListFragment", "Unable to make the call", r7) in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void <init>(com.csipsimple.ui.outgoingcall.OutgoingCallListFragment,android.app.PendingIntent,long)>(r0, $r10, $l1) in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void <init>(com.csipsimple.ui.outgoingcall.OutgoingCallListFragment,android.app.PendingIntent,long)>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void start()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke r2.<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void start()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void run()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("OutgoingCallListFragment", "Thread that fires outgoing call has been interrupted") in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void run()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("OutgoingCallListFragment", "Pending intent cancelled", r6) in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void run()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("OutgoingCallListFragment", "Thread that fires outgoing call has been interrupted") in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void run()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void sleep(long)>($l0) in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void run()> ==> <java.lang.Thread: void sleep(long)>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void <init>(com.csipsimple.ui.outgoingcall.OutgoingCallListFragment,android.app.PendingIntent,long)> ==> <java.lang.Thread: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void attachAdapter()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onResume()> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void attachAdapter()>
CLINIT edge: $r2 = new com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void attachAdapter()> ==> <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void <clinit>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void <init>(com.csipsimple.ui.outgoingcall.OutgoingCallListFragment,android.database.Cursor)>(r0, null) in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void attachAdapter()> ==> <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void <init>(com.csipsimple.ui.outgoingcall.OutgoingCallListFragment,android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void onActivityCreated(android.os.Bundle)>($r1) in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.widgets.CSSListFragment: void onActivityCreated(android.os.Bundle)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void <init>()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void <init>()> ==> <com.csipsimple.widgets.CSSListFragment: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.ui.incall.DtmfDialogFragment$1: void <init>(com.csipsimple.ui.incall.DtmfDialogFragment)>($r0) in <dummyMainClass: com.csipsimple.ui.incall.DtmfDialogFragment dummyMainMethod_com_csipsimple_ui_incall_DtmfDialogFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.incall.DtmfDialogFragment$1: void <init>(com.csipsimple.ui.incall.DtmfDialogFragment)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.ui.incall.DtmfDialogFragment$1: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: com.csipsimple.ui.incall.DtmfDialogFragment dummyMainMethod_com_csipsimple_ui_incall_DtmfDialogFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.incall.DtmfDialogFragment$1: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.DtmfDialogFragment$1: void <init>(com.csipsimple.ui.incall.DtmfDialogFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.incall.DtmfDialogFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.incall.DtmfDialogFragment dummyMainMethod_com_csipsimple_ui_incall_DtmfDialogFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.incall.DtmfDialogFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockDialogFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.incall.DtmfDialogFragment dummyMainMethod_com_csipsimple_ui_incall_DtmfDialogFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<com.csipsimple.ui.incall.DtmfDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.incall.DtmfDialogFragment dummyMainMethod_com_csipsimple_ui_incall_DtmfDialogFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.incall.DtmfDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockDialogFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.incall.DtmfDialogFragment dummyMainMethod_com_csipsimple_ui_incall_DtmfDialogFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void onDetach()>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.incall.DtmfDialogFragment$1: void <init>(com.csipsimple.ui.incall.DtmfDialogFragment)>(r0) in <com.csipsimple.ui.incall.DtmfDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> ==> <com.csipsimple.ui.incall.DtmfDialogFragment$1: void <init>(com.csipsimple.ui.incall.DtmfDialogFragment)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.ui.incall.DtmfDialogFragment: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>($r4, null, $r1) in <com.csipsimple.ui.incall.DtmfDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)> ==> <com.csipsimple.ui.incall.DtmfDialogFragment: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockDialogFragment: void <init>()>() in <com.csipsimple.ui.incall.DtmfDialogFragment: void <init>()> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void <init>()>() in <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallChooser dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallChooser(android.content.Intent)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallChooser dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallChooser(android.content.Intent)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallChooser dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallChooser(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallChooser dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallChooser(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>() in <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallChooser dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallChooser(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>() in <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallChooser dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallChooser(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onDestroy()>() in <dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallChooser dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallChooser(android.content.Intent)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onDestroy()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("OutgoingCallChooser", $r2) in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("OutgoingCallChooser", $r2) in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.Log: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onDestroy()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void resetInternals()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onDestroy()> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void resetInternals()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void resetInternals()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void resetInternals()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: java.lang.String getPhoneNumber()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: java.lang.String getPhoneNumber()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void setContentView(int)>(2130903111) in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void connectService()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void connectService()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>(r0) in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void connectService()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke r1.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForOutgoing()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void connectService()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForOutgoing()>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("android.intent.action.SENDTO") in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: java.lang.String getPhoneNumber()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1) in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: java.lang.String getPhoneNumber()> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: java.lang.String getPhoneNumber()> ==> <java.lang.String: java.lang.String toLowerCase()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser$1: void <init>(com.csipsimple.ui.outgoingcall.OutgoingCallChooser)>(r0) in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void <init>()> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser$1: void <init>(com.csipsimple.ui.outgoingcall.OutgoingCallChooser)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser$1: void <init>(com.csipsimple.ui.outgoingcall.OutgoingCallChooser)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void <init>()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.widgets.ShortcutWidgetConfigure: void <init>()>() in <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetConfigure dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetConfigure(android.content.Intent)> ==> <com.csipsimple.widgets.ShortcutWidgetConfigure: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.widgets.ShortcutWidgetConfigure: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetConfigure dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetConfigure(android.content.Intent)> ==> <com.csipsimple.widgets.ShortcutWidgetConfigure: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetConfigure dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetConfigure(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockListActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetConfigure dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetConfigure(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockListActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListActivity: void onPause()>() in <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetConfigure dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetConfigure(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockListActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListActivity: void onStop()>() in <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetConfigure dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetConfigure(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockListActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListActivity: void onDestroy()>() in <dummyMainClass: com.csipsimple.widgets.ShortcutWidgetConfigure dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetConfigure(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockListActivity: void onDestroy()>
STATIC edge: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.widgets.ShortcutWidgetConfigure: void onCreate(android.os.Bundle)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.widgets.ShortcutWidgetConfigure: void onCreate(android.os.Bundle)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r3 = newarray (java.lang.String)[1] in <com.csipsimple.widgets.ShortcutWidgetConfigure: void onCreate(android.os.Bundle)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r7 = <com.csipsimple.widgets.ShortcutWidgetConfigure: com.csipsimple.widgets.ShortcutWidgetConfigure$Shortcut[] SHORTCUTS> in <com.csipsimple.widgets.ShortcutWidgetConfigure: void onCreate(android.os.Bundle)> ==> <com.csipsimple.widgets.ShortcutWidgetConfigure: void <clinit>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void onDestroy()> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
CLINIT edge: $r1 = staticinvoke <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>(r0, 1) in <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()> ==> <com.actionbarsherlock.ActionBarSherlock: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>(r0, 1) in <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()> ==> <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void onStop()> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void onPause()> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void onPostResume()> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void onPostCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: void <init>()>() in <com.csipsimple.widgets.ShortcutWidgetConfigure: void <init>()> ==> <com.actionbarsherlock.app.SherlockListActivity: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.account.AccountsEditListFragment$5: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)>($r0) in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsEditListFragment$5: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.account.AccountsEditListFragment$5: void onClick(android.view.View)>(null) in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsEditListFragment$5: void onClick(android.view.View)>
CLINIT edge: staticinvoke <com.csipsimple.ui.account.AccountsEditListFragment: void access$1(com.csipsimple.ui.account.AccountsEditListFragment)>($r2) in <com.csipsimple.ui.account.AccountsEditListFragment$5: void onClick(android.view.View)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.ui.account.AccountsEditListFragment: void access$1(com.csipsimple.ui.account.AccountsEditListFragment)>($r2) in <com.csipsimple.ui.account.AccountsEditListFragment$5: void onClick(android.view.View)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void access$1(com.csipsimple.ui.account.AccountsEditListFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.account.AccountsEditListFragment$5: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.account.AccountsEditListFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.account.AccountsEditListFragment: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void onCreate(android.os.Bundle)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.csipsimple.ui.account.AccountsEditListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>(null, null, null) in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.account.AccountsEditListFragment: void onActivityCreated(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void onActivityCreated(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.account.AccountsEditListFragment: void onResume()>() in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void onResume()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<com.csipsimple.ui.account.AccountsEditListFragment: boolean onContextItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: boolean onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.account.AccountsEditListFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, null, null) in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.account.AccountsEditListFragment: void onSaveInstanceState(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void onSaveInstanceState(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.account.AccountsEditListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>(null, null, 0, 0L) in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.account.AccountsEditListFragment: void onActivityResult(int,int,android.content.Intent)>(0, 0, null) in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void onActivityResult(int,int,android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.account.AccountsEditListFragment: void onPause()>() in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onDetach()>
CLINIT edge: $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <com.csipsimple.ui.account.AccountsEditListFragment: void <init>()> ==> <java.lang.Long: void <clinit>()>
STATIC edge: $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <com.csipsimple.ui.account.AccountsEditListFragment: void <init>()> ==> <java.lang.Long: java.lang.Long valueOf(long)>
CLINIT edge: $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.ui.account.AccountsEditListFragment: void onActivityCreated(android.os.Bundle)> ==> <java.lang.Long: void <clinit>()>
STATIC edge: $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.ui.account.AccountsEditListFragment: void onActivityCreated(android.os.Bundle)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
CLINIT edge: $r5 = <com.csipsimple.api.SipProfile: android.net.Uri ACCOUNT_STATUS_URI> in <com.csipsimple.ui.account.AccountsEditListFragment: void onResume()> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
CLINIT edge: $r8 = <com.csipsimple.api.SipProfile: android.net.Uri ACCOUNT_ID_URI_BASE> in <com.csipsimple.ui.account.AccountsEditListFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
STATIC edge: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.ui.account.AccountsEditListFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
CLINIT edge: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.ui.account.AccountsEditListFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <java.lang.Boolean: void <clinit>()>
CLINIT edge: $r6 = staticinvoke <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)>($r5) in <com.csipsimple.ui.account.AccountsEditListFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <com.csipsimple.wizards.WizardUtils: void <clinit>()>
STATIC edge: $r6 = staticinvoke <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)>($r5) in <com.csipsimple.ui.account.AccountsEditListFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)>
CLINIT edge: $r3 = <com.csipsimple.ui.account.AccountsEditListFragment: java.lang.String THIS_FILE> in <com.csipsimple.ui.account.AccountsEditListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void <clinit>()>
STATIC edge: $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.ui.account.AccountsEditListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
CLINIT edge: $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.ui.account.AccountsEditListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <java.lang.Long: void <clinit>()>
CLINIT edge: $r7 = <com.csipsimple.api.SipProfile: android.net.Uri ACCOUNT_ID_URI_BASE> in <com.csipsimple.ui.account.AccountsEditListFragment: void onActivityResult(int,int,android.content.Intent)> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.account.AccountsEditListFragment: void showDetails(long,java.lang.String)>(-1L, $r4) in <com.csipsimple.ui.account.AccountsEditListFragment: void onActivityResult(int,int,android.content.Intent)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void showDetails(long,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.account.AccountsEditListFragment: void showDetails(long,java.lang.String)>($l1, $r3) in <com.csipsimple.ui.account.AccountsEditListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void showDetails(long,java.lang.String)>
SPECIAL edge: $r4 = specialinvoke r0.<com.csipsimple.ui.account.AccountsEditListFragment: com.csipsimple.api.SipProfile profileFromContextMenuInfo(android.view.ContextMenu$ContextMenuInfo)>($r3) in <com.csipsimple.ui.account.AccountsEditListFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: com.csipsimple.api.SipProfile profileFromContextMenuInfo(android.view.ContextMenu$ContextMenuInfo)>
CLINIT edge: $r8 = <com.csipsimple.ui.account.AccountsEditListFragment: java.lang.String THIS_FILE> in <com.csipsimple.ui.account.AccountsEditListFragment: com.csipsimple.api.SipProfile profileFromContextMenuInfo(android.view.ContextMenu$ContextMenuInfo)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void <clinit>()>
CLINIT edge: $r9 = new com.csipsimple.api.SipProfile in <com.csipsimple.ui.account.AccountsEditListFragment: com.csipsimple.api.SipProfile profileFromContextMenuInfo(android.view.ContextMenu$ContextMenuInfo)> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>(r7) in <com.csipsimple.ui.account.AccountsEditListFragment: com.csipsimple.api.SipProfile profileFromContextMenuInfo(android.view.ContextMenu$ContextMenuInfo)> ==> <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>
SPECIAL edge: $r5 = specialinvoke r0.<com.csipsimple.ui.account.AccountsEditListFragment: com.csipsimple.api.SipProfile profileFromContextMenuInfo(android.view.ContextMenu$ContextMenuInfo)>($r4) in <com.csipsimple.ui.account.AccountsEditListFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: com.csipsimple.api.SipProfile profileFromContextMenuInfo(android.view.ContextMenu$ContextMenuInfo)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.account.AccountsEditListFragment: void showDetails(long,java.lang.String)>($l1, $r9) in <com.csipsimple.ui.account.AccountsEditListFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void showDetails(long,java.lang.String)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.ui.account.AccountsEditListFragment$AccountStatusContentObserver: void <init>(com.csipsimple.ui.account.AccountsEditListFragment,android.os.Handler)>(r0, $r2) in <com.csipsimple.ui.account.AccountsEditListFragment: void onResume()> ==> <com.csipsimple.ui.account.AccountsEditListFragment$AccountStatusContentObserver: void <init>(com.csipsimple.ui.account.AccountsEditListFragment,android.os.Handler)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.account.AccountsEditListAdapter: void <init>(android.content.Context,android.database.Cursor)>($r3, null) in <com.csipsimple.ui.account.AccountsEditListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.ui.account.AccountsEditListAdapter: void <init>(android.content.Context,android.database.Cursor)>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.ui.account.AccountsEditListAdapter: void setOnCheckedRowListener(com.csipsimple.ui.account.AccountsEditListAdapter$OnCheckedRowListener)>(r0) in <com.csipsimple.ui.account.AccountsEditListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.ui.account.AccountsEditListAdapter: void setOnCheckedRowListener(com.csipsimple.ui.account.AccountsEditListAdapter$OnCheckedRowListener)>
CLINIT edge: $r3 = newarray (java.lang.String)[1] in <com.csipsimple.ui.account.AccountsEditListAdapter: void <init>(android.content.Context,android.database.Cursor)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void onActivityCreated(android.os.Bundle)>($r1) in <com.csipsimple.ui.account.AccountsEditListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.widgets.CSSListFragment: void onActivityCreated(android.os.Bundle)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.account.AccountsEditListFragment: void setListShown(boolean)>(0) in <com.csipsimple.ui.account.AccountsEditListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.widgets.CSSListFragment: void setListShown(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.account.AccountsEditListFragment: void updateCheckedItem()>() in <com.csipsimple.ui.account.AccountsEditListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void updateCheckedItem()>
SPECIAL edge: specialinvoke r4.<com.csipsimple.ui.account.AccountsEditListFragment$5: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)>(r0) in <com.csipsimple.ui.account.AccountsEditListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.account.AccountsEditListFragment$5: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.ui.account.AccountsEditListFragment$4: void <init>(com.csipsimple.ui.account.AccountsEditListFragment,com.csipsimple.widgets.DragnDropListView)>(r0, r7) in <com.csipsimple.ui.account.AccountsEditListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.account.AccountsEditListFragment$4: void <init>(com.csipsimple.ui.account.AccountsEditListFragment,com.csipsimple.widgets.DragnDropListView)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.account.AccountsEditListFragment$4: void <init>(com.csipsimple.ui.account.AccountsEditListFragment,com.csipsimple.widgets.DragnDropListView)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void <init>()>() in <com.csipsimple.ui.account.AccountsEditListFragment: void <init>()> ==> <com.csipsimple.widgets.CSSListFragment: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.account.AccountEditFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.account.AccountEditFragment dummyMainMethod_com_csipsimple_ui_account_AccountEditFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.account.AccountEditFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.account.AccountEditFragment dummyMainMethod_com_csipsimple_ui_account_AccountEditFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: void onSaveInstanceState(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.account.AccountEditFragment dummyMainMethod_com_csipsimple_ui_account_AccountEditFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void onSaveInstanceState(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.account.AccountEditFragment dummyMainMethod_com_csipsimple_ui_account_AccountEditFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void onDetach()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragment: void <init>()>() in <com.csipsimple.ui.account.AccountEditFragment: void <init>()> ==> <com.actionbarsherlock.app.SherlockFragment: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.messages.MessageActivity: void <init>()>() in <dummyMainClass: com.csipsimple.ui.messages.MessageActivity dummyMainMethod_com_csipsimple_ui_messages_MessageActivity(android.content.Intent)> ==> <com.csipsimple.ui.messages.MessageActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.MessageActivity: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.messages.MessageActivity dummyMainMethod_com_csipsimple_ui_messages_MessageActivity(android.content.Intent)> ==> <com.csipsimple.ui.messages.MessageActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.MessageActivity: void onStart()>() in <dummyMainClass: com.csipsimple.ui.messages.MessageActivity dummyMainMethod_com_csipsimple_ui_messages_MessageActivity(android.content.Intent)> ==> <com.csipsimple.ui.messages.MessageActivity: void onStart()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.messages.MessageActivity dummyMainMethod_com_csipsimple_ui_messages_MessageActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.ui.messages.MessageActivity dummyMainMethod_com_csipsimple_ui_messages_MessageActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>() in <dummyMainClass: com.csipsimple.ui.messages.MessageActivity dummyMainMethod_com_csipsimple_ui_messages_MessageActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>() in <dummyMainClass: com.csipsimple.ui.messages.MessageActivity dummyMainMethod_com_csipsimple_ui_messages_MessageActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>() in <dummyMainClass: com.csipsimple.ui.messages.MessageActivity dummyMainMethod_com_csipsimple_ui_messages_MessageActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.ui.messages.MessageActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>() in <com.csipsimple.ui.messages.MessageActivity: void onStart()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.ui.messages.MessageFragment: void <init>()>() in <com.csipsimple.ui.messages.MessageActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.messages.MessageFragment: void <init>()>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.ui.messages.MessageFragment: void setOnQuitListener(com.csipsimple.ui.messages.MessageFragment$OnQuitListener)>(r0) in <com.csipsimple.ui.messages.MessageActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.messages.MessageFragment: void setOnQuitListener(com.csipsimple.ui.messages.MessageFragment$OnQuitListener)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>() in <com.csipsimple.ui.messages.MessageActivity: void <init>()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.ui.help.Faq$1: void <init>(com.csipsimple.ui.help.Faq)>($r0) in <dummyMainClass: com.csipsimple.ui.help.Faq dummyMainMethod_com_csipsimple_ui_help_Faq(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Faq$1: void <init>(com.csipsimple.ui.help.Faq)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.ui.help.Faq$1: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: com.csipsimple.ui.help.Faq dummyMainMethod_com_csipsimple_ui_help_Faq(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Faq$1: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.help.Faq$1: void <init>(com.csipsimple.ui.help.Faq)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.help.Faq: void <init>()>() in <dummyMainClass: com.csipsimple.ui.help.Faq dummyMainMethod_com_csipsimple_ui_help_Faq(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Faq: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockDialogFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.help.Faq dummyMainMethod_com_csipsimple_ui_help_Faq(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<com.csipsimple.ui.help.Faq: android.app.Dialog onCreateDialog(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.help.Faq dummyMainMethod_com_csipsimple_ui_help_Faq(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.help.Faq: android.app.Dialog onCreateDialog(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockDialogFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.help.Faq dummyMainMethod_com_csipsimple_ui_help_Faq(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: void onDetach()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.help.Faq$1: void <init>(com.csipsimple.ui.help.Faq)>(r0) in <com.csipsimple.ui.help.Faq: android.app.Dialog onCreateDialog(android.os.Bundle)> ==> <com.csipsimple.ui.help.Faq$1: void <init>(com.csipsimple.ui.help.Faq)>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.ui.help.Faq: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>($r5, null, $r1) in <com.csipsimple.ui.help.Faq: android.app.Dialog onCreateDialog(android.os.Bundle)> ==> <com.csipsimple.ui.help.Faq: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
CLINIT edge: $r9 = <com.csipsimple.ui.help.Faq: java.lang.String FAQ_URL> in <com.csipsimple.ui.help.Faq: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.help.Faq: void <clinit>()>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.ui.help.Faq$FaqWebViewClient: void <init>(com.csipsimple.ui.help.Faq,android.view.View)>(r0, $r4) in <com.csipsimple.ui.help.Faq: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.help.Faq$FaqWebViewClient: void <init>(com.csipsimple.ui.help.Faq,android.view.View)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.prefs.cupcake.MainPrefs: void <init>()>() in <dummyMainClass: com.csipsimple.ui.prefs.cupcake.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_cupcake_MainPrefs(android.content.Intent)> ==> <com.csipsimple.ui.prefs.cupcake.MainPrefs: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.cupcake.MainPrefs: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.cupcake.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_cupcake_MainPrefs(android.content.Intent)> ==> <com.csipsimple.ui.prefs.cupcake.MainPrefs: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.cupcake.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_cupcake_MainPrefs(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockListActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.ui.prefs.cupcake.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_cupcake_MainPrefs(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockListActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListActivity: void onPause()>() in <dummyMainClass: com.csipsimple.ui.prefs.cupcake.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_cupcake_MainPrefs(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockListActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListActivity: void onStop()>() in <dummyMainClass: com.csipsimple.ui.prefs.cupcake.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_cupcake_MainPrefs(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockListActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListActivity: void onDestroy()>() in <dummyMainClass: com.csipsimple.ui.prefs.cupcake.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_cupcake_MainPrefs(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockListActivity: void onDestroy()>
CLINIT edge: $r3 = new com.csipsimple.utils.PreferencesWrapper in <com.csipsimple.ui.prefs.cupcake.MainPrefs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroupAdapter: void <init>(com.csipsimple.ui.prefs.cupcake.MainPrefs,android.content.Context,java.util.List)>(r0, r0, r2) in <com.csipsimple.ui.prefs.cupcake.MainPrefs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroupAdapter: void <init>(com.csipsimple.ui.prefs.cupcake.MainPrefs,android.content.Context,java.util.List)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void <init>(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)>(r0, 2131427477, 2131427478, 2130837700, $r5) in <com.csipsimple.ui.prefs.cupcake.MainPrefs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void <init>(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void <init>(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>(r0) in <com.csipsimple.ui.prefs.cupcake.MainPrefs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>
SPECIAL edge: $r5 = specialinvoke r0.<com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)>(20) in <com.csipsimple.ui.prefs.cupcake.MainPrefs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: void <init>()>() in <com.csipsimple.ui.prefs.cupcake.MainPrefs: void <init>()> ==> <com.actionbarsherlock.app.SherlockListActivity: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.warnings.WarningVpnIcs: void <init>(android.content.Context)>(null) in <dummyMainClass: com.csipsimple.ui.warnings.WarningFragment dummyMainMethod_com_csipsimple_ui_warnings_WarningFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.warnings.WarningVpnIcs: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.warnings.WarningVpnIcs: void onClick(android.view.View)>(null) in <dummyMainClass: com.csipsimple.ui.warnings.WarningFragment dummyMainMethod_com_csipsimple_ui_warnings_WarningFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.warnings.WarningVpnIcs: void onClick(android.view.View)>
CLINIT edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.ui.warnings.WarningVpnIcs: void onClick(android.view.View)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)>($r2, "network_route_polling", $r3) in <com.csipsimple.ui.warnings.WarningVpnIcs: void onClick(android.view.View)> ==> <com.csipsimple.api.SipConfigManager: void setPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5) in <com.csipsimple.ui.warnings.WarningVpnIcs: void onClick(android.view.View)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)>($r2, "network_route_polling", $r3) in <com.csipsimple.ui.warnings.WarningVpnIcs: void onClick(android.view.View)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)>($r0, $r1, $r3) in <com.csipsimple.api.SipConfigManager: void setPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)>($r0, $r1, $r3) in <com.csipsimple.api.SipConfigManager: void setPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)> ==> <com.csipsimple.api.SipConfigManager: void setPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)>
CLINIT edge: $r4 = staticinvoke <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>($r1) in <com.csipsimple.api.SipConfigManager: void setPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>($r1) in <com.csipsimple.api.SipConfigManager: void setPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>() in <com.csipsimple.api.SipConfigManager: void setPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)> ==> <java.lang.Class: java.lang.String getName()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void onClick(android.view.View)>($r1) in <com.csipsimple.ui.warnings.WarningVpnIcs: void onClick(android.view.View)> ==> <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void onClick(android.view.View)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.ui.warnings.WarningVpnIcs: java.lang.String getWarningKey()>() in <com.csipsimple.ui.warnings.WarningVpnIcs: void onClick(android.view.View)> ==> <com.csipsimple.ui.warnings.WarningVpnIcs: java.lang.String getWarningKey()>
CLINIT edge: $r3 = staticinvoke <com.csipsimple.ui.warnings.WarningUtils: java.lang.String getIgnoreKey(java.lang.String)>($r3) in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void onClick(android.view.View)> ==> <com.csipsimple.ui.warnings.WarningUtils: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>($r2, $r3, 1) in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void onClick(android.view.View)> ==> <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.ui.warnings.WarningUtils: java.lang.String getIgnoreKey(java.lang.String)>($r3) in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void onClick(android.view.View)> ==> <com.csipsimple.ui.warnings.WarningUtils: java.lang.String getIgnoreKey(java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>($r2, $r3, 1) in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void onClick(android.view.View)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
CLINIT edge: r1 = <com.csipsimple.ui.warnings.WarningUtils: java.lang.String WARNING_VPN_ICS> in <com.csipsimple.ui.warnings.WarningVpnIcs: java.lang.String getWarningKey()> ==> <com.csipsimple.ui.warnings.WarningUtils: void <clinit>()>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: java.lang.String getWarningKey()>() in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void onClick(android.view.View)> ==> <com.csipsimple.ui.warnings.WarningVpnIcs: java.lang.String getWarningKey()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningVpnIcs: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, null, 0) in <com.csipsimple.ui.warnings.WarningVpnIcs: void <init>(android.content.Context)> ==> <com.csipsimple.ui.warnings.WarningVpnIcs: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0) in <com.csipsimple.ui.warnings.WarningVpnIcs: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: int getLayout()>() in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.warnings.WarningVpnIcs: int getLayout()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void bindView()>() in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.warnings.WarningVpnIcs: void bindView()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void bindView()>() in <com.csipsimple.ui.warnings.WarningVpnIcs: void bindView()> ==> <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void bindView()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.warnings.WarningPrivilegedIntent: void <init>(android.content.Context)>(null) in <dummyMainClass: com.csipsimple.ui.warnings.WarningFragment dummyMainMethod_com_csipsimple_ui_warnings_WarningFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.warnings.WarningPrivilegedIntent: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.ui.warnings.WarningPrivilegedIntent: void onClick(android.view.View)>(null) in <dummyMainClass: com.csipsimple.ui.warnings.WarningFragment dummyMainMethod_com_csipsimple_ui_warnings_WarningFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.warnings.WarningPrivilegedIntent: void onClick(android.view.View)>
CLINIT edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>($r2, "integrate_tel_privileged", 1) in <com.csipsimple.ui.warnings.WarningPrivilegedIntent: void onClick(android.view.View)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>($r2, "integrate_with_native_dialer", 0) in <com.csipsimple.ui.warnings.WarningPrivilegedIntent: void onClick(android.view.View)> ==> <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void onClick(android.view.View)>($r1) in <com.csipsimple.ui.warnings.WarningPrivilegedIntent: void onClick(android.view.View)> ==> <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void onClick(android.view.View)>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.csipsimple.ui.warnings.WarningPrivilegedIntent: java.lang.String getWarningKey()>() in <com.csipsimple.ui.warnings.WarningPrivilegedIntent: void onClick(android.view.View)> ==> <com.csipsimple.ui.warnings.WarningPrivilegedIntent: java.lang.String getWarningKey()>
CLINIT edge: r1 = <com.csipsimple.ui.warnings.WarningUtils: java.lang.String WARNING_PRIVILEGED_INTENT> in <com.csipsimple.ui.warnings.WarningPrivilegedIntent: java.lang.String getWarningKey()> ==> <com.csipsimple.ui.warnings.WarningUtils: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningPrivilegedIntent: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, null, 0) in <com.csipsimple.ui.warnings.WarningPrivilegedIntent: void <init>(android.content.Context)> ==> <com.csipsimple.ui.warnings.WarningPrivilegedIntent: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0) in <com.csipsimple.ui.warnings.WarningPrivilegedIntent: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: int getLayout()>() in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.warnings.WarningPrivilegedIntent: int getLayout()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void bindView()>() in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.warnings.WarningPrivilegedIntent: void bindView()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void bindView()>() in <com.csipsimple.ui.warnings.WarningPrivilegedIntent: void bindView()> ==> <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void bindView()>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: java.lang.String getWarningKey()>() in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void onClick(android.view.View)> ==> <com.csipsimple.ui.warnings.WarningPrivilegedIntent: java.lang.String getWarningKey()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.warnings.WarningNoStun: void <init>(android.content.Context)>(null) in <dummyMainClass: com.csipsimple.ui.warnings.WarningFragment dummyMainMethod_com_csipsimple_ui_warnings_WarningFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.warnings.WarningNoStun: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.warnings.WarningNoStun: void onClick(android.view.View)>(null) in <dummyMainClass: com.csipsimple.ui.warnings.WarningFragment dummyMainMethod_com_csipsimple_ui_warnings_WarningFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.warnings.WarningNoStun: void onClick(android.view.View)>
CLINIT edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>($r2, "enable_stun", 1) in <com.csipsimple.ui.warnings.WarningNoStun: void onClick(android.view.View)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>($r2, "enable_stun", 1) in <com.csipsimple.ui.warnings.WarningNoStun: void onClick(android.view.View)> ==> <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void onClick(android.view.View)>($r1) in <com.csipsimple.ui.warnings.WarningNoStun: void onClick(android.view.View)> ==> <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void onClick(android.view.View)>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.csipsimple.ui.warnings.WarningNoStun: java.lang.String getWarningKey()>() in <com.csipsimple.ui.warnings.WarningNoStun: void onClick(android.view.View)> ==> <com.csipsimple.ui.warnings.WarningNoStun: java.lang.String getWarningKey()>
CLINIT edge: r1 = <com.csipsimple.ui.warnings.WarningUtils: java.lang.String WARNING_NO_STUN> in <com.csipsimple.ui.warnings.WarningNoStun: java.lang.String getWarningKey()> ==> <com.csipsimple.ui.warnings.WarningUtils: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningNoStun: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.csipsimple.ui.warnings.WarningNoStun: void <init>(android.content.Context)> ==> <com.csipsimple.ui.warnings.WarningNoStun: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningNoStun: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0) in <com.csipsimple.ui.warnings.WarningNoStun: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.warnings.WarningNoStun: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0) in <com.csipsimple.ui.warnings.WarningNoStun: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: int getLayout()>() in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.warnings.WarningNoStun: int getLayout()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void bindView()>() in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.warnings.WarningNoStun: void bindView()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void bindView()>() in <com.csipsimple.ui.warnings.WarningNoStun: void bindView()> ==> <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void bindView()>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: java.lang.String getWarningKey()>() in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void onClick(android.view.View)> ==> <com.csipsimple.ui.warnings.WarningNoStun: java.lang.String getWarningKey()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.warnings.WarningFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.warnings.WarningFragment dummyMainMethod_com_csipsimple_ui_warnings_WarningFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.warnings.WarningFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.warnings.WarningFragment dummyMainMethod_com_csipsimple_ui_warnings_WarningFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.csipsimple.ui.warnings.WarningFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>(null, null, null) in <dummyMainClass: com.csipsimple.ui.warnings.WarningFragment dummyMainMethod_com_csipsimple_ui_warnings_WarningFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.warnings.WarningFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: void onSaveInstanceState(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.warnings.WarningFragment dummyMainMethod_com_csipsimple_ui_warnings_WarningFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void onSaveInstanceState(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.warnings.WarningFragment dummyMainMethod_com_csipsimple_ui_warnings_WarningFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void onDetach()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningFragment: void bindView()>() in <com.csipsimple.ui.warnings.WarningFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.warnings.WarningFragment: void bindView()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("WarningFragment", $r7) in <com.csipsimple.ui.warnings.WarningFragment: void bindView()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: $r9 = staticinvoke <com.csipsimple.ui.warnings.WarningUtils: com.csipsimple.ui.warnings.WarningUtils$WarningBlockView getViewForWarning(android.content.Context,java.lang.String)>($r8, r5) in <com.csipsimple.ui.warnings.WarningFragment: void bindView()> ==> <com.csipsimple.ui.warnings.WarningUtils: com.csipsimple.ui.warnings.WarningUtils$WarningBlockView getViewForWarning(android.content.Context,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("WarningFragment", $r7) in <com.csipsimple.ui.warnings.WarningFragment: void bindView()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: $r9 = staticinvoke <com.csipsimple.ui.warnings.WarningUtils: com.csipsimple.ui.warnings.WarningUtils$WarningBlockView getViewForWarning(android.content.Context,java.lang.String)>($r8, r5) in <com.csipsimple.ui.warnings.WarningFragment: void bindView()> ==> <com.csipsimple.ui.warnings.WarningUtils: void <clinit>()>
CLINIT edge: $r2 = <com.csipsimple.ui.warnings.WarningUtils: java.lang.String WARNING_NO_STUN> in <com.csipsimple.ui.warnings.WarningUtils: com.csipsimple.ui.warnings.WarningUtils$WarningBlockView getViewForWarning(android.content.Context,java.lang.String)> ==> <com.csipsimple.ui.warnings.WarningUtils: void <clinit>()>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void setOnWarnChangedListener(com.csipsimple.ui.warnings.WarningUtils$OnWarningChanged)>(r0) in <com.csipsimple.ui.warnings.WarningFragment: void bindView()> ==> <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void setOnWarnChangedListener(com.csipsimple.ui.warnings.WarningUtils$OnWarningChanged)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.warnings.WarningSDCard: void <init>(android.content.Context)>($r0) in <com.csipsimple.ui.warnings.WarningUtils: com.csipsimple.ui.warnings.WarningUtils$WarningBlockView getViewForWarning(android.content.Context,java.lang.String)> ==> <com.csipsimple.ui.warnings.WarningSDCard: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningSDCard: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.csipsimple.ui.warnings.WarningSDCard: void <init>(android.content.Context)> ==> <com.csipsimple.ui.warnings.WarningSDCard: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningSDCard: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0) in <com.csipsimple.ui.warnings.WarningSDCard: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.warnings.WarningSDCard: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0) in <com.csipsimple.ui.warnings.WarningSDCard: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.ui.warnings.WarningPrivilegedIntent: void <init>(android.content.Context)>($r0) in <com.csipsimple.ui.warnings.WarningUtils: com.csipsimple.ui.warnings.WarningUtils$WarningBlockView getViewForWarning(android.content.Context,java.lang.String)> ==> <com.csipsimple.ui.warnings.WarningPrivilegedIntent: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.warnings.WarningVpnIcs: void <init>(android.content.Context)>($r0) in <com.csipsimple.ui.warnings.WarningUtils: com.csipsimple.ui.warnings.WarningUtils$WarningBlockView getViewForWarning(android.content.Context,java.lang.String)> ==> <com.csipsimple.ui.warnings.WarningVpnIcs: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.warnings.WarningNoStun: void <init>(android.content.Context)>($r0) in <com.csipsimple.ui.warnings.WarningUtils: com.csipsimple.ui.warnings.WarningUtils$WarningBlockView getViewForWarning(android.content.Context,java.lang.String)> ==> <com.csipsimple.ui.warnings.WarningNoStun: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragment: void <init>()>() in <com.csipsimple.ui.warnings.WarningFragment: void <init>()> ==> <com.actionbarsherlock.app.SherlockFragment: void <init>()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: int getLayout()>() in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.warnings.WarningSDCard: int getLayout()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void bindView()>() in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.warnings.WarningSDCard: void bindView()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void bindView()>() in <com.csipsimple.ui.warnings.WarningSDCard: void bindView()> ==> <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void bindView()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.prefs.CodecsFragment$4: void <init>(com.csipsimple.ui.prefs.CodecsFragment,java.util.Map,short)>($r0, null, 0) in <dummyMainClass: com.csipsimple.ui.prefs.CodecsFragment dummyMainMethod_com_csipsimple_ui_prefs_CodecsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.prefs.CodecsFragment$4: void <init>(com.csipsimple.ui.prefs.CodecsFragment,java.util.Map,short)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.prefs.CodecsFragment$4: void onClick(android.content.DialogInterface,int)>(null, 0) in <dummyMainClass: com.csipsimple.ui.prefs.CodecsFragment dummyMainMethod_com_csipsimple_ui_prefs_CodecsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.prefs.CodecsFragment$4: void onClick(android.content.DialogInterface,int)>
CLINIT edge: staticinvoke <com.csipsimple.ui.prefs.CodecsFragment: void access$3(com.csipsimple.ui.prefs.CodecsFragment,java.util.Map,short)>($r2, $r3, $s1) in <com.csipsimple.ui.prefs.CodecsFragment$4: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.ui.prefs.CodecsFragment: void access$3(com.csipsimple.ui.prefs.CodecsFragment,java.util.Map,short)>($r2, $r3, $s1) in <com.csipsimple.ui.prefs.CodecsFragment$4: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void access$3(com.csipsimple.ui.prefs.CodecsFragment,java.util.Map,short)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.prefs.CodecsFragment$4: void <init>(com.csipsimple.ui.prefs.CodecsFragment,java.util.Map,short)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.prefs.CodecsFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.prefs.CodecsFragment dummyMainMethod_com_csipsimple_ui_prefs_CodecsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.prefs.CodecsFragment dummyMainMethod_com_csipsimple_ui_prefs_CodecsFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.csipsimple.ui.prefs.CodecsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>(null, null, null) in <dummyMainClass: com.csipsimple.ui.prefs.CodecsFragment dummyMainMethod_com_csipsimple_ui_prefs_CodecsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.prefs.CodecsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.CodecsFragment: void onActivityCreated(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.CodecsFragment dummyMainMethod_com_csipsimple_ui_prefs_CodecsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void onActivityCreated(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.CodecsFragment: void onCheckedChanged(android.widget.CompoundButton,boolean)>(null, 0) in <dummyMainClass: com.csipsimple.ui.prefs.CodecsFragment dummyMainMethod_com_csipsimple_ui_prefs_CodecsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void onCheckedChanged(android.widget.CompoundButton,boolean)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<com.csipsimple.ui.prefs.CodecsFragment: boolean onContextItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.CodecsFragment dummyMainMethod_com_csipsimple_ui_prefs_CodecsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.prefs.CodecsFragment: boolean onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.CodecsFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, null, null) in <dummyMainClass: com.csipsimple.ui.prefs.CodecsFragment dummyMainMethod_com_csipsimple_ui_prefs_CodecsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.prefs.CodecsFragment dummyMainMethod_com_csipsimple_ui_prefs_CodecsFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onDetach()>
CLINIT edge: $r5 = new com.csipsimple.utils.PreferencesWrapper in <com.csipsimple.ui.prefs.CodecsFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
STATIC edge: $r7 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>($r6, "codecs_per_bandwidth") in <com.csipsimple.ui.prefs.CodecsFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>
CLINIT edge: $r3 = newarray (java.lang.String)[3] in <com.csipsimple.ui.prefs.CodecsFragment: void onActivityCreated(android.os.Bundle)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r7 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>($r6, "codecs_per_bandwidth") in <com.csipsimple.ui.prefs.CodecsFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CodecsFragment", "bad menuInfo", r2) in <com.csipsimple.ui.prefs.CodecsFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CodecsFragment", "bad menuInfo", r2) in <com.csipsimple.ui.prefs.CodecsFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CodecsFragment", "bad menuInfo", r4) in <com.csipsimple.ui.prefs.CodecsFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CodecsFragment", "bad menuInfo", r4) in <com.csipsimple.ui.prefs.CodecsFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.CodecsFragment: void userActivateCodec(java.util.Map,boolean)>(r7, z0) in <com.csipsimple.ui.prefs.CodecsFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void userActivateCodec(java.util.Map,boolean)>
CLINIT edge: $r7 = <com.csipsimple.ui.prefs.CodecsFragment: java.util.Map NON_FREE_CODECS> in <com.csipsimple.ui.prefs.CodecsFragment: void userActivateCodec(java.util.Map,boolean)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void <clinit>()>
STATIC edge: $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10) in <com.csipsimple.ui.prefs.CodecsFragment: void userActivateCodec(java.util.Map,boolean)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
CLINIT edge: $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10) in <com.csipsimple.ui.prefs.CodecsFragment: void userActivateCodec(java.util.Map,boolean)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r13.<com.csipsimple.ui.prefs.CodecsFragment$4: void <init>(com.csipsimple.ui.prefs.CodecsFragment,java.util.Map,short)>(r0, r1, b0) in <com.csipsimple.ui.prefs.CodecsFragment: void userActivateCodec(java.util.Map,boolean)> ==> <com.csipsimple.ui.prefs.CodecsFragment$4: void <init>(com.csipsimple.ui.prefs.CodecsFragment,java.util.Map,short)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.CodecsFragment: void setCodecActivated(java.util.Map,short)>(r1, b0) in <com.csipsimple.ui.prefs.CodecsFragment: void userActivateCodec(java.util.Map,boolean)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void setCodecActivated(java.util.Map,short)>
CLINIT edge: $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0) in <com.csipsimple.ui.prefs.CodecsFragment: void setCodecActivated(java.util.Map,short)> ==> <java.lang.Short: void <clinit>()>
STATIC edge: $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s0) in <com.csipsimple.ui.prefs.CodecsFragment: void setCodecActivated(java.util.Map,short)> ==> <java.lang.Short: java.lang.Short valueOf(short)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: java.lang.Short valueOf(short)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.CodecsFragment: void setCodecPriority(java.lang.String,short)>($r3, $s0) in <com.csipsimple.ui.prefs.CodecsFragment: void setCodecActivated(java.util.Map,short)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void setCodecPriority(java.lang.String,short)>
CLINIT edge: $r4 = staticinvoke <java.lang.Short: java.lang.String toString(short)>($s0) in <com.csipsimple.ui.prefs.CodecsFragment: void setCodecPriority(java.lang.String,short)> ==> <java.lang.Short: void <clinit>()>
STATIC edge: $r3 = staticinvoke <java.lang.Short: java.lang.String toString(short)>($s0) in <com.csipsimple.ui.prefs.CodecsFragment: void setCodecPriority(java.lang.String,short)> ==> <java.lang.Short: java.lang.String toString(short)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Short: java.lang.String toString(short)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.CodecsFragment: void userActivateCodec(java.util.Map,boolean)>(r4, $z0) in <com.csipsimple.ui.prefs.CodecsFragment: void onCheckedChanged(android.widget.CompoundButton,boolean)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void userActivateCodec(java.util.Map,boolean)>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.ui.prefs.CodecsFragment$2: void <init>(com.csipsimple.ui.prefs.CodecsFragment)>(r0) in <com.csipsimple.ui.prefs.CodecsFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.CodecsFragment$2: void <init>(com.csipsimple.ui.prefs.CodecsFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.prefs.CodecsFragment$2: void <init>(com.csipsimple.ui.prefs.CodecsFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>($r6) in <com.csipsimple.ui.prefs.CodecsFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.CodecsFragment: void initDatas()>() in <com.csipsimple.ui.prefs.CodecsFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void initDatas()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CodecsFragment", r2) in <com.csipsimple.ui.prefs.CodecsFragment: void initDatas()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r15 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s4) in <com.csipsimple.ui.prefs.CodecsFragment: void initDatas()> ==> <java.lang.Short: java.lang.Short valueOf(short)>
STATIC edge: $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0) in <com.csipsimple.ui.prefs.CodecsFragment: void initDatas()> ==> <java.lang.Integer: java.lang.String toString(int)>
STATIC edge: $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r12) in <com.csipsimple.ui.prefs.CodecsFragment: void initDatas()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
CLINIT edge: $r15 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s4) in <com.csipsimple.ui.prefs.CodecsFragment: void initDatas()> ==> <java.lang.Short: void <clinit>()>
CLINIT edge: $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0) in <com.csipsimple.ui.prefs.CodecsFragment: void initDatas()> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r12) in <com.csipsimple.ui.prefs.CodecsFragment: void initDatas()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CodecsFragment", $r12) in <com.csipsimple.ui.prefs.CodecsFragment: void initDatas()> ==> <com.csipsimple.utils.Log: void <clinit>()>
VIRTUAL edge: $r9 = virtualinvoke $r8.<com.csipsimple.utils.PreferencesWrapper: java.lang.String[] getCodecList()>() in <com.csipsimple.ui.prefs.CodecsFragment: void initDatas()> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.String[] getCodecList()>
VIRTUAL edge: $r9 = virtualinvoke $r8.<com.csipsimple.utils.PreferencesWrapper: java.lang.String[] getVideoCodecList()>() in <com.csipsimple.ui.prefs.CodecsFragment: void initDatas()> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.String[] getVideoCodecList()>
VIRTUAL edge: $s4 = virtualinvoke $r8.<com.csipsimple.utils.PreferencesWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)>(r2, $r12, $r14) in <com.csipsimple.ui.prefs.CodecsFragment: void initDatas()> ==> <com.csipsimple.utils.PreferencesWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
CLINIT edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)>($r1, $r2) in <com.csipsimple.utils.PreferencesWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <com.csipsimple.utils.PreferencesWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("PreferencesWrapper", "Invalid codec priority", r4) in <com.csipsimple.utils.PreferencesWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)>($r1, $r2) in <com.csipsimple.utils.PreferencesWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <com.csipsimple.utils.PreferencesWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("PreferencesWrapper", "Invalid codec priority", r4) in <com.csipsimple.utils.PreferencesWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
SPECIAL edge: specialinvoke $r7.<com.csipsimple.ui.prefs.CodecsFragment$3: void <init>(com.csipsimple.ui.prefs.CodecsFragment)>(r0) in <com.csipsimple.ui.prefs.CodecsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.prefs.CodecsFragment$3: void <init>(com.csipsimple.ui.prefs.CodecsFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.prefs.CodecsFragment$3: void <init>(com.csipsimple.ui.prefs.CodecsFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.ui.prefs.CodecsFragment$1: void <init>(com.csipsimple.ui.prefs.CodecsFragment)>(r0) in <com.csipsimple.ui.prefs.CodecsFragment: void <init>()> ==> <com.csipsimple.ui.prefs.CodecsFragment$1: void <init>(com.csipsimple.ui.prefs.CodecsFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.prefs.CodecsFragment$1: void <init>(com.csipsimple.ui.prefs.CodecsFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockListFragment: void <init>()>() in <com.csipsimple.ui.prefs.CodecsFragment: void <init>()> ==> <com.actionbarsherlock.app.SherlockListFragment: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.prefs.AudioTester: void <init>()>() in <dummyMainClass: com.csipsimple.ui.prefs.AudioTester dummyMainMethod_com_csipsimple_ui_prefs_AudioTester(android.content.Intent)> ==> <com.csipsimple.ui.prefs.AudioTester: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.AudioTester: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.AudioTester dummyMainMethod_com_csipsimple_ui_prefs_AudioTester(android.content.Intent)> ==> <com.csipsimple.ui.prefs.AudioTester: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.AudioTester: void onResume()>() in <dummyMainClass: com.csipsimple.ui.prefs.AudioTester dummyMainMethod_com_csipsimple_ui_prefs_AudioTester(android.content.Intent)> ==> <com.csipsimple.ui.prefs.AudioTester: void onResume()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.AudioTester: void onPause()>() in <dummyMainClass: com.csipsimple.ui.prefs.AudioTester dummyMainMethod_com_csipsimple_ui_prefs_AudioTester(android.content.Intent)> ==> <com.csipsimple.ui.prefs.AudioTester: void onPause()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.prefs.AudioTester$MonitorThread: void <init>(com.csipsimple.ui.prefs.AudioTester,com.csipsimple.ui.prefs.AudioTester$MonitorThread)>(r0, null) in <com.csipsimple.ui.prefs.AudioTester: void onResume()> ==> <com.csipsimple.ui.prefs.AudioTester$MonitorThread: void <init>(com.csipsimple.ui.prefs.AudioTester,com.csipsimple.ui.prefs.AudioTester$MonitorThread)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.ui.prefs.AudioTester$MonitorThread: void start()>() in <com.csipsimple.ui.prefs.AudioTester: void onResume()> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke $r3.<com.csipsimple.ui.prefs.AudioTester$MonitorThread: void start()>() in <com.csipsimple.ui.prefs.AudioTester: void onResume()> ==> <com.csipsimple.ui.prefs.AudioTester$MonitorThread: void run()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.ui.prefs.AudioTester: com.csipsimple.api.ISipService access$1(com.csipsimple.ui.prefs.AudioTester)>($r1) in <com.csipsimple.ui.prefs.AudioTester$MonitorThread: void run()> ==> <com.csipsimple.ui.prefs.AudioTester: com.csipsimple.api.ISipService access$1(com.csipsimple.ui.prefs.AudioTester)>
STATIC edge: staticinvoke <com.csipsimple.ui.prefs.AudioTester$MonitorThread: void sleep(long)>(100L) in <com.csipsimple.ui.prefs.AudioTester$MonitorThread: void run()> ==> <java.lang.Thread: void sleep(long)>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.prefs.AudioTester$MonitorThread$UpdateConfLevelRunnable: void <init>(com.csipsimple.ui.prefs.AudioTester$MonitorThread,int,int)>(r0, $i2, $i3) in <com.csipsimple.ui.prefs.AudioTester$MonitorThread: void run()> ==> <com.csipsimple.ui.prefs.AudioTester$MonitorThread$UpdateConfLevelRunnable: void <init>(com.csipsimple.ui.prefs.AudioTester$MonitorThread,int,int)>
EXECUTOR edge: virtualinvoke $r1.<com.csipsimple.ui.prefs.AudioTester: void runOnUiThread(java.lang.Runnable)>($r3) in <com.csipsimple.ui.prefs.AudioTester$MonitorThread: void run()> ==> <com.csipsimple.ui.prefs.AudioTester$MonitorThread$UpdateConfLevelRunnable: void run()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.ui.prefs.AudioTester$MonitorThread: com.csipsimple.ui.prefs.AudioTester access$1(com.csipsimple.ui.prefs.AudioTester$MonitorThread)>($r1) in <com.csipsimple.ui.prefs.AudioTester$MonitorThread$UpdateConfLevelRunnable: void run()> ==> <com.csipsimple.ui.prefs.AudioTester$MonitorThread: com.csipsimple.ui.prefs.AudioTester access$1(com.csipsimple.ui.prefs.AudioTester$MonitorThread)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.ui.prefs.AudioTester: android.widget.ProgressBar access$4(com.csipsimple.ui.prefs.AudioTester)>($r2) in <com.csipsimple.ui.prefs.AudioTester$MonitorThread$UpdateConfLevelRunnable: void run()> ==> <com.csipsimple.ui.prefs.AudioTester: android.widget.ProgressBar access$4(com.csipsimple.ui.prefs.AudioTester)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.ui.prefs.AudioTester: android.widget.ProgressBar access$3(com.csipsimple.ui.prefs.AudioTester)>($r2) in <com.csipsimple.ui.prefs.AudioTester$MonitorThread$UpdateConfLevelRunnable: void run()> ==> <com.csipsimple.ui.prefs.AudioTester: android.widget.ProgressBar access$3(com.csipsimple.ui.prefs.AudioTester)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.prefs.AudioTester$MonitorThread$UpdateConfLevelRunnable: void <init>(com.csipsimple.ui.prefs.AudioTester$MonitorThread,int,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void run()>() in <com.csipsimple.ui.prefs.AudioTester$MonitorThread: void run()> ==> <java.lang.Thread: void run()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.AudioTester$MonitorThread: void <init>(com.csipsimple.ui.prefs.AudioTester)>($r1) in <com.csipsimple.ui.prefs.AudioTester$MonitorThread: void <init>(com.csipsimple.ui.prefs.AudioTester,com.csipsimple.ui.prefs.AudioTester$MonitorThread)> ==> <com.csipsimple.ui.prefs.AudioTester$MonitorThread: void <init>(com.csipsimple.ui.prefs.AudioTester)>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.csipsimple.ui.prefs.AudioTester$MonitorThread: void <init>(com.csipsimple.ui.prefs.AudioTester)> ==> <java.lang.Thread: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.AudioTester: void updateStatusDisplay()>() in <com.csipsimple.ui.prefs.AudioTester: void onResume()> ==> <com.csipsimple.ui.prefs.AudioTester: void updateStatusDisplay()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.ui.prefs.AudioTester$1: void <init>(com.csipsimple.ui.prefs.AudioTester)>(r0) in <com.csipsimple.ui.prefs.AudioTester: void <init>()> ==> <com.csipsimple.ui.prefs.AudioTester$1: void <init>(com.csipsimple.ui.prefs.AudioTester)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.prefs.AudioTester$1: void <init>(com.csipsimple.ui.prefs.AudioTester)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.prefs.hc.MainPrefs: void <init>()>() in <dummyMainClass: com.csipsimple.ui.prefs.hc.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_hc_MainPrefs(android.content.Intent)> ==> <com.csipsimple.ui.prefs.hc.MainPrefs: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.prefs.hc.MainPrefs: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.hc.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_hc_MainPrefs(android.content.Intent)> ==> <com.csipsimple.ui.prefs.hc.MainPrefs: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.prefs.hc.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_hc_MainPrefs(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.ui.prefs.hc.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_hc_MainPrefs(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onPause()>() in <dummyMainClass: com.csipsimple.ui.prefs.hc.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_hc_MainPrefs(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onStop()>() in <dummyMainClass: com.csipsimple.ui.prefs.hc.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_hc_MainPrefs(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onDestroy()>() in <dummyMainClass: com.csipsimple.ui.prefs.hc.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_hc_MainPrefs(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onDestroy()>
CLINIT edge: $r2 = new com.csipsimple.utils.PreferencesWrapper in <com.csipsimple.ui.prefs.hc.MainPrefs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>(r0) in <com.csipsimple.ui.prefs.hc.MainPrefs: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void <init>()>() in <com.csipsimple.ui.prefs.hc.MainPrefs: void <init>()> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void <init>()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.calllog.CallLogDetailsFragment$2: void <init>(com.csipsimple.ui.calllog.CallLogDetailsFragment,android.content.Intent)>($r0, null) in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment$2: void <init>(com.csipsimple.ui.calllog.CallLogDetailsFragment,android.content.Intent)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.ui.calllog.CallLogDetailsFragment$2: void onClick(android.view.View)>(null) in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment$2: void onClick(android.view.View)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.CallLogDetailsFragment$2: void <init>(com.csipsimple.ui.calllog.CallLogDetailsFragment,android.content.Intent)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.calllog.CallLogDetailsFragment$1: void <init>(com.csipsimple.ui.calllog.CallLogDetailsFragment)>($r0) in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment$1: void <init>(com.csipsimple.ui.calllog.CallLogDetailsFragment)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.calllog.CallLogDetailsFragment$1: void onClick(android.view.View)>(null) in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment$1: void onClick(android.view.View)>
STATIC edge: $r8 = staticinvoke <com.csipsimple.api.SipUri: android.net.Uri forgeSipUri(java.lang.String,java.lang.String)>("csip", r4) in <com.csipsimple.ui.calllog.CallLogDetailsFragment$1: void onClick(android.view.View)> ==> <com.csipsimple.api.SipUri: android.net.Uri forgeSipUri(java.lang.String,java.lang.String)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.ui.calllog.CallLogDetailsFragment: com.csipsimple.widgets.AccountChooserButton access$0(com.csipsimple.ui.calllog.CallLogDetailsFragment)>($r5) in <com.csipsimple.ui.calllog.CallLogDetailsFragment$1: void onClick(android.view.View)> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: com.csipsimple.widgets.AccountChooserButton access$0(com.csipsimple.ui.calllog.CallLogDetailsFragment)>
CLINIT edge: $r8 = staticinvoke <com.csipsimple.api.SipUri: android.net.Uri forgeSipUri(java.lang.String,java.lang.String)>("csip", r4) in <com.csipsimple.ui.calllog.CallLogDetailsFragment$1: void onClick(android.view.View)> ==> <com.csipsimple.api.SipUri: void <clinit>()>
CLINIT edge: $r6 = staticinvoke <com.csipsimple.ui.calllog.CallLogDetailsFragment: com.csipsimple.widgets.AccountChooserButton access$0(com.csipsimple.ui.calllog.CallLogDetailsFragment)>($r5) in <com.csipsimple.ui.calllog.CallLogDetailsFragment$1: void onClick(android.view.View)> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.calllog.CallLogDetailsFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.csipsimple.ui.calllog.CallLogDetailsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>(null, null, null) in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.calllog.CallLogDetailsFragment: void onResume()>() in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: void onResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: void onSaveInstanceState(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void onSaveInstanceState(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockFragment: void onDetach()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.ui.calllog.CallLogDetailsFragment: android.net.Uri[] getCallLogEntryUris()>() in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void onResume()> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: android.net.Uri[] getCallLogEntryUris()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])>($r1) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void onResume()> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])>
CLINIT edge: $r4 = <com.csipsimple.api.SipManager: android.net.Uri CALLLOG_ID_URI_BASE> in <com.csipsimple.ui.calllog.CallLogDetailsFragment: android.net.Uri[] getCallLogEntryUris()> ==> <com.csipsimple.api.SipManager: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("CallLogDetailsFragment", "No calls logs as parameters") in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: $r22 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
STATIC edge: $r10 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>($r10, 0) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("CallLogDetailsFragment", "No calls logs as parameters") in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
CLINIT edge: $r22 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <com.csipsimple.utils.contacts.ContactsWrapper: void <clinit>()>
CLINIT edge: $r10 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>($r10, 0) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <com.csipsimple.api.SipUri: void <clinit>()>
CLINIT edge: $r0 = <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper instance> in <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()> ==> <com.csipsimple.utils.contacts.ContactsWrapper: void <clinit>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(5) in <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
CLINIT edge: $r3 = new com.csipsimple.utils.contacts.ContactsUtils3 in <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()> ==> <com.csipsimple.utils.contacts.ContactsUtils3: void <clinit>()>
CLINIT edge: $r2 = new com.csipsimple.utils.contacts.ContactsUtils5 in <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()> ==> <com.csipsimple.utils.contacts.ContactsUtils5: void <clinit>()>
CLINIT edge: $r2 = <com.csipsimple.api.SipUri: java.util.regex.Pattern SIP_CONTACT_PATTERN> in <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)> ==> <com.csipsimple.api.SipUri: void <clinit>()>
CLINIT edge: $r0 = newarray (java.lang.String)[2] in <com.csipsimple.utils.contacts.ContactsUtils3: void <clinit>()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: <com.csipsimple.utils.contacts.ContactsUtils3: java.lang.String[] PROJECTION_CONTACTS> = $r0 in <com.csipsimple.utils.contacts.ContactsUtils3: void <clinit>()> ==> <com.csipsimple.utils.contacts.ContactsWrapper: void <clinit>()>
CLINIT edge: $r0 = newarray (java.lang.String)[6] in <com.csipsimple.utils.contacts.ContactsUtils5: void <clinit>()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: <com.csipsimple.utils.contacts.ContactsUtils5: java.lang.String[] PROJECTION_PHONE> = $r0 in <com.csipsimple.utils.contacts.ContactsUtils5: void <clinit>()> ==> <com.csipsimple.utils.contacts.ContactsWrapper: void <clinit>()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.utils.contacts.ContactsUtils3: void <init>()>() in <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()> ==> <com.csipsimple.utils.contacts.ContactsUtils3: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.contacts.ContactsWrapper: void <init>()>() in <com.csipsimple.utils.contacts.ContactsUtils3: void <init>()> ==> <com.csipsimple.utils.contacts.ContactsWrapper: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.contacts.ContactsWrapper: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.contacts.ContactsUtils5: void <init>()>() in <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()> ==> <com.csipsimple.utils.contacts.ContactsUtils5: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.contacts.ContactsWrapper: void <init>()>() in <com.csipsimple.utils.contacts.ContactsUtils5: void <init>()> ==> <com.csipsimple.utils.contacts.ContactsWrapper: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.utils.contacts.ContactsUtils14: void <init>()>() in <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()> ==> <com.csipsimple.utils.contacts.ContactsUtils14: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.contacts.ContactsUtils5: void <init>()>() in <com.csipsimple.utils.contacts.ContactsUtils14: void <init>()> ==> <com.csipsimple.utils.contacts.ContactsUtils5: void <init>()>
VIRTUAL edge: r9 = virtualinvoke $r22.<com.csipsimple.utils.contacts.ContactsWrapper: android.content.Intent getAddContactIntent(java.lang.String,java.lang.String)>($r10, $r23) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <com.csipsimple.utils.contacts.ContactsUtils5: android.content.Intent getAddContactIntent(java.lang.String,java.lang.String)>
VIRTUAL edge: r9 = virtualinvoke $r22.<com.csipsimple.utils.contacts.ContactsWrapper: android.content.Intent getAddContactIntent(java.lang.String,java.lang.String)>($r10, $r23) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <com.csipsimple.utils.contacts.ContactsUtils3: android.content.Intent getAddContactIntent(java.lang.String,java.lang.String)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>($r2, 0) in <com.csipsimple.utils.contacts.ContactsUtils5: android.content.Intent getAddContactIntent(java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>
STATIC edge: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) in <com.csipsimple.utils.contacts.ContactsUtils5: android.content.Intent getAddContactIntent(java.lang.String,java.lang.String)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: $r1 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>($r2, 0) in <com.csipsimple.utils.contacts.ContactsUtils5: android.content.Intent getAddContactIntent(java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipUri: void <clinit>()>
CLINIT edge: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) in <com.csipsimple.utils.contacts.ContactsUtils5: android.content.Intent getAddContactIntent(java.lang.String,java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
SPECIAL edge: specialinvoke $r24.<com.csipsimple.ui.calllog.CallLogDetailsFragment$2: void <init>(com.csipsimple.ui.calllog.CallLogDetailsFragment,android.content.Intent)>(r0, r9) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment$2: void <init>(com.csipsimple.ui.calllog.CallLogDetailsFragment,android.content.Intent)>
SPECIAL edge: specialinvoke $r17.<com.csipsimple.ui.calllog.CallDetailHistoryAdapter: void <init>(android.content.Context,android.view.LayoutInflater,com.csipsimple.ui.calllog.PhoneCallDetails[])>($r18, $r19, r3) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <com.csipsimple.ui.calllog.CallDetailHistoryAdapter: void <init>(android.content.Context,android.view.LayoutInflater,com.csipsimple.ui.calllog.PhoneCallDetails[])>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogDetailsFragment: void configureCallButton(java.lang.String,java.lang.CharSequence,java.lang.CharSequence)>($r10, $r8, $r15) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: void configureCallButton(java.lang.String,java.lang.CharSequence,java.lang.CharSequence)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogDetailsFragment: void loadContactPhotos(android.net.Uri,android.net.Uri)>(r5, r2) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: void loadContactPhotos(android.net.Uri,android.net.Uri)>
SPECIAL edge: r4 = specialinvoke r0.<com.csipsimple.ui.calllog.CallLogDetailsFragment: com.csipsimple.ui.calllog.PhoneCallDetails getPhoneCallDetailsForUri(android.net.Uri)>(r2) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: com.csipsimple.ui.calllog.PhoneCallDetails getPhoneCallDetailsForUri(android.net.Uri)>
STATIC edge: $r8 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>($r8, 0) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void configureCallButton(java.lang.String,java.lang.CharSequence,java.lang.CharSequence)> ==> <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>
CLINIT edge: $r8 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>($r8, 0) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void configureCallButton(java.lang.String,java.lang.CharSequence,java.lang.CharSequence)> ==> <com.csipsimple.api.SipUri: void <clinit>()>
CLINIT edge: r3 = new com.csipsimple.models.CallerInfo in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void loadContactPhotos(android.net.Uri,android.net.Uri)> ==> <com.csipsimple.models.CallerInfo: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>($r4, $r5, r3, 2130837665) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void loadContactPhotos(android.net.Uri,android.net.Uri)> ==> <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>
STATIC edge: staticinvoke <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,android.net.Uri,int)>($r4, $r5, $r1, 2130837665) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void loadContactPhotos(android.net.Uri,android.net.Uri)> ==> <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,android.net.Uri,int)>
CLINIT edge: r4 = <com.csipsimple.ui.calllog.CallLogDetailsFragment: java.lang.String[] CALL_LOG_PROJECTION> in <com.csipsimple.ui.calllog.CallLogDetailsFragment: com.csipsimple.ui.calllog.PhoneCallDetails getPhoneCallDetailsForUri(android.net.Uri)> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: void <clinit>()>
STATIC edge: $r12 = staticinvoke <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>($r2, $r8) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: com.csipsimple.ui.calllog.PhoneCallDetails getPhoneCallDetailsForUri(android.net.Uri)> ==> <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>
STATIC edge: $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: com.csipsimple.ui.calllog.PhoneCallDetails getPhoneCallDetailsForUri(android.net.Uri)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
CLINIT edge: $r12 = staticinvoke <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>($r2, $r8) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: com.csipsimple.ui.calllog.PhoneCallDetails getPhoneCallDetailsForUri(android.net.Uri)> ==> <com.csipsimple.models.CallerInfo: void <clinit>()>
CLINIT edge: $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: com.csipsimple.ui.calllog.PhoneCallDetails getPhoneCallDetailsForUri(android.net.Uri)> ==> <java.lang.Long: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(int,com.csipsimple.utils.ContactsAsyncHelper$OnImageLoadCompleteListener,java.lang.Object,android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>(-1, null, null, $r0, $r1, $r2, $i0) in <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)> ==> <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(int,com.csipsimple.utils.ContactsAsyncHelper$OnImageLoadCompleteListener,java.lang.Object,android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("ContactsAsyncHelper", "Update image view with contact async") in <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,android.net.Uri,int)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.ContactsAsyncHelper: void preloadImage(android.widget.ImageView,int,android.os.Message)>($r1, $i0, $r8) in <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,android.net.Uri,int)> ==> <com.csipsimple.utils.ContactsAsyncHelper: void preloadImage(android.widget.ImageView,int,android.os.Message)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.ContactsAsyncHelper: boolean isAlreadyProcessed(android.widget.ImageView,android.net.Uri)>($r1, $r2) in <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,android.net.Uri,int)> ==> <com.csipsimple.utils.ContactsAsyncHelper: boolean isAlreadyProcessed(android.widget.ImageView,android.net.Uri)>
STATIC edge: staticinvoke <com.csipsimple.utils.ContactsAsyncHelper: void defaultImage(android.widget.ImageView,int)>($r1, $i0) in <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,android.net.Uri,int)> ==> <com.csipsimple.utils.ContactsAsyncHelper: void defaultImage(android.widget.ImageView,int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("ContactsAsyncHelper", "Update image view with contact async") in <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,android.net.Uri,int)> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
CLINIT edge: $r2 = <com.csipsimple.models.CallerInfo: android.support.v4.util.LruCache callerCache> in <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)> ==> <com.csipsimple.models.CallerInfo: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.ContactsAsyncHelper: void defaultImage(android.widget.ImageView,int)>($r3, $i1) in <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(int,com.csipsimple.utils.ContactsAsyncHelper$OnImageLoadCompleteListener,java.lang.Object,android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)> ==> <com.csipsimple.utils.ContactsAsyncHelper: void defaultImage(android.widget.ImageView,int)>
STATIC edge: staticinvoke <com.csipsimple.utils.ContactsAsyncHelper: void preloadImage(android.widget.ImageView,int,android.os.Message)>($r3, $i1, $r11) in <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(int,com.csipsimple.utils.ContactsAsyncHelper$OnImageLoadCompleteListener,java.lang.Object,android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)> ==> <com.csipsimple.utils.ContactsAsyncHelper: void preloadImage(android.widget.ImageView,int,android.os.Message)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.ContactsAsyncHelper: boolean isAlreadyProcessed(android.widget.ImageView,android.net.Uri)>($r3, $r9) in <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(int,com.csipsimple.utils.ContactsAsyncHelper$OnImageLoadCompleteListener,java.lang.Object,android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)> ==> <com.csipsimple.utils.ContactsAsyncHelper: boolean isAlreadyProcessed(android.widget.ImageView,android.net.Uri)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.UriUtils: boolean areEqual(android.net.Uri,android.net.Uri)>($r1, $r4) in <com.csipsimple.utils.ContactsAsyncHelper: boolean isAlreadyProcessed(android.widget.ImageView,android.net.Uri)> ==> <com.csipsimple.utils.UriUtils: boolean areEqual(android.net.Uri,android.net.Uri)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("ContactsAsyncHelper", "No uri, just display placeholder.") in <com.csipsimple.utils.ContactsAsyncHelper: void defaultImage(android.widget.ImageView,int)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("ContactsAsyncHelper", "No uri, just display placeholder.") in <com.csipsimple.utils.ContactsAsyncHelper: void defaultImage(android.widget.ImageView,int)> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag: void <init>(com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag)>(null) in <com.csipsimple.utils.ContactsAsyncHelper: void defaultImage(android.widget.ImageView,int)> ==> <com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag: void <init>(com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag: void <init>()>() in <com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag: void <init>(com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag)> ==> <com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r6.<com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag: void <init>(com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag)>(null) in <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(int,com.csipsimple.utils.ContactsAsyncHelper$OnImageLoadCompleteListener,java.lang.Object,android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)> ==> <com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag: void <init>(com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag)>
SPECIAL edge: specialinvoke r5.<com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs: void <init>(com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs)>(null) in <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(int,com.csipsimple.utils.ContactsAsyncHelper$OnImageLoadCompleteListener,java.lang.Object,android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)> ==> <com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs: void <init>(com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs: void <init>()>() in <com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs: void <init>(com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs)> ==> <com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.utils.ContactsAsyncHelper: void <init>()>() in <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(int,com.csipsimple.utils.ContactsAsyncHelper$OnImageLoadCompleteListener,java.lang.Object,android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)> ==> <com.csipsimple.utils.ContactsAsyncHelper: void <init>()>
CLINIT edge: $r5 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.utils.ContactsAsyncHelper: void <init>()> ==> <com.csipsimple.utils.contacts.ContactsWrapper: void <clinit>()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.utils.ContactsAsyncHelper: void <init>()> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.utils.ContactsAsyncHelper$WorkerHandler: void <init>(com.csipsimple.utils.ContactsAsyncHelper,android.os.Looper)>(r0, $r4) in <com.csipsimple.utils.ContactsAsyncHelper: void <init>()> ==> <com.csipsimple.utils.ContactsAsyncHelper$WorkerHandler: void <init>(com.csipsimple.utils.ContactsAsyncHelper,android.os.Looper)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.ContactsAsyncHelper$1: void <init>(com.csipsimple.utils.ContactsAsyncHelper,int)>(r0, 5242880) in <com.csipsimple.utils.ContactsAsyncHelper: void <init>()> ==> <com.csipsimple.utils.ContactsAsyncHelper$1: void <init>(com.csipsimple.utils.ContactsAsyncHelper,int)>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.models.CallerInfo$CallerInfoLruCache: void <init>(android.content.Context)>($r0) in <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)> ==> <com.csipsimple.models.CallerInfo$CallerInfoLruCache: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r4.<com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag: void <init>(com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag)>(null) in <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,android.net.Uri,int)> ==> <com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag: void <init>(com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs: void <init>(com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs)>(null) in <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,android.net.Uri,int)> ==> <com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs: void <init>(com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.utils.ContactsAsyncHelper: void <init>()>() in <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,android.net.Uri,int)> ==> <com.csipsimple.utils.ContactsAsyncHelper: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.models.CallerInfo: void <init>()>() in <com.csipsimple.models.CallerInfo: void <clinit>()> ==> <com.csipsimple.models.CallerInfo: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.models.CallerInfo: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r17.<com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long,java.lang.Long,int,java.lang.String,java.lang.CharSequence,int,java.lang.CharSequence,android.net.Uri,android.net.Uri)>($r8, r13, $r18, $l0, $l1, $r10, $i4, $r11, r14, i5, r15, r16, $r1) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: com.csipsimple.ui.calllog.PhoneCallDetails getPhoneCallDetailsForUri(android.net.Uri)> ==> <com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long,java.lang.Long,int,java.lang.String,java.lang.CharSequence,int,java.lang.CharSequence,android.net.Uri,android.net.Uri)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long,java.lang.Long,int,java.lang.String,java.lang.CharSequence,int,java.lang.CharSequence,android.net.Uri,android.net.Uri)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r3.<com.csipsimple.models.CallerInfo: void <init>()>() in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void loadContactPhotos(android.net.Uri,android.net.Uri)> ==> <com.csipsimple.models.CallerInfo: void <init>()>
INTERFACE edge: $r8 = interfaceinvoke $r9.<java.lang.CharSequence: java.lang.String toString()>() in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void configureCallButton(java.lang.String,java.lang.CharSequence,java.lang.CharSequence)> ==> <java.lang.String: java.lang.String toString()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
INTERFACE edge: $r10 = interfaceinvoke $r8.<java.lang.CharSequence: java.lang.String toString()>() in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <java.lang.String: java.lang.String toString()>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void <init>(android.content.res.Resources)>($r5) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void <init>(android.content.res.Resources)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void <init>(android.content.res.Resources)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.messages.MessageFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.MessageFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.MessageFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.MessageFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.MessageFragment: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.MessageFragment: void onCreate(android.os.Bundle)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.csipsimple.ui.messages.MessageFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>(null, null, null) in <dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.MessageFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.MessageFragment: void onViewCreated(android.view.View,android.os.Bundle)>(null, null) in <dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.MessageFragment: void onViewCreated(android.view.View,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.MessageFragment: void onActivityCreated(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.MessageFragment: void onActivityCreated(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.MessageFragment: void onResume()>() in <dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.MessageFragment: void onResume()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.MessageFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(null, null, null) in <dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.MessageFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<com.csipsimple.ui.messages.MessageFragment: boolean onContextItemSelected(android.view.MenuItem)>(null) in <dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.MessageFragment: boolean onContextItemSelected(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.MessageFragment: void onActivityResult(int,int,android.content.Intent)>(0, 0, null) in <dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.MessageFragment: void onActivityResult(int,int,android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.MessageFragment: void onClick(android.view.View)>(null) in <dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.MessageFragment: void onClick(android.view.View)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.MessageFragment: void onPause()>() in <dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.MessageFragment: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.messages.MessageFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.messages.MessageFragment: void onDetach()>
CLINIT edge: staticinvoke <com.csipsimple.utils.SmileyParser: void init(android.content.Context)>($r2) in <com.csipsimple.ui.messages.MessageFragment: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.SmileyParser: void <clinit>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.clipboard.ClipboardWrapper: com.csipsimple.utils.clipboard.ClipboardWrapper getInstance(android.content.Context)>($r2) in <com.csipsimple.ui.messages.MessageFragment: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.clipboard.ClipboardWrapper: com.csipsimple.utils.clipboard.ClipboardWrapper getInstance(android.content.Context)>
STATIC edge: staticinvoke <com.csipsimple.utils.SmileyParser: void init(android.content.Context)>($r2) in <com.csipsimple.ui.messages.MessageFragment: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.SmileyParser: void init(android.content.Context)>
CLINIT edge: $r3 = new com.csipsimple.service.SipNotifications in <com.csipsimple.ui.messages.MessageFragment: void onCreate(android.os.Bundle)> ==> <com.csipsimple.service.SipNotifications: void <clinit>()>
CLINIT edge: $r6 = new com.csipsimple.ui.messages.MessageAdapter in <com.csipsimple.ui.messages.MessageFragment: void onViewCreated(android.view.View,android.os.Bundle)> ==> <com.csipsimple.ui.messages.MessageAdapter: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("ComposeMessage", "Resume compose message act") in <com.csipsimple.ui.messages.MessageFragment: void onResume()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("ComposeMessage", "Resume compose message act") in <com.csipsimple.ui.messages.MessageFragment: void onResume()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: r2 = new com.csipsimple.api.SipMessage in <com.csipsimple.ui.messages.MessageFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.api.SipMessage: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("ComposeMessage", "On activity result") in <com.csipsimple.ui.messages.MessageFragment: void onActivityResult(int,int,android.content.Intent)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("ComposeMessage", "On activity result") in <com.csipsimple.ui.messages.MessageFragment: void onActivityResult(int,int,android.content.Intent)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: $i0 = staticinvoke <com.csipsimple.utils.SmileyParser$Smileys: int getSmileyResource(int)>(0) in <com.csipsimple.utils.SmileyParser: void <clinit>()> ==> <com.csipsimple.utils.SmileyParser$Smileys: void <clinit>()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.SmileyParser$Smileys: int getSmileyResource(int)>(16) in <com.csipsimple.utils.SmileyParser: void <clinit>()> ==> <com.csipsimple.utils.SmileyParser$Smileys: int getSmileyResource(int)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(11) in <com.csipsimple.utils.clipboard.ClipboardWrapper: com.csipsimple.utils.clipboard.ClipboardWrapper getInstance(android.content.Context)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
CLINIT edge: $r1 = new com.csipsimple.utils.SmileyParser in <com.csipsimple.utils.SmileyParser: void init(android.content.Context)> ==> <com.csipsimple.utils.SmileyParser: void <clinit>()>
CLINIT edge: $r0 = <com.csipsimple.utils.SmileyParser$Smileys: int[] sIconIds> in <com.csipsimple.utils.SmileyParser$Smileys: int getSmileyResource(int)> ==> <com.csipsimple.utils.SmileyParser$Smileys: void <clinit>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.utils.SmileyParser: void <init>(android.content.Context)>($r0) in <com.csipsimple.utils.SmileyParser: void init(android.content.Context)> ==> <com.csipsimple.utils.SmileyParser: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.SmileyParser: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: $r4 = specialinvoke r0.<com.csipsimple.utils.SmileyParser: java.util.Map buildSmileyToRes()>() in <com.csipsimple.utils.SmileyParser: void <init>(android.content.Context)> ==> <com.csipsimple.utils.SmileyParser: java.util.Map buildSmileyToRes()>
SPECIAL edge: $r5 = specialinvoke r0.<com.csipsimple.utils.SmileyParser: java.util.regex.Pattern buildPattern()>() in <com.csipsimple.utils.SmileyParser: void <init>(android.content.Context)> ==> <com.csipsimple.utils.SmileyParser: java.util.regex.Pattern buildPattern()>
CLINIT edge: $r3 = <com.csipsimple.utils.SmileyParser: int[] DEFAULT_SMILEY_RES_IDS> in <com.csipsimple.utils.SmileyParser: java.util.Map buildSmileyToRes()> ==> <com.csipsimple.utils.SmileyParser: void <clinit>()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.utils.SmileyParser: java.util.Map buildSmileyToRes()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.utils.SmileyParser: java.util.Map buildSmileyToRes()> ==> <java.lang.Integer: void <clinit>()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.utils.clipboard.Clipboard1: void <init>()>() in <com.csipsimple.utils.clipboard.ClipboardWrapper: com.csipsimple.utils.clipboard.ClipboardWrapper getInstance(android.content.Context)> ==> <com.csipsimple.utils.clipboard.Clipboard1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.clipboard.ClipboardWrapper: void <init>()>() in <com.csipsimple.utils.clipboard.Clipboard1: void <init>()> ==> <com.csipsimple.utils.clipboard.ClipboardWrapper: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.clipboard.ClipboardWrapper: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.clipboard.Clipboard11: void <init>()>() in <com.csipsimple.utils.clipboard.ClipboardWrapper: com.csipsimple.utils.clipboard.ClipboardWrapper getInstance(android.content.Context)> ==> <com.csipsimple.utils.clipboard.Clipboard11: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.clipboard.ClipboardWrapper: void <init>()>() in <com.csipsimple.utils.clipboard.Clipboard11: void <init>()> ==> <com.csipsimple.utils.clipboard.ClipboardWrapper: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.clipboard.ClipboardWrapper: void setContext(android.content.Context)>($r0) in <com.csipsimple.utils.clipboard.ClipboardWrapper: com.csipsimple.utils.clipboard.ClipboardWrapper getInstance(android.content.Context)> ==> <com.csipsimple.utils.clipboard.Clipboard11: void setContext(android.content.Context)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.clipboard.ClipboardWrapper: void setContext(android.content.Context)>($r0) in <com.csipsimple.utils.clipboard.ClipboardWrapper: com.csipsimple.utils.clipboard.ClipboardWrapper getInstance(android.content.Context)> ==> <com.csipsimple.utils.clipboard.Clipboard1: void setContext(android.content.Context)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockListFragment: void onDetach()>() in <com.csipsimple.ui.messages.MessageFragment: void onDetach()> ==> <com.actionbarsherlock.app.SherlockListFragment: void onDetach()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.messages.MessageFragment: void chooseSipUri()>() in <com.csipsimple.ui.messages.MessageFragment: void onClick(android.view.View)> ==> <com.csipsimple.ui.messages.MessageFragment: void chooseSipUri()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.messages.MessageFragment: void sendMessage()>() in <com.csipsimple.ui.messages.MessageFragment: void onClick(android.view.View)> ==> <com.csipsimple.ui.messages.MessageFragment: void sendMessage()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("ComposeMessage", "Not able to send message") in <com.csipsimple.ui.messages.MessageFragment: void sendMessage()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("ComposeMessage", "Not able to send message") in <com.csipsimple.ui.messages.MessageFragment: void sendMessage()> ==> <com.csipsimple.utils.Log: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.messages.MessageFragment: void setupFrom(java.lang.String,java.lang.String)>($r2, $r2) in <com.csipsimple.ui.messages.MessageFragment: void onActivityResult(int,int,android.content.Intent)> ==> <com.csipsimple.ui.messages.MessageFragment: void setupFrom(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.messages.MessageFragment: void loadMessageContent()>() in <com.csipsimple.ui.messages.MessageFragment: void onActivityResult(int,int,android.content.Intent)> ==> <com.csipsimple.ui.messages.MessageFragment: void loadMessageContent()>
CLINIT edge: $r1 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)>($r2) in <com.csipsimple.ui.messages.MessageFragment: void setupFrom(java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipUri: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)>($r2) in <com.csipsimple.ui.messages.MessageFragment: void setupFrom(java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)>
STATIC edge: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <com.csipsimple.ui.messages.MessageFragment: void loadMessageContent()> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
CLINIT edge: $r9 = newarray (java.lang.String)[1] in <com.csipsimple.ui.messages.MessageFragment: void loadMessageContent()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r8 = <com.csipsimple.api.SipMessage: android.net.Uri MESSAGE_URI> in <com.csipsimple.ui.messages.MessageFragment: void loadMessageContent()> ==> <com.csipsimple.api.SipMessage: void <clinit>()>
CLINIT edge: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <com.csipsimple.ui.messages.MessageFragment: void loadMessageContent()> ==> <java.lang.Boolean: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>($r1) in <com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)> ==> <com.csipsimple.api.SipUri: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>($r1) in <com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)> ==> <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>
CLINIT edge: $r2 = <com.csipsimple.api.SipUri: java.util.regex.Pattern SIP_CONTACT_PATTERN> in <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)> ==> <com.csipsimple.api.SipUri: void <clinit>()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.api.SipUri$ParsedSipContactInfos: void <init>()>() in <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)> ==> <com.csipsimple.api.SipUri$ParsedSipContactInfos: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipUri$ParsedSipContactInfos: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)> ==> <java.lang.String: java.lang.String trim()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String trim()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.messages.MessageFragment: void loadMessageContent()>() in <com.csipsimple.ui.messages.MessageFragment: void setupFrom(java.lang.String,java.lang.String)> ==> <com.csipsimple.ui.messages.MessageFragment: void loadMessageContent()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.api.SipMessage: void <init>(android.database.Cursor)>(r7) in <com.csipsimple.ui.messages.MessageFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.api.SipMessage: void <init>(android.database.Cursor)>
VIRTUAL edge: $r9 = virtualinvoke r2.<com.csipsimple.api.SipMessage: java.lang.String getDisplayName()>() in <com.csipsimple.ui.messages.MessageFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.api.SipMessage: java.lang.String getDisplayName()>
VIRTUAL edge: $r10 = virtualinvoke r2.<com.csipsimple.api.SipMessage: java.lang.String getBody()>() in <com.csipsimple.ui.messages.MessageFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.api.SipMessage: java.lang.String getBody()>
CLINIT edge: $r1 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)>($r1) in <com.csipsimple.api.SipMessage: java.lang.String getDisplayName()> ==> <com.csipsimple.api.SipUri: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)>($r1) in <com.csipsimple.api.SipMessage: java.lang.String getDisplayName()> ==> <com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipMessage: void <init>(android.database.Cursor)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.api.SipMessage: void createFromContentValue(android.content.ContentValues)>(r2) in <com.csipsimple.api.SipMessage: void <init>(android.database.Cursor)> ==> <com.csipsimple.api.SipMessage: void createFromContentValue(android.content.ContentValues)>
INTERFACE edge: $r1 = interfaceinvoke $r0.<java.lang.CharSequence: java.lang.String toString()>() in <com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)> ==> <java.lang.String: java.lang.String toString()>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.messages.MessageAdapter: void <init>(android.content.Context,android.database.Cursor)>($r7, null) in <com.csipsimple.ui.messages.MessageFragment: void onViewCreated(android.view.View,android.os.Bundle)> ==> <com.csipsimple.ui.messages.MessageAdapter: void <init>(android.content.Context,android.database.Cursor)>
CLINIT edge: $r3 = staticinvoke <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoForSelf(android.content.Context)>($r1) in <com.csipsimple.ui.messages.MessageAdapter: void <init>(android.content.Context,android.database.Cursor)> ==> <com.csipsimple.models.CallerInfo: void <clinit>()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoForSelf(android.content.Context)>($r1) in <com.csipsimple.ui.messages.MessageAdapter: void <init>(android.content.Context,android.database.Cursor)> ==> <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoForSelf(android.content.Context)>
CLINIT edge: $r1 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoForSelf(android.content.Context)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoForSelf(android.content.Context)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)>($r0) in <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoForSelf(android.content.Context)> ==> <com.csipsimple.utils.contacts.ContactsUtils14: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)>($r0) in <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoForSelf(android.content.Context)> ==> <com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)>($r0) in <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoForSelf(android.content.Context)> ==> <com.csipsimple.utils.contacts.ContactsUtils3: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)>
CLINIT edge: r3 = new com.csipsimple.models.CallerInfo in <com.csipsimple.utils.contacts.ContactsUtils14: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)> ==> <com.csipsimple.models.CallerInfo: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("ContactsUtils14", "Exception while retrieving cursor infos") in <com.csipsimple.utils.contacts.ContactsUtils14: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("ContactsUtils14", "Exception while retrieving cursor infos") in <com.csipsimple.utils.contacts.ContactsUtils14: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: r2 = newarray (java.lang.String)[4] in <com.csipsimple.utils.contacts.ContactsUtils14: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: r2 = new com.csipsimple.models.CallerInfo in <com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)> ==> <com.csipsimple.models.CallerInfo: void <clinit>()>
CLINIT edge: r2 = new com.csipsimple.models.CallerInfo in <com.csipsimple.utils.contacts.ContactsUtils3: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)> ==> <com.csipsimple.models.CallerInfo: void <clinit>()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.models.CallerInfo: void <init>()>() in <com.csipsimple.utils.contacts.ContactsUtils3: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)> ==> <com.csipsimple.models.CallerInfo: void <init>()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.models.CallerInfo: void <init>()>() in <com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)> ==> <com.csipsimple.models.CallerInfo: void <init>()>
SPECIAL edge: specialinvoke r3.<com.csipsimple.models.CallerInfo: void <init>()>() in <com.csipsimple.utils.contacts.ContactsUtils14: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)> ==> <com.csipsimple.models.CallerInfo: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.messages.MessageFragment: void setupFrom(java.lang.String,java.lang.String)>($r8, r10) in <com.csipsimple.ui.messages.MessageFragment: void onViewCreated(android.view.View,android.os.Bundle)> ==> <com.csipsimple.ui.messages.MessageFragment: void setupFrom(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.messages.MessageFragment: void chooseSipUri()>() in <com.csipsimple.ui.messages.MessageFragment: void onViewCreated(android.view.View,android.os.Bundle)> ==> <com.csipsimple.ui.messages.MessageFragment: void chooseSipUri()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.SipNotifications: void <init>(android.content.Context)>($r2) in <com.csipsimple.ui.messages.MessageFragment: void onCreate(android.os.Bundle)> ==> <com.csipsimple.service.SipNotifications: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>($r1) in <com.csipsimple.ui.messages.MessageFragment: void onAttach(android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.plugins.telephony.CallHandler: void <init>()>() in <dummyMainClass: com.csipsimple.plugins.telephony.CallHandler dummyMainMethod_com_csipsimple_plugins_telephony_CallHandler(android.content.Intent)> ==> <com.csipsimple.plugins.telephony.CallHandler: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.plugins.telephony.CallHandler: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: com.csipsimple.plugins.telephony.CallHandler dummyMainMethod_com_csipsimple_plugins_telephony_CallHandler(android.content.Intent)> ==> <com.csipsimple.plugins.telephony.CallHandler: void onReceive(android.content.Context,android.content.Intent)>
CLINIT edge: $z0 = staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)>($r1) in <com.csipsimple.plugins.telephony.CallHandler: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.PhoneCapabilityTester: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CallHandlerTelephony", "Impossible to load ", r3) in <com.csipsimple.plugins.telephony.CallHandler: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r8 = staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: java.util.List resolveActivitiesForPriviledgedCall(android.content.Context)>($r1) in <com.csipsimple.plugins.telephony.CallHandler: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.PhoneCapabilityTester: java.util.List resolveActivitiesForPriviledgedCall(android.content.Context)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)>($r1) in <com.csipsimple.plugins.telephony.CallHandler: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("CallHandlerTelephony", "Impossible to load ", r3) in <com.csipsimple.plugins.telephony.CallHandler: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: <com.csipsimple.plugins.telephony.CallHandler: boolean sPhoneAppInfoLoaded> = 1 in <com.csipsimple.plugins.telephony.CallHandler: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.plugins.telephony.CallHandler: void <clinit>()>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5) in <com.csipsimple.plugins.telephony.CallHandler: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.plugins.telephony.CallHandler: android.content.Intent getIntent()>() in <com.csipsimple.plugins.telephony.CallHandler: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.plugins.telephony.CallHandler: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.widgets.AccountWidgetConfigure: void <init>()>() in <dummyMainClass: com.csipsimple.widgets.AccountWidgetConfigure dummyMainMethod_com_csipsimple_widgets_AccountWidgetConfigure(android.content.Intent)> ==> <com.csipsimple.widgets.AccountWidgetConfigure: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.widgets.AccountWidgetConfigure: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.widgets.AccountWidgetConfigure dummyMainMethod_com_csipsimple_widgets_AccountWidgetConfigure(android.content.Intent)> ==> <com.csipsimple.widgets.AccountWidgetConfigure: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.widgets.AccountWidgetConfigure dummyMainMethod_com_csipsimple_widgets_AccountWidgetConfigure(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.widgets.AccountWidgetConfigure dummyMainMethod_com_csipsimple_widgets_AccountWidgetConfigure(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>() in <dummyMainClass: com.csipsimple.widgets.AccountWidgetConfigure dummyMainMethod_com_csipsimple_widgets_AccountWidgetConfigure(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>() in <dummyMainClass: com.csipsimple.widgets.AccountWidgetConfigure dummyMainMethod_com_csipsimple_widgets_AccountWidgetConfigure(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>() in <dummyMainClass: com.csipsimple.widgets.AccountWidgetConfigure dummyMainMethod_com_csipsimple_widgets_AccountWidgetConfigure(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)>($r1) in <com.csipsimple.widgets.AccountWidgetConfigure: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.account.AccountsChooserListActivity: void <init>()>() in <com.csipsimple.widgets.AccountWidgetConfigure: void <init>()> ==> <com.csipsimple.ui.account.AccountsChooserListActivity: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.ui.account.AccountsChooserListActivity: boolean showInternalAccounts()>() in <com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.account.AccountsChooserListActivity: boolean showInternalAccounts()>
VIRTUAL edge: $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4) in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.db.DBProvider: void <init>()>() in <dummyMainClass: com.csipsimple.db.DBProvider dummyMainMethod_com_csipsimple_db_DBProvider(android.content.Intent)> ==> <com.csipsimple.db.DBProvider: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(null, null) in <dummyMainClass: com.csipsimple.db.DBProvider dummyMainMethod_com_csipsimple_db_DBProvider(android.content.Intent)> ==> <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<com.csipsimple.db.DBProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(null, $r2, "", $r3, "") in <dummyMainClass: com.csipsimple.db.DBProvider dummyMainMethod_com_csipsimple_db_DBProvider(android.content.Intent)> ==> <com.csipsimple.db.DBProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
VIRTUAL edge: $i1 = virtualinvoke $r0.<com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(null, null, "", $r5) in <dummyMainClass: com.csipsimple.db.DBProvider dummyMainMethod_com_csipsimple_db_DBProvider(android.content.Intent)> ==> <com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
VIRTUAL edge: $r6 = virtualinvoke $r0.<com.csipsimple.db.DBProvider: java.lang.String getType(android.net.Uri)>(null) in <dummyMainClass: com.csipsimple.db.DBProvider dummyMainMethod_com_csipsimple_db_DBProvider(android.content.Intent)> ==> <com.csipsimple.db.DBProvider: java.lang.String getType(android.net.Uri)>
VIRTUAL edge: $i2 = virtualinvoke $r0.<com.csipsimple.db.DBProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(null, "", $r7) in <dummyMainClass: com.csipsimple.db.DBProvider dummyMainMethod_com_csipsimple_db_DBProvider(android.content.Intent)> ==> <com.csipsimple.db.DBProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
CLINIT edge: $r4 = <com.csipsimple.db.DBProvider: android.content.UriMatcher URI_MATCHER> in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <com.csipsimple.db.DBProvider: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.models.Filter: void resetCache()>() in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <com.csipsimple.models.Filter: void resetCache()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("DBProvider", r5) in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
CLINIT edge: staticinvoke <com.csipsimple.models.Filter: void resetCache()>() in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <com.csipsimple.models.Filter: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("DBProvider", r5) in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <java.lang.Long: void <clinit>()>
CLINIT edge: r2 = new com.csipsimple.api.SipProfileState in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <com.csipsimple.api.SipProfileState: void <clinit>()>
CLINIT edge: r6 = <com.csipsimple.api.SipMessage: android.net.Uri MESSAGE_ID_URI_BASE> in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <com.csipsimple.api.SipMessage: void <clinit>()>
CLINIT edge: r6 = <com.csipsimple.api.SipManager: android.net.Uri FILTER_ID_URI_BASE> in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <com.csipsimple.api.SipManager: void <clinit>()>
CLINIT edge: r6 = <com.csipsimple.api.SipProfile: android.net.Uri ACCOUNT_ID_URI_BASE> in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
CLINIT edge: $r12 = <com.csipsimple.db.DBProvider: android.content.UriMatcher URI_MATCHER> in <com.csipsimple.db.DBProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <com.csipsimple.db.DBProvider: void <clinit>()>
STATIC edge: $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) in <com.csipsimple.db.DBProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
CLINIT edge: $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) in <com.csipsimple.db.DBProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.Long: void <clinit>()>
CLINIT edge: r13 = <com.csipsimple.api.SipMessage: android.net.Uri MESSAGE_URI> in <com.csipsimple.db.DBProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <com.csipsimple.api.SipMessage: void <clinit>()>
CLINIT edge: r10 = newarray (java.lang.String)[9] in <com.csipsimple.db.DBProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r8 = <com.csipsimple.db.DBProvider: android.content.UriMatcher URI_MATCHER> in <com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.db.DBProvider: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("DBProvider", $r3) in <com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2) in <com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: staticinvoke <com.csipsimple.models.Filter: void resetCache()>() in <com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.models.Filter: void resetCache()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("DBProvider", $r3) in <com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2) in <com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <java.lang.Long: void <clinit>()>
CLINIT edge: r5 = new com.csipsimple.api.SipProfileState in <com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.api.SipProfileState: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.models.Filter: void resetCache()>() in <com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.models.Filter: void <clinit>()>
CLINIT edge: $r2 = <com.csipsimple.db.DBProvider: android.content.UriMatcher URI_MATCHER> in <com.csipsimple.db.DBProvider: java.lang.String getType(android.net.Uri)> ==> <com.csipsimple.db.DBProvider: void <clinit>()>
CLINIT edge: $r6 = <com.csipsimple.db.DBProvider: android.content.UriMatcher URI_MATCHER> in <com.csipsimple.db.DBProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <com.csipsimple.db.DBProvider: void <clinit>()>
STATIC edge: r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) in <com.csipsimple.db.DBProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: staticinvoke <com.csipsimple.models.Filter: void resetCache()>() in <com.csipsimple.db.DBProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <com.csipsimple.models.Filter: void resetCache()>
CLINIT edge: r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) in <com.csipsimple.db.DBProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <java.lang.Long: void <clinit>()>
CLINIT edge: r7 = <com.csipsimple.api.SipMessage: android.net.Uri MESSAGE_URI> in <com.csipsimple.db.DBProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <com.csipsimple.api.SipMessage: void <clinit>()>
CLINIT edge: $r3 = newarray (java.lang.String)[2] in <com.csipsimple.db.DBProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <java.lang.String: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.models.Filter: void resetCache()>() in <com.csipsimple.db.DBProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <com.csipsimple.models.Filter: void <clinit>()>
CLINIT edge: <com.csipsimple.models.Filter: java.util.Map FILTERS_PER_ACCOUNT> = $r0 in <com.csipsimple.models.Filter: void resetCache()> ==> <com.csipsimple.models.Filter: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.db.DBProvider: void broadcastAccountChange(long)>($l2) in <com.csipsimple.db.DBProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <com.csipsimple.db.DBProvider: void broadcastAccountChange(long)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.db.DBProvider: void broadcastRegistrationChange(long)>($l2) in <com.csipsimple.db.DBProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ==> <com.csipsimple.db.DBProvider: void broadcastRegistrationChange(long)>
SPECIAL edge: specialinvoke r5.<com.csipsimple.api.SipProfileState: void <init>()>() in <com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.api.SipProfileState: void <init>()>
VIRTUAL edge: virtualinvoke r5.<com.csipsimple.api.SipProfileState: void createFromContentValue(android.content.ContentValues)>(r18) in <com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.api.SipProfileState: void createFromContentValue(android.content.ContentValues)>
VIRTUAL edge: r18 = virtualinvoke r5.<com.csipsimple.api.SipProfileState: android.content.ContentValues getAsContentValue()>() in <com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.api.SipProfileState: android.content.ContentValues getAsContentValue()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.api.SipProfileState: android.content.ContentValues getAsContentValue()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.api.SipProfileState: android.content.ContentValues getAsContentValue()> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
CLINIT edge: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.api.SipProfileState: android.content.ContentValues getAsContentValue()> ==> <java.lang.Boolean: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.api.SipProfileState: android.content.ContentValues getAsContentValue()> ==> <java.lang.Integer: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipProfileState: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.db.DBProvider: void broadcastAccountChange(long)>(l2) in <com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.db.DBProvider: void broadcastAccountChange(long)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.db.DBProvider: void broadcastRegistrationChange(long)>(l2) in <com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.db.DBProvider: void broadcastRegistrationChange(long)>
VIRTUAL edge: $r16 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase()>() in <com.csipsimple.db.DBProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.String: java.lang.String toLowerCase()>
VIRTUAL edge: $z0 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("*") in <com.csipsimple.db.DBProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
SPECIAL edge: $r20 = specialinvoke r0.<com.csipsimple.db.DBProvider: android.database.Cursor getCursor(android.content.ContentValues[])>(r6) in <com.csipsimple.db.DBProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <com.csipsimple.db.DBProvider: android.database.Cursor getCursor(android.content.ContentValues[])>
CLINIT edge: r3 = newarray (java.lang.String)[$i0] in <com.csipsimple.db.DBProvider: android.database.Cursor getCursor(android.content.ContentValues[])> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.api.SipProfileState: void <init>()>() in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <com.csipsimple.api.SipProfileState: void <init>()>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.api.SipProfileState: void createFromContentValue(android.content.ContentValues)>(r13) in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <com.csipsimple.api.SipProfileState: void createFromContentValue(android.content.ContentValues)>
VIRTUAL edge: $r1 = virtualinvoke r2.<com.csipsimple.api.SipProfileState: android.content.ContentValues getAsContentValue()>() in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <com.csipsimple.api.SipProfileState: android.content.ContentValues getAsContentValue()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.db.DBProvider: void broadcastAccountChange(long)>($l1) in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <com.csipsimple.db.DBProvider: void broadcastAccountChange(long)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.db.DBProvider: void broadcastRegistrationChange(long)>($l1) in <com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ==> <com.csipsimple.db.DBProvider: void broadcastRegistrationChange(long)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.account.AccountEdit: void <init>()>() in <dummyMainClass: com.csipsimple.ui.account.AccountEdit dummyMainMethod_com_csipsimple_ui_account_AccountEdit(android.content.Intent)> ==> <com.csipsimple.ui.account.AccountEdit: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.wizards.BasePrefsWizard: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.account.AccountEdit dummyMainMethod_com_csipsimple_ui_account_AccountEdit(android.content.Intent)> ==> <com.csipsimple.wizards.BasePrefsWizard: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.account.AccountEdit dummyMainMethod_com_csipsimple_ui_account_AccountEdit(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.wizards.BasePrefsWizard: void onResume()>() in <dummyMainClass: com.csipsimple.ui.account.AccountEdit dummyMainMethod_com_csipsimple_ui_account_AccountEdit(android.content.Intent)> ==> <com.csipsimple.wizards.BasePrefsWizard: void onResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.ui.account.AccountEdit dummyMainMethod_com_csipsimple_ui_account_AccountEdit(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.wizards.BasePrefsWizard: void onPause()>() in <dummyMainClass: com.csipsimple.ui.account.AccountEdit dummyMainMethod_com_csipsimple_ui_account_AccountEdit(android.content.Intent)> ==> <com.csipsimple.wizards.BasePrefsWizard: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: void onStop()>() in <dummyMainClass: com.csipsimple.ui.account.AccountEdit dummyMainMethod_com_csipsimple_ui_account_AccountEdit(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.wizards.BasePrefsWizard: void onDestroy()>() in <dummyMainClass: com.csipsimple.ui.account.AccountEdit dummyMainMethod_com_csipsimple_ui_account_AccountEdit(android.content.Intent)> ==> <com.csipsimple.wizards.BasePrefsWizard: void onDestroy()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.BasePrefsWizard: void <init>()>() in <com.csipsimple.ui.account.AccountEdit: void <init>()> ==> <com.csipsimple.wizards.BasePrefsWizard: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.favorites.FavListFragment: void <init>()>() in <dummyMainClass: com.csipsimple.ui.favorites.FavListFragment dummyMainMethod_com_csipsimple_ui_favorites_FavListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.favorites.FavListFragment: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>(parameter1) in <dummyMainClass: com.csipsimple.ui.favorites.FavListFragment dummyMainMethod_com_csipsimple_ui_favorites_FavListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.favorites.FavListFragment: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.favorites.FavListFragment dummyMainMethod_com_csipsimple_ui_favorites_FavListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.favorites.FavListFragment: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.favorites.FavListFragment: void onViewCreated(android.view.View,android.os.Bundle)>(null, null) in <dummyMainClass: com.csipsimple.ui.favorites.FavListFragment dummyMainMethod_com_csipsimple_ui_favorites_FavListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.favorites.FavListFragment: void onViewCreated(android.view.View,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.favorites.FavListFragment: void onActivityCreated(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.favorites.FavListFragment dummyMainMethod_com_csipsimple_ui_favorites_FavListFragment(android.content.Intent,android.app.Activity)> ==> <com.csipsimple.ui.favorites.FavListFragment: void onActivityCreated(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockListFragment: void onDetach()>() in <dummyMainClass: com.csipsimple.ui.favorites.FavListFragment dummyMainMethod_com_csipsimple_ui_favorites_FavListFragment(android.content.Intent,android.app.Activity)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onDetach()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void onActivityCreated(android.os.Bundle)>($r1) in <com.csipsimple.ui.favorites.FavListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.widgets.CSSListFragment: void onActivityCreated(android.os.Bundle)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void <init>()>() in <com.csipsimple.ui.favorites.FavListFragment: void <init>()> ==> <com.csipsimple.widgets.CSSListFragment: void <init>()>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.service.SipService$ServicePhoneStateReceiver: void <init>(com.csipsimple.service.SipService,com.csipsimple.service.SipService$ServicePhoneStateReceiver)>($r0, $r4) in <dummyMainClass: com.csipsimple.service.SipService dummyMainMethod_com_csipsimple_service_SipService(android.content.Intent)> ==> <com.csipsimple.service.SipService$ServicePhoneStateReceiver: void <init>(com.csipsimple.service.SipService,com.csipsimple.service.SipService$ServicePhoneStateReceiver)>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.service.SipService$ServicePhoneStateReceiver: void onCallStateChanged(int,java.lang.String)>(0, "") in <dummyMainClass: com.csipsimple.service.SipService dummyMainMethod_com_csipsimple_service_SipService(android.content.Intent)> ==> <com.csipsimple.service.SipService$ServicePhoneStateReceiver: void onCallStateChanged(int,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", $r3) in <com.csipsimple.service.SipService$ServicePhoneStateReceiver: void onCallStateChanged(int,java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", $r3) in <com.csipsimple.service.SipService$ServicePhoneStateReceiver: void onCallStateChanged(int,java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.service.SipService$ServicePhoneStateReceiver$1: void <init>(com.csipsimple.service.SipService$ServicePhoneStateReceiver,int,java.lang.String)>(r0, $i0, $r1) in <com.csipsimple.service.SipService$ServicePhoneStateReceiver: void onCallStateChanged(int,java.lang.String)> ==> <com.csipsimple.service.SipService$ServicePhoneStateReceiver$1: void <init>(com.csipsimple.service.SipService$ServicePhoneStateReceiver,int,java.lang.String)>
EXECUTOR edge: virtualinvoke $r5.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r6) in <com.csipsimple.service.SipService$ServicePhoneStateReceiver: void onCallStateChanged(int,java.lang.String)> ==> <com.csipsimple.service.SipService$SipRunnable: void run()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP SRV", "Not done from same thread") in <com.csipsimple.service.SipService$SipRunnable: void run()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP SRV", "Not done from same thread") in <com.csipsimple.service.SipService$SipRunnable: void run()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void doRun()>() in <com.csipsimple.service.SipService$SipRunnable: void run()> ==> <com.csipsimple.service.SipService$ServicePhoneStateReceiver$1: void doRun()>
CLINIT edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$ServicePhoneStateReceiver$1: void doRun()> ==> <com.csipsimple.service.SipService: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$ServicePhoneStateReceiver$1: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
CLINIT edge: r0 = <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService pjService> in <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()> ==> <com.csipsimple.service.SipService: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$ServicePhoneStateReceiver$1: void <init>(com.csipsimple.service.SipService$ServicePhoneStateReceiver,int,java.lang.String)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.service.SipService$SipRunnable: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$ServicePhoneStateReceiver: void <init>(com.csipsimple.service.SipService)>($r1) in <com.csipsimple.service.SipService$ServicePhoneStateReceiver: void <init>(com.csipsimple.service.SipService,com.csipsimple.service.SipService$ServicePhoneStateReceiver)> ==> <com.csipsimple.service.SipService$ServicePhoneStateReceiver: void <init>(com.csipsimple.service.SipService)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.service.SipService: void <init>()>() in <dummyMainClass: com.csipsimple.service.SipService dummyMainMethod_com_csipsimple_service_SipService(android.content.Intent)> ==> <com.csipsimple.service.SipService: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.service.SipService: void onCreate()>() in <dummyMainClass: com.csipsimple.service.SipService dummyMainMethod_com_csipsimple_service_SipService(android.content.Intent)> ==> <com.csipsimple.service.SipService: void onCreate()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.service.SipService: void onStart(android.content.Intent,int)>(null, 0) in <dummyMainClass: com.csipsimple.service.SipService dummyMainMethod_com_csipsimple_service_SipService(android.content.Intent)> ==> <com.csipsimple.service.SipService: void onStart(android.content.Intent,int)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<com.csipsimple.service.SipService: android.os.IBinder onBind(android.content.Intent)>(null) in <dummyMainClass: com.csipsimple.service.SipService dummyMainMethod_com_csipsimple_service_SipService(android.content.Intent)> ==> <com.csipsimple.service.SipService: android.os.IBinder onBind(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.service.SipService: void onDestroy()>() in <dummyMainClass: com.csipsimple.service.SipService dummyMainMethod_com_csipsimple_service_SipService(android.content.Intent)> ==> <com.csipsimple.service.SipService: void onDestroy()>
CLINIT edge: $r5 = <com.csipsimple.api.SipManager$PresenceStatus: com.csipsimple.api.SipManager$PresenceStatus ONLINE> in <com.csipsimple.service.SipService: void <init>()> ==> <com.csipsimple.api.SipManager$PresenceStatus: void <clinit>()>
CLINIT edge: <com.csipsimple.service.SipService: com.csipsimple.service.SipService singleton> = r0 in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.service.SipService: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP SRV", "RESET SETTINGS !!!!") in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", $r8) in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void setLogLevel(int)>($i0) in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.utils.Log: void setLogLevel(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>("SIP SRV", "Create SIP Service") in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>
CLINIT edge: $r9 = new com.csipsimple.service.PresenceManager in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.service.PresenceManager: void <clinit>()>
CLINIT edge: $r4 = new com.csipsimple.service.SipNotifications in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.service.SipNotifications: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>("SIP SRV", "Create SIP Service") in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Harakiri... we are not needed since no way to use self") in <com.csipsimple.service.SipService: void onStart(android.content.Intent,int)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Direct sip start") in <com.csipsimple.service.SipService: void onStart(android.content.Intent,int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>("SIP SRV", "Destroying SIP Service") in <com.csipsimple.service.SipService: void onDestroy()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>("SIP SRV", "Destroying SIP Service") in <com.csipsimple.service.SipService: void onDestroy()> ==> <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>
CLINIT edge: $r0 = newarray (java.lang.String)[3] in <com.csipsimple.service.PresenceManager: void <clinit>()> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.api.SipManager$PresenceStatus: void <init>(java.lang.String,int)>("UNKNOWN", 0) in <com.csipsimple.api.SipManager$PresenceStatus: void <clinit>()> ==> <com.csipsimple.api.SipManager$PresenceStatus: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <com.csipsimple.api.SipManager$PresenceStatus: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.SipService$FinalizeDestroyRunnable: void <init>(com.csipsimple.service.SipService)>(r0) in <com.csipsimple.service.SipService: void onDestroy()> ==> <com.csipsimple.service.SipService$FinalizeDestroyRunnable: void <init>(com.csipsimple.service.SipService)>
EXECUTOR edge: virtualinvoke $r1.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r3) in <com.csipsimple.service.SipService: void onDestroy()> ==> <com.csipsimple.service.SipService$SipRunnable: void run()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$FinalizeDestroyRunnable: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService: void unregisterBroadcasts()>() in <com.csipsimple.service.SipService: void onDestroy()> ==> <com.csipsimple.service.SipService: void unregisterBroadcasts()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService: void onDestroy()> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Stop and unregister device receiver") in <com.csipsimple.service.SipService: void unregisterBroadcasts()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Has not to unregister telephony receiver") in <com.csipsimple.service.SipService: void unregisterBroadcasts()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r3) in <com.csipsimple.service.SipService: void onDestroy()> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
CLINIT edge: $r5 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.service.SipWakeLock access$8(com.csipsimple.service.SipService)>(r4) in <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)> ==> <com.csipsimple.service.SipService: void <clinit>()>
STATIC edge: $r6 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>(r0, 0, $r1) in <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)> ==> <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.service.SipWakeLock access$8(com.csipsimple.service.SipService)>(r4) in <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipWakeLock access$8(com.csipsimple.service.SipService)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.service.SipService$SipServiceExecutor: void <init>(com.csipsimple.service.SipService)>(r0) in <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void <init>(com.csipsimple.service.SipService)>
CLINIT edge: $r2 = staticinvoke <com.csipsimple.service.SipService: android.os.Looper access$7()>() in <com.csipsimple.service.SipService$SipServiceExecutor: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.SipService: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: android.os.Looper access$7()>() in <com.csipsimple.service.SipService$SipServiceExecutor: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.SipService: android.os.Looper access$7()>
CLINIT edge: $r0 = staticinvoke <com.csipsimple.service.SipService: android.os.Looper createLooper()>() in <com.csipsimple.service.SipService: android.os.Looper access$7()> ==> <com.csipsimple.service.SipService: void <clinit>()>
STATIC edge: $r0 = staticinvoke <com.csipsimple.service.SipService: android.os.Looper createLooper()>() in <com.csipsimple.service.SipService: android.os.Looper access$7()> ==> <com.csipsimple.service.SipService: android.os.Looper createLooper()>
CLINIT edge: $r1 = <com.csipsimple.service.SipService: android.os.HandlerThread executorThread> in <com.csipsimple.service.SipService: android.os.Looper createLooper()> ==> <com.csipsimple.service.SipService: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Creating new handler thread") in <com.csipsimple.service.SipService: android.os.Looper createLooper()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Creating new handler thread") in <com.csipsimple.service.SipService: android.os.Looper createLooper()> ==> <com.csipsimple.utils.Log: void <clinit>()>
VIRTUAL edge: parameter0 = virtualinvoke this.<com.csipsimple.service.SipService: android.content.Intent getIntent()>() in <com.csipsimple.service.SipService: android.os.IBinder onBind(android.content.Intent)> ==> <com.csipsimple.service.SipService: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.service.SipService$StartRunnable: void <init>(com.csipsimple.service.SipService)>(r0) in <com.csipsimple.service.SipService: void onStart(android.content.Intent,int)> ==> <com.csipsimple.service.SipService$StartRunnable: void <init>(com.csipsimple.service.SipService)>
EXECUTOR edge: virtualinvoke $r4.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r5) in <com.csipsimple.service.SipService: void onStart(android.content.Intent,int)> ==> <com.csipsimple.service.SipService$SipRunnable: void run()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$StartRunnable: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.service.SipService: android.content.Intent getIntent()>() in <com.csipsimple.service.SipService: void onStart(android.content.Intent,int)> ==> <com.csipsimple.service.SipService: android.content.Intent getIntent()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipService: void registerForOutgoing(android.content.ComponentName)>(r3) in <com.csipsimple.service.SipService: void onStart(android.content.Intent,int)> ==> <com.csipsimple.service.SipService: void registerForOutgoing(android.content.ComponentName)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.service.SipService: boolean isConnectivityValid()>() in <com.csipsimple.service.SipService: void onStart(android.content.Intent,int)> ==> <com.csipsimple.service.SipService: boolean isConnectivityValid()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipService: void notifyUserOfMessage(int)>(2131427779) in <com.csipsimple.service.SipService: void onStart(android.content.Intent,int)> ==> <com.csipsimple.service.SipService: void notifyUserOfMessage(int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipService: void cleanStop()>() in <com.csipsimple.service.SipService: void onStart(android.content.Intent,int)> ==> <com.csipsimple.service.SipService: void cleanStop()>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.service.SipService: boolean loadStack()>() in <com.csipsimple.service.SipService: void onStart(android.content.Intent,int)> ==> <com.csipsimple.service.SipService: boolean loadStack()>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService: void onStart(android.content.Intent,int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
CLINIT edge: $r1 = <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService pjService> in <com.csipsimple.service.SipService: boolean loadStack()> ==> <com.csipsimple.service.SipService: void <clinit>()>
CLINIT edge: $r1 = new com.csipsimple.pjsip.PjSipService in <com.csipsimple.service.SipService: boolean loadStack()> ==> <com.csipsimple.pjsip.PjSipService: void <clinit>()>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r5) in <com.csipsimple.service.SipService: void onStart(android.content.Intent,int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.pjsip.PjSipService: void <init>()>() in <com.csipsimple.service.SipService: boolean loadStack()> ==> <com.csipsimple.pjsip.PjSipService: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void setService(com.csipsimple.service.SipService)>(r0) in <com.csipsimple.service.SipService: boolean loadStack()> ==> <com.csipsimple.pjsip.PjSipService: void setService(com.csipsimple.service.SipService)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: boolean tryToLoadStack()>() in <com.csipsimple.service.SipService: boolean loadStack()> ==> <com.csipsimple.pjsip.PjSipService: boolean tryToLoadStack()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("PjService", "We have a problem with the current stack....", r3) in <com.csipsimple.pjsip.PjSipService: boolean tryToLoadStack()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("PjService", "We have a problem with the current stack....", r3) in <com.csipsimple.pjsip.PjSipService: boolean tryToLoadStack()> ==> <com.csipsimple.utils.Log: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.pjsip.PjSipService: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>() in <com.csipsimple.pjsip.PjSipService: void setService(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.service.SipService$DestroyRunnable: void <init>(com.csipsimple.service.SipService)>(r0) in <com.csipsimple.service.SipService: void cleanStop()> ==> <com.csipsimple.service.SipService$DestroyRunnable: void <init>(com.csipsimple.service.SipService)>
EXECUTOR edge: virtualinvoke $r2.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r1) in <com.csipsimple.service.SipService: void cleanStop()> ==> <com.csipsimple.service.SipService$SipRunnable: void run()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$DestroyRunnable: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService: void cleanStop()> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r1) in <com.csipsimple.service.SipService: void cleanStop()> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.service.PresenceManager: void <init>()>() in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.service.PresenceManager: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.service.PresenceManager: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.service.SipWakeLock: void <init>(android.os.PowerManager)>($r6) in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.service.SipWakeLock: void <init>(android.os.PowerManager)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.service.SipWakeLock: void <init>(android.os.PowerManager)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.service.SipNotifications: void <init>(android.content.Context)>(r0) in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.service.SipNotifications: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.service.SipNotifications: void onServiceCreate()>() in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.service.SipNotifications: void onServiceCreate()>
CLINIT edge: $r3 = <com.csipsimple.service.SipNotifications: java.lang.Class[] START_FG_SIG> in <com.csipsimple.service.SipNotifications: void onServiceCreate()> ==> <com.csipsimple.service.SipNotifications: void <clinit>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>(r0) in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.utils.PreferencesProviderWrapper: int getLogLevel()>() in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getLogLevel()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>("has_already_setup_service", 0) in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesProviderWrapper: void resetAllDefaultValues()>() in <com.csipsimple.service.SipService: void onCreate()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void resetAllDefaultValues()>
CLINIT edge: r1 = <com.csipsimple.api.SipConfigManager: android.net.Uri RAZ_URI> in <com.csipsimple.utils.PreferencesProviderWrapper: void resetAllDefaultValues()> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.service.SipService$ServiceHandler: void <init>(com.csipsimple.service.SipService)>(r0) in <com.csipsimple.service.SipService: void <init>()> ==> <com.csipsimple.service.SipService$ServiceHandler: void <init>(com.csipsimple.service.SipService)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.service.SipService$2: void <init>(com.csipsimple.service.SipService)>(r0) in <com.csipsimple.service.SipService: void <init>()> ==> <com.csipsimple.service.SipService$2: void <init>(com.csipsimple.service.SipService)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.api.ISipConfiguration$Stub: void <init>()>() in <com.csipsimple.service.SipService$2: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.api.ISipConfiguration$Stub: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.service.SipService$1: void <init>(com.csipsimple.service.SipService)>(r0) in <com.csipsimple.service.SipService: void <init>()> ==> <com.csipsimple.service.SipService$1: void <init>(com.csipsimple.service.SipService)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.api.ISipService$Stub: void <init>()>() in <com.csipsimple.service.SipService$1: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.api.ISipService$Stub: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: void onGSMStateChanged(int,java.lang.String)>($i0, $r1) in <com.csipsimple.service.SipService$ServicePhoneStateReceiver$1: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: void onGSMStateChanged(int,java.lang.String)>
CLINIT edge: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.pjsip.PjSipService: void onGSMStateChanged(int,java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int set_snd_dev(int,int)>(0, 0) in <com.csipsimple.pjsip.PjSipService: void onGSMStateChanged(int,java.lang.String)> ==> <org.pjsip.pjsua.pjsua: int set_snd_dev(int,int)>
STATIC edge: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.pjsip.PjSipService: void onGSMStateChanged(int,java.lang.String)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pjmedia_port set_no_snd_dev()>() in <com.csipsimple.pjsip.PjSipService: void onGSMStateChanged(int,java.lang.String)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pjmedia_port set_no_snd_dev()>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int set_snd_dev(int,int)>($i0, $i1) in <org.pjsip.pjsua.pjsua: int set_snd_dev(int,int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long set_no_snd_dev()>() in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pjmedia_port set_no_snd_dev()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjmedia_port: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pjmedia_port set_no_snd_dev()> ==> <org.pjsip.pjsua.pjmedia_port: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjmedia_port: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: int callHold(int)>($i0) in <com.csipsimple.pjsip.PjSipService: void onGSMStateChanged(int,java.lang.String)> ==> <com.csipsimple.pjsip.PjSipService: int callHold(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: boolean isCreated()>() in <com.csipsimple.pjsip.PjSipService: void onGSMStateChanged(int,java.lang.String)> ==> <com.csipsimple.pjsip.PjSipService: boolean isCreated()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: int callReinvite(int,boolean)>($i0, 1) in <com.csipsimple.pjsip.PjSipService: void onGSMStateChanged(int,java.lang.String)> ==> <com.csipsimple.pjsip.PjSipService: int callReinvite(int,boolean)>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int call_set_hold(int,org.pjsip.pjsua.pjsua_msg_data)>($i0, null) in <com.csipsimple.pjsip.PjSipService: int callHold(int)> ==> <org.pjsip.pjsua.pjsua: int call_set_hold(int,org.pjsip.pjsua.pjsua_msg_data)>
CLINIT edge: $r1 = <org.pjsip.pjsua.pjsua_call_flag: org.pjsip.pjsua.pjsua_call_flag PJSUA_CALL_UNHOLD> in <com.csipsimple.pjsip.PjSipService: int callReinvite(int,boolean)> ==> <org.pjsip.pjsua.pjsua_call_flag: void <clinit>()>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int call_reinvite(int,long,org.pjsip.pjsua.pjsua_msg_data)>($i0, $l2, null) in <com.csipsimple.pjsip.PjSipService: int callReinvite(int,boolean)> ==> <org.pjsip.pjsua.pjsua: int call_reinvite(int,long,org.pjsip.pjsua.pjsua_msg_data)>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int call_set_hold(int,long,org.pjsip.pjsua.pjsua_msg_data)>($i0, $l1, $r0) in <org.pjsip.pjsua.pjsua: int call_set_hold(int,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r0) in <org.pjsip.pjsua.pjsua: int call_set_hold(int,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int PJSUA_CALL_UNHOLD_get()>() in <org.pjsip.pjsua.pjsua_call_flag: void <clinit>()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int call_reinvite(int,long,long,org.pjsip.pjsua.pjsua_msg_data)>($i0, $l1, $l2, $r0) in <org.pjsip.pjsua.pjsua: int call_reinvite(int,long,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r0) in <org.pjsip.pjsua.pjsua: int call_reinvite(int,long,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int,int)>("PJSUA_CALL_UNHOLD", 0, $i0) in <org.pjsip.pjsua.pjsua_call_flag: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int,int)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsua_call_flag$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_call_flag$SwigNext: void <clinit>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_call_flag$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_call_flag$SwigNext: void access$1(int)>
CLINIT edge: <org.pjsip.pjsua.pjsua_call_flag$SwigNext: int next> = $i0 in <org.pjsip.pjsua.pjsua_call_flag$SwigNext: void access$1(int)> ==> <org.pjsip.pjsua.pjsua_call_flag$SwigNext: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_call_flag: int swigValue()>() in <com.csipsimple.pjsip.PjSipService: int callReinvite(int,boolean)> ==> <org.pjsip.pjsua.pjsua_call_flag: int swigValue()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void doRun()>() in <com.csipsimple.service.SipService$SipRunnable: void run()> ==> <com.csipsimple.service.SipService$FinalizeDestroyRunnable: void doRun()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void doRun()>() in <com.csipsimple.service.SipService$SipRunnable: void run()> ==> <com.csipsimple.service.SipService$StartRunnable: void doRun()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void doRun()>() in <com.csipsimple.service.SipService$SipRunnable: void run()> ==> <com.csipsimple.service.SipService$DestroyRunnable: void doRun()>
CLINIT edge: staticinvoke <com.csipsimple.service.SipService: void access$10(com.csipsimple.service.SipService,com.csipsimple.service.SipService$SipServiceExecutor)>($r1, null) in <com.csipsimple.service.SipService$FinalizeDestroyRunnable: void doRun()> ==> <com.csipsimple.service.SipService: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP SRV", "Somebody has stopped the service while there is an ongoing call !!!") in <com.csipsimple.service.SipService$FinalizeDestroyRunnable: void doRun()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>("SIP SRV", "--- SIP SERVICE DESTROYED ---") in <com.csipsimple.service.SipService$FinalizeDestroyRunnable: void doRun()> ==> <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.service.SipWakeLock access$8(com.csipsimple.service.SipService)>($r1) in <com.csipsimple.service.SipService$FinalizeDestroyRunnable: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipWakeLock access$8(com.csipsimple.service.SipService)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Destroy sip stack") in <com.csipsimple.service.SipService$FinalizeDestroyRunnable: void doRun()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.service.SipService: void access$10(com.csipsimple.service.SipService,com.csipsimple.service.SipService$SipServiceExecutor)>($r1, null) in <com.csipsimple.service.SipService$FinalizeDestroyRunnable: void doRun()> ==> <com.csipsimple.service.SipService: void access$10(com.csipsimple.service.SipService,com.csipsimple.service.SipService$SipServiceExecutor)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Destroy sip stack") in <com.csipsimple.service.SipService$FinalizeDestroyRunnable: void doRun()> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.service.SipService: void access$9(com.csipsimple.service.SipService)>($r1) in <com.csipsimple.service.SipService$StartRunnable: void doRun()> ==> <com.csipsimple.service.SipService: void <clinit>()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.service.SipService: boolean stopSipStack()>() in <com.csipsimple.service.SipService$DestroyRunnable: void doRun()> ==> <com.csipsimple.service.SipService: boolean stopSipStack()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Stop sip stack") in <com.csipsimple.service.SipService: boolean stopSipStack()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(14) in <com.csipsimple.service.SipService: boolean stopSipStack()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Stop sip stack") in <com.csipsimple.service.SipService: boolean stopSipStack()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: $r1 = <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService pjService> in <com.csipsimple.service.SipService: boolean stopSipStack()> ==> <com.csipsimple.service.SipService: void <clinit>()>
VIRTUAL edge: z0 = virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: boolean sipStop()>() in <com.csipsimple.service.SipService: boolean stopSipStack()> ==> <com.csipsimple.pjsip.PjSipService: boolean sipStop()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", ">> SIP STOP <<") in <com.csipsimple.pjsip.PjSipService: boolean sipStop()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PjService", "We have a call in progress... DO NOT STOP !!!") in <com.csipsimple.pjsip.PjSipService: boolean sipStop()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", ">> SIP STOP <<") in <com.csipsimple.pjsip.PjSipService: boolean sipStop()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getActiveCallInProgress()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStop()> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getActiveCallInProgress()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.PjSipService: void cleanPjsua()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStop()> ==> <com.csipsimple.pjsip.PjSipService: void cleanPjsua()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", "Detroying...") in <com.csipsimple.pjsip.PjSipService: void cleanPjsua()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.TimerWrapper: void destroy()>() in <com.csipsimple.pjsip.PjSipService: void cleanPjsua()> ==> <com.csipsimple.utils.TimerWrapper: void destroy()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int csipsimple_destroy(long)>(l0) in <com.csipsimple.pjsip.PjSipService: void cleanPjsua()> ==> <org.pjsip.pjsua.pjsua: int csipsimple_destroy(long)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", "Detroying...") in <com.csipsimple.pjsip.PjSipService: void cleanPjsua()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.TimerWrapper: void destroy()>() in <com.csipsimple.pjsip.PjSipService: void cleanPjsua()> ==> <com.csipsimple.utils.TimerWrapper: void <clinit>()>
CLINIT edge: $r4 = <com.csipsimple.api.SipProfile: android.net.Uri ACCOUNT_STATUS_URI> in <com.csipsimple.pjsip.PjSipService: void cleanPjsua()> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
CLINIT edge: $r0 = <com.csipsimple.utils.TimerWrapper: java.lang.Object singletonLock> in <com.csipsimple.utils.TimerWrapper: void destroy()> ==> <com.csipsimple.utils.TimerWrapper: void <clinit>()>
CLINIT edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int csipsimple_destroy(long)>($l0) in <org.pjsip.pjsua.pjsua: int csipsimple_destroy(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.TimerWrapper: void <clinit>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipNotifications: void cancelRegisters()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStop()> ==> <com.csipsimple.service.SipNotifications: void cancelRegisters()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService: void applyComponentEnablingState(boolean)>(0) in <com.csipsimple.service.SipService: boolean stopSipStack()> ==> <com.csipsimple.service.SipService: void applyComponentEnablingState(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService: void unregisterBroadcasts()>() in <com.csipsimple.service.SipService: boolean stopSipStack()> ==> <com.csipsimple.service.SipService: void unregisterBroadcasts()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService: void releaseResources()>() in <com.csipsimple.service.SipService: boolean stopSipStack()> ==> <com.csipsimple.service.SipService: void releaseResources()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("integrate_tel_privileged") in <com.csipsimple.service.SipService: void applyComponentEnablingState(boolean)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.PresenceManager: void stopMonitoring()>() in <com.csipsimple.service.SipService: boolean stopSipStack()> ==> <com.csipsimple.service.PresenceManager: void stopMonitoring()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP SRV", "No need to start sip") in <com.csipsimple.service.SipService: void startSipStack()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Add all accounts") in <com.csipsimple.service.SipService: void startSipStack()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP SRV", "Unable to load SIP stack !! ") in <com.csipsimple.service.SipService: void startSipStack()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
CLINIT edge: $r2 = <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService pjService> in <com.csipsimple.service.SipService: void startSipStack()> ==> <com.csipsimple.service.SipService: void <clinit>()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: boolean sipStart()>() in <com.csipsimple.service.SipService: void startSipStack()> ==> <com.csipsimple.pjsip.PjSipService: boolean sipStart()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void setLogLevel(int)>($i1) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PjService", r5) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: r5 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r12) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $r12 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t get_error_message(int)>($i1) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t get_error_message(int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua: int start()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua: int start()>
STATIC edge: $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int acc_add_local(int,int,int[])>($i1, i0, $r33) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua: int acc_add_local(int,int,int[])>
STATIC edge: $r12 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>(r5) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", $r30) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua: int csipsimple_init(org.pjsip.pjsua.pjsua_config,org.pjsip.pjsua.pjsua_logging_config,org.pjsip.pjsua.pjsua_media_config,org.pjsip.pjsua.csipsimple_config,java.lang.Object)>(r1, r3, r4, r2, $r7) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua: int csipsimple_init(org.pjsip.pjsua.pjsua_config,org.pjsip.pjsua.pjsua_logging_config,org.pjsip.pjsua.pjsua_media_config,org.pjsip.pjsua.csipsimple_config,java.lang.Object)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int set_turn_credentials(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)>($r12, $r21, $r27, $r28) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua: int set_turn_credentials(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void media_config_default(org.pjsip.pjsua.pjsua_media_config)>(r4) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua: void media_config_default(org.pjsip.pjsua.pjsua_media_config)>
STATIC edge: $r11 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFile(android.content.Context,boolean)>($r7, 1) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFile(android.content.Context,boolean)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void logging_config_default(org.pjsip.pjsua.pjsua_logging_config)>(r3) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua: void logging_config_default(org.pjsip.pjsua.pjsua_logging_config)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void config_default(org.pjsip.pjsua.pjsua_config)>(r1) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua: void config_default(org.pjsip.pjsua.pjsua_config)>
STATIC edge: $r13 = staticinvoke <com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)>($r7, "com.csipsimple.plugins.action.REGISTER_VIDEO") in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)>
STATIC edge: $r11 = staticinvoke <com.csipsimple.pjsip.NativeLibManager: java.io.File getBundledStackLibFile(android.content.Context,java.lang.String)>($r7, "libpj_opensl_dev.so") in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.pjsip.NativeLibManager: java.io.File getBundledStackLibFile(android.content.Context,java.lang.String)>
STATIC edge: $r11 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getZrtpFolder(android.content.Context)>($r7) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesWrapper: java.io.File getZrtpFolder(android.content.Context)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void csipsimple_config_default(org.pjsip.pjsua.csipsimple_config)>(r2) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua: void csipsimple_config_default(org.pjsip.pjsua.csipsimple_config)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void setCallbackObject(org.pjsip.pjsua.Callback)>($r9) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua: void setCallbackObject(org.pjsip.pjsua.Callback)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>("PjService", r5) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua: int create()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua: int create()>
STATIC edge: staticinvoke <com.csipsimple.utils.TimerWrapper: void create(com.csipsimple.service.SipService)>($r7) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.TimerWrapper: void create(com.csipsimple.service.SipService)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void setLogLevel(int)>($i1) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.Log: void setLogLevel(int)>
CLINIT edge: r5 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r12) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.pjsip.PjSipService: void <clinit>()>
CLINIT edge: $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: r31 = <org.pjsip.pjsua.pjsip_transport_type_e: org.pjsip.pjsua.pjsip_transport_type_e PJSIP_TRANSPORT_TLS> in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsip_transport_type_e: void <clinit>()>
CLINIT edge: i0 = <org.pjsip.pjsua.pjsuaConstants: int PJ_FALSE> in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsuaConstants: void <clinit>()>
CLINIT edge: $r13 = staticinvoke <com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)>($r7, "com.csipsimple.codecs.action.REGISTER_CODEC") in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.ExtraPlugins: void <clinit>()>
CLINIT edge: $r11 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getZrtpFolder(android.content.Context)>($r7) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
CLINIT edge: $r10 = new com.csipsimple.service.MediaManager in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.service.MediaManager: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.TimerWrapper: void create(com.csipsimple.service.SipService)>($r7) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.TimerWrapper: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("PjService", "Impossible to retrieve string from pjsip ", r1) in <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("PjService", "Impossible to retrieve string from pjsip ", r1) in <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
CLINIT edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long get_error_message(int)>($i0) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t get_error_message(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int start()>() in <org.pjsip.pjsua.pjsua: int start()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int acc_add_local(int,int,int[])>($i0, $i1, $r0) in <org.pjsip.pjsua.pjsua: int acc_add_local(int,int,int[])> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long pj_str_copy(java.lang.String)>($r0) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $i4 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int csipsimple_init(long,org.pjsip.pjsua.pjsua_config,long,org.pjsip.pjsua.pjsua_logging_config,long,org.pjsip.pjsua.pjsua_media_config,long,org.pjsip.pjsua.csipsimple_config,java.lang.Object)>($l0, $r0, $l1, $r1, $l2, $r2, $l3, $r3, $r4) in <org.pjsip.pjsua.pjsua: int csipsimple_init(org.pjsip.pjsua.pjsua_config,org.pjsip.pjsua.pjsua_logging_config,org.pjsip.pjsua.pjsua_media_config,org.pjsip.pjsua.csipsimple_config,java.lang.Object)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.csipsimple_config: long getCPtr(org.pjsip.pjsua.csipsimple_config)>($r3) in <org.pjsip.pjsua.pjsua: int csipsimple_init(org.pjsip.pjsua.pjsua_config,org.pjsip.pjsua.pjsua_logging_config,org.pjsip.pjsua.pjsua_media_config,org.pjsip.pjsua.csipsimple_config,java.lang.Object)> ==> <org.pjsip.pjsua.csipsimple_config: long getCPtr(org.pjsip.pjsua.csipsimple_config)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsua_media_config: long getCPtr(org.pjsip.pjsua.pjsua_media_config)>($r2) in <org.pjsip.pjsua.pjsua: int csipsimple_init(org.pjsip.pjsua.pjsua_config,org.pjsip.pjsua.pjsua_logging_config,org.pjsip.pjsua.pjsua_media_config,org.pjsip.pjsua.csipsimple_config,java.lang.Object)> ==> <org.pjsip.pjsua.pjsua_media_config: long getCPtr(org.pjsip.pjsua.pjsua_media_config)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_logging_config: long getCPtr(org.pjsip.pjsua.pjsua_logging_config)>($r1) in <org.pjsip.pjsua.pjsua: int csipsimple_init(org.pjsip.pjsua.pjsua_config,org.pjsip.pjsua.pjsua_logging_config,org.pjsip.pjsua.pjsua_media_config,org.pjsip.pjsua.csipsimple_config,java.lang.Object)> ==> <org.pjsip.pjsua.pjsua_logging_config: long getCPtr(org.pjsip.pjsua.pjsua_logging_config)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_config: long getCPtr(org.pjsip.pjsua.pjsua_config)>($r0) in <org.pjsip.pjsua.pjsua: int csipsimple_init(org.pjsip.pjsua.pjsua_config,org.pjsip.pjsua.pjsua_logging_config,org.pjsip.pjsua.pjsua_media_config,org.pjsip.pjsua.csipsimple_config,java.lang.Object)> ==> <org.pjsip.pjsua.pjsua_config: long getCPtr(org.pjsip.pjsua.pjsua_config)>
CLINIT edge: $i4 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int set_turn_credentials(long,org.pjsip.pjsua.pj_str_t,long,org.pjsip.pjsua.pj_str_t,long,org.pjsip.pjsua.pj_str_t,long)>($l0, $r0, $l1, $r1, $l2, $r2, $l3) in <org.pjsip.pjsua.pjsua: int set_turn_credentials(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)>($r3) in <org.pjsip.pjsua.pjsua: int set_turn_credentials(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r2) in <org.pjsip.pjsua.pjsua: int set_turn_credentials(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void media_config_default(long,org.pjsip.pjsua.pjsua_media_config)>($l0, $r0) in <org.pjsip.pjsua.pjsua: void media_config_default(org.pjsip.pjsua.pjsua_media_config)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_media_config: long getCPtr(org.pjsip.pjsua.pjsua_media_config)>($r0) in <org.pjsip.pjsua.pjsua: void media_config_default(org.pjsip.pjsua.pjsua_media_config)> ==> <org.pjsip.pjsua.pjsua_media_config: long getCPtr(org.pjsip.pjsua.pjsua_media_config)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void logging_config_default(long,org.pjsip.pjsua.pjsua_logging_config)>($l0, $r0) in <org.pjsip.pjsua.pjsua: void logging_config_default(org.pjsip.pjsua.pjsua_logging_config)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_logging_config: long getCPtr(org.pjsip.pjsua.pjsua_logging_config)>($r0) in <org.pjsip.pjsua.pjsua: void logging_config_default(org.pjsip.pjsua.pjsua_logging_config)> ==> <org.pjsip.pjsua.pjsua_logging_config: long getCPtr(org.pjsip.pjsua.pjsua_logging_config)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void config_default(long,org.pjsip.pjsua.pjsua_config)>($l0, $r0) in <org.pjsip.pjsua.pjsua: void config_default(org.pjsip.pjsua.pjsua_config)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_config: long getCPtr(org.pjsip.pjsua.pjsua_config)>($r0) in <org.pjsip.pjsua.pjsua: void config_default(org.pjsip.pjsua.pjsua_config)> ==> <org.pjsip.pjsua.pjsua_config: long getCPtr(org.pjsip.pjsua.pjsua_config)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.pjsip.NativeLibManager: java.io.File getLibFileFromPackage(android.content.pm.ApplicationInfo,java.lang.String,boolean)>(r2, $r1, 1) in <com.csipsimple.pjsip.NativeLibManager: java.io.File getBundledStackLibFile(android.content.Context,java.lang.String)> ==> <com.csipsimple.pjsip.NativeLibManager: java.io.File getLibFileFromPackage(android.content.pm.ApplicationInfo,java.lang.String,boolean)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.PreferencesProviderWrapper: android.content.pm.PackageInfo getCurrentPackageInfos(android.content.Context)>($r0) in <com.csipsimple.pjsip.NativeLibManager: java.io.File getBundledStackLibFile(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: android.content.pm.PackageInfo getCurrentPackageInfos(android.content.Context)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_default(long,org.pjsip.pjsua.csipsimple_config)>($l0, $r0) in <org.pjsip.pjsua.pjsua: void csipsimple_config_default(org.pjsip.pjsua.csipsimple_config)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.csipsimple_config: long getCPtr(org.pjsip.pjsua.csipsimple_config)>($r0) in <org.pjsip.pjsua.pjsua: void csipsimple_config_default(org.pjsip.pjsua.csipsimple_config)> ==> <org.pjsip.pjsua.csipsimple_config: long getCPtr(org.pjsip.pjsua.csipsimple_config)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void setCallbackObject(long,org.pjsip.pjsua.Callback)>($l0, $r0) in <org.pjsip.pjsua.pjsua: void setCallbackObject(org.pjsip.pjsua.Callback)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.Callback: long getCPtr(org.pjsip.pjsua.Callback)>($r0) in <org.pjsip.pjsua.pjsua: void setCallbackObject(org.pjsip.pjsua.Callback)> ==> <org.pjsip.pjsua.Callback: long getCPtr(org.pjsip.pjsua.Callback)>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int create()>() in <org.pjsip.pjsua.pjsua: int create()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $r1 = <com.csipsimple.utils.TimerWrapper: java.lang.Object singletonLock> in <com.csipsimple.utils.TimerWrapper: void create(com.csipsimple.service.SipService)> ==> <com.csipsimple.utils.TimerWrapper: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int PJSIP_TRANSPORT_IPV6_get()>() in <org.pjsip.pjsua.pjsip_transport_type_e: void <clinit>()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long WRAPPER_CALLBACK_STRUCT_get()>() in <org.pjsip.pjsua.pjsuaConstants: void <clinit>()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_callback: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsuaConstants: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_callback: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.pjsua_callback: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_callback: void finalize()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_callback: void delete()>() in <org.pjsip.pjsua.pjsua_callback: void finalize()> ==> <org.pjsip.pjsua.pjsua_callback: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_pjsua_callback(long)>($l0) in <org.pjsip.pjsua.pjsua_callback: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_callback: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int)>("PJSIP_TRANSPORT_UNSPECIFIED", 0) in <org.pjsip.pjsua.pjsip_transport_type_e: void <clinit>()> ==> <org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int,int)>("PJSIP_TRANSPORT_IPV6", 8, $i0) in <org.pjsip.pjsua.pjsip_transport_type_e: void <clinit>()> ==> <org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int,int)>
CLINIT edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void <clinit>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void access$1(int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: int access$0()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void <clinit>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void access$1(int)>
CLINIT edge: <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: int next> = $i0 in <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void access$1(int)> ==> <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void <clinit>()>
CLINIT edge: i0 = <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: int next> in <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: int access$0()> ==> <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.TimerWrapper: void <init>(com.csipsimple.service.SipService)>($r0) in <com.csipsimple.utils.TimerWrapper: void create(com.csipsimple.service.SipService)> ==> <com.csipsimple.utils.TimerWrapper: void <init>(com.csipsimple.service.SipService)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.TimerWrapper: void setContext(com.csipsimple.service.SipService)>($r0) in <com.csipsimple.utils.TimerWrapper: void create(com.csipsimple.service.SipService)> ==> <com.csipsimple.utils.TimerWrapper: void setContext(com.csipsimple.service.SipService)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.service.SipWakeLock: void <init>(android.os.PowerManager)>($r7) in <com.csipsimple.utils.TimerWrapper: void setContext(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.SipWakeLock: void <init>(android.os.PowerManager)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.TimerWrapper: void quit()>() in <com.csipsimple.utils.TimerWrapper: void setContext(com.csipsimple.service.SipService)> ==> <com.csipsimple.utils.TimerWrapper: void quit()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("Timer wrap", "Quit this wrapper") in <com.csipsimple.utils.TimerWrapper: void quit()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Timer wrap", "Impossible to destroy timer wrapper", r1) in <com.csipsimple.utils.TimerWrapper: void quit()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("Timer wrap", "Quit this wrapper") in <com.csipsimple.utils.TimerWrapper: void quit()> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
SPECIAL edge: $r10 = specialinvoke r0.<com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)>($i0) in <com.csipsimple.utils.TimerWrapper: void quit()> ==> <com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0) in <com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)> ==> <java.lang.Integer: java.lang.String toString(int)>
CLINIT edge: $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0) in <com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)> ==> <java.lang.Integer: void <clinit>()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipWakeLock: void reset()>() in <com.csipsimple.utils.TimerWrapper: void quit()> ==> <com.csipsimple.service.SipWakeLock: void reset()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("SipWakeLock", $r4) in <com.csipsimple.service.SipWakeLock: void reset()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("SipWakeLock", $r4) in <com.csipsimple.service.SipWakeLock: void reset()> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipWakeLock: void release(java.lang.Object)>(null) in <com.csipsimple.service.SipWakeLock: void reset()> ==> <com.csipsimple.service.SipWakeLock: void release(java.lang.Object)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("SipWakeLock", $r5) in <com.csipsimple.service.SipWakeLock: void release(java.lang.Object)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("SipWakeLock", $r5) in <com.csipsimple.service.SipWakeLock: void release(java.lang.Object)> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.TimerWrapper: void setContext(com.csipsimple.service.SipService)>($r1) in <com.csipsimple.utils.TimerWrapper: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.utils.TimerWrapper: void setContext(com.csipsimple.service.SipService)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pj_str_t: void finalize()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pj_str_t: void delete()>() in <org.pjsip.pjsua.pj_str_t: void finalize()> ==> <org.pjsip.pjsua.pj_str_t: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_pj_str_t(long)>($l0) in <org.pjsip.pjsua.pj_str_t: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l1, 1) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t get_error_message(int)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
VIRTUAL edge: $i0 = virtualinvoke $r0.<org.pjsip.pjsua.pj_str_t: int getSlen()>() in <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: int getSlen()>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.pjsip.pjsua.pj_str_t: java.lang.String getPtr()>() in <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: java.lang.String getPtr()>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int pj_str_t_slen_get(long,org.pjsip.pjsua.pj_str_t)>($l1, r0) in <org.pjsip.pjsua.pj_str_t: int getSlen()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: java.lang.String pj_str_t_ptr_get(long,org.pjsip.pjsua.pj_str_t)>($l0, r0) in <org.pjsip.pjsua.pj_str_t: java.lang.String getPtr()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
VIRTUAL edge: $r26 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
VIRTUAL edge: $r30 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <java.lang.String: java.lang.String trim()>
SPECIAL edge: specialinvoke $r10.<com.csipsimple.service.MediaManager: void <init>(com.csipsimple.service.SipService)>($r7) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.service.MediaManager: void <init>(com.csipsimple.service.SipService)>
VIRTUAL edge: virtualinvoke $r10.<com.csipsimple.service.MediaManager: void startService()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.service.MediaManager: void startService()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.utils.accessibility.AccessibilityWrapper: com.csipsimple.utils.accessibility.AccessibilityWrapper getInstance()>() in <com.csipsimple.service.MediaManager: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.utils.accessibility.AccessibilityWrapper: com.csipsimple.utils.accessibility.AccessibilityWrapper getInstance()>
CLINIT edge: <com.csipsimple.service.MediaManager: int modeSipInCall> = $i0 in <com.csipsimple.service.MediaManager: void startService()> ==> <com.csipsimple.service.MediaManager: void <clinit>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.audio.AudioFocusWrapper: com.csipsimple.utils.audio.AudioFocusWrapper getInstance()>() in <com.csipsimple.service.MediaManager: void startService()> ==> <com.csipsimple.utils.audio.AudioFocusWrapper: com.csipsimple.utils.audio.AudioFocusWrapper getInstance()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.bluetooth.BluetoothWrapper: com.csipsimple.utils.bluetooth.BluetoothWrapper getInstance(android.content.Context)>($r3) in <com.csipsimple.service.MediaManager: void startService()> ==> <com.csipsimple.utils.bluetooth.BluetoothWrapper: com.csipsimple.utils.bluetooth.BluetoothWrapper getInstance(android.content.Context)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(4) in <com.csipsimple.utils.accessibility.AccessibilityWrapper: com.csipsimple.utils.accessibility.AccessibilityWrapper getInstance()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(8) in <com.csipsimple.utils.audio.AudioFocusWrapper: com.csipsimple.utils.audio.AudioFocusWrapper getInstance()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(14) in <com.csipsimple.utils.bluetooth.BluetoothWrapper: com.csipsimple.utils.bluetooth.BluetoothWrapper getInstance(android.content.Context)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.utils.bluetooth.BluetoothUtils3: void <init>()>() in <com.csipsimple.utils.bluetooth.BluetoothWrapper: com.csipsimple.utils.bluetooth.BluetoothWrapper getInstance(android.content.Context)> ==> <com.csipsimple.utils.bluetooth.BluetoothUtils3: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.bluetooth.BluetoothWrapper: void <init>()>() in <com.csipsimple.utils.bluetooth.BluetoothUtils3: void <init>()> ==> <com.csipsimple.utils.bluetooth.BluetoothWrapper: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.bluetooth.BluetoothWrapper: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.utils.bluetooth.BluetoothUtils8: void <init>()>() in <com.csipsimple.utils.bluetooth.BluetoothWrapper: com.csipsimple.utils.bluetooth.BluetoothWrapper getInstance(android.content.Context)> ==> <com.csipsimple.utils.bluetooth.BluetoothUtils8: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.utils.bluetooth.BluetoothUtils8$1: void <init>(com.csipsimple.utils.bluetooth.BluetoothUtils8)>(r0) in <com.csipsimple.utils.bluetooth.BluetoothUtils8: void <init>()> ==> <com.csipsimple.utils.bluetooth.BluetoothUtils8$1: void <init>(com.csipsimple.utils.bluetooth.BluetoothUtils8)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.bluetooth.BluetoothWrapper: void <init>()>() in <com.csipsimple.utils.bluetooth.BluetoothUtils8: void <init>()> ==> <com.csipsimple.utils.bluetooth.BluetoothWrapper: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.bluetooth.BluetoothUtils14: void <init>()>() in <com.csipsimple.utils.bluetooth.BluetoothWrapper: com.csipsimple.utils.bluetooth.BluetoothWrapper getInstance(android.content.Context)> ==> <com.csipsimple.utils.bluetooth.BluetoothUtils14: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.bluetooth.BluetoothUtils8: void <init>()>() in <com.csipsimple.utils.bluetooth.BluetoothUtils14: void <init>()> ==> <com.csipsimple.utils.bluetooth.BluetoothUtils8: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.bluetooth.BluetoothWrapper: void setContext(android.content.Context)>($r0) in <com.csipsimple.utils.bluetooth.BluetoothWrapper: com.csipsimple.utils.bluetooth.BluetoothWrapper getInstance(android.content.Context)> ==> <com.csipsimple.utils.bluetooth.BluetoothUtils8: void setContext(android.content.Context)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.bluetooth.BluetoothWrapper: void setContext(android.content.Context)>($r0) in <com.csipsimple.utils.bluetooth.BluetoothWrapper: com.csipsimple.utils.bluetooth.BluetoothWrapper getInstance(android.content.Context)> ==> <com.csipsimple.utils.bluetooth.BluetoothUtils3: void setContext(android.content.Context)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("BT8", "Cant get default bluetooth adapter ", r2) in <com.csipsimple.utils.bluetooth.BluetoothUtils8: void setContext(android.content.Context)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("BT8", "Cant get default bluetooth adapter ", r2) in <com.csipsimple.utils.bluetooth.BluetoothUtils8: void setContext(android.content.Context)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.bluetooth.BluetoothWrapper: void setContext(android.content.Context)>($r1) in <com.csipsimple.utils.bluetooth.BluetoothUtils8: void setContext(android.content.Context)> ==> <com.csipsimple.utils.bluetooth.BluetoothWrapper: void setContext(android.content.Context)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.audio.AudioFocus3: void <init>()>() in <com.csipsimple.utils.audio.AudioFocusWrapper: com.csipsimple.utils.audio.AudioFocusWrapper getInstance()> ==> <com.csipsimple.utils.audio.AudioFocus3: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.audio.AudioFocusWrapper: void <init>()>() in <com.csipsimple.utils.audio.AudioFocus3: void <init>()> ==> <com.csipsimple.utils.audio.AudioFocusWrapper: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.audio.AudioFocusWrapper: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.utils.audio.AudioFocus8: void <init>()>() in <com.csipsimple.utils.audio.AudioFocusWrapper: com.csipsimple.utils.audio.AudioFocusWrapper getInstance()> ==> <com.csipsimple.utils.audio.AudioFocus8: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.utils.audio.AudioFocus8$1: void <init>(com.csipsimple.utils.audio.AudioFocus8)>(r0) in <com.csipsimple.utils.audio.AudioFocus8: void <init>()> ==> <com.csipsimple.utils.audio.AudioFocus8$1: void <init>(com.csipsimple.utils.audio.AudioFocus8)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.audio.AudioFocus8$1: void <init>(com.csipsimple.utils.audio.AudioFocus8)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.audio.AudioFocusWrapper: void <init>()>() in <com.csipsimple.utils.audio.AudioFocus8: void <init>()> ==> <com.csipsimple.utils.audio.AudioFocusWrapper: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.accessibility.Accessibility3: void <init>()>() in <com.csipsimple.utils.accessibility.AccessibilityWrapper: com.csipsimple.utils.accessibility.AccessibilityWrapper getInstance()> ==> <com.csipsimple.utils.accessibility.Accessibility3: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.accessibility.AccessibilityWrapper: void <init>()>() in <com.csipsimple.utils.accessibility.Accessibility3: void <init>()> ==> <com.csipsimple.utils.accessibility.AccessibilityWrapper: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.accessibility.AccessibilityWrapper: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.utils.accessibility.Accessibility4: void <init>()>() in <com.csipsimple.utils.accessibility.AccessibilityWrapper: com.csipsimple.utils.accessibility.AccessibilityWrapper getInstance()> ==> <com.csipsimple.utils.accessibility.Accessibility4: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.accessibility.AccessibilityWrapper: void <init>()>() in <com.csipsimple.utils.accessibility.Accessibility4: void <init>()> ==> <com.csipsimple.utils.accessibility.AccessibilityWrapper: void <init>()>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.utils.audio.AudioFocusWrapper: void init(com.csipsimple.service.SipService,android.media.AudioManager)>($r3, $r1) in <com.csipsimple.service.MediaManager: void startService()> ==> <com.csipsimple.utils.audio.AudioFocus8: void init(com.csipsimple.service.SipService,android.media.AudioManager)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.utils.audio.AudioFocusWrapper: void init(com.csipsimple.service.SipService,android.media.AudioManager)>($r3, $r1) in <com.csipsimple.service.MediaManager: void startService()> ==> <com.csipsimple.utils.audio.AudioFocus3: void init(com.csipsimple.service.SipService,android.media.AudioManager)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>() in <com.csipsimple.utils.audio.AudioFocus8: void init(com.csipsimple.service.SipService,android.media.AudioManager)> ==> <java.lang.Class: java.lang.String getName()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.bluetooth.BluetoothWrapper: void setBluetoothChangeListener(com.csipsimple.utils.bluetooth.BluetoothWrapper$BluetoothChangeListener)>(r0) in <com.csipsimple.service.MediaManager: void startService()> ==> <com.csipsimple.utils.bluetooth.BluetoothWrapper: void setBluetoothChangeListener(com.csipsimple.utils.bluetooth.BluetoothWrapper$BluetoothChangeListener)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.bluetooth.BluetoothWrapper: void register()>() in <com.csipsimple.service.MediaManager: void startService()> ==> <com.csipsimple.utils.bluetooth.BluetoothUtils8: void register()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.bluetooth.BluetoothWrapper: void register()>() in <com.csipsimple.service.MediaManager: void startService()> ==> <com.csipsimple.utils.bluetooth.BluetoothUtils3: void register()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("BT8", "Register BT media receiver") in <com.csipsimple.utils.bluetooth.BluetoothUtils8: void register()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("BT8", "Register BT media receiver") in <com.csipsimple.utils.bluetooth.BluetoothUtils8: void register()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.utils.Ringer: void <init>(android.content.Context)>($r1) in <com.csipsimple.service.MediaManager: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.utils.Ringer: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.Ringer: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.utils.accessibility.AccessibilityWrapper: void init(android.content.Context)>($r1) in <com.csipsimple.service.MediaManager: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.utils.accessibility.Accessibility4: void init(android.content.Context)>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.utils.accessibility.AccessibilityWrapper: void init(android.content.Context)>($r1) in <com.csipsimple.service.MediaManager: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.utils.accessibility.Accessibility3: void init(android.content.Context)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.service.MediaManager: void <init>(com.csipsimple.service.SipService)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.MediaManager: void restoreAudioState()>() in <com.csipsimple.service.MediaManager: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.MediaManager: void restoreAudioState()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.Compatibility: int getInCallStream()>() in <com.csipsimple.service.MediaManager: void restoreAudioState()> ==> <com.csipsimple.utils.Compatibility: int getInCallStream()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)>($i0, $i1, 0) in <com.csipsimple.service.MediaManager: void restoreAudioState()> ==> <com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.service.MediaManager: int getAudioTargetMode()>() in <com.csipsimple.service.MediaManager: void restoreAudioState()> ==> <com.csipsimple.service.MediaManager: int getAudioTargetMode()>
CLINIT edge: i1 = <com.csipsimple.service.MediaManager: int modeSipInCall> in <com.csipsimple.service.MediaManager: int getAudioTargetMode()> ==> <com.csipsimple.service.MediaManager: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("MediaManager", $r4) in <com.csipsimple.service.MediaManager: int getAudioTargetMode()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("MediaManager", $r4) in <com.csipsimple.service.MediaManager: int getAudioTargetMode()> ==> <com.csipsimple.utils.Log: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)>($i0, $i1) in <com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)> ==> <com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.pjsip.UAStateReceiver: void <init>()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.pjsip.UAStateReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.pjsip.UAStateReceiver: void initService(com.csipsimple.pjsip.PjSipService)>(r0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.pjsip.UAStateReceiver: void initService(com.csipsimple.pjsip.PjSipService)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void <init>(android.os.Looper,com.csipsimple.pjsip.UAStateReceiver)>($r6, r0) in <com.csipsimple.pjsip.UAStateReceiver: void initService(com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void <init>(android.os.Looper,com.csipsimple.pjsip.UAStateReceiver)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP UA Receiver", "Create async worker !!!") in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void <init>(android.os.Looper,com.csipsimple.pjsip.UAStateReceiver)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP UA Receiver", "Create async worker !!!") in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void <init>(android.os.Looper,com.csipsimple.pjsip.UAStateReceiver)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.Callback: void <init>()>() in <com.csipsimple.pjsip.UAStateReceiver: void <init>()> ==> <org.pjsip.pjsua.Callback: void <init>()>
FINALIZE edge: null in <org.pjsip.pjsua.Callback: void <init>()> ==> <org.pjsip.pjsua.Callback: void finalize()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long new_Callback()>() in <org.pjsip.pjsua.Callback: void <init>()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.Callback: void delete()>() in <org.pjsip.pjsua.Callback: void finalize()> ==> <org.pjsip.pjsua.Callback: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_Callback(long)>($l0) in <org.pjsip.pjsua.Callback: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.Callback: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.Callback: void <init>()> ==> <org.pjsip.pjsua.Callback: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.Callback: void <init>(long,boolean)> ==> <org.pjsip.pjsua.Callback: void finalize()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.Callback: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r2.<org.pjsip.pjsua.csipsimple_config: void <init>()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void <init>()>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setUse_compact_form_headers(int)>(i0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setUse_compact_form_headers(int)>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setUse_compact_form_sdp(int)>(i0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setUse_compact_form_sdp(int)>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setUse_no_update(int)>(i0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setUse_no_update(int)>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setTcp_keep_alive_interval(int)>(i0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setTcp_keep_alive_interval(int)>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setTls_keep_alive_interval(int)>(i0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setTls_keep_alive_interval(int)>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setDisable_tcp_switch(int)>(i0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setDisable_tcp_switch(int)>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setAdd_bandwidth_tias_in_sdp(int)>(i0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setAdd_bandwidth_tias_in_sdp(int)>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setTsx_t1_timeout(int)>(i0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setTsx_t1_timeout(int)>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setTsx_t2_timeout(int)>(i0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setTsx_t2_timeout(int)>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setTsx_t4_timeout(int)>(i0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setTsx_t4_timeout(int)>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setTsx_td_timeout(int)>(i0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setTsx_td_timeout(int)>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setUse_zrtp(int)>(i0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setUse_zrtp(int)>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setStorage_folder(org.pjsip.pjsua.pj_str_t)>($r12) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setStorage_folder(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $r14 = virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory[] getExtra_aud_codecs()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory[] getExtra_aud_codecs()>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setExtra_aud_codecs_cnt(long)>($l3) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setExtra_aud_codecs_cnt(long)>
VIRTUAL edge: $r17 = virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getAudio_implementation()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getAudio_implementation()>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setAudio_implementation(org.pjsip.pjsua.dynamic_factory)>($r17) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setAudio_implementation(org.pjsip.pjsua.dynamic_factory)>
VIRTUAL edge: $r17 = virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getVideo_render_implementation()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getVideo_render_implementation()>
VIRTUAL edge: $r17 = virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getVideo_capture_implementation()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getVideo_capture_implementation()>
VIRTUAL edge: $r14 = virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory[] getExtra_vid_codecs()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory[] getExtra_vid_codecs()>
VIRTUAL edge: $r14 = virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory[] getExtra_vid_codecs_destroy()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory[] getExtra_vid_codecs_destroy()>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: void setExtra_vid_codecs_cnt(long)>(1L) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: void setExtra_vid_codecs_cnt(long)>
VIRTUAL edge: $r17 = virtualinvoke r2.<org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getVid_converter()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getVid_converter()>
FINALIZE edge: null in <org.pjsip.pjsua.csipsimple_config: void <init>()> ==> <org.pjsip.pjsua.csipsimple_config: void finalize()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long new_csipsimple_config()>() in <org.pjsip.pjsua.csipsimple_config: void <init>()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_use_compact_form_headers_set(long,org.pjsip.pjsua.csipsimple_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.csipsimple_config: void setUse_compact_form_headers(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_use_compact_form_sdp_set(long,org.pjsip.pjsua.csipsimple_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.csipsimple_config: void setUse_compact_form_sdp(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_use_no_update_set(long,org.pjsip.pjsua.csipsimple_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.csipsimple_config: void setUse_no_update(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_tcp_keep_alive_interval_set(long,org.pjsip.pjsua.csipsimple_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.csipsimple_config: void setTcp_keep_alive_interval(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_tls_keep_alive_interval_set(long,org.pjsip.pjsua.csipsimple_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.csipsimple_config: void setTls_keep_alive_interval(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_disable_tcp_switch_set(long,org.pjsip.pjsua.csipsimple_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.csipsimple_config: void setDisable_tcp_switch(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_add_bandwidth_tias_in_sdp_set(long,org.pjsip.pjsua.csipsimple_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.csipsimple_config: void setAdd_bandwidth_tias_in_sdp(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_tsx_t1_timeout_set(long,org.pjsip.pjsua.csipsimple_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.csipsimple_config: void setTsx_t1_timeout(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_tsx_t2_timeout_set(long,org.pjsip.pjsua.csipsimple_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.csipsimple_config: void setTsx_t2_timeout(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_tsx_t4_timeout_set(long,org.pjsip.pjsua.csipsimple_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.csipsimple_config: void setTsx_t4_timeout(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_tsx_td_timeout_set(long,org.pjsip.pjsua.csipsimple_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.csipsimple_config: void setTsx_td_timeout(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_use_zrtp_set(long,org.pjsip.pjsua.csipsimple_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.csipsimple_config: void setUse_zrtp(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_storage_folder_set(long,org.pjsip.pjsua.csipsimple_config,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.csipsimple_config: void setStorage_folder(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.csipsimple_config: void setStorage_folder(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long[] csipsimple_config_extra_aud_codecs_get(long,org.pjsip.pjsua.csipsimple_config)>($l0, r0) in <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory[] getExtra_aud_codecs()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.dynamic_factory: org.pjsip.pjsua.dynamic_factory[] cArrayWrap(long[],boolean)>($r1, 0) in <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory[] getExtra_aud_codecs()> ==> <org.pjsip.pjsua.dynamic_factory: org.pjsip.pjsua.dynamic_factory[] cArrayWrap(long[],boolean)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_extra_aud_codecs_cnt_set(long,org.pjsip.pjsua.csipsimple_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.csipsimple_config: void setExtra_aud_codecs_cnt(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long csipsimple_config_audio_implementation_get(long,org.pjsip.pjsua.csipsimple_config)>($l0, r0) in <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getAudio_implementation()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_audio_implementation_set(long,org.pjsip.pjsua.csipsimple_config,long,org.pjsip.pjsua.dynamic_factory)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.csipsimple_config: void setAudio_implementation(org.pjsip.pjsua.dynamic_factory)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.dynamic_factory: long getCPtr(org.pjsip.pjsua.dynamic_factory)>($r1) in <org.pjsip.pjsua.csipsimple_config: void setAudio_implementation(org.pjsip.pjsua.dynamic_factory)> ==> <org.pjsip.pjsua.dynamic_factory: long getCPtr(org.pjsip.pjsua.dynamic_factory)>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long csipsimple_config_video_render_implementation_get(long,org.pjsip.pjsua.csipsimple_config)>($l0, r0) in <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getVideo_render_implementation()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long csipsimple_config_video_capture_implementation_get(long,org.pjsip.pjsua.csipsimple_config)>($l0, r0) in <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getVideo_capture_implementation()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long[] csipsimple_config_extra_vid_codecs_get(long,org.pjsip.pjsua.csipsimple_config)>($l0, r0) in <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory[] getExtra_vid_codecs()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.dynamic_factory: org.pjsip.pjsua.dynamic_factory[] cArrayWrap(long[],boolean)>($r1, 0) in <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory[] getExtra_vid_codecs()> ==> <org.pjsip.pjsua.dynamic_factory: org.pjsip.pjsua.dynamic_factory[] cArrayWrap(long[],boolean)>
CLINIT edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long[] csipsimple_config_extra_vid_codecs_destroy_get(long,org.pjsip.pjsua.csipsimple_config)>($l0, r0) in <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory[] getExtra_vid_codecs_destroy()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.dynamic_factory: org.pjsip.pjsua.dynamic_factory[] cArrayWrap(long[],boolean)>($r1, 0) in <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory[] getExtra_vid_codecs_destroy()> ==> <org.pjsip.pjsua.dynamic_factory: org.pjsip.pjsua.dynamic_factory[] cArrayWrap(long[],boolean)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_config_extra_vid_codecs_cnt_set(long,org.pjsip.pjsua.csipsimple_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.csipsimple_config: void setExtra_vid_codecs_cnt(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long csipsimple_config_vid_converter_get(long,org.pjsip.pjsua.csipsimple_config)>($l0, r0) in <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getVid_converter()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.dynamic_factory: void <init>(long,boolean)>($l0, $z0) in <org.pjsip.pjsua.dynamic_factory: org.pjsip.pjsua.dynamic_factory[] cArrayWrap(long[],boolean)> ==> <org.pjsip.pjsua.dynamic_factory: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.dynamic_factory: void <init>(long,boolean)> ==> <org.pjsip.pjsua.dynamic_factory: void finalize()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.dynamic_factory: void delete()>() in <org.pjsip.pjsua.dynamic_factory: void finalize()> ==> <org.pjsip.pjsua.dynamic_factory: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_dynamic_factory(long)>($l0) in <org.pjsip.pjsua.dynamic_factory: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.dynamic_factory: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.csipsimple_config: void delete()>() in <org.pjsip.pjsua.csipsimple_config: void finalize()> ==> <org.pjsip.pjsua.csipsimple_config: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_csipsimple_config(long)>($l0) in <org.pjsip.pjsua.csipsimple_config: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.dynamic_factory: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getVid_converter()> ==> <org.pjsip.pjsua.dynamic_factory: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.dynamic_factory: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getVideo_capture_implementation()> ==> <org.pjsip.pjsua.dynamic_factory: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.dynamic_factory: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getVideo_render_implementation()> ==> <org.pjsip.pjsua.dynamic_factory: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.dynamic_factory: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getAudio_implementation()> ==> <org.pjsip.pjsua.dynamic_factory: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.csipsimple_config: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.csipsimple_config: void <init>()> ==> <org.pjsip.pjsua.csipsimple_config: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.csipsimple_config: void <init>(long,boolean)> ==> <org.pjsip.pjsua.csipsimple_config: void finalize()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.csipsimple_config: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r17.<org.pjsip.pjsua.dynamic_factory: void setInit_factory_name(org.pjsip.pjsua.pj_str_t)>($r12) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.dynamic_factory: void setInit_factory_name(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r17.<org.pjsip.pjsua.dynamic_factory: void setShared_lib_path(org.pjsip.pjsua.pj_str_t)>($r12) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.dynamic_factory: void setShared_lib_path(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void dynamic_factory_init_factory_name_set(long,org.pjsip.pjsua.dynamic_factory,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.dynamic_factory: void setInit_factory_name(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.dynamic_factory: void setInit_factory_name(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void dynamic_factory_shared_lib_path_set(long,org.pjsip.pjsua.dynamic_factory,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.dynamic_factory: void setShared_lib_path(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.dynamic_factory: void setShared_lib_path(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke r4.<org.pjsip.pjsua.pjsua_media_config: void <init>()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_media_config: void <init>()>
VIRTUAL edge: virtualinvoke r4.<org.pjsip.pjsua.pjsua_media_config: void setChannel_count(long)>(1L) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_media_config: void setChannel_count(long)>
VIRTUAL edge: virtualinvoke r4.<org.pjsip.pjsua.pjsua_media_config: void setSnd_auto_close_time(int)>($i1) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_media_config: void setSnd_auto_close_time(int)>
VIRTUAL edge: virtualinvoke r4.<org.pjsip.pjsua.pjsua_media_config: void setEc_tail_len(long)>($l3) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_media_config: void setEc_tail_len(long)>
VIRTUAL edge: virtualinvoke r4.<org.pjsip.pjsua.pjsua_media_config: void setEc_options(long)>($l5) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_media_config: void setEc_options(long)>
VIRTUAL edge: virtualinvoke r4.<org.pjsip.pjsua.pjsua_media_config: void setNo_vad(int)>($b4) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_media_config: void setNo_vad(int)>
VIRTUAL edge: virtualinvoke r4.<org.pjsip.pjsua.pjsua_media_config: void setQuality(long)>($l5) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_media_config: void setQuality(long)>
VIRTUAL edge: virtualinvoke r4.<org.pjsip.pjsua.pjsua_media_config: void setClock_rate(long)>($l3) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_media_config: void setClock_rate(long)>
VIRTUAL edge: virtualinvoke r4.<org.pjsip.pjsua.pjsua_media_config: void setAudio_frame_ptime(long)>($l3) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_media_config: void setAudio_frame_ptime(long)>
VIRTUAL edge: virtualinvoke r4.<org.pjsip.pjsua.pjsua_media_config: void setHas_ioqueue(int)>(0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_media_config: void setHas_ioqueue(int)>
VIRTUAL edge: virtualinvoke r4.<org.pjsip.pjsua.pjsua_media_config: void setEnable_ice(int)>($i1) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_media_config: void setEnable_ice(int)>
VIRTUAL edge: virtualinvoke r4.<org.pjsip.pjsua.pjsua_media_config: void setEnable_turn(int)>($i1) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_media_config: void setEnable_turn(int)>
VIRTUAL edge: virtualinvoke r4.<org.pjsip.pjsua.pjsua_media_config: void setTurn_server(org.pjsip.pjsua.pj_str_t)>($r12) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_media_config: void setTurn_server(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $r28 = virtualinvoke r4.<org.pjsip.pjsua.pjsua_media_config: org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred getTurn_auth_cred()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_media_config: org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred getTurn_auth_cred()>
FINALIZE edge: null in <org.pjsip.pjsua.pjsua_media_config: void <init>()> ==> <org.pjsip.pjsua.pjsua_media_config: void finalize()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long new_pjsua_media_config()>() in <org.pjsip.pjsua.pjsua_media_config: void <init>()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_media_config_channel_count_set(long,org.pjsip.pjsua.pjsua_media_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_media_config: void setChannel_count(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_media_config_snd_auto_close_time_set(long,org.pjsip.pjsua.pjsua_media_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_media_config: void setSnd_auto_close_time(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_media_config_ec_tail_len_set(long,org.pjsip.pjsua.pjsua_media_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_media_config: void setEc_tail_len(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_media_config_ec_options_set(long,org.pjsip.pjsua.pjsua_media_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_media_config: void setEc_options(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_media_config_no_vad_set(long,org.pjsip.pjsua.pjsua_media_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_media_config: void setNo_vad(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_media_config_quality_set(long,org.pjsip.pjsua.pjsua_media_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_media_config: void setQuality(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_media_config_clock_rate_set(long,org.pjsip.pjsua.pjsua_media_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_media_config: void setClock_rate(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_media_config_audio_frame_ptime_set(long,org.pjsip.pjsua.pjsua_media_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_media_config: void setAudio_frame_ptime(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_media_config_has_ioqueue_set(long,org.pjsip.pjsua.pjsua_media_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_media_config: void setHas_ioqueue(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_media_config_enable_ice_set(long,org.pjsip.pjsua.pjsua_media_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_media_config: void setEnable_ice(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_media_config_enable_turn_set(long,org.pjsip.pjsua.pjsua_media_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_media_config: void setEnable_turn(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_media_config_turn_server_set(long,org.pjsip.pjsua.pjsua_media_config,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_media_config: void setTurn_server(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_media_config: void setTurn_server(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long pjsua_media_config_turn_auth_cred_get(long,org.pjsip.pjsua.pjsua_media_config)>($l0, r0) in <org.pjsip.pjsua.pjsua_media_config: org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred getTurn_auth_cred()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_media_config: void delete()>() in <org.pjsip.pjsua.pjsua_media_config: void finalize()> ==> <org.pjsip.pjsua.pjsua_media_config: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_pjsua_media_config(long)>($l0) in <org.pjsip.pjsua.pjsua_media_config: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_media_config: org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred getTurn_auth_cred()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_media_config: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_media_config: void <init>()> ==> <org.pjsip.pjsua.pjsua_media_config: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.pjsua_media_config: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_media_config: void finalize()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_media_config: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r3.<org.pjsip.pjsua.pjsua_logging_config: void <init>()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_logging_config: void <init>()>
VIRTUAL edge: virtualinvoke r3.<org.pjsip.pjsua.pjsua_logging_config: void setConsole_level(long)>($l3) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_logging_config: void setConsole_level(long)>
VIRTUAL edge: virtualinvoke r3.<org.pjsip.pjsua.pjsua_logging_config: void setLevel(long)>($l3) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_logging_config: void setLevel(long)>
VIRTUAL edge: virtualinvoke r3.<org.pjsip.pjsua.pjsua_logging_config: void setMsg_logging(int)>($i1) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_logging_config: void setMsg_logging(int)>
VIRTUAL edge: virtualinvoke r3.<org.pjsip.pjsua.pjsua_logging_config: void setLog_filename(org.pjsip.pjsua.pj_str_t)>($r12) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_logging_config: void setLog_filename(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke r3.<org.pjsip.pjsua.pjsua_logging_config: void setLog_file_flags(long)>(4360L) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_logging_config: void setLog_file_flags(long)>
FINALIZE edge: null in <org.pjsip.pjsua.pjsua_logging_config: void <init>()> ==> <org.pjsip.pjsua.pjsua_logging_config: void finalize()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long new_pjsua_logging_config()>() in <org.pjsip.pjsua.pjsua_logging_config: void <init>()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_logging_config_console_level_set(long,org.pjsip.pjsua.pjsua_logging_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_logging_config: void setConsole_level(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_logging_config_level_set(long,org.pjsip.pjsua.pjsua_logging_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_logging_config: void setLevel(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_logging_config_msg_logging_set(long,org.pjsip.pjsua.pjsua_logging_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_logging_config: void setMsg_logging(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_logging_config_log_filename_set(long,org.pjsip.pjsua.pjsua_logging_config,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_logging_config: void setLog_filename(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_logging_config: void setLog_filename(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_logging_config_log_file_flags_set(long,org.pjsip.pjsua.pjsua_logging_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_logging_config: void setLog_file_flags(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_logging_config: void delete()>() in <org.pjsip.pjsua.pjsua_logging_config: void finalize()> ==> <org.pjsip.pjsua.pjsua_logging_config: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_pjsua_logging_config(long)>($l0) in <org.pjsip.pjsua.pjsua_logging_config: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_logging_config: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_logging_config: void <init>()> ==> <org.pjsip.pjsua.pjsua_logging_config: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.pjsua_logging_config: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_logging_config: void finalize()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_logging_config: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r1.<org.pjsip.pjsua.pjsua_config: void <init>()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_config: void <init>()>
VIRTUAL edge: virtualinvoke r1.<org.pjsip.pjsua.pjsua_config: void setCb(org.pjsip.pjsua.pjsua_callback)>($r22) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_config: void setCb(org.pjsip.pjsua.pjsua_callback)>
VIRTUAL edge: virtualinvoke r1.<org.pjsip.pjsua.pjsua_config: void setUser_agent(org.pjsip.pjsua.pj_str_t)>($r12) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_config: void setUser_agent(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke r1.<org.pjsip.pjsua.pjsua_config: void setThread_cnt(long)>($l3) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_config: void setThread_cnt(long)>
VIRTUAL edge: virtualinvoke r1.<org.pjsip.pjsua.pjsua_config: void setUse_srtp(org.pjsip.pjsua.pjmedia_srtp_use)>($r23) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_config: void setUse_srtp(org.pjsip.pjsua.pjmedia_srtp_use)>
VIRTUAL edge: virtualinvoke r1.<org.pjsip.pjsua.pjsua_config: void setSrtp_secure_signaling(int)>(0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_config: void setSrtp_secure_signaling(int)>
VIRTUAL edge: virtualinvoke r1.<org.pjsip.pjsua.pjsua_config: void setNat_type_in_sdp(int)>(0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_config: void setNat_type_in_sdp(int)>
VIRTUAL edge: $r24 = virtualinvoke r1.<org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pjsip_timer_setting getTimer_setting()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pjsip_timer_setting getTimer_setting()>
VIRTUAL edge: virtualinvoke r1.<org.pjsip.pjsua.pjsua_config: void setTimer_setting(org.pjsip.pjsua.pjsip_timer_setting)>($r24) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_config: void setTimer_setting(org.pjsip.pjsua.pjsip_timer_setting)>
VIRTUAL edge: virtualinvoke r1.<org.pjsip.pjsua.pjsua_config: void setNameserver_count(long)>($l3) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_config: void setNameserver_count(long)>
VIRTUAL edge: virtualinvoke r1.<org.pjsip.pjsua.pjsua_config: void setNameserver(org.pjsip.pjsua.pj_str_t[])>($r25) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_config: void setNameserver(org.pjsip.pjsua.pj_str_t[])>
VIRTUAL edge: virtualinvoke r1.<org.pjsip.pjsua.pjsua_config: void setStun_srv_cnt(long)>($l3) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_config: void setStun_srv_cnt(long)>
VIRTUAL edge: $r25 = virtualinvoke r1.<org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pj_str_t[] getStun_srv()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pj_str_t[] getStun_srv()>
VIRTUAL edge: virtualinvoke r1.<org.pjsip.pjsua.pjsua_config: void setStun_srv(org.pjsip.pjsua.pj_str_t[])>($r25) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_config: void setStun_srv(org.pjsip.pjsua.pj_str_t[])>
VIRTUAL edge: virtualinvoke r1.<org.pjsip.pjsua.pjsua_config: void setStun_map_use_stun2(int)>($i1) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsua_config: void setStun_map_use_stun2(int)>
FINALIZE edge: null in <org.pjsip.pjsua.pjsua_config: void <init>()> ==> <org.pjsip.pjsua.pjsua_config: void finalize()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long new_pjsua_config()>() in <org.pjsip.pjsua.pjsua_config: void <init>()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_config_cb_set(long,org.pjsip.pjsua.pjsua_config,long,org.pjsip.pjsua.pjsua_callback)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_config: void setCb(org.pjsip.pjsua.pjsua_callback)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_callback: long getCPtr(org.pjsip.pjsua.pjsua_callback)>($r1) in <org.pjsip.pjsua.pjsua_config: void setCb(org.pjsip.pjsua.pjsua_callback)> ==> <org.pjsip.pjsua.pjsua_callback: long getCPtr(org.pjsip.pjsua.pjsua_callback)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_config_user_agent_set(long,org.pjsip.pjsua.pjsua_config,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_config: void setUser_agent(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_config: void setUser_agent(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_config_thread_cnt_set(long,org.pjsip.pjsua.pjsua_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_config: void setThread_cnt(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_config_use_srtp_set(long,org.pjsip.pjsua.pjsua_config,int)>($l0, r0, $i1) in <org.pjsip.pjsua.pjsua_config: void setUse_srtp(org.pjsip.pjsua.pjmedia_srtp_use)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_config_srtp_secure_signaling_set(long,org.pjsip.pjsua.pjsua_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_config: void setSrtp_secure_signaling(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_config_nat_type_in_sdp_set(long,org.pjsip.pjsua.pjsua_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_config: void setNat_type_in_sdp(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long pjsua_config_timer_setting_get(long,org.pjsip.pjsua.pjsua_config)>($l0, r0) in <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pjsip_timer_setting getTimer_setting()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_config_timer_setting_set(long,org.pjsip.pjsua.pjsua_config,long,org.pjsip.pjsua.pjsip_timer_setting)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_config: void setTimer_setting(org.pjsip.pjsua.pjsip_timer_setting)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsip_timer_setting: long getCPtr(org.pjsip.pjsua.pjsip_timer_setting)>($r1) in <org.pjsip.pjsua.pjsua_config: void setTimer_setting(org.pjsip.pjsua.pjsip_timer_setting)> ==> <org.pjsip.pjsua.pjsip_timer_setting: long getCPtr(org.pjsip.pjsua.pjsip_timer_setting)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_config_nameserver_count_set(long,org.pjsip.pjsua.pjsua_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_config: void setNameserver_count(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_config_nameserver_set(long,org.pjsip.pjsua.pjsua_config,long[])>($l0, r0, $r2) in <org.pjsip.pjsua.pjsua_config: void setNameserver(org.pjsip.pjsua.pj_str_t[])> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long[] cArrayUnwrap(org.pjsip.pjsua.pj_str_t[])>($r1) in <org.pjsip.pjsua.pjsua_config: void setNameserver(org.pjsip.pjsua.pj_str_t[])> ==> <org.pjsip.pjsua.pj_str_t: long[] cArrayUnwrap(org.pjsip.pjsua.pj_str_t[])>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_config_stun_srv_cnt_set(long,org.pjsip.pjsua.pjsua_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_config: void setStun_srv_cnt(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long[] pjsua_config_stun_srv_get(long,org.pjsip.pjsua.pjsua_config)>($l0, r0) in <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pj_str_t[] getStun_srv()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.pj_str_t: org.pjsip.pjsua.pj_str_t[] cArrayWrap(long[],boolean)>($r1, 0) in <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pj_str_t[] getStun_srv()> ==> <org.pjsip.pjsua.pj_str_t: org.pjsip.pjsua.pj_str_t[] cArrayWrap(long[],boolean)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_config_stun_srv_set(long,org.pjsip.pjsua.pjsua_config,long[])>($l0, r0, $r2) in <org.pjsip.pjsua.pjsua_config: void setStun_srv(org.pjsip.pjsua.pj_str_t[])> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long[] cArrayUnwrap(org.pjsip.pjsua.pj_str_t[])>($r1) in <org.pjsip.pjsua.pjsua_config: void setStun_srv(org.pjsip.pjsua.pj_str_t[])> ==> <org.pjsip.pjsua.pj_str_t: long[] cArrayUnwrap(org.pjsip.pjsua.pj_str_t[])>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_config_stun_map_use_stun2_set(long,org.pjsip.pjsua.pjsua_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_config: void setStun_map_use_stun2(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r2) in <org.pjsip.pjsua.pj_str_t: long[] cArrayUnwrap(org.pjsip.pjsua.pj_str_t[])> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r24.<org.pjsip.pjsua.pjsip_timer_setting: void setMin_se(long)>($l3) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsip_timer_setting: void setMin_se(long)>
VIRTUAL edge: virtualinvoke $r24.<org.pjsip.pjsua.pjsip_timer_setting: void setSess_expires(long)>($l3) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <org.pjsip.pjsua.pjsip_timer_setting: void setSess_expires(long)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsip_timer_setting_min_se_set(long,org.pjsip.pjsua.pjsip_timer_setting,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsip_timer_setting: void setMin_se(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsip_timer_setting_sess_expires_set(long,org.pjsip.pjsua.pjsip_timer_setting,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsip_timer_setting: void setSess_expires(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, $z0) in <org.pjsip.pjsua.pj_str_t: org.pjsip.pjsua.pj_str_t[] cArrayWrap(long[],boolean)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_config: void delete()>() in <org.pjsip.pjsua.pjsua_config: void finalize()> ==> <org.pjsip.pjsua.pjsua_config: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_pjsua_config(long)>($l0) in <org.pjsip.pjsua.pjsua_config: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjsip_timer_setting: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pjsip_timer_setting getTimer_setting()> ==> <org.pjsip.pjsua.pjsip_timer_setting: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.pjsip_timer_setting: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsip_timer_setting: void finalize()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsip_timer_setting: void delete()>() in <org.pjsip.pjsua.pjsip_timer_setting: void finalize()> ==> <org.pjsip.pjsua.pjsip_timer_setting: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_pjsip_timer_setting(long)>($l0) in <org.pjsip.pjsua.pjsip_timer_setting: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsip_timer_setting: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_config: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_config: void <init>()> ==> <org.pjsip.pjsua.pjsua_config: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.pjsua_config: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_config: void finalize()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_config: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: $r23 = specialinvoke r0.<com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pjmedia_srtp_use getUseSrtp()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pjmedia_srtp_use getUseSrtp()>
SPECIAL edge: $r25 = specialinvoke r0.<com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pj_str_t[] getNameservers()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pj_str_t[] getNameservers()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.PjSipService: void cleanPjsua()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.pjsip.PjSipService: void cleanPjsua()>
SPECIAL edge: $r32 = specialinvoke r0.<com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)>(r31, $i1) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.PjSipService: void initCodecs()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.pjsip.PjSipService: void initCodecs()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pjmedia_srtp_use getUseSrtp()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PjService", "Transport port not well formated") in <com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pjmedia_srtp_use getUseSrtp()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $r4 = staticinvoke <org.pjsip.pjsua.pjmedia_srtp_use: org.pjsip.pjsua.pjmedia_srtp_use swigToEnum(int)>($i0) in <com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pjmedia_srtp_use getUseSrtp()> ==> <org.pjsip.pjsua.pjmedia_srtp_use: org.pjsip.pjsua.pjmedia_srtp_use swigToEnum(int)>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pjmedia_srtp_use getUseSrtp()> ==> <java.lang.Integer: int parseInt(java.lang.String)>
CLINIT edge: $r4 = <org.pjsip.pjsua.pjmedia_srtp_use: org.pjsip.pjsua.pjmedia_srtp_use PJMEDIA_SRTP_DISABLED> in <com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pjmedia_srtp_use getUseSrtp()> ==> <org.pjsip.pjsua.pjmedia_srtp_use: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PjService", "Transport port not well formated") in <com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pjmedia_srtp_use getUseSrtp()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: $r6 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>($r4) in <com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pj_str_t[] getNameservers()> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
CLINIT edge: $r4 = <org.pjsip.pjsua.pjsip_transport_type_e: org.pjsip.pjsua.pjsip_transport_type_e PJSIP_TRANSPORT_TLS> in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsip_transport_type_e: void <clinit>()>
STATIC edge: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PjService", $r7) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r8) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $r8 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t get_error_message(int)>($i0) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t get_error_message(int)>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int transport_create(org.pjsip.pjsua.pjsip_transport_type_e,org.pjsip.pjsua.pjsua_transport_config,int[])>($r1, r2, r3) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsua: int transport_create(org.pjsip.pjsua.pjsip_transport_type_e,org.pjsip.pjsua.pjsua_transport_config,int[])>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", "Activate qos for this transport") in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r8 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>($r7) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void transport_config_default(org.pjsip.pjsua.pjsua_transport_config)>(r2) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsua: void transport_config_default(org.pjsip.pjsua.pjsua_transport_config)>
CLINIT edge: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PjService", $r7) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r7 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r8) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <com.csipsimple.pjsip.PjSipService: void <clinit>()>
CLINIT edge: $i4 = <org.pjsip.pjsua.pjsuaConstants: int PJ_SUCCESS> in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsuaConstants: void <clinit>()>
CLINIT edge: $r1 = <com.csipsimple.pjsip.PjSipService: java.util.ArrayList codecs> in <com.csipsimple.pjsip.PjSipService: void initCodecs()> ==> <com.csipsimple.pjsip.PjSipService: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", $r5) in <com.csipsimple.pjsip.PjSipService: void initCodecs()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r4) in <com.csipsimple.pjsip.PjSipService: void initCodecs()> ==> <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $r4 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t codecs_vid_get_id(int)>(i1) in <com.csipsimple.pjsip.PjSipService: void initCodecs()> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t codecs_vid_get_id(int)>
STATIC edge: $r4 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t codecs_get_id(int)>(i1) in <com.csipsimple.pjsip.PjSipService: void initCodecs()> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t codecs_get_id(int)>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int codecs_vid_get_nbr()>() in <com.csipsimple.pjsip.PjSipService: void initCodecs()> ==> <org.pjsip.pjsua.pjsua: int codecs_vid_get_nbr()>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int codecs_get_nbr()>() in <com.csipsimple.pjsip.PjSipService: void initCodecs()> ==> <org.pjsip.pjsua.pjsua: int codecs_get_nbr()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", $r5) in <com.csipsimple.pjsip.PjSipService: void initCodecs()> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r6 = <com.csipsimple.pjsip.PjSipService: java.util.ArrayList codecs> in <com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()> ==> <com.csipsimple.pjsip.PjSipService: void <clinit>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int vid_codec_set_priority(org.pjsip.pjsua.pj_str_t,short)>($r14, $s2) in <com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()> ==> <org.pjsip.pjsua.pjsua: int vid_codec_set_priority(org.pjsip.pjsua.pj_str_t,short)>
STATIC edge: $r14 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>(r13) in <com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int codec_set_frames_per_packet(org.pjsip.pjsua.pj_str_t,int)>($r14, $i0) in <com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()> ==> <org.pjsip.pjsua.pjsua: int codec_set_frames_per_packet(org.pjsip.pjsua.pj_str_t,int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", r13) in <com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r16 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String)>($r3, $r15) in <com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()> ==> <com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String)>
STATIC edge: $r15 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)>(r13, "fpp") in <com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()> ==> <com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int codec_set_priority(org.pjsip.pjsua.pj_str_t,short)>($r14, $s2) in <com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()> ==> <org.pjsip.pjsua.pjsua: int codec_set_priority(org.pjsip.pjsua.pj_str_t,short)>
STATIC edge: $r9 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getBandTypeKey(int,int)>($i0, $i1) in <com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()> ==> <com.csipsimple.api.SipConfigManager: java.lang.String getBandTypeKey(int,int)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", r13) in <com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r9 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getBandTypeKey(int,int)>($i0, $i1) in <com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int transport_create(int,long,org.pjsip.pjsua.pjsua_transport_config,int[])>($i0, $l1, $r1, $r2) in <org.pjsip.pjsua.pjsua: int transport_create(org.pjsip.pjsua.pjsip_transport_type_e,org.pjsip.pjsua.pjsua_transport_config,int[])> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_transport_config: long getCPtr(org.pjsip.pjsua.pjsua_transport_config)>($r1) in <org.pjsip.pjsua.pjsua: int transport_create(org.pjsip.pjsua.pjsip_transport_type_e,org.pjsip.pjsua.pjsua_transport_config,int[])> ==> <org.pjsip.pjsua.pjsua_transport_config: long getCPtr(org.pjsip.pjsua.pjsua_transport_config)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void transport_config_default(long,org.pjsip.pjsua.pjsua_transport_config)>($l0, $r0) in <org.pjsip.pjsua.pjsua: void transport_config_default(org.pjsip.pjsua.pjsua_transport_config)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_transport_config: long getCPtr(org.pjsip.pjsua.pjsua_transport_config)>($r0) in <org.pjsip.pjsua.pjsua: void transport_config_default(org.pjsip.pjsua.pjsua_transport_config)> ==> <org.pjsip.pjsua.pjsua_transport_config: long getCPtr(org.pjsip.pjsua.pjsua_transport_config)>
CLINIT edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long codecs_vid_get_id(int)>($i0) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t codecs_vid_get_id(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long codecs_get_id(int)>($i0) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t codecs_get_id(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int codecs_vid_get_nbr()>() in <org.pjsip.pjsua.pjsua: int codecs_vid_get_nbr()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int codecs_get_nbr()>() in <org.pjsip.pjsua.pjsua: int codecs_get_nbr()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $i2 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int vid_codec_set_priority(long,org.pjsip.pjsua.pj_str_t,short)>($l1, $r0, $s0) in <org.pjsip.pjsua.pjsua: int vid_codec_set_priority(org.pjsip.pjsua.pj_str_t,short)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int vid_codec_set_priority(org.pjsip.pjsua.pj_str_t,short)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int codec_set_frames_per_packet(long,org.pjsip.pjsua.pj_str_t,int)>($l1, $r0, $i0) in <org.pjsip.pjsua.pjsua: int codec_set_frames_per_packet(org.pjsip.pjsua.pj_str_t,int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int codec_set_frames_per_packet(org.pjsip.pjsua.pj_str_t,int)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: $i2 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int codec_set_priority(long,org.pjsip.pjsua.pj_str_t,short)>($l1, $r0, $s0) in <org.pjsip.pjsua.pjsua: int codec_set_priority(org.pjsip.pjsua.pj_str_t,short)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int codec_set_priority(org.pjsip.pjsua.pj_str_t,short)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String keyForNetwork(int,int)>($i0, $i1) in <com.csipsimple.api.SipConfigManager: java.lang.String getBandTypeKey(int,int)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String keyForNetwork(int,int)>($i0, $i1) in <com.csipsimple.api.SipConfigManager: java.lang.String getBandTypeKey(int,int)> ==> <com.csipsimple.api.SipConfigManager: java.lang.String keyForNetwork(int,int)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l1, 1) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t codecs_get_id(int)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l1, 1) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t codecs_vid_get_id(int)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int)>("PJMEDIA_SRTP_DISABLED", 0) in <org.pjsip.pjsua.pjmedia_srtp_use: void <clinit>()> ==> <org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int)>
CLINIT edge: $i1 = staticinvoke <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: void <clinit>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: void access$1(int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: int access$0()>
CLINIT edge: <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: int next> = $i0 in <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: void access$1(int)> ==> <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: void <clinit>()>
CLINIT edge: i0 = <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: int next> in <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: int access$0()> ==> <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjmedia_srtp_use: org.pjsip.pjsua.pjmedia_srtp_use swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Object[] getEnumConstants()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.PjSipService: void buffCodecLog(java.lang.StringBuilder,java.lang.String,short)>(r1, r13, $s2) in <com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()> ==> <com.csipsimple.pjsip.PjSipService: void buffCodecLog(java.lang.StringBuilder,java.lang.String,short)>
CLINIT edge: $i1 = staticinvoke <com.csipsimple.utils.Log: int getLogLevel()>() in <com.csipsimple.pjsip.PjSipService: void buffCodecLog(java.lang.StringBuilder,java.lang.String,short)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: $i1 = staticinvoke <com.csipsimple.utils.Log: int getLogLevel()>() in <com.csipsimple.pjsip.PjSipService: void buffCodecLog(java.lang.StringBuilder,java.lang.String,short)> ==> <com.csipsimple.utils.Log: int getLogLevel()>
CLINIT edge: i0 = <com.csipsimple.utils.Log: int logLevel> in <com.csipsimple.utils.Log: int getLogLevel()> ==> <com.csipsimple.utils.Log: void <clinit>()>
SPECIAL edge: specialinvoke r2.<org.pjsip.pjsua.pjsua_transport_config: void <init>()>() in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsua_transport_config: void <init>()>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.pjsua_transport_config: void setPort(long)>($l1) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsua_transport_config: void setPort(long)>
VIRTUAL edge: $r5 = virtualinvoke r2.<org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pjsip_tls_setting getTls_setting()>() in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pjsip_tls_setting getTls_setting()>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.pjsua_transport_config: void setTls_setting(org.pjsip.pjsua.pjsip_tls_setting)>($r5) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsua_transport_config: void setTls_setting(org.pjsip.pjsua.pjsip_tls_setting)>
VIRTUAL edge: $r9 = virtualinvoke r2.<org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pj_qos_params getQos_params()>() in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pj_qos_params getQos_params()>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.pjsua_transport_config: void setQos_params(org.pjsip.pjsua.pj_qos_params)>($r9) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsua_transport_config: void setQos_params(org.pjsip.pjsua.pj_qos_params)>
FINALIZE edge: null in <org.pjsip.pjsua.pjsua_transport_config: void <init>()> ==> <org.pjsip.pjsua.pjsua_transport_config: void finalize()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long new_pjsua_transport_config()>() in <org.pjsip.pjsua.pjsua_transport_config: void <init>()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_transport_config_port_set(long,org.pjsip.pjsua.pjsua_transport_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_transport_config: void setPort(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long pjsua_transport_config_tls_setting_get(long,org.pjsip.pjsua.pjsua_transport_config)>($l0, r0) in <org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pjsip_tls_setting getTls_setting()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_transport_config_tls_setting_set(long,org.pjsip.pjsua.pjsua_transport_config,long,org.pjsip.pjsua.pjsip_tls_setting)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_transport_config: void setTls_setting(org.pjsip.pjsua.pjsip_tls_setting)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsip_tls_setting: long getCPtr(org.pjsip.pjsua.pjsip_tls_setting)>($r1) in <org.pjsip.pjsua.pjsua_transport_config: void setTls_setting(org.pjsip.pjsua.pjsip_tls_setting)> ==> <org.pjsip.pjsua.pjsip_tls_setting: long getCPtr(org.pjsip.pjsua.pjsip_tls_setting)>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long pjsua_transport_config_qos_params_get(long,org.pjsip.pjsua.pjsua_transport_config)>($l0, r0) in <org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pj_qos_params getQos_params()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_transport_config_qos_params_set(long,org.pjsip.pjsua.pjsua_transport_config,long,org.pjsip.pjsua.pj_qos_params)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_transport_config: void setQos_params(org.pjsip.pjsua.pj_qos_params)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_qos_params: long getCPtr(org.pjsip.pjsua.pj_qos_params)>($r1) in <org.pjsip.pjsua.pjsua_transport_config: void setQos_params(org.pjsip.pjsua.pj_qos_params)> ==> <org.pjsip.pjsua.pj_qos_params: long getCPtr(org.pjsip.pjsua.pj_qos_params)>
VIRTUAL edge: virtualinvoke $r9.<org.pjsip.pjsua.pj_qos_params: void setDscp_val(short)>($s3) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pj_qos_params: void setDscp_val(short)>
VIRTUAL edge: virtualinvoke $r9.<org.pjsip.pjsua.pj_qos_params: void setFlags(short)>(1) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pj_qos_params: void setFlags(short)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pj_qos_params_dscp_val_set(long,org.pjsip.pjsua.pj_qos_params,short)>($l1, r0, $s0) in <org.pjsip.pjsua.pj_qos_params: void setDscp_val(short)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pj_qos_params_flags_set(long,org.pjsip.pjsua.pj_qos_params,short)>($l1, r0, $s0) in <org.pjsip.pjsua.pj_qos_params: void setFlags(short)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsip_tls_setting: void setCa_list_file(org.pjsip.pjsua.pj_str_t)>($r8) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsip_tls_setting: void setCa_list_file(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsip_tls_setting: void setCert_file(org.pjsip.pjsua.pj_str_t)>($r8) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsip_tls_setting: void setCert_file(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsip_tls_setting: void setPrivkey_file(org.pjsip.pjsua.pj_str_t)>($r8) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsip_tls_setting: void setPrivkey_file(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsip_tls_setting: void setPassword(org.pjsip.pjsua.pj_str_t)>($r8) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsip_tls_setting: void setPassword(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsip_tls_setting: void setVerify_client(int)>($b2) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsip_tls_setting: void setVerify_client(int)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsip_tls_setting: void setMethod(int)>($i0) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsip_tls_setting: void setMethod(int)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsip_tls_setting: void setVerify_server(int)>($b2) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <org.pjsip.pjsua.pjsip_tls_setting: void setVerify_server(int)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsip_tls_setting_ca_list_file_set(long,org.pjsip.pjsua.pjsip_tls_setting,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsip_tls_setting: void setCa_list_file(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsip_tls_setting: void setCa_list_file(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsip_tls_setting_cert_file_set(long,org.pjsip.pjsua.pjsip_tls_setting,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsip_tls_setting: void setCert_file(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsip_tls_setting: void setCert_file(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsip_tls_setting_privkey_file_set(long,org.pjsip.pjsua.pjsip_tls_setting,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsip_tls_setting: void setPrivkey_file(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsip_tls_setting: void setPrivkey_file(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsip_tls_setting_password_set(long,org.pjsip.pjsua.pjsip_tls_setting,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsip_tls_setting: void setPassword(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsip_tls_setting: void setPassword(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsip_tls_setting_verify_client_set(long,org.pjsip.pjsua.pjsip_tls_setting,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsip_tls_setting: void setVerify_client(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsip_tls_setting_method_set(long,org.pjsip.pjsua.pjsip_tls_setting,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsip_tls_setting: void setMethod(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsip_tls_setting_verify_server_set(long,org.pjsip.pjsua.pjsip_tls_setting,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsip_tls_setting: void setVerify_server(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_transport_config: void delete()>() in <org.pjsip.pjsua.pjsua_transport_config: void finalize()> ==> <org.pjsip.pjsua.pjsua_transport_config: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_pjsua_transport_config(long)>($l0) in <org.pjsip.pjsua.pjsua_transport_config: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_qos_params: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pj_qos_params getQos_params()> ==> <org.pjsip.pjsua.pj_qos_params: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.pj_qos_params: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pj_qos_params: void finalize()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pj_qos_params: void delete()>() in <org.pjsip.pjsua.pj_qos_params: void finalize()> ==> <org.pjsip.pjsua.pj_qos_params: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_pj_qos_params(long)>($l0) in <org.pjsip.pjsua.pj_qos_params: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pj_qos_params: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjsip_tls_setting: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pjsip_tls_setting getTls_setting()> ==> <org.pjsip.pjsua.pjsip_tls_setting: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.pjsip_tls_setting: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsip_tls_setting: void finalize()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsip_tls_setting: void delete()>() in <org.pjsip.pjsua.pjsip_tls_setting: void finalize()> ==> <org.pjsip.pjsua.pjsip_tls_setting: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_pjsip_tls_setting(long)>($l0) in <org.pjsip.pjsua.pjsip_tls_setting: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsip_tls_setting: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
FINALIZE edge: null in <org.pjsip.pjsua.pjsua_transport_config: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_transport_config: void finalize()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_transport_config: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<org.pjsip.pjsua.pjsip_transport_type_e: boolean equals(java.lang.Object)>($r4) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <java.lang.Enum: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Enum: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r0.<org.pjsip.pjsua.pjsip_transport_type_e: int swigValue()>() in <org.pjsip.pjsua.pjsua: int transport_create(org.pjsip.pjsua.pjsip_transport_type_e,org.pjsip.pjsua.pjsua_transport_config,int[])> ==> <org.pjsip.pjsua.pjsip_transport_type_e: int swigValue()>
VIRTUAL edge: virtualinvoke $r12.<com.csipsimple.service.SipService: void notifyUserOfMessage(java.lang.String)>(r11) in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <com.csipsimple.service.SipService: void notifyUserOfMessage(java.lang.String)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjmedia_srtp_use: int swigValue()>() in <org.pjsip.pjsua.pjsua_config: void setUse_srtp(org.pjsip.pjsua.pjmedia_srtp_use)> ==> <org.pjsip.pjsua.pjmedia_srtp_use: int swigValue()>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.service.SipService: void notifyUserOfMessage(java.lang.String)>(r5) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.service.SipService: void notifyUserOfMessage(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.service.SipService: boolean isConnectivityValid()>() in <com.csipsimple.service.SipService: void startSipStack()> ==> <com.csipsimple.service.SipService: boolean isConnectivityValid()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipService: void notifyUserOfMessage(int)>(2131427779) in <com.csipsimple.service.SipService: void startSipStack()> ==> <com.csipsimple.service.SipService: void notifyUserOfMessage(int)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.service.SipService: boolean loadStack()>() in <com.csipsimple.service.SipService: void startSipStack()> ==> <com.csipsimple.service.SipService: boolean loadStack()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService: void applyComponentEnablingState(boolean)>(1) in <com.csipsimple.service.SipService: void startSipStack()> ==> <com.csipsimple.service.SipService: void applyComponentEnablingState(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService: void registerBroadcasts()>() in <com.csipsimple.service.SipService: void startSipStack()> ==> <com.csipsimple.service.SipService: void registerBroadcasts()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService: void addAllAccounts()>() in <com.csipsimple.service.SipService: void startSipStack()> ==> <com.csipsimple.service.SipService: void addAllAccounts()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Listen for phone state ") in <com.csipsimple.service.SipService: void registerBroadcasts()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(5) in <com.csipsimple.service.SipService: void registerBroadcasts()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
CLINIT edge: $r9 = <com.csipsimple.api.SipProfile: android.net.Uri ACCOUNT_STATUS_URI> in <com.csipsimple.service.SipService: void registerBroadcasts()> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Listen for phone state ") in <com.csipsimple.service.SipService: void registerBroadcasts()> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "We are adding all accounts right now....") in <com.csipsimple.service.SipService: void addAllAccounts()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SIP SRV", "Error on looping over sip profiles", r3) in <com.csipsimple.service.SipService: void addAllAccounts()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "We are adding all accounts right now....") in <com.csipsimple.service.SipService: void addAllAccounts()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: $r8 = <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService pjService> in <com.csipsimple.service.SipService: void addAllAccounts()> ==> <com.csipsimple.service.SipService: void <clinit>()>
CLINIT edge: $r6 = newarray (java.lang.String)[1] in <com.csipsimple.service.SipService: void addAllAccounts()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r1 = <com.csipsimple.db.DBProvider: java.lang.String[] ACCOUNT_FULL_PROJECTION> in <com.csipsimple.service.SipService: void addAllAccounts()> ==> <com.csipsimple.db.DBProvider: void <clinit>()>
CLINIT edge: $r5 = <com.csipsimple.api.SipProfile: android.net.Uri ACCOUNT_URI> in <com.csipsimple.service.SipService: void addAllAccounts()> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
VIRTUAL edge: $z1 = virtualinvoke $r8.<com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)>(r2) in <com.csipsimple.service.SipService: void addAllAccounts()> ==> <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)>
CLINIT edge: i0 = <org.pjsip.pjsua.pjsuaConstants: int PJ_FALSE> in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsuaConstants: void <clinit>()>
STATIC edge: i0 = staticinvoke <org.pjsip.pjsua.pjsua: int acc_add(org.pjsip.pjsua.pjsua_acc_config,int,int[])>(r5, i0, r2) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua: int acc_add(org.pjsip.pjsua.pjsua_acc_config,int,int[])>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int csipsimple_set_acc_user_data(org.pjsip.pjsua.pjsua_acc_config,org.pjsip.pjsua.csipsimple_acc_config)>(r5, $r8) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua: int csipsimple_set_acc_user_data(org.pjsip.pjsua.pjsua_acc_config,org.pjsip.pjsua.csipsimple_acc_config)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int acc_set_online_status(int,int)>($i1, 1) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua: int acc_set_online_status(int,int)>
STATIC edge: i0 = staticinvoke <org.pjsip.pjsua.pjsua: int acc_modify(int,org.pjsip.pjsua.pjsua_acc_config)>(i0, r5) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua: int acc_modify(int,org.pjsip.pjsua.pjsua_acc_config)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int acc_get_config(int,org.pjsip.pjsua.pjsua_acc_config)>(i0, r5) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua: int acc_get_config(int,org.pjsip.pjsua.pjsua_acc_config)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua: int acc_set_registration(int,int)>(i0, 1) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua: int acc_set_registration(int,int)>
STATIC edge: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PjService", "PJSIP is not started here, nothing can be done") in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
CLINIT edge: $r11 = <com.csipsimple.api.SipProfile: android.net.Uri ACCOUNT_STATUS_ID_URI_BASE> in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
CLINIT edge: r6 = new com.csipsimple.api.SipProfileState in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfileState: void <clinit>()>
CLINIT edge: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PjService", "PJSIP is not started here, nothing can be done") in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int acc_add(long,org.pjsip.pjsua.pjsua_acc_config,int,int[])>($l1, $r0, $i0, $r1) in <org.pjsip.pjsua.pjsua: int acc_add(org.pjsip.pjsua.pjsua_acc_config,int,int[])> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_acc_config: long getCPtr(org.pjsip.pjsua.pjsua_acc_config)>($r0) in <org.pjsip.pjsua.pjsua: int acc_add(org.pjsip.pjsua.pjsua_acc_config,int,int[])> ==> <org.pjsip.pjsua.pjsua_acc_config: long getCPtr(org.pjsip.pjsua.pjsua_acc_config)>
CLINIT edge: $i2 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int csipsimple_set_acc_user_data(long,org.pjsip.pjsua.pjsua_acc_config,long,org.pjsip.pjsua.csipsimple_acc_config)>($l0, $r0, $l1, $r1) in <org.pjsip.pjsua.pjsua: int csipsimple_set_acc_user_data(org.pjsip.pjsua.pjsua_acc_config,org.pjsip.pjsua.csipsimple_acc_config)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.csipsimple_acc_config: long getCPtr(org.pjsip.pjsua.csipsimple_acc_config)>($r1) in <org.pjsip.pjsua.pjsua: int csipsimple_set_acc_user_data(org.pjsip.pjsua.pjsua_acc_config,org.pjsip.pjsua.csipsimple_acc_config)> ==> <org.pjsip.pjsua.csipsimple_acc_config: long getCPtr(org.pjsip.pjsua.csipsimple_acc_config)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_acc_config: long getCPtr(org.pjsip.pjsua.pjsua_acc_config)>($r0) in <org.pjsip.pjsua.pjsua: int csipsimple_set_acc_user_data(org.pjsip.pjsua.pjsua_acc_config,org.pjsip.pjsua.csipsimple_acc_config)> ==> <org.pjsip.pjsua.pjsua_acc_config: long getCPtr(org.pjsip.pjsua.pjsua_acc_config)>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int acc_set_online_status(int,int)>($i0, $i1) in <org.pjsip.pjsua.pjsua: int acc_set_online_status(int,int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int acc_modify(int,long,org.pjsip.pjsua.pjsua_acc_config)>($i0, $l1, $r0) in <org.pjsip.pjsua.pjsua: int acc_modify(int,org.pjsip.pjsua.pjsua_acc_config)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_acc_config: long getCPtr(org.pjsip.pjsua.pjsua_acc_config)>($r0) in <org.pjsip.pjsua.pjsua: int acc_modify(int,org.pjsip.pjsua.pjsua_acc_config)> ==> <org.pjsip.pjsua.pjsua_acc_config: long getCPtr(org.pjsip.pjsua.pjsua_acc_config)>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int acc_get_config(int,long,org.pjsip.pjsua.pjsua_acc_config)>($i0, $l1, $r0) in <org.pjsip.pjsua.pjsua: int acc_get_config(int,org.pjsip.pjsua.pjsua_acc_config)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_acc_config: long getCPtr(org.pjsip.pjsua.pjsua_acc_config)>($r0) in <org.pjsip.pjsua.pjsua: int acc_get_config(int,org.pjsip.pjsua.pjsua_acc_config)> ==> <org.pjsip.pjsua.pjsua_acc_config: long getCPtr(org.pjsip.pjsua.pjsua_acc_config)>
CLINIT edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: int acc_set_registration(int,int)>($i0, $i1) in <org.pjsip.pjsua.pjsua: int acc_set_registration(int,int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
VIRTUAL edge: $z0 = virtualinvoke r6.<com.csipsimple.api.SipProfileState: boolean isAddedToStack()>() in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfileState: boolean isAddedToStack()>
VIRTUAL edge: i0 = virtualinvoke r6.<com.csipsimple.api.SipProfileState: int getPjsuaId()>() in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfileState: int getPjsuaId()>
SPECIAL edge: specialinvoke r6.<com.csipsimple.api.SipProfileState: void <init>(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfileState: void <init>(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r6.<com.csipsimple.api.SipProfileState: void setAddedStatus(int)>(i0) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfileState: void setAddedStatus(int)>
VIRTUAL edge: virtualinvoke r6.<com.csipsimple.api.SipProfileState: void setPjsuaId(int)>($i1) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfileState: void setPjsuaId(int)>
VIRTUAL edge: r4 = virtualinvoke r6.<com.csipsimple.api.SipProfileState: android.content.ContentValues getAsContentValue()>() in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfileState: android.content.ContentValues getAsContentValue()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.api.SipProfileState: void <init>()>() in <com.csipsimple.api.SipProfileState: void <init>(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfileState: void <init>()>
SPECIAL edge: specialinvoke r5.<org.pjsip.pjsua.pjsua_acc_config: void <init>()>() in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void <init>()>
VIRTUAL edge: virtualinvoke r5.<org.pjsip.pjsua.pjsua_acc_config: void setVid_in_auto_show(int)>(i0) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setVid_in_auto_show(int)>
VIRTUAL edge: virtualinvoke r5.<org.pjsip.pjsua.pjsua_acc_config: void setVid_out_auto_transmit(int)>(i0) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setVid_out_auto_transmit(int)>
FINALIZE edge: null in <org.pjsip.pjsua.pjsua_acc_config: void <init>()> ==> <org.pjsip.pjsua.pjsua_acc_config: void finalize()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long new_pjsua_acc_config()>() in <org.pjsip.pjsua.pjsua_acc_config: void <init>()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_vid_in_auto_show_set(long,org.pjsip.pjsua.pjsua_acc_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_acc_config: void setVid_in_auto_show(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_vid_out_auto_transmit_set(long,org.pjsip.pjsua.pjsua_acc_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_acc_config: void setVid_out_auto_transmit(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_acc_config: void delete()>() in <org.pjsip.pjsua.pjsua_acc_config: void finalize()> ==> <org.pjsip.pjsua.pjsua_acc_config: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_pjsua_acc_config(long)>($l0) in <org.pjsip.pjsua.pjsua_acc_config: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_acc_config: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_acc_config: void <init>()> ==> <org.pjsip.pjsua.pjsua_acc_config: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.pjsua_acc_config: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_acc_config: void finalize()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_acc_config: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r3.<com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r3.<com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)>($r7) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)>
CLINIT edge: $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <java.lang.Long: void <clinit>()>
STATIC edge: $r6 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>(r2) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjSipAccount", $r22) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int set_turn_credentials(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)>($r6, $r19, $r20, $r21) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua: int set_turn_credentials(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)>
STATIC edge: $r7 = staticinvoke <org.pjsip.pjsua.pjmedia_srtp_use: org.pjsip.pjsua.pjmedia_srtp_use swigToEnum(int)>($i2) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjmedia_srtp_use: org.pjsip.pjsua.pjmedia_srtp_use swigToEnum(int)>
STATIC edge: $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
CLINIT edge: $r17 = <org.pjsip.pjsua.pjsua_turn_config_use: org.pjsip.pjsua.pjsua_turn_config_use PJSUA_TURN_CONFIG_USE_DEFAULT> in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_turn_config_use: void <clinit>()>
CLINIT edge: $r15 = <org.pjsip.pjsua.pjsua_ice_config_use: org.pjsip.pjsua.pjsua_ice_config_use PJSUA_ICE_CONFIG_USE_DEFAULT> in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_ice_config_use: void <clinit>()>
CLINIT edge: $r14 = <org.pjsip.pjsua.pjsua_stun_use: org.pjsip.pjsua.pjsua_stun_use PJSUA_STUN_USE_DEFAULT> in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_stun_use: void <clinit>()>
CLINIT edge: $i2 = <org.pjsip.pjsua.pjsuaConstants: int PJ_FALSE> in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsuaConstants: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjSipAccount", r2) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r7 = staticinvoke <org.pjsip.pjsua.pjmedia_srtp_use: org.pjsip.pjsua.pjmedia_srtp_use swigToEnum(int)>($i2) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjmedia_srtp_use: void <clinit>()>
STATIC edge: $r6 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>(r3) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
STATIC edge: $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r11 = staticinvoke <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>($r7) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: $i0 = <org.pjsip.pjsua.pjsuaConstants: int PJ_TRUE> in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsuaConstants: void <clinit>()>
CLINIT edge: $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r13 = <org.pjsip.pjsua.pj_qos_type: org.pjsip.pjsua.pj_qos_type PJ_QOS_TYPE_VOICE> in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pj_qos_type: void <clinit>()>
CLINIT edge: $r11 = staticinvoke <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>($r7) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <com.csipsimple.api.SipUri: void <clinit>()>
CLINIT edge: $r7 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <com.csipsimple.pjsip.PjSipService: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int)>("PJ_QOS_TYPE_BEST_EFFORT", 0) in <org.pjsip.pjsua.pj_qos_type: void <clinit>()> ==> <org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int)>
CLINIT edge: $i1 = staticinvoke <org.pjsip.pjsua.pj_qos_type$SwigNext: int access$0()>() in <org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pj_qos_type$SwigNext: void <clinit>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pj_qos_type$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pj_qos_type$SwigNext: void access$1(int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pj_qos_type$SwigNext: int access$0()>() in <org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pj_qos_type$SwigNext: int access$0()>
CLINIT edge: <org.pjsip.pjsua.pj_qos_type$SwigNext: int next> = $i0 in <org.pjsip.pjsua.pj_qos_type$SwigNext: void access$1(int)> ==> <org.pjsip.pjsua.pj_qos_type$SwigNext: void <clinit>()>
CLINIT edge: i0 = <org.pjsip.pjsua.pj_qos_type$SwigNext: int next> in <org.pjsip.pjsua.pj_qos_type$SwigNext: int access$0()> ==> <org.pjsip.pjsua.pj_qos_type$SwigNext: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int)>("PJSUA_STUN_USE_DEFAULT", 0) in <org.pjsip.pjsua.pjsua_stun_use: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int)>
CLINIT edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_stun_use$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_stun_use$SwigNext: void <clinit>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_stun_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_stun_use$SwigNext: void access$1(int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_stun_use$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_stun_use$SwigNext: int access$0()>
CLINIT edge: <org.pjsip.pjsua.pjsua_stun_use$SwigNext: int next> = $i0 in <org.pjsip.pjsua.pjsua_stun_use$SwigNext: void access$1(int)> ==> <org.pjsip.pjsua.pjsua_stun_use$SwigNext: void <clinit>()>
CLINIT edge: i0 = <org.pjsip.pjsua.pjsua_stun_use$SwigNext: int next> in <org.pjsip.pjsua.pjsua_stun_use$SwigNext: int access$0()> ==> <org.pjsip.pjsua.pjsua_stun_use$SwigNext: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int)>("PJSUA_ICE_CONFIG_USE_DEFAULT", 0) in <org.pjsip.pjsua.pjsua_ice_config_use: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int)>
CLINIT edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: void <clinit>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: void access$1(int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: int access$0()>
CLINIT edge: <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: int next> = $i0 in <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: void access$1(int)> ==> <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: void <clinit>()>
CLINIT edge: i0 = <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: int next> in <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: int access$0()> ==> <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int)>("PJSUA_TURN_CONFIG_USE_DEFAULT", 0) in <org.pjsip.pjsua.pjsua_turn_config_use: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int)>
CLINIT edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: void <clinit>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: void access$1(int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: int access$0()>
CLINIT edge: <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: int next> = $i0 in <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: void access$1(int)> ==> <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: void <clinit>()>
CLINIT edge: i0 = <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: int next> in <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: int access$0()> ==> <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
VIRTUAL edge: r3 = virtualinvoke $r11.<com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString()>() in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString(boolean)>(1) in <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString()> ==> <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString(boolean)>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString(boolean)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r2) in <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString(boolean)> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
CLINIT edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString(boolean)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r2 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r2) in <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString(boolean)> ==> <com.csipsimple.api.SipUri: void <clinit>()>
SPECIAL edge: specialinvoke r1.<java.lang.StringBuffer: void <init>()>() in <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString(boolean)> ==> <java.lang.StringBuffer: void <init>()>
VIRTUAL edge: virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<sip:") in <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString(boolean)> ==> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>(0, " ") in <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString(boolean)> ==> <java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>() in <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString(boolean)> ==> <java.lang.StringBuffer: java.lang.String toString()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>($r1) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>
VIRTUAL edge: r3 = virtualinvoke r2.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>("default_caller_id") in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r2.<com.csipsimple.utils.PreferencesProviderWrapper: int getUdpKeepAliveInterval()>() in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getUdpKeepAliveInterval()>
VIRTUAL edge: $i0 = virtualinvoke r2.<com.csipsimple.utils.PreferencesProviderWrapper: int getRTPPort()>() in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getRTPPort()>
VIRTUAL edge: $z0 = virtualinvoke r2.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("enable_qos") in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.utils.PreferencesProviderWrapper: int getDSCPVal()>() in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getDSCPVal()>
CLINIT edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String)>($r2, $r1) in <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String)>($r2, $r1) in <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>("dscp_val") in <com.csipsimple.utils.PreferencesProviderWrapper: int getDSCPVal()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getPrefPort(java.lang.String)>("network_rtp_port") in <com.csipsimple.utils.PreferencesProviderWrapper: int getRTPPort()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPrefPort(java.lang.String)>
CLINIT edge: $r2 = <com.csipsimple.utils.PreferencesWrapper: java.util.HashMap STRING_PREFS> in <com.csipsimple.utils.PreferencesProviderWrapper: int getPrefPort(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1) in <com.csipsimple.utils.PreferencesProviderWrapper: int getPrefPort(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1) in <com.csipsimple.utils.PreferencesProviderWrapper: int getPrefPort(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>($r1) in <com.csipsimple.utils.PreferencesProviderWrapper: int getPrefPort(java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidPort(int)>($i0) in <com.csipsimple.utils.PreferencesProviderWrapper: int getPrefPort(java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidPort(int)>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getKeepAliveInterval(java.lang.String,java.lang.String)>("keep_alive_interval_wifi", "keep_alive_interval_mobile") in <com.csipsimple.utils.PreferencesProviderWrapper: int getUdpKeepAliveInterval()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getKeepAliveInterval(java.lang.String,java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>($r1) in <com.csipsimple.utils.PreferencesProviderWrapper: int getKeepAliveInterval(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.PjSipAccount: void <init>()>() in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.pjsip.PjSipAccount: void <init>()>
CLINIT edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <com.csipsimple.pjsip.PjSipAccount: void <init>()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void csipsimple_acc_config_default(org.pjsip.pjsua.csipsimple_acc_config)>($r3) in <com.csipsimple.pjsip.PjSipAccount: void <init>()> ==> <org.pjsip.pjsua.pjsua: void csipsimple_acc_config_default(org.pjsip.pjsua.csipsimple_acc_config)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void acc_config_default(org.pjsip.pjsua.pjsua_acc_config)>($r2) in <com.csipsimple.pjsip.PjSipAccount: void <init>()> ==> <org.pjsip.pjsua.pjsua: void acc_config_default(org.pjsip.pjsua.pjsua_acc_config)>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <com.csipsimple.pjsip.PjSipAccount: void <init>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_acc_config_default(long,org.pjsip.pjsua.csipsimple_acc_config)>($l0, $r0) in <org.pjsip.pjsua.pjsua: void csipsimple_acc_config_default(org.pjsip.pjsua.csipsimple_acc_config)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.csipsimple_acc_config: long getCPtr(org.pjsip.pjsua.csipsimple_acc_config)>($r0) in <org.pjsip.pjsua.pjsua: void csipsimple_acc_config_default(org.pjsip.pjsua.csipsimple_acc_config)> ==> <org.pjsip.pjsua.csipsimple_acc_config: long getCPtr(org.pjsip.pjsua.csipsimple_acc_config)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void acc_config_default(long,org.pjsip.pjsua.pjsua_acc_config)>($l0, $r0) in <org.pjsip.pjsua.pjsua: void acc_config_default(org.pjsip.pjsua.pjsua_acc_config)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_acc_config: long getCPtr(org.pjsip.pjsua.pjsua_acc_config)>($r0) in <org.pjsip.pjsua.pjsua: void acc_config_default(org.pjsip.pjsua.pjsua_acc_config)> ==> <org.pjsip.pjsua.pjsua_acc_config: long getCPtr(org.pjsip.pjsua.pjsua_acc_config)>
SPECIAL edge: specialinvoke $r3.<org.pjsip.pjsua.csipsimple_acc_config: void <init>()>() in <com.csipsimple.pjsip.PjSipAccount: void <init>()> ==> <org.pjsip.pjsua.csipsimple_acc_config: void <init>()>
FINALIZE edge: null in <org.pjsip.pjsua.csipsimple_acc_config: void <init>()> ==> <org.pjsip.pjsua.csipsimple_acc_config: void finalize()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long new_csipsimple_acc_config()>() in <org.pjsip.pjsua.csipsimple_acc_config: void <init>()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.csipsimple_acc_config: void delete()>() in <org.pjsip.pjsua.csipsimple_acc_config: void finalize()> ==> <org.pjsip.pjsua.csipsimple_acc_config: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_csipsimple_acc_config(long)>($l0) in <org.pjsip.pjsua.csipsimple_acc_config: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.csipsimple_acc_config: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.csipsimple_acc_config: void <init>()> ==> <org.pjsip.pjsua.csipsimple_acc_config: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.csipsimple_acc_config: void <init>(long,boolean)> ==> <org.pjsip.pjsua.csipsimple_acc_config: void finalize()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.csipsimple_acc_config: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.pjsua_acc_config: void <init>()>() in <com.csipsimple.pjsip.PjSipAccount: void <init>()> ==> <org.pjsip.pjsua.pjsua_acc_config: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.pjsip.PjSipAccount: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: r6 = virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)>
CLINIT edge: r2 = new com.csipsimple.api.SipProfileState in <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfileState: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("PjService", "Error on looping over sip profiles states", r3) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("PjService", "Error on looping over sip profiles states", r3) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r6 = <com.csipsimple.api.SipProfile: android.net.Uri ACCOUNT_STATUS_ID_URI_BASE> in <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.api.SipProfileState: void <init>(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfileState: void <init>(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.api.SipProfileState: void createFromDb(android.database.Cursor)>($r7) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfileState: void createFromDb(android.database.Cursor)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>($r7) in <com.csipsimple.service.SipService: void addAllAccounts()> ==> <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService: void acquireResources()>() in <com.csipsimple.service.SipService: void addAllAccounts()> ==> <com.csipsimple.service.SipService: void acquireResources()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService: void releaseResources()>() in <com.csipsimple.service.SipService: void addAllAccounts()> ==> <com.csipsimple.service.SipService: void releaseResources()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(9) in <com.csipsimple.service.SipService: void acquireResources()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("use_partial_wake_lock") in <com.csipsimple.service.SipService: void acquireResources()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: virtualinvoke $r10.<com.csipsimple.service.SipNotifications: void cancelRegisters()>() in <com.csipsimple.service.SipService: void addAllAccounts()> ==> <com.csipsimple.service.SipNotifications: void cancelRegisters()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.service.SipService$AccountStatusContentObserver: void <init>(com.csipsimple.service.SipService,android.os.Handler)>(r0, $r7) in <com.csipsimple.service.SipService: void registerBroadcasts()> ==> <com.csipsimple.service.SipService$AccountStatusContentObserver: void <init>(com.csipsimple.service.SipService,android.os.Handler)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.service.SipService$ServicePhoneStateReceiver: void <init>(com.csipsimple.service.SipService,com.csipsimple.service.SipService$ServicePhoneStateReceiver)>(r0, null) in <com.csipsimple.service.SipService: void registerBroadcasts()> ==> <com.csipsimple.service.SipService$ServicePhoneStateReceiver: void <init>(com.csipsimple.service.SipService,com.csipsimple.service.SipService$ServicePhoneStateReceiver)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.service.receiver.DynamicReceiver5: void <init>(com.csipsimple.service.SipService)>(r0) in <com.csipsimple.service.SipService: void registerBroadcasts()> ==> <com.csipsimple.service.receiver.DynamicReceiver5: void <init>(com.csipsimple.service.SipService)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.receiver.DynamicReceiver4: void <init>(com.csipsimple.service.SipService)>($r1) in <com.csipsimple.service.receiver.DynamicReceiver5: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.receiver.DynamicReceiver4: void <init>(com.csipsimple.service.SipService)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.receiver.DynamicReceiver4: void startMonitoring()>() in <com.csipsimple.service.SipService: void registerBroadcasts()> ==> <com.csipsimple.service.receiver.DynamicReceiver4: void startMonitoring()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.receiver.DynamicReceiver4: void <init>(com.csipsimple.service.SipService)>(r0) in <com.csipsimple.service.SipService: void registerBroadcasts()> ==> <com.csipsimple.service.receiver.DynamicReceiver4: void <init>(com.csipsimple.service.SipService)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("DynamicReceiver", $r4) in <com.csipsimple.service.receiver.DynamicReceiver4: void startMonitoring()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("DynamicReceiver", $r4) in <com.csipsimple.service.receiver.DynamicReceiver4: void startMonitoring()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.service.receiver.DynamicReceiver4$2: void <init>(com.csipsimple.service.receiver.DynamicReceiver4)>(r0) in <com.csipsimple.service.receiver.DynamicReceiver4: void startMonitoring()> ==> <com.csipsimple.service.receiver.DynamicReceiver4$2: void <init>(com.csipsimple.service.receiver.DynamicReceiver4)>
VIRTUAL edge: virtualinvoke $r5.<java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,java.util.Date,long)>($r6, $r7, $l1) in <com.csipsimple.service.receiver.DynamicReceiver4: void startMonitoring()> ==> <java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,java.util.Date,long)>
VIRTUAL edge: virtualinvoke param0.<java.util.TimerTask: void run()>() in <java.util.Timer: void scheduleAtFixedRate(java.util.TimerTask,java.util.Date,long)> ==> <com.csipsimple.service.receiver.DynamicReceiver4$2: void run()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("DynamicReceiver", "Route changed") in <com.csipsimple.service.receiver.DynamicReceiver4$2: void run()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.service.receiver.DynamicReceiver4: com.csipsimple.service.SipService access$3(com.csipsimple.service.receiver.DynamicReceiver4)>($r1) in <com.csipsimple.service.receiver.DynamicReceiver4$2: void run()> ==> <com.csipsimple.service.receiver.DynamicReceiver4: com.csipsimple.service.SipService access$3(com.csipsimple.service.receiver.DynamicReceiver4)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("DynamicReceiver", "Route changed") in <com.csipsimple.service.receiver.DynamicReceiver4$2: void run()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String access$2(com.csipsimple.service.receiver.DynamicReceiver4)>($r1) in <com.csipsimple.service.receiver.DynamicReceiver4$2: void run()> ==> <com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String access$2(com.csipsimple.service.receiver.DynamicReceiver4)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String access$1(com.csipsimple.service.receiver.DynamicReceiver4)>($r1) in <com.csipsimple.service.receiver.DynamicReceiver4$2: void run()> ==> <com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String access$1(com.csipsimple.service.receiver.DynamicReceiver4)>
SPECIAL edge: specialinvoke $r7.<com.csipsimple.service.receiver.DynamicReceiver4$2$1: void <init>(com.csipsimple.service.receiver.DynamicReceiver4$2)>(r0) in <com.csipsimple.service.receiver.DynamicReceiver4$2: void run()> ==> <com.csipsimple.service.receiver.DynamicReceiver4$2$1: void <init>(com.csipsimple.service.receiver.DynamicReceiver4$2)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.receiver.DynamicReceiver4$2$1: void <init>(com.csipsimple.service.receiver.DynamicReceiver4$2)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>() in <com.csipsimple.service.receiver.DynamicReceiver4: void startMonitoring()> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.PresenceManager: void startMonitoring(com.csipsimple.service.SipService)>(r0) in <com.csipsimple.service.SipService: void startSipStack()> ==> <com.csipsimple.service.PresenceManager: void startMonitoring(com.csipsimple.service.SipService)>
CLINIT edge: $r5 = <com.csipsimple.api.SipProfile: android.net.Uri ACCOUNT_STATUS_URI> in <com.csipsimple.service.PresenceManager: void startMonitoring(com.csipsimple.service.SipService)> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.service.PresenceManager$AccountStatusContentObserver: void <init>(com.csipsimple.service.PresenceManager,android.os.Handler)>(r0, $r4) in <com.csipsimple.service.PresenceManager: void startMonitoring(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.PresenceManager$AccountStatusContentObserver: void <init>(com.csipsimple.service.PresenceManager,android.os.Handler)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("support_multiple_calls") in <com.csipsimple.service.SipService: void startSipStack()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.utils.TimerWrapper: void quit()>() in <com.csipsimple.utils.TimerWrapper: void destroy()> ==> <com.csipsimple.utils.TimerWrapper: void quit()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.service.SipService: boolean stopSipStack()>() in <com.csipsimple.service.SipService$FinalizeDestroyRunnable: void doRun()> ==> <com.csipsimple.service.SipService: boolean stopSipStack()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipNotifications: void cancelAll()>() in <com.csipsimple.service.SipService$FinalizeDestroyRunnable: void doRun()> ==> <com.csipsimple.service.SipNotifications: void cancelAll()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipNotifications: void cancelCalls()>() in <com.csipsimple.service.SipService$FinalizeDestroyRunnable: void doRun()> ==> <com.csipsimple.service.SipNotifications: void cancelCalls()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.SipWakeLock: void reset()>() in <com.csipsimple.service.SipService$FinalizeDestroyRunnable: void doRun()> ==> <com.csipsimple.service.SipWakeLock: void reset()>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.service.SipWakeLock: void acquire(java.lang.Object)>($r1) in <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)> ==> <com.csipsimple.service.SipWakeLock: void acquire(java.lang.Object)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("SipWakeLock", $r6) in <com.csipsimple.service.SipWakeLock: void acquire(java.lang.Object)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("SipWakeLock", $r6) in <com.csipsimple.service.SipWakeLock: void acquire(java.lang.Object)> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void doRun()>() in <com.csipsimple.service.SipService$SipRunnable: void run()> ==> <com.csipsimple.service.receiver.DynamicReceiver4$2$1: void doRun()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.receiver.DynamicReceiver4$2: com.csipsimple.service.receiver.DynamicReceiver4 access$0(com.csipsimple.service.receiver.DynamicReceiver4$2)>($r2) in <com.csipsimple.service.receiver.DynamicReceiver4$2$1: void doRun()> ==> <com.csipsimple.service.receiver.DynamicReceiver4$2: com.csipsimple.service.receiver.DynamicReceiver4 access$0(com.csipsimple.service.receiver.DynamicReceiver4$2)>
STATIC edge: staticinvoke <com.csipsimple.service.receiver.DynamicReceiver4: void access$4(com.csipsimple.service.receiver.DynamicReceiver4,android.net.NetworkInfo,boolean)>($r1, null, 0) in <com.csipsimple.service.receiver.DynamicReceiver4$2$1: void doRun()> ==> <com.csipsimple.service.receiver.DynamicReceiver4: void access$4(com.csipsimple.service.receiver.DynamicReceiver4,android.net.NetworkInfo,boolean)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)>($r1, $z0) in <com.csipsimple.service.receiver.DynamicReceiver4: void access$4(com.csipsimple.service.receiver.DynamicReceiver4,android.net.NetworkInfo,boolean)> ==> <com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)>
CLINIT edge: $i0 = staticinvoke <com.csipsimple.utils.Log: int getLogLevel()>() in <com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("DynamicReceiver", "We are not connected, stop") in <com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.Log: int getLogLevel()>() in <com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)> ==> <com.csipsimple.utils.Log: int getLogLevel()>
VIRTUAL edge: $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) in <com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r4 = specialinvoke r0.<com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String dumpRoutes()>() in <com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)> ==> <com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String dumpRoutes()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DynamicReceiver", "No route file found routes", r6) in <com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String dumpRoutes()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DynamicReceiver", "Unable to close route file", r12) in <com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String dumpRoutes()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r2.<java.lang.StringBuffer: void <init>()>() in <com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String dumpRoutes()> ==> <java.lang.StringBuffer: void <init>()>
VIRTUAL edge: r4 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>() in <com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String dumpRoutes()> ==> <java.lang.StringBuffer: java.lang.String toString()>
VIRTUAL edge: virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4) in <com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String dumpRoutes()> ==> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke $r5.<com.csipsimple.service.SipService: boolean isConnectivityValid()>() in <com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)> ==> <com.csipsimple.service.SipService: boolean isConnectivityValid()>
VIRTUAL edge: $z0 = virtualinvoke $r5.<com.csipsimple.service.SipService: boolean stopSipStack()>() in <com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)> ==> <com.csipsimple.service.SipService: boolean stopSipStack()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP SRV", "Can\'t stop ... so do not restart ! ") in <com.csipsimple.service.SipService: void restartSipStack()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP SRV", "Can\'t stop ... so do not restart ! ") in <com.csipsimple.service.SipService: void restartSipStack()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.service.SipService: boolean stopSipStack()>() in <com.csipsimple.service.SipService: void restartSipStack()> ==> <com.csipsimple.service.SipService: boolean stopSipStack()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.incall.InCallActivity: void <init>()>() in <dummyMainClass: com.csipsimple.ui.incall.InCallActivity dummyMainMethod_com_csipsimple_ui_incall_InCallActivity(android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.incall.InCallActivity dummyMainMethod_com_csipsimple_ui_incall_InCallActivity(android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.incall.InCallActivity: void onStart()>() in <dummyMainClass: com.csipsimple.ui.incall.InCallActivity dummyMainMethod_com_csipsimple_ui_incall_InCallActivity(android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity: void onStart()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.incall.InCallActivity dummyMainMethod_com_csipsimple_ui_incall_InCallActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.incall.InCallActivity: void onResume()>() in <dummyMainClass: com.csipsimple.ui.incall.InCallActivity dummyMainMethod_com_csipsimple_ui_incall_InCallActivity(android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity: void onResume()>
VIRTUAL edge: virtualinvoke $r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>() in <dummyMainClass: com.csipsimple.ui.incall.InCallActivity dummyMainMethod_com_csipsimple_ui_incall_InCallActivity(android.content.Intent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.incall.InCallActivity: void onPause()>() in <dummyMainClass: com.csipsimple.ui.incall.InCallActivity dummyMainMethod_com_csipsimple_ui_incall_InCallActivity(android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity: void onPause()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.incall.InCallActivity: void onStop()>() in <dummyMainClass: com.csipsimple.ui.incall.InCallActivity dummyMainMethod_com_csipsimple_ui_incall_InCallActivity(android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity: void onStop()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.incall.InCallActivity: void onDestroy()>() in <dummyMainClass: com.csipsimple.ui.incall.InCallActivity dummyMainMethod_com_csipsimple_ui_incall_InCallActivity(android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity: void onDestroy()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", "Create in call") in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: $r21 = staticinvoke <com.csipsimple.utils.keyguard.KeyguardWrapper: com.csipsimple.utils.keyguard.KeyguardWrapper getKeyguardManager(android.app.Activity)>(r0) in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.keyguard.KeyguardWrapper: com.csipsimple.utils.keyguard.KeyguardWrapper getKeyguardManager(android.app.Activity)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", "Create in call") in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: $r20 = new com.csipsimple.ui.incall.CallProximityManager in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.incall.CallProximityManager: void <clinit>()>
CLINIT edge: $r6 = newarray (com.csipsimple.api.SipCallSession)[1] in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.api.SipCallSession: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", "Start in call") in <com.csipsimple.ui.incall.InCallActivity: void onStart()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", "Start in call") in <com.csipsimple.ui.incall.InCallActivity: void onStart()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(5) in <com.csipsimple.utils.keyguard.KeyguardWrapper: com.csipsimple.utils.keyguard.KeyguardWrapper getKeyguardManager(android.app.Activity)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.api.SipCallSession$1: void <init>()>() in <com.csipsimple.api.SipCallSession: void <clinit>()> ==> <com.csipsimple.api.SipCallSession$1: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipCallSession$1: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0) in <com.csipsimple.ui.incall.CallProximityManager: void <clinit>()> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.utils.keyguard.Keyguard3: void <init>()>() in <com.csipsimple.utils.keyguard.KeyguardWrapper: com.csipsimple.utils.keyguard.KeyguardWrapper getKeyguardManager(android.app.Activity)> ==> <com.csipsimple.utils.keyguard.Keyguard3: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.keyguard.KeyguardWrapper: void <init>()>() in <com.csipsimple.utils.keyguard.Keyguard3: void <init>()> ==> <com.csipsimple.utils.keyguard.KeyguardWrapper: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.keyguard.KeyguardWrapper: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r1.<com.csipsimple.utils.keyguard.KeyguardWrapper: void initActivity(android.app.Activity)>($r0) in <com.csipsimple.utils.keyguard.KeyguardWrapper: com.csipsimple.utils.keyguard.KeyguardWrapper getKeyguardManager(android.app.Activity)> ==> <com.csipsimple.utils.keyguard.Keyguard5: void initActivity(android.app.Activity)>
VIRTUAL edge: virtualinvoke r1.<com.csipsimple.utils.keyguard.KeyguardWrapper: void initActivity(android.app.Activity)>($r0) in <com.csipsimple.utils.keyguard.KeyguardWrapper: com.csipsimple.utils.keyguard.KeyguardWrapper getKeyguardManager(android.app.Activity)> ==> <com.csipsimple.utils.keyguard.Keyguard3: void initActivity(android.app.Activity)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.keyguard.Keyguard5: void <init>()>() in <com.csipsimple.utils.keyguard.KeyguardWrapper: com.csipsimple.utils.keyguard.KeyguardWrapper getKeyguardManager(android.app.Activity)> ==> <com.csipsimple.utils.keyguard.Keyguard5: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.keyguard.KeyguardWrapper: void <init>()>() in <com.csipsimple.utils.keyguard.Keyguard5: void <init>()> ==> <com.csipsimple.utils.keyguard.KeyguardWrapper: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallActivity: void detachVideoPreview()>() in <com.csipsimple.ui.incall.InCallActivity: void onDestroy()> ==> <com.csipsimple.ui.incall.InCallActivity: void detachVideoPreview()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>() in <com.csipsimple.ui.incall.InCallActivity: void onDestroy()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>() in <com.csipsimple.ui.incall.InCallActivity: void onStop()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>() in <com.csipsimple.ui.incall.InCallActivity: void onPause()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable)>(r0, null) in <com.csipsimple.ui.incall.InCallActivity: void onResume()> ==> <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable)>
EXECUTOR edge: virtualinvoke r0.<com.csipsimple.ui.incall.InCallActivity: void runOnUiThread(java.lang.Runnable)>($r2) in <com.csipsimple.ui.incall.InCallActivity: void onResume()> ==> <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", $r11) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: $r14 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: android.os.PowerManager$WakeLock access$18(com.csipsimple.ui.incall.InCallActivity)>($r3) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: android.os.PowerManager$WakeLock access$18(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: staticinvoke <com.csipsimple.ui.incall.InCallActivity: void access$15(com.csipsimple.ui.incall.InCallActivity)>($r3) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: void access$15(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", "Active call session is disconnected or null wait for quit...") in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r14 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: android.os.PowerManager$WakeLock access$14(com.csipsimple.ui.incall.InCallActivity)>($r3) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: android.os.PowerManager$WakeLock access$14(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallAnswerControls access$10(com.csipsimple.ui.incall.InCallActivity)>($r3) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallAnswerControls access$10(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallControls access$9(com.csipsimple.ui.incall.InCallActivity)>($r3) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallControls access$9(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: r2 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession access$8(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.SipCallSession,com.csipsimple.api.SipCallSession)>($r3, r1, r2) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession access$8(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.SipCallSession,com.csipsimple.api.SipCallSession)>
STATIC edge: $r13 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: android.view.SurfaceView access$17(com.csipsimple.ui.incall.InCallActivity)>($r3) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: android.view.SurfaceView access$17(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: $r12 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.CallProximityManager access$16(com.csipsimple.ui.incall.InCallActivity)>($r3) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.CallProximityManager access$16(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: $r11 = staticinvoke <com.csipsimple.utils.CallsUtils: java.lang.String getStringCallState(com.csipsimple.api.SipCallSession,android.content.Context)>(r2, $r3) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.utils.CallsUtils: java.lang.String getStringCallState(com.csipsimple.api.SipCallSession,android.content.Context)>
STATIC edge: $r9 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallActivity$CallsAdapter access$13(com.csipsimple.ui.incall.InCallActivity)>($r3) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallActivity$CallsAdapter access$13(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: $r9 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallActivity$CallsAdapter access$12(com.csipsimple.ui.incall.InCallActivity)>($r3) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallActivity$CallsAdapter access$12(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: $r8 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallInfoGrid access$11(com.csipsimple.ui.incall.InCallActivity)>($r3) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallInfoGrid access$11(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession[] access$7(com.csipsimple.ui.incall.InCallActivity)>($r3) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession[] access$7(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: java.lang.Object access$1(com.csipsimple.ui.incall.InCallActivity)>($r3) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: java.lang.Object access$1(com.csipsimple.ui.incall.InCallActivity)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity)>($r1) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable)> ==> <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r22.<com.csipsimple.utils.DialingFeedback: void <init>(android.app.Activity,boolean)>(r0, 1) in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.DialingFeedback: void <init>(android.app.Activity,boolean)>
SPECIAL edge: specialinvoke $r20.<com.csipsimple.ui.incall.CallProximityManager: void <init>(android.content.Context,com.csipsimple.ui.incall.CallProximityManager$ProximityDirector,com.csipsimple.widgets.ScreenLocker)>(r0, r0, r17) in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.incall.CallProximityManager: void <init>(android.content.Context,com.csipsimple.ui.incall.CallProximityManager$ProximityDirector,com.csipsimple.widgets.ScreenLocker)>
VIRTUAL edge: virtualinvoke $r20.<com.csipsimple.ui.incall.CallProximityManager: void startTracking()>() in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.incall.CallProximityManager: void startTracking()>
CLINIT edge: $r11 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>($r1, "keep_awake_incall") in <com.csipsimple.ui.incall.CallProximityManager: void <init>(android.content.Context,com.csipsimple.ui.incall.CallProximityManager$ProximityDirector,com.csipsimple.widgets.ScreenLocker)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallProximityManager", "Impossible to get power manager release with it") in <com.csipsimple.ui.incall.CallProximityManager: void <init>(android.content.Context,com.csipsimple.ui.incall.CallProximityManager$ProximityDirector,com.csipsimple.widgets.ScreenLocker)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r11 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>($r1, "invert_proximity_sensor") in <com.csipsimple.ui.incall.CallProximityManager: void <init>(android.content.Context,com.csipsimple.ui.incall.CallProximityManager$ProximityDirector,com.csipsimple.widgets.ScreenLocker)> ==> <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallProximityManager", "Impossible to get power manager release with it") in <com.csipsimple.ui.incall.CallProximityManager: void <init>(android.content.Context,com.csipsimple.ui.incall.CallProximityManager$ProximityDirector,com.csipsimple.widgets.ScreenLocker)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r4 = <java.lang.Integer: java.lang.Class TYPE> in <com.csipsimple.ui.incall.CallProximityManager: void <init>(android.content.Context,com.csipsimple.ui.incall.CallProximityManager$ProximityDirector,com.csipsimple.widgets.ScreenLocker)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r13 = <com.csipsimple.ui.incall.CallProximityManager: java.lang.reflect.Method powerLockReleaseIntMethod> in <com.csipsimple.ui.incall.CallProximityManager: void <init>(android.content.Context,com.csipsimple.ui.incall.CallProximityManager$ProximityDirector,com.csipsimple.widgets.ScreenLocker)> ==> <com.csipsimple.ui.incall.CallProximityManager: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallProximityManager", "Register sensor") in <com.csipsimple.ui.incall.CallProximityManager: void startTracking()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallProximityManager", "Register sensor") in <com.csipsimple.ui.incall.CallProximityManager: void startTracking()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r13 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getSupportedWakeLockFlags", $r12) in <com.csipsimple.ui.incall.CallProximityManager: void <init>(android.content.Context,com.csipsimple.ui.incall.CallProximityManager$ProximityDirector,com.csipsimple.widgets.ScreenLocker)> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.ui.incall.AccelerometerListener: void <init>(android.content.Context,com.csipsimple.ui.incall.AccelerometerListener$OrientationListener)>($r1, r0) in <com.csipsimple.ui.incall.CallProximityManager: void <init>(android.content.Context,com.csipsimple.ui.incall.CallProximityManager$ProximityDirector,com.csipsimple.widgets.ScreenLocker)> ==> <com.csipsimple.ui.incall.AccelerometerListener: void <init>(android.content.Context,com.csipsimple.ui.incall.AccelerometerListener$OrientationListener)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.incall.AccelerometerListener$AccelerometerHandler: void <init>(com.csipsimple.ui.incall.AccelerometerListener)>(r0) in <com.csipsimple.ui.incall.AccelerometerListener: void <init>(android.content.Context,com.csipsimple.ui.incall.AccelerometerListener$OrientationListener)> ==> <com.csipsimple.ui.incall.AccelerometerListener$AccelerometerHandler: void <init>(com.csipsimple.ui.incall.AccelerometerListener)>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.incall.AccelerometerListener$1: void <init>(com.csipsimple.ui.incall.AccelerometerListener)>(r0) in <com.csipsimple.ui.incall.AccelerometerListener: void <init>(android.content.Context,com.csipsimple.ui.incall.AccelerometerListener$OrientationListener)> ==> <com.csipsimple.ui.incall.AccelerometerListener$1: void <init>(com.csipsimple.ui.incall.AccelerometerListener)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.AccelerometerListener$1: void <init>(com.csipsimple.ui.incall.AccelerometerListener)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.AccelerometerListener: void <init>(android.content.Context,com.csipsimple.ui.incall.AccelerometerListener$OrientationListener)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.CallProximityManager: void <init>(android.content.Context,com.csipsimple.ui.incall.CallProximityManager$ProximityDirector,com.csipsimple.widgets.ScreenLocker)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r16.<com.csipsimple.ui.incall.InCallActivity$CallsAdapter: void <init>(com.csipsimple.ui.incall.InCallActivity,boolean)>(r0, 1) in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: void <init>(com.csipsimple.ui.incall.InCallActivity,boolean)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>(r0) in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke $r8.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("prevent_screen_rotation") in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.InCallActivity: void setContentView(int)>(2130903103) in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallActivity: void attachVideoPreview()>() in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.incall.InCallActivity: void attachVideoPreview()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallActivity: void applyTheme()>() in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.incall.InCallActivity: void applyTheme()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", "Create Local Renderer") in <com.csipsimple.ui.incall.InCallActivity: void attachVideoPreview()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", "NO NEED TO Create Local Renderer") in <com.csipsimple.ui.incall.InCallActivity: void attachVideoPreview()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r3 = staticinvoke <org.webrtc.videoengine.ViERenderer: android.view.SurfaceView CreateLocalRenderer(android.content.Context)>(r0) in <com.csipsimple.ui.incall.InCallActivity: void attachVideoPreview()> ==> <org.webrtc.videoengine.ViERenderer: android.view.SurfaceView CreateLocalRenderer(android.content.Context)>
STATIC edge: staticinvoke <com.csipsimple.utils.Theme: com.csipsimple.utils.Theme getCurrentTheme(android.content.Context)>(r0) in <com.csipsimple.ui.incall.InCallActivity: void applyTheme()> ==> <com.csipsimple.utils.Theme: com.csipsimple.utils.Theme getCurrentTheme(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("use_video") in <com.csipsimple.ui.incall.InCallActivity: void attachVideoPreview()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.incall.InCallActivity$2: void <init>(com.csipsimple.ui.incall.InCallActivity)>(r0) in <com.csipsimple.ui.incall.InCallActivity: void <init>()> ==> <com.csipsimple.ui.incall.InCallActivity$2: void <init>(com.csipsimple.ui.incall.InCallActivity)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.InCallActivity$2: void <init>(com.csipsimple.ui.incall.InCallActivity)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.incall.InCallActivity$1: void <init>(com.csipsimple.ui.incall.InCallActivity)>(r0) in <com.csipsimple.ui.incall.InCallActivity: void <init>()> ==> <com.csipsimple.ui.incall.InCallActivity$1: void <init>(com.csipsimple.ui.incall.InCallActivity)>
SPECIAL edge: specialinvoke $r1.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.InCallActivity: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>() in <com.csipsimple.ui.incall.InCallActivity: void <init>()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.filters.EditFilter: void <init>()>() in <dummyMainClass: com.csipsimple.ui.filters.EditFilter dummyMainMethod_com_csipsimple_ui_filters_EditFilter(android.content.Intent)> ==> <com.csipsimple.ui.filters.EditFilter: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.ui.filters.EditFilter: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.csipsimple.ui.filters.EditFilter dummyMainMethod_com_csipsimple_ui_filters_EditFilter(android.content.Intent)> ==> <com.csipsimple.ui.filters.EditFilter: void onCreate(android.os.Bundle)>
CLINIT edge: $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.ui.filters.EditFilter: void onCreate(android.os.Bundle)> ==> <java.lang.Long: void <clinit>()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.models.Filter: com.csipsimple.models.Filter getFilterFromDbId(android.content.Context,long,java.lang.String[])>(r0, $l0, $r2) in <com.csipsimple.ui.filters.EditFilter: void onCreate(android.os.Bundle)> ==> <com.csipsimple.models.Filter: com.csipsimple.models.Filter getFilterFromDbId(android.content.Context,long,java.lang.String[])>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("EditFilter", "Invalid account") in <com.csipsimple.ui.filters.EditFilter: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.ui.filters.EditFilter: void onCreate(android.os.Bundle)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
CLINIT edge: $r2 = <com.csipsimple.models.Filter: java.lang.String[] FULL_PROJ> in <com.csipsimple.ui.filters.EditFilter: void onCreate(android.os.Bundle)> ==> <com.csipsimple.models.Filter: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("EditFilter", "Invalid account") in <com.csipsimple.ui.filters.EditFilter: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: r4 = new com.csipsimple.models.Filter in <com.csipsimple.models.Filter: com.csipsimple.models.Filter getFilterFromDbId(android.content.Context,long,java.lang.String[])> ==> <com.csipsimple.models.Filter: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Filter", "Something went wrong while retrieving the account", r2) in <com.csipsimple.models.Filter: com.csipsimple.models.Filter getFilterFromDbId(android.content.Context,long,java.lang.String[])> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Filter", "Something went wrong while retrieving the account", r2) in <com.csipsimple.models.Filter: com.csipsimple.models.Filter getFilterFromDbId(android.content.Context,long,java.lang.String[])> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r6 = <com.csipsimple.api.SipManager: android.net.Uri FILTER_ID_URI_BASE> in <com.csipsimple.models.Filter: com.csipsimple.models.Filter getFilterFromDbId(android.content.Context,long,java.lang.String[])> ==> <com.csipsimple.api.SipManager: void <clinit>()>
SPECIAL edge: specialinvoke r3.<com.csipsimple.models.Filter: void <init>(android.database.Cursor)>($r7) in <com.csipsimple.models.Filter: com.csipsimple.models.Filter getFilterFromDbId(android.content.Context,long,java.lang.String[])> ==> <com.csipsimple.models.Filter: void <init>(android.database.Cursor)>
SPECIAL edge: specialinvoke r4.<com.csipsimple.models.Filter: void <init>()>() in <com.csipsimple.models.Filter: com.csipsimple.models.Filter getFilterFromDbId(android.content.Context,long,java.lang.String[])> ==> <com.csipsimple.models.Filter: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.models.Filter: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r11.<com.csipsimple.ui.filters.EditFilter$2: void <init>(com.csipsimple.ui.filters.EditFilter)>(r0) in <com.csipsimple.ui.filters.EditFilter: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.filters.EditFilter$2: void <init>(com.csipsimple.ui.filters.EditFilter)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.filters.EditFilter$2: void <init>(com.csipsimple.ui.filters.EditFilter)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r10.<com.csipsimple.ui.filters.EditFilter$1: void <init>(com.csipsimple.ui.filters.EditFilter)>(r0) in <com.csipsimple.ui.filters.EditFilter: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.filters.EditFilter$1: void <init>(com.csipsimple.ui.filters.EditFilter)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.filters.EditFilter$1: void <init>(com.csipsimple.ui.filters.EditFilter)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.filters.EditFilter: void fillLayout()>() in <com.csipsimple.ui.filters.EditFilter: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.filters.EditFilter: void fillLayout()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.filters.EditFilter: void checkFormValidity()>() in <com.csipsimple.ui.filters.EditFilter: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.filters.EditFilter: void checkFormValidity()>
CLINIT edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getPositionForAction(java.lang.Integer)>($r3) in <com.csipsimple.ui.filters.EditFilter: void fillLayout()> ==> <com.csipsimple.models.Filter: void <clinit>()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getPositionForReplace(java.lang.Integer)>($r3) in <com.csipsimple.ui.filters.EditFilter: void fillLayout()> ==> <com.csipsimple.models.Filter: int getPositionForReplace(java.lang.Integer)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getPositionForMatcher(java.lang.Integer)>($r3) in <com.csipsimple.ui.filters.EditFilter: void fillLayout()> ==> <com.csipsimple.models.Filter: int getPositionForMatcher(java.lang.Integer)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getPositionForAction(java.lang.Integer)>($r3) in <com.csipsimple.ui.filters.EditFilter: void fillLayout()> ==> <com.csipsimple.models.Filter: int getPositionForAction(java.lang.Integer)>
CLINIT edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.filters.EditFilter: void checkFormValidity()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6) in <com.csipsimple.ui.filters.EditFilter: void checkFormValidity()> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getActionForPosition(java.lang.Integer)>($r3) in <com.csipsimple.ui.filters.EditFilter: void checkFormValidity()> ==> <com.csipsimple.models.Filter: int getActionForPosition(java.lang.Integer)>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.filters.EditFilter: void checkFormValidity()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getActionForPosition(java.lang.Integer)>($r3) in <com.csipsimple.ui.filters.EditFilter: void checkFormValidity()> ==> <com.csipsimple.models.Filter: void <clinit>()>
CLINIT edge: $r1 = <com.csipsimple.models.Filter: android.util.SparseArray REPLACE_TYPE_POS> in <com.csipsimple.models.Filter: int getPositionForReplace(java.lang.Integer)> ==> <com.csipsimple.models.Filter: void <clinit>()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getPositionFor(android.util.SparseArray,java.lang.Integer)>($r1, $r0) in <com.csipsimple.models.Filter: int getPositionForReplace(java.lang.Integer)> ==> <com.csipsimple.models.Filter: int getPositionFor(android.util.SparseArray,java.lang.Integer)>
CLINIT edge: $r1 = <com.csipsimple.models.Filter: android.util.SparseArray MATCHER_TYPE_POS> in <com.csipsimple.models.Filter: int getPositionForMatcher(java.lang.Integer)> ==> <com.csipsimple.models.Filter: void <clinit>()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getPositionFor(android.util.SparseArray,java.lang.Integer)>($r1, $r0) in <com.csipsimple.models.Filter: int getPositionForMatcher(java.lang.Integer)> ==> <com.csipsimple.models.Filter: int getPositionFor(android.util.SparseArray,java.lang.Integer)>
CLINIT edge: $r1 = <com.csipsimple.models.Filter: android.util.SparseArray FILTER_ACTION_POS> in <com.csipsimple.models.Filter: int getPositionForAction(java.lang.Integer)> ==> <com.csipsimple.models.Filter: void <clinit>()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getPositionFor(android.util.SparseArray,java.lang.Integer)>($r1, $r0) in <com.csipsimple.models.Filter: int getPositionForAction(java.lang.Integer)> ==> <com.csipsimple.models.Filter: int getPositionFor(android.util.SparseArray,java.lang.Integer)>
CLINIT edge: $r1 = <com.csipsimple.models.Filter: android.util.SparseArray FILTER_ACTION_POS> in <com.csipsimple.models.Filter: int getActionForPosition(java.lang.Integer)> ==> <com.csipsimple.models.Filter: void <clinit>()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getForPosition(android.util.SparseArray,java.lang.Integer)>($r1, $r0) in <com.csipsimple.models.Filter: int getActionForPosition(java.lang.Integer)> ==> <com.csipsimple.models.Filter: int getForPosition(android.util.SparseArray,java.lang.Integer)>
SPECIAL edge: $z1 = specialinvoke r0.<com.csipsimple.ui.filters.EditFilter: boolean matcherNeedsText()>() in <com.csipsimple.ui.filters.EditFilter: void checkFormValidity()> ==> <com.csipsimple.ui.filters.EditFilter: boolean matcherNeedsText()>
CLINIT edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.filters.EditFilter: boolean matcherNeedsText()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getMatcherForPosition(java.lang.Integer)>($r2) in <com.csipsimple.ui.filters.EditFilter: boolean matcherNeedsText()> ==> <com.csipsimple.models.Filter: int getMatcherForPosition(java.lang.Integer)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.filters.EditFilter: boolean matcherNeedsText()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getMatcherForPosition(java.lang.Integer)>($r2) in <com.csipsimple.ui.filters.EditFilter: boolean matcherNeedsText()> ==> <com.csipsimple.models.Filter: void <clinit>()>
CLINIT edge: $r1 = <com.csipsimple.models.Filter: android.util.SparseArray MATCHER_TYPE_POS> in <com.csipsimple.models.Filter: int getMatcherForPosition(java.lang.Integer)> ==> <com.csipsimple.models.Filter: void <clinit>()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getForPosition(android.util.SparseArray,java.lang.Integer)>($r1, $r0) in <com.csipsimple.models.Filter: int getMatcherForPosition(java.lang.Integer)> ==> <com.csipsimple.models.Filter: int getForPosition(android.util.SparseArray,java.lang.Integer)>
VIRTUAL edge: $r4 = virtualinvoke $r2.<com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForMatcher()>() in <com.csipsimple.ui.filters.EditFilter: void fillLayout()> ==> <com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForMatcher()>
VIRTUAL edge: $r4 = virtualinvoke $r2.<com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForReplace()>() in <com.csipsimple.ui.filters.EditFilter: void fillLayout()> ==> <com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForReplace()>
CLINIT edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4) in <com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForMatcher()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) in <com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForMatcher()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) in <com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForReplace()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) in <com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForReplace()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.models.Filter$RegExpRepresentation: void <init>()>() in <com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForReplace()> ==> <com.csipsimple.models.Filter$RegExpRepresentation: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.models.Filter$RegExpRepresentation: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.models.Filter$RegExpRepresentation: void <init>()>() in <com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForMatcher()> ==> <com.csipsimple.models.Filter$RegExpRepresentation: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("###BLUETOOTH###") in <com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForMatcher()> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.db.DBProvider: void <init>()>() in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <com.csipsimple.db.DBProvider: void <init>()>
VIRTUAL edge: $z1 = virtualinvoke $r2.<com.csipsimple.db.DBProvider: boolean onCreate()>() in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <com.csipsimple.db.DBProvider: boolean onCreate()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.db.DBAdapter$DatabaseHelper: void <init>(android.content.Context)>($r1) in <com.csipsimple.db.DBProvider: boolean onCreate()> ==> <com.csipsimple.db.DBAdapter$DatabaseHelper: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.service.PreferenceProvider: void <init>()>() in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <com.csipsimple.service.PreferenceProvider: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.service.PreferenceProvider: boolean onCreate()>() in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <com.csipsimple.service.PreferenceProvider: boolean onCreate()>
CLINIT edge: $r2 = new com.csipsimple.utils.PreferencesWrapper in <com.csipsimple.service.PreferenceProvider: boolean onCreate()> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>($r1) in <com.csipsimple.service.PreferenceProvider: boolean onCreate()> ==> <com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.ui.incall.AccelerometerListener: void enable(boolean)>(1) in <com.csipsimple.ui.incall.CallProximityManager: void startTracking()> ==> <com.csipsimple.ui.incall.AccelerometerListener: void enable(boolean)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("AccelerometerListener", $r2) in <com.csipsimple.ui.incall.AccelerometerListener: void enable(boolean)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("AccelerometerListener", $r2) in <com.csipsimple.ui.incall.AccelerometerListener: void enable(boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r12.<com.csipsimple.ui.incall.CallProximityManager: void updateProximitySensorMode()>() in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.CallProximityManager: void updateProximitySensorMode()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallProximityManager", $r3) in <com.csipsimple.ui.incall.CallProximityManager: void updateProximitySensorMode()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallProximityManager", $r3) in <com.csipsimple.ui.incall.CallProximityManager: void updateProximitySensorMode()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.CallProximityManager: void acquire()>() in <com.csipsimple.ui.incall.CallProximityManager: void updateProximitySensorMode()> ==> <com.csipsimple.ui.incall.CallProximityManager: void acquire()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.CallProximityManager: void release(int)>(i0) in <com.csipsimple.ui.incall.CallProximityManager: void updateProximitySensorMode()> ==> <com.csipsimple.ui.incall.CallProximityManager: void release(int)>
CLINIT edge: $i0 = <com.csipsimple.ui.incall.CallProximityManager: int SCREEN_LOCKER_ACQUIRE_DELAY> in <com.csipsimple.ui.incall.CallProximityManager: void acquire()> ==> <com.csipsimple.ui.incall.CallProximityManager: void <clinit>()>
CLINIT edge: $r3 = <com.csipsimple.ui.incall.CallProximityManager: java.lang.reflect.Method powerLockReleaseIntMethod> in <com.csipsimple.ui.incall.CallProximityManager: void release(int)> ==> <com.csipsimple.ui.incall.CallProximityManager: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String,java.lang.Throwable)>("CallProximityManager", "Error calling new release method ", r1) in <com.csipsimple.ui.incall.CallProximityManager: void release(int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.incall.CallProximityManager: void release(int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String,java.lang.Throwable)>("CallProximityManager", "Error calling new release method ", r1) in <com.csipsimple.ui.incall.CallProximityManager: void release(int)> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.incall.CallProximityManager: void release(int)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $i0 = <com.csipsimple.utils.Log: int logLevel> in <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String,java.lang.Throwable)> ==> <com.csipsimple.utils.Log: void <clinit>()>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.ui.incall.CallProximityManager: boolean shouldUseTimeoutOverlay()>() in <com.csipsimple.ui.incall.CallProximityManager: void release(int)> ==> <com.csipsimple.ui.incall.CallProximityManager: boolean shouldUseTimeoutOverlay()>
CLINIT edge: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.ui.incall.CallProximityManager: boolean shouldUseTimeoutOverlay()> ==> <java.lang.Boolean: void <clinit>()>
STATIC edge: $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.ui.incall.CallProximityManager: boolean shouldUseTimeoutOverlay()> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isTabletScreen(android.content.Context)>($r4) in <com.csipsimple.ui.incall.CallProximityManager: boolean shouldUseTimeoutOverlay()> ==> <com.csipsimple.utils.Compatibility: boolean isTabletScreen(android.content.Context)>
INTERFACE edge: interfaceinvoke $r7.<com.csipsimple.ui.incall.CallProximityManager$ProximityDirector: void onProximityTrackingChanged(boolean)>(0) in <com.csipsimple.ui.incall.CallProximityManager: void release(int)> ==> <com.csipsimple.ui.incall.InCallActivity: void onProximityTrackingChanged(boolean)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("InCallActivity", "Can\'t run speaker change") in <com.csipsimple.ui.incall.InCallActivity: void onProximityTrackingChanged(boolean)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("InCallActivity", "Can\'t run speaker change") in <com.csipsimple.ui.incall.InCallActivity: void onProximityTrackingChanged(boolean)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.ui.incall.CallProximityManager: boolean shouldUseTimeoutOverlay()>() in <com.csipsimple.ui.incall.CallProximityManager: void acquire()> ==> <com.csipsimple.ui.incall.CallProximityManager: boolean shouldUseTimeoutOverlay()>
INTERFACE edge: interfaceinvoke $r3.<com.csipsimple.ui.incall.CallProximityManager$ProximityDirector: void onProximityTrackingChanged(boolean)>(1) in <com.csipsimple.ui.incall.CallProximityManager: void acquire()> ==> <com.csipsimple.ui.incall.InCallActivity: void onProximityTrackingChanged(boolean)>
INTERFACE edge: z1 = interfaceinvoke $r1.<com.csipsimple.ui.incall.CallProximityManager$ProximityDirector: boolean shouldActivateProximity()>() in <com.csipsimple.ui.incall.CallProximityManager: void updateProximitySensorMode()> ==> <com.csipsimple.ui.incall.InCallActivity: boolean shouldActivateProximity()>
SPECIAL edge: $r1 = specialinvoke $r0.<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession getPrioritaryCall(com.csipsimple.api.SipCallSession,com.csipsimple.api.SipCallSession)>($r1, $r2) in <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession access$8(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.SipCallSession,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession getPrioritaryCall(com.csipsimple.api.SipCallSession,com.csipsimple.api.SipCallSession)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.incall.InCallActivity: void delayedQuit()>() in <com.csipsimple.ui.incall.InCallActivity: void access$15(com.csipsimple.ui.incall.InCallActivity)> ==> <com.csipsimple.ui.incall.InCallActivity: void delayedQuit()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", "Releasing wake up lock") in <com.csipsimple.ui.incall.InCallActivity: void delayedQuit()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", "Start quit timer") in <com.csipsimple.ui.incall.InCallActivity: void delayedQuit()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.incall.InCallActivity$QuitTimerTask: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$QuitTimerTask)>(r0, null) in <com.csipsimple.ui.incall.InCallActivity: void delayedQuit()> ==> <com.csipsimple.ui.incall.InCallActivity$QuitTimerTask: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$QuitTimerTask)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallActivity$QuitTimerTask: void <init>(com.csipsimple.ui.incall.InCallActivity)>($r1) in <com.csipsimple.ui.incall.InCallActivity$QuitTimerTask: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$QuitTimerTask)> ==> <com.csipsimple.ui.incall.InCallActivity$QuitTimerTask: void <init>(com.csipsimple.ui.incall.InCallActivity)>
VIRTUAL edge: virtualinvoke $r5.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r6, 3000L) in <com.csipsimple.ui.incall.InCallActivity: void delayedQuit()> ==> <java.util.Timer: void schedule(java.util.TimerTask,long)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.incall.CallProximityManager: void release(int)>(0) in <com.csipsimple.ui.incall.InCallActivity: void delayedQuit()> ==> <com.csipsimple.ui.incall.CallProximityManager: void release(int)>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.ui.incall.CallProximityManager: void stopTracking()>() in <com.csipsimple.ui.incall.InCallActivity: void onDestroy()> ==> <com.csipsimple.ui.incall.CallProximityManager: void stopTracking()>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.ui.incall.CallProximityManager: void release(int)>(0) in <com.csipsimple.ui.incall.InCallActivity: void onDestroy()> ==> <com.csipsimple.ui.incall.CallProximityManager: void release(int)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallProximityManager", "Unregister to sensor is done !!!") in <com.csipsimple.ui.incall.CallProximityManager: void stopTracking()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallProximityManager", "Unregister to sensor is done !!!") in <com.csipsimple.ui.incall.CallProximityManager: void stopTracking()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.ui.incall.AccelerometerListener: void enable(boolean)>(0) in <com.csipsimple.ui.incall.CallProximityManager: void stopTracking()> ==> <com.csipsimple.ui.incall.AccelerometerListener: void enable(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.keyguard.KeyguardWrapper: void lock()>() in <com.csipsimple.ui.incall.InCallActivity: void onStop()> ==> <com.csipsimple.utils.keyguard.Keyguard5: void lock()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.keyguard.KeyguardWrapper: void lock()>() in <com.csipsimple.ui.incall.InCallActivity: void onStop()> ==> <com.csipsimple.utils.keyguard.Keyguard3: void lock()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.DialingFeedback: void pause()>() in <com.csipsimple.ui.incall.InCallActivity: void onPause()> ==> <com.csipsimple.utils.DialingFeedback: void pause()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.DialingFeedback: void resume()>() in <com.csipsimple.ui.incall.InCallActivity: void onResume()> ==> <com.csipsimple.utils.DialingFeedback: void resume()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.keyguard.KeyguardWrapper: void unlock()>() in <com.csipsimple.ui.incall.InCallActivity: void onStart()> ==> <com.csipsimple.utils.keyguard.Keyguard5: void unlock()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.keyguard.KeyguardWrapper: void unlock()>() in <com.csipsimple.ui.incall.InCallActivity: void onStart()> ==> <com.csipsimple.utils.keyguard.Keyguard3: void unlock()>
SPECIAL edge: $r1 = specialinvoke $r0.<com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String dumpRoutes()>() in <com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String access$1(com.csipsimple.service.receiver.DynamicReceiver4)> ==> <com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String dumpRoutes()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4) in <com.csipsimple.service.receiver.DynamicReceiver4$2: void run()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.receiver.DynamicReceiver4$2: void run()> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r7) in <com.csipsimple.service.receiver.DynamicReceiver4$2: void run()> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getReg_uri()>() in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getReg_uri()>
VIRTUAL edge: $l1 = virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: long getProxy_cnt()>() in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua_acc_config: long getProxy_cnt()>
VIRTUAL edge: $r8 = virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t[] getProxy()>() in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t[] getProxy()>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setReg_uri(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setReg_uri(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setProxy_cnt(long)>(0L) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setProxy_cnt(long)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getId()>() in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getId()>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setId(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setId(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setKa_interval(long)>($l1) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setKa_interval(long)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setVid_in_auto_show(int)>($i0) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setVid_in_auto_show(int)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setVid_out_auto_transmit(int)>($i0) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setVid_out_auto_transmit(int)>
VIRTUAL edge: $r12 = virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_transport_config getRtp_cfg()>() in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_transport_config getRtp_cfg()>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setProxy(org.pjsip.pjsua.pj_str_t[])>($r8) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setProxy(org.pjsip.pjsua.pj_str_t[])>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long pjsua_acc_config_reg_uri_get(long,org.pjsip.pjsua.pjsua_acc_config)>($l0, r0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getReg_uri()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long pjsua_acc_config_proxy_cnt_get(long,org.pjsip.pjsua.pjsua_acc_config)>($l0, r0) in <org.pjsip.pjsua.pjsua_acc_config: long getProxy_cnt()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long[] pjsua_acc_config_proxy_get(long,org.pjsip.pjsua.pjsua_acc_config)>($l0, r0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t[] getProxy()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.pj_str_t: org.pjsip.pjsua.pj_str_t[] cArrayWrap(long[],boolean)>($r1, 0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t[] getProxy()> ==> <org.pjsip.pjsua.pj_str_t: org.pjsip.pjsua.pj_str_t[] cArrayWrap(long[],boolean)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_reg_uri_set(long,org.pjsip.pjsua.pjsua_acc_config,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_acc_config: void setReg_uri(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setReg_uri(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_proxy_cnt_set(long,org.pjsip.pjsua.pjsua_acc_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_acc_config: void setProxy_cnt(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long pjsua_acc_config_id_get(long,org.pjsip.pjsua.pjsua_acc_config)>($l0, r0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getId()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_id_set(long,org.pjsip.pjsua.pjsua_acc_config,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_acc_config: void setId(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setId(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_ka_interval_set(long,org.pjsip.pjsua.pjsua_acc_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_acc_config: void setKa_interval(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long pjsua_acc_config_rtp_cfg_get(long,org.pjsip.pjsua.pjsua_acc_config)>($l0, r0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_transport_config getRtp_cfg()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_proxy_set(long,org.pjsip.pjsua.pjsua_acc_config,long[])>($l0, r0, $r2) in <org.pjsip.pjsua.pjsua_acc_config: void setProxy(org.pjsip.pjsua.pj_str_t[])> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long[] cArrayUnwrap(org.pjsip.pjsua.pj_str_t[])>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setProxy(org.pjsip.pjsua.pj_str_t[])> ==> <org.pjsip.pjsua.pj_str_t: long[] cArrayUnwrap(org.pjsip.pjsua.pj_str_t[])>
VIRTUAL edge: virtualinvoke $r12.<org.pjsip.pjsua.pjsua_transport_config: void setPort(long)>($l1) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua_transport_config: void setPort(long)>
VIRTUAL edge: virtualinvoke $r12.<org.pjsip.pjsua.pjsua_transport_config: void setQos_type(org.pjsip.pjsua.pj_qos_type)>($r13) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua_transport_config: void setQos_type(org.pjsip.pjsua.pj_qos_type)>
VIRTUAL edge: $r14 = virtualinvoke $r12.<org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pj_qos_params getQos_params()>() in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pj_qos_params getQos_params()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_transport_config_qos_type_set(long,org.pjsip.pjsua.pjsua_transport_config,int)>($l0, r0, $i1) in <org.pjsip.pjsua.pjsua_transport_config: void setQos_type(org.pjsip.pjsua.pj_qos_type)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
VIRTUAL edge: virtualinvoke $r14.<org.pjsip.pjsua.pj_qos_params: void setDscp_val(short)>(s3) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pj_qos_params: void setDscp_val(short)>
VIRTUAL edge: virtualinvoke $r14.<org.pjsip.pjsua.pj_qos_params: void setFlags(short)>(1) in <com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)> ==> <org.pjsip.pjsua.pj_qos_params: void setFlags(short)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pj_qos_type: int swigValue()>() in <org.pjsip.pjsua.pjsua_transport_config: void setQos_type(org.pjsip.pjsua.pj_qos_type)> ==> <org.pjsip.pjsua.pj_qos_type: int swigValue()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjsua_transport_config: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_transport_config getRtp_cfg()> ==> <org.pjsip.pjsua.pjsua_transport_config: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getId()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getReg_uri()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r8.<org.pjsip.pjsua.csipsimple_acc_config: void setUse_zrtp(int)>($i2) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.csipsimple_acc_config: void setUse_zrtp(int)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void csipsimple_acc_config_use_zrtp_set(long,org.pjsip.pjsua.csipsimple_acc_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.csipsimple_acc_config: void setUse_zrtp(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setPriority(int)>($i2) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setPriority(int)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setId(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setId(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setReg_uri(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setReg_uri(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setPublish_enabled(int)>($i2) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setPublish_enabled(int)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setReg_timeout(long)>($l0) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setReg_timeout(long)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setReg_delay_before_refresh(long)>($l0) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setReg_delay_before_refresh(long)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setKa_interval(long)>($l0) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setKa_interval(long)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setPidf_tuple_id(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setPidf_tuple_id(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setForce_contact(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setForce_contact(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setAllow_contact_rewrite(int)>($i2) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setAllow_contact_rewrite(int)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setContact_rewrite_method(int)>($i2) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setContact_rewrite_method(int)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setAllow_via_rewrite(int)>($i2) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setAllow_via_rewrite(int)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setUse_srtp(org.pjsip.pjsua.pjmedia_srtp_use)>($r7) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setUse_srtp(org.pjsip.pjsua.pjmedia_srtp_use)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setSrtp_secure_signaling(int)>(0) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setSrtp_secure_signaling(int)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setProxy_cnt(long)>($l0) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setProxy_cnt(long)>
VIRTUAL edge: $r11 = virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t[] getProxy()>() in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t[] getProxy()>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setProxy(org.pjsip.pjsua.pj_str_t[])>($r11) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setProxy(org.pjsip.pjsua.pj_str_t[])>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setReg_use_proxy(long)>($l0) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setReg_use_proxy(long)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setCred_count(long)>(1L) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setCred_count(long)>
VIRTUAL edge: $r12 = virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsip_cred_info getCred_info()>() in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsip_cred_info getCred_info()>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setMwi_enabled(int)>($i2) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setMwi_enabled(int)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setUse_rfc5626(long)>($l0) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setUse_rfc5626(long)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setRfc5626_instance_id(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setRfc5626_instance_id(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setRfc5626_reg_id(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setRfc5626_reg_id(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $r13 = virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_transport_config getRtp_cfg()>() in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_transport_config getRtp_cfg()>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setSip_stun_use(org.pjsip.pjsua.pjsua_stun_use)>($r14) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setSip_stun_use(org.pjsip.pjsua.pjsua_stun_use)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setMedia_stun_use(org.pjsip.pjsua.pjsua_stun_use)>($r14) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setMedia_stun_use(org.pjsip.pjsua.pjsua_stun_use)>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setIce_cfg_use(org.pjsip.pjsua.pjsua_ice_config_use)>($r15) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setIce_cfg_use(org.pjsip.pjsua.pjsua_ice_config_use)>
VIRTUAL edge: $r16 = virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_ice_config getIce_cfg()>() in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_ice_config getIce_cfg()>
VIRTUAL edge: virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: void setTurn_cfg_use(org.pjsip.pjsua.pjsua_turn_config_use)>($r17) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: void setTurn_cfg_use(org.pjsip.pjsua.pjsua_turn_config_use)>
VIRTUAL edge: $r18 = virtualinvoke $r5.<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_turn_config getTurn_cfg()>() in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_turn_config getTurn_cfg()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_priority_set(long,org.pjsip.pjsua.pjsua_acc_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_acc_config: void setPriority(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_publish_enabled_set(long,org.pjsip.pjsua.pjsua_acc_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_acc_config: void setPublish_enabled(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_reg_timeout_set(long,org.pjsip.pjsua.pjsua_acc_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_acc_config: void setReg_timeout(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_reg_delay_before_refresh_set(long,org.pjsip.pjsua.pjsua_acc_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_acc_config: void setReg_delay_before_refresh(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_pidf_tuple_id_set(long,org.pjsip.pjsua.pjsua_acc_config,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_acc_config: void setPidf_tuple_id(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setPidf_tuple_id(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_force_contact_set(long,org.pjsip.pjsua.pjsua_acc_config,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_acc_config: void setForce_contact(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setForce_contact(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_allow_contact_rewrite_set(long,org.pjsip.pjsua.pjsua_acc_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_acc_config: void setAllow_contact_rewrite(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_contact_rewrite_method_set(long,org.pjsip.pjsua.pjsua_acc_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_acc_config: void setContact_rewrite_method(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_allow_via_rewrite_set(long,org.pjsip.pjsua.pjsua_acc_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_acc_config: void setAllow_via_rewrite(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_use_srtp_set(long,org.pjsip.pjsua.pjsua_acc_config,int)>($l0, r0, $i1) in <org.pjsip.pjsua.pjsua_acc_config: void setUse_srtp(org.pjsip.pjsua.pjmedia_srtp_use)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_srtp_secure_signaling_set(long,org.pjsip.pjsua.pjsua_acc_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_acc_config: void setSrtp_secure_signaling(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_reg_use_proxy_set(long,org.pjsip.pjsua.pjsua_acc_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_acc_config: void setReg_use_proxy(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_cred_count_set(long,org.pjsip.pjsua.pjsua_acc_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_acc_config: void setCred_count(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long pjsua_acc_config_cred_info_get(long,org.pjsip.pjsua.pjsua_acc_config)>($l0, r0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsip_cred_info getCred_info()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_mwi_enabled_set(long,org.pjsip.pjsua.pjsua_acc_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_acc_config: void setMwi_enabled(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_use_rfc5626_set(long,org.pjsip.pjsua.pjsua_acc_config,long)>($l1, r0, $l0) in <org.pjsip.pjsua.pjsua_acc_config: void setUse_rfc5626(long)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_rfc5626_instance_id_set(long,org.pjsip.pjsua.pjsua_acc_config,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_acc_config: void setRfc5626_instance_id(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setRfc5626_instance_id(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_rfc5626_reg_id_set(long,org.pjsip.pjsua.pjsua_acc_config,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_acc_config: void setRfc5626_reg_id(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setRfc5626_reg_id(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_sip_stun_use_set(long,org.pjsip.pjsua.pjsua_acc_config,int)>($l0, r0, $i1) in <org.pjsip.pjsua.pjsua_acc_config: void setSip_stun_use(org.pjsip.pjsua.pjsua_stun_use)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_media_stun_use_set(long,org.pjsip.pjsua.pjsua_acc_config,int)>($l0, r0, $i1) in <org.pjsip.pjsua.pjsua_acc_config: void setMedia_stun_use(org.pjsip.pjsua.pjsua_stun_use)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_ice_cfg_use_set(long,org.pjsip.pjsua.pjsua_acc_config,int)>($l0, r0, $i1) in <org.pjsip.pjsua.pjsua_acc_config: void setIce_cfg_use(org.pjsip.pjsua.pjsua_ice_config_use)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long pjsua_acc_config_ice_cfg_get(long,org.pjsip.pjsua.pjsua_acc_config)>($l0, r0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_ice_config getIce_cfg()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_acc_config_turn_cfg_use_set(long,org.pjsip.pjsua.pjsua_acc_config,int)>($l0, r0, $i1) in <org.pjsip.pjsua.pjsua_acc_config: void setTurn_cfg_use(org.pjsip.pjsua.pjsua_turn_config_use)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long pjsua_acc_config_turn_cfg_get(long,org.pjsip.pjsua.pjsua_acc_config)>($l0, r0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_turn_config getTurn_cfg()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
VIRTUAL edge: virtualinvoke $r18.<org.pjsip.pjsua.pjsua_turn_config: void setEnable_turn(int)>($i2) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_turn_config: void setEnable_turn(int)>
VIRTUAL edge: virtualinvoke $r18.<org.pjsip.pjsua.pjsua_turn_config: void setTurn_server(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_turn_config: void setTurn_server(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $r21 = virtualinvoke $r18.<org.pjsip.pjsua.pjsua_turn_config: org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred getTurn_auth_cred()>() in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_turn_config: org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred getTurn_auth_cred()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_turn_config_enable_turn_set(long,org.pjsip.pjsua.pjsua_turn_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_turn_config: void setEnable_turn(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_turn_config_turn_server_set(long,org.pjsip.pjsua.pjsua_turn_config,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_turn_config: void setTurn_server(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_turn_config: void setTurn_server(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsuaJNI: long pjsua_turn_config_turn_auth_cred_get(long,org.pjsip.pjsua.pjsua_turn_config)>($l0, r0) in <org.pjsip.pjsua.pjsua_turn_config: org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred getTurn_auth_cred()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_turn_config: org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred getTurn_auth_cred()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r16.<org.pjsip.pjsua.pjsua_ice_config: void setEnable_ice(int)>($i2) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_ice_config: void setEnable_ice(int)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_ice_config_enable_ice_set(long,org.pjsip.pjsua.pjsua_ice_config,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsua_ice_config: void setEnable_ice(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
VIRTUAL edge: virtualinvoke $r13.<org.pjsip.pjsua.pjsua_transport_config: void setPort(long)>($l0) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_transport_config: void setPort(long)>
VIRTUAL edge: virtualinvoke $r13.<org.pjsip.pjsua.pjsua_transport_config: void setPublic_addr(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_transport_config: void setPublic_addr(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r13.<org.pjsip.pjsua.pjsua_transport_config: void setBound_addr(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsua_transport_config: void setBound_addr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_transport_config_public_addr_set(long,org.pjsip.pjsua.pjsua_transport_config,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_transport_config: void setPublic_addr(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_transport_config: void setPublic_addr(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsua_transport_config_bound_addr_set(long,org.pjsip.pjsua.pjsua_transport_config,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsua_transport_config: void setBound_addr(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_transport_config: void setBound_addr(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r12.<org.pjsip.pjsua.pjsip_cred_info: void setRealm(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsip_cred_info: void setRealm(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r12.<org.pjsip.pjsua.pjsip_cred_info: void setUsername(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsip_cred_info: void setUsername(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r12.<org.pjsip.pjsua.pjsip_cred_info: void setData_type(int)>($i2) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsip_cred_info: void setData_type(int)>
VIRTUAL edge: virtualinvoke $r12.<org.pjsip.pjsua.pjsip_cred_info: void setData(org.pjsip.pjsua.pj_str_t)>($r6) in <com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)> ==> <org.pjsip.pjsua.pjsip_cred_info: void setData(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsip_cred_info_realm_set(long,org.pjsip.pjsua.pjsip_cred_info,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsip_cred_info: void setRealm(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsip_cred_info: void setRealm(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsip_cred_info_username_set(long,org.pjsip.pjsua.pjsip_cred_info,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsip_cred_info: void setUsername(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsip_cred_info: void setUsername(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsip_cred_info_data_type_set(long,org.pjsip.pjsua.pjsip_cred_info,int)>($l1, r0, $i0) in <org.pjsip.pjsua.pjsip_cred_info: void setData_type(int)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void pjsip_cred_info_data_set(long,org.pjsip.pjsua.pjsip_cred_info,long,org.pjsip.pjsua.pj_str_t)>($l0, r0, $l1, $r1) in <org.pjsip.pjsua.pjsip_cred_info: void setData(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsip_cred_info: void setData(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjsua_turn_config: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_turn_config getTurn_cfg()> ==> <org.pjsip.pjsua.pjsua_turn_config: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.pjsua_turn_config: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_turn_config: void finalize()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_turn_config: void delete()>() in <org.pjsip.pjsua.pjsua_turn_config: void finalize()> ==> <org.pjsip.pjsua.pjsua_turn_config: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_pjsua_turn_config(long)>($l0) in <org.pjsip.pjsua.pjsua_turn_config: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_turn_config: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_turn_config_use: int swigValue()>() in <org.pjsip.pjsua.pjsua_acc_config: void setTurn_cfg_use(org.pjsip.pjsua.pjsua_turn_config_use)> ==> <org.pjsip.pjsua.pjsua_turn_config_use: int swigValue()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjsua_ice_config: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_ice_config getIce_cfg()> ==> <org.pjsip.pjsua.pjsua_ice_config: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.pjsua_ice_config: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_ice_config: void finalize()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_ice_config: void delete()>() in <org.pjsip.pjsua.pjsua_ice_config: void finalize()> ==> <org.pjsip.pjsua.pjsua_ice_config: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_pjsua_ice_config(long)>($l0) in <org.pjsip.pjsua.pjsua_ice_config: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_ice_config: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_ice_config_use: int swigValue()>() in <org.pjsip.pjsua.pjsua_acc_config: void setIce_cfg_use(org.pjsip.pjsua.pjsua_ice_config_use)> ==> <org.pjsip.pjsua.pjsua_ice_config_use: int swigValue()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_stun_use: int swigValue()>() in <org.pjsip.pjsua.pjsua_acc_config: void setMedia_stun_use(org.pjsip.pjsua.pjsua_stun_use)> ==> <org.pjsip.pjsua.pjsua_stun_use: int swigValue()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_stun_use: int swigValue()>() in <org.pjsip.pjsua.pjsua_acc_config: void setSip_stun_use(org.pjsip.pjsua.pjsua_stun_use)> ==> <org.pjsip.pjsua.pjsua_stun_use: int swigValue()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjsip_cred_info: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsip_cred_info getCred_info()> ==> <org.pjsip.pjsua.pjsip_cred_info: void <init>(long,boolean)>
FINALIZE edge: null in <org.pjsip.pjsua.pjsip_cred_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsip_cred_info: void finalize()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsip_cred_info: void delete()>() in <org.pjsip.pjsua.pjsip_cred_info: void finalize()> ==> <org.pjsip.pjsua.pjsip_cred_info: void delete()>
CLINIT edge: staticinvoke <org.pjsip.pjsua.pjsuaJNI: void delete_pjsip_cred_info(long)>($l0) in <org.pjsip.pjsua.pjsip_cred_info: void delete()> ==> <org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsip_cred_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>() in <com.csipsimple.service.MediaManager: int getAudioTargetMode()> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>
VIRTUAL edge: $r5 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>() in <com.csipsimple.service.MediaManager: void restoreAudioState()> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>
VIRTUAL edge: $r5 = virtualinvoke $r3.<com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>() in <com.csipsimple.service.MediaManager: void startService()> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.service.MediaManager: void stopService()>() in <com.csipsimple.pjsip.PjSipService: void cleanPjsua()> ==> <com.csipsimple.service.MediaManager: void stopService()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>("MediaManager", "Remove media manager....") in <com.csipsimple.service.MediaManager: void stopService()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>("MediaManager", "Remove media manager....") in <com.csipsimple.service.MediaManager: void stopService()> ==> <com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.bluetooth.BluetoothWrapper: void unregister()>() in <com.csipsimple.service.MediaManager: void stopService()> ==> <com.csipsimple.utils.bluetooth.BluetoothUtils8: void unregister()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.bluetooth.BluetoothWrapper: void setBluetoothChangeListener(com.csipsimple.utils.bluetooth.BluetoothWrapper$BluetoothChangeListener)>(null) in <com.csipsimple.service.MediaManager: void stopService()> ==> <com.csipsimple.utils.bluetooth.BluetoothWrapper: void setBluetoothChangeListener(com.csipsimple.utils.bluetooth.BluetoothWrapper$BluetoothChangeListener)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.bluetooth.BluetoothWrapper: void unregister()>() in <com.csipsimple.service.MediaManager: void stopService()> ==> <com.csipsimple.utils.bluetooth.BluetoothUtils3: void unregister()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("BT8", "Unregister BT media receiver") in <com.csipsimple.utils.bluetooth.BluetoothUtils8: void unregister()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("BT8", "Failed to unregister media state receiver", r1) in <com.csipsimple.utils.bluetooth.BluetoothUtils8: void unregister()> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("BT8", "Unregister BT media receiver") in <com.csipsimple.utils.bluetooth.BluetoothUtils8: void unregister()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.pjsip.UAStateReceiver: void stopService()>() in <com.csipsimple.pjsip.PjSipService: void cleanPjsua()> ==> <com.csipsimple.pjsip.UAStateReceiver: void stopService()>
STATIC edge: staticinvoke <com.csipsimple.utils.Threading: void stopHandlerThread(android.os.HandlerThread,boolean)>($r1, 1) in <com.csipsimple.pjsip.UAStateReceiver: void stopService()> ==> <com.csipsimple.utils.Threading: void stopHandlerThread(android.os.HandlerThread,boolean)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Threading", "Can t finish handler thread....", r5) in <com.csipsimple.utils.Threading: void stopHandlerThread(android.os.HandlerThread,boolean)> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Threading", "Something is wrong with api level declared use fallback method") in <com.csipsimple.utils.Threading: void stopHandlerThread(android.os.HandlerThread,boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Threading", "Can t finish handler thread....", r5) in <com.csipsimple.utils.Threading: void stopHandlerThread(android.os.HandlerThread,boolean)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $z2 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(5) in <com.csipsimple.utils.Threading: void stopHandlerThread(android.os.HandlerThread,boolean)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>() in <com.csipsimple.utils.Threading: void stopHandlerThread(android.os.HandlerThread,boolean)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: z1 = virtualinvoke $r0.<android.os.HandlerThread: boolean isAlive()>() in <com.csipsimple.utils.Threading: void stopHandlerThread(android.os.HandlerThread,boolean)> ==> <java.lang.Thread: boolean isAlive()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: boolean isAlive()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getActiveCallInProgress()>() in <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getActiveCallInProgress()> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getActiveCallInProgress()>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getCallInfo(java.lang.Integer)>(r5) in <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getActiveCallInProgress()> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getCallInfo(java.lang.Integer)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getActiveCallOngoing()>() in <com.csipsimple.pjsip.PjSipService: void onGSMStateChanged(int,java.lang.String)> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getActiveCallOngoing()>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getCallInfo(java.lang.Integer)>(r5) in <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getActiveCallOngoing()> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getCallInfo(java.lang.Integer)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.MediaManager: void stopRingAndUnfocus()>() in <com.csipsimple.pjsip.PjSipService: void onGSMStateChanged(int,java.lang.String)> ==> <com.csipsimple.service.MediaManager: void stopRingAndUnfocus()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.MediaManager: void playInCallTone(int)>(1) in <com.csipsimple.pjsip.PjSipService: void onGSMStateChanged(int,java.lang.String)> ==> <com.csipsimple.service.MediaManager: void playInCallTone(int)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.service.MediaManager$InCallTonePlayer: void <init>(com.csipsimple.service.MediaManager,int)>(r0, $i0) in <com.csipsimple.service.MediaManager: void playInCallTone(int)> ==> <com.csipsimple.service.MediaManager$InCallTonePlayer: void <init>(com.csipsimple.service.MediaManager,int)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.MediaManager$InCallTonePlayer: void start()>() in <com.csipsimple.service.MediaManager: void playInCallTone(int)> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke $r1.<com.csipsimple.service.MediaManager$InCallTonePlayer: void start()>() in <com.csipsimple.service.MediaManager: void playInCallTone(int)> ==> <com.csipsimple.service.MediaManager$InCallTonePlayer: void run()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("MediaManager", $r3) in <com.csipsimple.service.MediaManager$InCallTonePlayer: void run()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("MediaManager", $r3) in <com.csipsimple.service.MediaManager$InCallTonePlayer: void run()> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("MediaManager", "- InCallTonePlayer: done playing.") in <com.csipsimple.service.MediaManager$InCallTonePlayer: void run()> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("MediaManager", $r3) in <com.csipsimple.service.MediaManager$InCallTonePlayer: void run()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.csipsimple.service.MediaManager$InCallTonePlayer: void <init>(com.csipsimple.service.MediaManager,int)> ==> <java.lang.Thread: void <init>()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.MediaManager: void stopRing()>() in <com.csipsimple.service.MediaManager: void stopRingAndUnfocus()> ==> <com.csipsimple.service.MediaManager: void stopRing()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.utils.Ringer: boolean isRinging()>() in <com.csipsimple.service.MediaManager: void stopRing()> ==> <com.csipsimple.utils.Ringer: boolean isRinging()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.Ringer: void stopRing()>() in <com.csipsimple.service.MediaManager: void stopRing()> ==> <com.csipsimple.utils.Ringer: void stopRing()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Ringer", "==> stopRing() called...") in <com.csipsimple.utils.Ringer: void stopRing()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Ringer", "==> stopRing() called...") in <com.csipsimple.utils.Ringer: void stopRing()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.Ringer: void stopVibrator()>() in <com.csipsimple.utils.Ringer: void stopRing()> ==> <com.csipsimple.utils.Ringer: void stopVibrator()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.Ringer: void stopRinger()>() in <com.csipsimple.utils.Ringer: void stopRing()> ==> <com.csipsimple.utils.Ringer: void stopRinger()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.audio.AudioFocusWrapper: void unFocus()>() in <com.csipsimple.service.MediaManager: void stopRingAndUnfocus()> ==> <com.csipsimple.utils.audio.AudioFocus8: void unFocus()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.audio.AudioFocusWrapper: void unFocus()>() in <com.csipsimple.service.MediaManager: void stopRingAndUnfocus()> ==> <com.csipsimple.utils.audio.AudioFocus3: void unFocus()>
CLINIT edge: staticinvoke <com.csipsimple.service.HeadsetButtonReceiver: void setService(com.csipsimple.pjsip.UAStateReceiver)>(null) in <com.csipsimple.utils.audio.AudioFocus8: void unFocus()> ==> <com.csipsimple.service.HeadsetButtonReceiver: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.service.HeadsetButtonReceiver: void setService(com.csipsimple.pjsip.UAStateReceiver)>(null) in <com.csipsimple.utils.audio.AudioFocus8: void unFocus()> ==> <com.csipsimple.service.HeadsetButtonReceiver: void setService(com.csipsimple.pjsip.UAStateReceiver)>
CLINIT edge: <com.csipsimple.service.HeadsetButtonReceiver: com.csipsimple.pjsip.UAStateReceiver uaReceiver> = $r0 in <com.csipsimple.service.HeadsetButtonReceiver: void setService(com.csipsimple.pjsip.UAStateReceiver)> ==> <com.csipsimple.service.HeadsetButtonReceiver: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.audio.AudioFocus3: void restartMusic()>() in <com.csipsimple.utils.audio.AudioFocus3: void unFocus()> ==> <com.csipsimple.utils.audio.AudioFocus3: void restartMusic()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.audio.AudioFocus3: void unregisterHeadsetButton()>() in <com.csipsimple.utils.audio.AudioFocus3: void unFocus()> ==> <com.csipsimple.utils.audio.AudioFocus3: void unregisterHeadsetButton()>
CLINIT edge: staticinvoke <com.csipsimple.service.HeadsetButtonReceiver: void setService(com.csipsimple.pjsip.UAStateReceiver)>(null) in <com.csipsimple.utils.audio.AudioFocus3: void unregisterHeadsetButton()> ==> <com.csipsimple.service.HeadsetButtonReceiver: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.service.HeadsetButtonReceiver: void setService(com.csipsimple.pjsip.UAStateReceiver)>(null) in <com.csipsimple.utils.audio.AudioFocus3: void unregisterHeadsetButton()> ==> <com.csipsimple.service.HeadsetButtonReceiver: void setService(com.csipsimple.pjsip.UAStateReceiver)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>() in <com.csipsimple.utils.audio.AudioFocus3: void restartMusic()> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <com.csipsimple.service.SipNotifications: void onServiceCreate()> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("integrate_with_native_music") in <com.csipsimple.utils.audio.AudioFocus3: void restartMusic()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r5.<com.csipsimple.utils.PreferencesProviderWrapper: int getInCallMode()>() in <com.csipsimple.service.MediaManager: void startService()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getInCallMode()>
VIRTUAL edge: $z0 = virtualinvoke $r5.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("use_sgs_call_hack") in <com.csipsimple.service.MediaManager: void startService()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <com.csipsimple.utils.PreferencesProviderWrapper: int getInCallMode()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Prefs", $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: int getInCallMode()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <com.csipsimple.utils.PreferencesProviderWrapper: int getInCallMode()> ==> <java.lang.Integer: int parseInt(java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Prefs", $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: int getInCallMode()> ==> <com.csipsimple.utils.Log: void <clinit>()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>("sip_audio_mode") in <com.csipsimple.utils.PreferencesProviderWrapper: int getInCallMode()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<com.csipsimple.utils.PreferencesProviderWrapper: boolean useRoutingApi()>() in <com.csipsimple.service.MediaManager: void restoreAudioState()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean useRoutingApi()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("use_routing_api") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean useRoutingApi()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: boolean useModeApi()>() in <com.csipsimple.service.MediaManager: int getAudioTargetMode()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean useModeApi()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: boolean generateForSetCall()>() in <com.csipsimple.service.MediaManager: int getAudioTargetMode()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean generateForSetCall()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("set_audio_generate_tone") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean generateForSetCall()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("use_mode_api") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean useModeApi()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>("network_route_polling") in <com.csipsimple.service.receiver.DynamicReceiver4: void startMonitoring()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.SipService: void notifyUserOfMessage(java.lang.String)>("Can\'t load native library. CPU arch invalid for this build") in <com.csipsimple.pjsip.PjSipService: boolean tryToLoadStack()> ==> <com.csipsimple.service.SipService: void notifyUserOfMessage(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>("has_been_quit", 0) in <com.csipsimple.service.SipService: boolean isConnectivityValid()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForIncoming()>() in <com.csipsimple.service.SipService: boolean isConnectivityValid()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForIncoming()>
VIRTUAL edge: $z1 = virtualinvoke $r1.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForOutgoing()>() in <com.csipsimple.service.SipService: boolean isConnectivityValid()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForOutgoing()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.receiver.DynamicReceiver4: void stopMonitoring()>() in <com.csipsimple.service.SipService: void unregisterBroadcasts()> ==> <com.csipsimple.service.receiver.DynamicReceiver4: void stopMonitoring()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.SipNotifications: void onServiceDestroy()>() in <com.csipsimple.service.SipService: void onDestroy()> ==> <com.csipsimple.service.SipNotifications: void onServiceDestroy()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipNotifications: void cancelAll()>() in <com.csipsimple.service.SipNotifications: void onServiceDestroy()> ==> <com.csipsimple.service.SipNotifications: void cancelAll()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipNotifications: void cancelCalls()>() in <com.csipsimple.service.SipNotifications: void onServiceDestroy()> ==> <com.csipsimple.service.SipNotifications: void cancelCalls()>
VIRTUAL edge: $r5 = virtualinvoke $r4.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$ServicePhoneStateReceiver: void onCallStateChanged(int,java.lang.String)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r6) in <com.csipsimple.service.SipService$ServicePhoneStateReceiver: void onCallStateChanged(int,java.lang.String)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.service.SipNotifications: void setViewingMessageFrom(java.lang.String)>($r1) in <com.csipsimple.ui.messages.MessageFragment: void setupFrom(java.lang.String,java.lang.String)> ==> <com.csipsimple.service.SipNotifications: void setViewingMessageFrom(java.lang.String)>
CLINIT edge: <com.csipsimple.service.SipNotifications: java.lang.String viewingRemoteFrom> = $r1 in <com.csipsimple.service.SipNotifications: void setViewingMessageFrom(java.lang.String)> ==> <com.csipsimple.service.SipNotifications: void <clinit>()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipNotifications: void setViewingMessageFrom(java.lang.String)>(null) in <com.csipsimple.ui.messages.MessageFragment: void onPause()> ==> <com.csipsimple.service.SipNotifications: void setViewingMessageFrom(java.lang.String)>
VIRTUAL edge: virtualinvoke $r8.<com.csipsimple.utils.clipboard.ClipboardWrapper: void setText(java.lang.String,java.lang.String)>($r9, $r10) in <com.csipsimple.ui.messages.MessageFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.utils.clipboard.Clipboard11: void setText(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r8.<com.csipsimple.utils.clipboard.ClipboardWrapper: void setText(java.lang.String,java.lang.String)>($r9, $r10) in <com.csipsimple.ui.messages.MessageFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.utils.clipboard.Clipboard1: void setText(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipNotifications: void setViewingMessageFrom(java.lang.String)>($r2) in <com.csipsimple.ui.messages.MessageFragment: void onResume()> ==> <com.csipsimple.service.SipNotifications: void setViewingMessageFrom(java.lang.String)>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setCallDetailsHeader(android.widget.TextView,com.csipsimple.ui.calllog.PhoneCallDetails)>($r7, r4) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setCallDetailsHeader(android.widget.TextView,com.csipsimple.ui.calllog.PhoneCallDetails)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.prefs.AudioTester$MonitorThread: void markFinished()>() in <com.csipsimple.ui.prefs.AudioTester: void onPause()> ==> <com.csipsimple.ui.prefs.AudioTester$MonitorThread: void markFinished()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>($r1, $r3, $r4) in <com.csipsimple.ui.prefs.CodecsFragment: void setCodecPriority(java.lang.String,short)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.prefs.CodecsFragment: void setCodecActivated(java.util.Map,short)>($r1, $s0) in <com.csipsimple.ui.prefs.CodecsFragment: void access$3(com.csipsimple.ui.prefs.CodecsFragment,java.util.Map,short)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void setCodecActivated(java.util.Map,short)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.account.AccountsEditListFragment: void onClickAddAccount()>() in <com.csipsimple.ui.account.AccountsEditListFragment: void access$1(com.csipsimple.ui.account.AccountsEditListFragment)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void onClickAddAccount()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.messages.ConversationsListFragment: void onClickAddMessage()>() in <com.csipsimple.ui.messages.ConversationsListFragment: void access$0(com.csipsimple.ui.messages.ConversationsListFragment)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void onClickAddMessage()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)>($i0, null) in <com.csipsimple.ui.messages.ConversationsListFragment: void onClickAddMessage()> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: void onClickAddFilter()>() in <com.csipsimple.ui.filters.AccountFiltersListFragment: void access$0(com.csipsimple.ui.filters.AccountFiltersListFragment)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void onClickAddFilter()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: void showDetails(long)>(-1L) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onClickAddFilter()> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void showDetails(long)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.utils.NightlyUpdater: com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher getUpdaterPopup(boolean)>(1) in <com.csipsimple.ui.help.Help$2: void run()> ==> <com.csipsimple.utils.NightlyUpdater: com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher getUpdaterPopup(boolean)>
EXECUTOR edge: virtualinvoke $r4.<android.support.v4.app.FragmentActivity: void runOnUiThread(java.lang.Runnable)>($r2) in <com.csipsimple.ui.help.Help$2: void run()> ==> <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: void run()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.utils.PreferencesProviderWrapper: int getLogLevel()>() in <com.csipsimple.ui.help.Help: boolean isRecording()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getLogLevel()>
VIRTUAL edge: virtualinvoke $r18.<com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("log_level", "1") in <com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)>($r3, $r1, $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)>($r3, $r1, $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: void setPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesWrapper: boolean dialPressTone()>() in <com.csipsimple.utils.DialingFeedback: void resume()> ==> <com.csipsimple.utils.PreferencesWrapper: boolean dialPressTone()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesWrapper: boolean dialPressVibrate()>() in <com.csipsimple.utils.DialingFeedback: void resume()> ==> <com.csipsimple.utils.PreferencesWrapper: boolean dialPressVibrate()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: java.lang.Integer getPreferenceIntegerValue(java.lang.String)>("dial_press_vibrate_mode") in <com.csipsimple.utils.PreferencesWrapper: boolean dialPressVibrate()> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer getPreferenceIntegerValue(java.lang.String)>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer getPreferenceIntegerValue(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer getPreferenceIntegerValue(java.lang.String)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer getPreferenceIntegerValue(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PreferencesWrapper", $r3) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer getPreferenceIntegerValue(java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
CLINIT edge: $r6 = <com.csipsimple.utils.PreferencesWrapper: java.util.HashMap STRING_PREFS> in <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer getPreferenceIntegerValue(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PreferencesWrapper", $r3) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer getPreferenceIntegerValue(java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>($r1) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer getPreferenceIntegerValue(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: java.lang.Integer getPreferenceIntegerValue(java.lang.String)>("dial_press_tone_mode") in <com.csipsimple.utils.PreferencesWrapper: boolean dialPressTone()> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer getPreferenceIntegerValue(java.lang.String)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.utils.DialingFeedback: void pause()>() in <com.csipsimple.ui.dialpad.DialerFragment: void onDetach()> ==> <com.csipsimple.utils.DialingFeedback: void pause()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.DialingFeedback: void hapticFeedback()>() in <com.csipsimple.ui.dialpad.DialerFragment: boolean onLongClick(android.view.View)> ==> <com.csipsimple.utils.DialingFeedback: void hapticFeedback()>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean getPreferenceBooleanValue(java.lang.String)>("use_video") in <com.csipsimple.ui.dialpad.DialerFragment: void onResume()> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean getPreferenceBooleanValue(java.lang.String)>
CLINIT edge: $r2 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean gPrefBooleanValue(android.content.SharedPreferences,java.lang.String)>($r3, $r1) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean getPreferenceBooleanValue(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean gPrefBooleanValue(android.content.SharedPreferences,java.lang.String)>($r3, $r1) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean getPreferenceBooleanValue(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean gPrefBooleanValue(android.content.SharedPreferences,java.lang.String)>
CLINIT edge: $r2 = <com.csipsimple.utils.PreferencesWrapper: java.util.HashMap BOOLEAN_PREFS> in <com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean gPrefBooleanValue(android.content.SharedPreferences,java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
STATIC edge: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean gPrefBooleanValue(android.content.SharedPreferences,java.lang.String)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
CLINIT edge: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean gPrefBooleanValue(android.content.SharedPreferences,java.lang.String)> ==> <java.lang.Boolean: void <clinit>()>
VIRTUAL edge: $r17 = virtualinvoke $r16.<com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean getPreferenceBooleanValue(java.lang.String)>("use_video") in <com.csipsimple.ui.dialpad.DialerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r7.<com.csipsimple.utils.PreferencesWrapper: boolean startIsDigit()>() in <com.csipsimple.ui.dialpad.DialerFragment: void onCreate(android.os.Bundle)> ==> <com.csipsimple.utils.PreferencesWrapper: boolean startIsDigit()>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.ui.dialpad.DialerFragment: void setTextFieldValue(java.lang.CharSequence)>($r6) in <com.csipsimple.ui.dialpad.DialerFragment$OnAutoCompleteListItemClicked: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void setTextFieldValue(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.ui.dialpad.DialerFragment: void placeCall()>() in <com.csipsimple.ui.dialpad.DialerFragment$2: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void placeCall()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)>(null) in <com.csipsimple.ui.dialpad.DialerFragment: void placeCall()> ==> <com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)>
CLINIT edge: $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)> ==> <java.lang.Long: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("DialerFragment", "Service can\'t be called to make the call") in <com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
CLINIT edge: r2 = new com.csipsimple.utils.CallHandlerPlugin in <com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)> ==> <com.csipsimple.utils.CallHandlerPlugin: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("DialerFragment", "Service can\'t be called to make the call") in <com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)> ==> <com.csipsimple.utils.Log: void <clinit>()>
SPECIAL edge: specialinvoke $r12.<com.csipsimple.ui.dialpad.DialerFragment$5: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)> ==> <com.csipsimple.ui.dialpad.DialerFragment$5: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.dialpad.DialerFragment$5: void <init>(com.csipsimple.ui.dialpad.DialerFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.utils.CallHandlerPlugin: void <init>(android.content.Context)>($r11) in <com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)> ==> <com.csipsimple.utils.CallHandlerPlugin: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.Long,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)>($r5, $r10, $r12) in <com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)> ==> <com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.Long,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)>
CLINIT edge: $r5 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)>($r4) in <com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.Long,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)> ==> <com.csipsimple.utils.CallHandlerPlugin: void <clinit>()>
STATIC edge: $r10 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>($r4, r9) in <com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.Long,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)> ==> <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)>($r4) in <com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.Long,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)> ==> <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.String,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)>(r9, $r2, $r3) in <com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.Long,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)> ==> <com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.String,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)>
CLINIT edge: $r6 = <com.csipsimple.utils.CallHandlerPlugin: android.os.Handler sThreadHandler> in <com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.String,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)> ==> <com.csipsimple.utils.CallHandlerPlugin: void <clinit>()>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.utils.CallHandlerPlugin$1: void <init>(com.csipsimple.utils.CallHandlerPlugin,java.lang.String)>(r0, $r1) in <com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.String,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)> ==> <com.csipsimple.utils.CallHandlerPlugin$1: void <init>(com.csipsimple.utils.CallHandlerPlugin,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.CallHandlerPlugin: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
EXECUTOR edge: virtualinvoke r0.<com.csipsimple.ui.SipHome: void runOnUiThread(java.lang.Runnable)>($r4) in <com.csipsimple.ui.SipHome: void applyWarning(java.lang.String,boolean)> ==> <com.csipsimple.ui.SipHome$1: void run()>
STATIC edge: staticinvoke <com.csipsimple.ui.SipHome: void access$0(com.csipsimple.ui.SipHome)>($r1) in <com.csipsimple.ui.SipHome$1: void run()> ==> <com.csipsimple.ui.SipHome: void access$0(com.csipsimple.ui.SipHome)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()>() in <com.csipsimple.ui.SipHome: void access$0(com.csipsimple.ui.SipHome)> ==> <com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("SIP_HOME", $r8) in <com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("SIP_HOME", $r8) in <com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke r0.<com.csipsimple.ui.SipHome: com.actionbarsherlock.app.ActionBar getSupportActionBar()>() in <com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
VIRTUAL edge: virtualinvoke $r10.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void start()>() in <com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void start()>
VIRTUAL edge: $z0 = virtualinvoke $r10.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: boolean isStarted()>() in <com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean isStarted()>
VIRTUAL edge: virtualinvoke $r10.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void end()>() in <com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void end()>
CLINIT edge: $r1 = <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal sAnimations> in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void end()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void startAnimation()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void end()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void startAnimation()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void animateValue(float)>(0.0F) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void end()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void animateValue(float)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void endAnimation()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void end()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void endAnimation()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void initAnimation()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void end()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void initAnimation()>
CLINIT edge: $r1 = <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal sAnimations> in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void startAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()>
CLINIT edge: $r1 = <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal sAnimations> in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void endAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void initAnimation()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void initAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void initAnimation()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void init()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void initAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void init()>
CLINIT edge: $r1 = <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sIntEvaluator> in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void init()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <clinit>()>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void init()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetterAndGetter(java.lang.Object)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void initAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetterAndGetter(java.lang.Object)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetterAndGetter(java.lang.Object)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setupSetter(java.lang.Class)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupGetter(java.lang.Class)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetterAndGetter(java.lang.Object)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupGetter(java.lang.Class)>
CLINIT edge: $r3 = <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.util.HashMap sGetterPropertyMap> in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupGetter(java.lang.Class)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <clinit>()>
SPECIAL edge: $r2 = specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class)>($r1, $r3, "get", null) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupGetter(java.lang.Class)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class)>
SPECIAL edge: $r11 = specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class)>($r1, $r3, $r4) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class)>
CLINIT edge: $r6 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)>($r2, $r6) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <clinit>()>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r6 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)>($r2, $r6) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)>
CLINIT edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)> ==> <java.lang.Character: void <clinit>()>
STATIC edge: r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)> ==> <java.lang.Character: char toUpperCase(char)>
CLINIT edge: r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: char toUpperCase(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Float;") in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class)> ==> <java.lang.Object: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r0.<java.lang.String: int length()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)> ==> <java.lang.String: int length()>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String substring(int)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String substring(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int length()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r6, null) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class)> ==> <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class)> ==> <java.lang.Class: java.lang.String getSimpleName()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setupSetter(java.lang.Class)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)>
CLINIT edge: $r4 = <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.util.HashMap sSetterPropertyMap> in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <clinit>()>
SPECIAL edge: $r3 = specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class)>($r1, $r4, "set", $r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void animateValue(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void animateValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void animateValue(float)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void calculateValue(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void animateValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void calculateValue(float)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setAnimatedValue(java.lang.Object)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void animateValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setAnimatedValue(java.lang.Object)>
CLINIT edge: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setAnimatedValue(java.lang.Object)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setAnimatedValue(java.lang.Object)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void initAnimation()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void startAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void initAnimation()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start(boolean)>(0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start(boolean)>
CLINIT edge: $r3 = <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal sPendingAnimations> in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()>
SPECIAL edge: specialinvoke r6.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler)>(null) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler)>
HANDLER edge: virtualinvoke r6.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: boolean sendEmptyMessage(int)>(0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void handleMessage(android.os.Message)>
CLINIT edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$2()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void handleMessage(android.os.Message)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void access$11(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator)>(r8) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void handleMessage(android.os.Message)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void access$11(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void access$10(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,boolean)>(r8, 1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void handleMessage(android.os.Message)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void access$10(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,boolean)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void access$6(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator)>(r8) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void handleMessage(android.os.Message)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void access$6(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator)>
STATIC edge: $z1 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean access$9(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,long)>(r8, $l1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void handleMessage(android.os.Message)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean access$9(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,long)>
STATIC edge: $l3 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: long access$5(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator)>(r8) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void handleMessage(android.os.Message)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: long access$5(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator)>
STATIC edge: $l3 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: long access$12()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void handleMessage(android.os.Message)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: long access$12()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$8()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void handleMessage(android.os.Message)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$8()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$7()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void handleMessage(android.os.Message)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$7()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$4()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void handleMessage(android.os.Message)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$4()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$3()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void handleMessage(android.os.Message)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$3()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$2()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void handleMessage(android.os.Message)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$2()>
CLINIT edge: l0 = <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: long sFrameDelay> in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: long access$12()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()>
CLINIT edge: r0 = <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal sEndingAnims> in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$8()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()>
CLINIT edge: r0 = <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal sReadyAnims> in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$7()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()>
CLINIT edge: r0 = <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal sPendingAnimations> in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$4()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()>
CLINIT edge: r0 = <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal sDelayedAnims> in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$3()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()>
CLINIT edge: r0 = <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal sAnimations> in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$2()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void <init>()>
VIRTUAL edge: $l0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: long getCurrentPlayTime()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: long getCurrentPlayTime()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setCurrentPlayTime(long)>($l0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setCurrentPlayTime(long)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void initAnimation()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setCurrentPlayTime(long)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void initAnimation()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean animationFrame(long)>($l1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setCurrentPlayTime(long)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean animationFrame(long)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void animateValue(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean animationFrame(long)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void animateValue(float)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<com.csipsimple.ui.SipHome$TabsAdapter: java.lang.Integer getPositionForId(int)>(4) in <com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()> ==> <com.csipsimple.ui.SipHome$TabsAdapter: java.lang.Integer getPositionForId(int)>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.ui.SipHome$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class,int)>($r9, class "Lcom/csipsimple/ui/warnings/WarningFragment;", 4) in <com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()> ==> <com.csipsimple.ui.SipHome$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class,int)>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.ui.SipHome$TabsAdapter: void removeTabAt(int)>($i1) in <com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()> ==> <com.csipsimple.ui.SipHome$TabsAdapter: void removeTabAt(int)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.ui.SipHome$TabsAdapter: java.lang.Integer getIdForPosition(int)>($i0) in <com.csipsimple.ui.SipHome: android.support.v4.app.Fragment getFragmentAt(int)> ==> <com.csipsimple.ui.SipHome$TabsAdapter: java.lang.Integer getIdForPosition(int)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.SipHome: void postStartSipService()>() in <com.csipsimple.ui.SipHome: void access$4(com.csipsimple.ui.SipHome)> ==> <com.csipsimple.ui.SipHome: void postStartSipService()>
STATIC edge: $r7 = staticinvoke <com.csipsimple.utils.CustomDistribution: com.csipsimple.wizards.WizardUtils$WizardInfo getCustomDistributionWizard()>() in <com.csipsimple.ui.SipHome: void postStartSipService()> ==> <com.csipsimple.utils.CustomDistribution: com.csipsimple.wizards.WizardUtils$WizardInfo getCustomDistributionWizard()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.CustomDistribution: boolean showFirstSettingScreen()>() in <com.csipsimple.ui.SipHome: void postStartSipService()> ==> <com.csipsimple.utils.CustomDistribution: boolean showFirstSettingScreen()>
CLINIT edge: $r1 = newarray (java.lang.String)[1] in <com.csipsimple.ui.SipHome: void postStartSipService()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r5 = <com.csipsimple.api.SipProfile: android.net.Uri ACCOUNT_URI> in <com.csipsimple.ui.SipHome: void postStartSipService()> ==> <com.csipsimple.api.SipProfile: void <clinit>()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>("has_already_setup", 0) in <com.csipsimple.ui.SipHome: void postStartSipService()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("has_already_setup", 1) in <com.csipsimple.ui.SipHome: void postStartSipService()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.utils.PreferencesProviderWrapper: void resetAllDefaultValues()>() in <com.csipsimple.ui.SipHome: void postStartSipService()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void resetAllDefaultValues()>
CLINIT edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>($r2, $r1, $z0) in <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>($r2, $r1, $z0) in <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)> ==> <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>
VIRTUAL edge: $r12 = virtualinvoke $r11.<com.csipsimple.ui.SipHome$TabsAdapter: java.lang.Integer getIdForPosition(int)>(i0) in <com.csipsimple.ui.SipHome: void applyTheme()> ==> <com.csipsimple.ui.SipHome$TabsAdapter: java.lang.Integer getIdForPosition(int)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.Thread: boolean isAlive()>() in <com.csipsimple.ui.SipHome: void onPause()> ==> <java.lang.Thread: boolean isAlive()>
VIRTUAL edge: virtualinvoke $r1.<java.lang.Thread: void interrupt()>() in <com.csipsimple.ui.SipHome: void onPause()> ==> <java.lang.Thread: void interrupt()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void interrupt()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("has_been_quit", 0) in <com.csipsimple.ui.SipHome: void onResume()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.calllog.CallLogListFragment: void turnOnActionMode()>() in <com.csipsimple.ui.calllog.CallLogListFragment: void access$4(com.csipsimple.ui.calllog.CallLogListFragment)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void turnOnActionMode()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallLogFragment", "Long press") in <com.csipsimple.ui.calllog.CallLogListFragment: void turnOnActionMode()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallLogFragment", "Long press") in <com.csipsimple.ui.calllog.CallLogListFragment: void turnOnActionMode()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: void <init>(com.csipsimple.ui.calllog.CallLogListFragment,com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode)>(r0, null) in <com.csipsimple.ui.calllog.CallLogListFragment: void turnOnActionMode()> ==> <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: void <init>(com.csipsimple.ui.calllog.CallLogListFragment,com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)>($r1) in <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: void <init>(com.csipsimple.ui.calllog.CallLogListFragment,com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode)> ==> <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.ui.calllog.CallLogListFragment: com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity()>() in <com.csipsimple.ui.calllog.CallLogListFragment: void turnOnActionMode()> ==> <com.actionbarsherlock.app.SherlockListFragment: com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity()>
VIRTUAL edge: virtualinvoke param0.<java.util.TimerTask: void run()>() in <java.util.Timer: void schedule(java.util.TimerTask,long)> ==> <com.csipsimple.ui.incall.InCallActivity$QuitTimerTask: void run()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", "Run quit timer") in <com.csipsimple.ui.incall.InCallActivity$QuitTimerTask: void run()> ==> <com.csipsimple.utils.Log: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", "Run quit timer") in <com.csipsimple.ui.incall.InCallActivity$QuitTimerTask: void run()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void markFinished()>() in <com.csipsimple.ui.incall.InCallMediaControl: void onPause()> ==> <com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void markFinished()>
SPECIAL edge: $z0 = specialinvoke $r0.<com.csipsimple.wizards.impl.MondotalkCreate: boolean retrieveCaptcha()>() in <com.csipsimple.wizards.impl.MondotalkCreate: boolean access$4(com.csipsimple.wizards.impl.MondotalkCreate)> ==> <com.csipsimple.wizards.impl.MondotalkCreate: boolean retrieveCaptcha()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("MondotalkCreate", "Something went wrong while retrieving the captcha webservice ") in <com.csipsimple.wizards.impl.MondotalkCreate: boolean retrieveCaptcha()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("MondotalkCreate", $r8) in <com.csipsimple.wizards.impl.MondotalkCreate: boolean retrieveCaptcha()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("MondotalkCreate", "Something went wrong while retrieving the captcha", r18) in <com.csipsimple.wizards.impl.MondotalkCreate: boolean retrieveCaptcha()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("MondotalkCreate", "Something went wrong while retrieving the captcha webservice ") in <com.csipsimple.wizards.impl.MondotalkCreate: boolean retrieveCaptcha()> ==> <com.csipsimple.utils.Log: void <clinit>()>
VIRTUAL edge: $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.MondotalkCreate: boolean retrieveCaptcha()> ==> <java.lang.String: java.lang.String trim()>
VIRTUAL edge: $r17 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\|") in <com.csipsimple.wizards.impl.MondotalkCreate: boolean retrieveCaptcha()> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: int getIntValue(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void calculateValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: int getIntValue(float)>
CLINIT edge: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: int getIntValue(float)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: int getIntValue(float)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
INTERFACE edge: $r2 = interfaceinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>($f0, $r6, $r7) in <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: int getIntValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>
INTERFACE edge: $r2 = interfaceinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>($f0, $r6, $r7) in <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: int getIntValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator: java.lang.Float evaluate(float,java.lang.Number,java.lang.Number)>($f0, $r4, $r5) in <com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator: java.lang.Float evaluate(float,java.lang.Number,java.lang.Number)>
CLINIT edge: $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator: java.lang.Float evaluate(float,java.lang.Number,java.lang.Number)> ==> <java.lang.Float: void <clinit>()>
STATIC edge: $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator: java.lang.Float evaluate(float,java.lang.Number,java.lang.Number)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator: java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)>($f0, $r1, $r4) in <com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator: java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)>
CLINIT edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator: java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator: java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $z0 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("LOCAL") in <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r8.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String,java.lang.String)>($r9, "wb") in <com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String,java.lang.String)>
VIRTUAL edge: $s2 = virtualinvoke $r8.<com.csipsimple.utils.PreferencesProviderWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)>(r13, $r9, "-1") in <com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
CLINIT edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)>($r3, $r1, $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)>($r3, $r1, $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)>
CLINIT edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)>($r1, $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: void <clinit>()>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <com.csipsimple.utils.PreferencesProviderWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Prefs", $r1) in <com.csipsimple.utils.PreferencesProviderWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)>($r1, $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3) in <com.csipsimple.utils.PreferencesProviderWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Prefs", $r1) in <com.csipsimple.utils.PreferencesProviderWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void <clinit>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String,java.lang.String)>($r1, $r3) in <com.csipsimple.utils.PreferencesProviderWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: void setCodecList(java.util.List)>($r3) in <com.csipsimple.pjsip.PjSipService: void initCodecs()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void setCodecList(java.util.List)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: void setVideoCodecList(java.util.List)>($r3) in <com.csipsimple.pjsip.PjSipService: void initCodecs()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void setVideoCodecList(java.util.List)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: void setLibCapability(java.lang.String,boolean)>("cap_tls", 1) in <com.csipsimple.pjsip.PjSipService: void initCodecs()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void setLibCapability(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>($r1, $z0) in <com.csipsimple.utils.PreferencesProviderWrapper: void setLibCapability(java.lang.String,boolean)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("codecs_video_list", $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: void setVideoCodecList(java.util.List)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("codecs_list", $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: void setCodecList(java.util.List)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>("ca_list_file") in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("tls_verify_client") in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: int getTLSMethod()>() in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getTLSMethod()>
VIRTUAL edge: $i0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: int getDSCPVal()>() in <com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getDSCPVal()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>("tls_method") in <com.csipsimple.utils.PreferencesProviderWrapper: int getTLSMethod()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.csipsimple.utils.PreferencesProviderWrapper: boolean enableDNSSRV()>() in <com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pj_str_t[] getNameservers()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean enableDNSSRV()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>("override_nameserver") in <com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pj_str_t[] getNameservers()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getSystemProp(java.lang.String)>($r4) in <com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pj_str_t[] getNameservers()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getSystemProp(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("enable_dns_srv") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean enableDNSSRV()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[ \\[\\]]", "") in <com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pj_str_t[] getNameservers()> ==> <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean matches(java.lang.String)>("^\\d+(\\.\\d+){3}$") in <com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pj_str_t[] getNameservers()> ==> <java.lang.String: boolean matches(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean matches(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>("use_srtp") in <com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pjmedia_srtp_use getUseSrtp()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
VIRTUAL edge: $i1 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: int getLogLevel()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getLogLevel()>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("use_compact_form") in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: i0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: int getTcpKeepAliveInterval()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getTcpKeepAliveInterval()>
VIRTUAL edge: i0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: int getTlsKeepAliveInterval()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getTlsKeepAliveInterval()>
VIRTUAL edge: i0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>("tsx_t1_timeout") in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>
VIRTUAL edge: r5 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getUserAgent(android.content.Context)>($r7) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getUserAgent(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: boolean enableDNSSRV()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean enableDNSSRV()>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: boolean useIPv6()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean useIPv6()>
VIRTUAL edge: i0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: int getStunEnabled()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getStunEnabled()>
VIRTUAL edge: r5 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>("stun_server") in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>("log_use_direct_file", 0) in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: $i1 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: int getAutoCloseTime()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getAutoCloseTime()>
VIRTUAL edge: $l3 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: long getEchoCancellationTail()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: long getEchoCancellationTail()>
VIRTUAL edge: $l3 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: long getClockRate()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: long getClockRate()>
VIRTUAL edge: $l5 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: long getMediaQuality()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: long getMediaQuality()>
VIRTUAL edge: $i1 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: int getIceEnabled()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getIceEnabled()>
VIRTUAL edge: $i1 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: int getTurnEnabled()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getTurnEnabled()>
VIRTUAL edge: r5 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getTurnServer()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getTurnServer()>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isUDPEnabled()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isUDPEnabled()>
VIRTUAL edge: $i1 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: int getUDPTransportPort()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getUDPTransportPort()>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isTCPEnabled()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isTCPEnabled()>
VIRTUAL edge: $i1 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: int getTCPTransportPort()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getTCPTransportPort()>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isTLSEnabled()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isTLSEnabled()>
VIRTUAL edge: $i1 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: int getTLSTransportPort()>() in <com.csipsimple.pjsip.PjSipService: boolean sipStart()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getTLSTransportPort()>
CLINIT edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getUserAgent(android.content.Context)> ==> <java.lang.String: void <clinit>()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.Compatibility: int getApiLevel()>() in <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getUserAgent(android.content.Context)> ==> <com.csipsimple.utils.Compatibility: int getApiLevel()>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getUserAgent(android.content.Context)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.PreferencesProviderWrapper: android.content.pm.PackageInfo getCurrentPackageInfos(android.content.Context)>($r1) in <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getUserAgent(android.content.Context)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: android.content.pm.PackageInfo getCurrentPackageInfos(android.content.Context)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.CustomDistribution: java.lang.String getUserAgent()>() in <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getUserAgent(android.content.Context)> ==> <com.csipsimple.utils.CustomDistribution: java.lang.String getUserAgent()>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <com.csipsimple.utils.PreferencesProviderWrapper: long getClockRate()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Prefs", $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: long getClockRate()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <com.csipsimple.utils.PreferencesProviderWrapper: long getClockRate()> ==> <java.lang.Integer: int parseInt(java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Prefs", $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: long getClockRate()> ==> <com.csipsimple.utils.Log: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <com.csipsimple.utils.PreferencesProviderWrapper: long getMediaQuality()> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Prefs", $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: long getMediaQuality()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <com.csipsimple.utils.PreferencesProviderWrapper: long getMediaQuality()> ==> <java.lang.Integer: int parseInt(java.lang.String)>
CLINIT edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Prefs", $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: long getMediaQuality()> ==> <com.csipsimple.utils.Log: void <clinit>()>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getPrefPort(java.lang.String)>("network_tls_transport_port") in <com.csipsimple.utils.PreferencesProviderWrapper: int getTLSTransportPort()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPrefPort(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("enable_tls") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isTLSEnabled()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getPrefPort(java.lang.String)>("network_tcp_transport_port") in <com.csipsimple.utils.PreferencesProviderWrapper: int getTCPTransportPort()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPrefPort(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("enable_tcp") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isTCPEnabled()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getPrefPort(java.lang.String)>("network_udp_transport_port") in <com.csipsimple.utils.PreferencesProviderWrapper: int getUDPTransportPort()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPrefPort(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("enable_udp") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean isUDPEnabled()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>("turn_server") in <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getTurnServer()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("enable_turn") in <com.csipsimple.utils.PreferencesProviderWrapper: int getTurnEnabled()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("enable_ice") in <com.csipsimple.utils.PreferencesProviderWrapper: int getIceEnabled()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>("snd_media_quality") in <com.csipsimple.utils.PreferencesProviderWrapper: long getMediaQuality()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>("snd_clock_rate") in <com.csipsimple.utils.PreferencesProviderWrapper: long getClockRate()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean hasEchoCancellation()>() in <com.csipsimple.utils.PreferencesProviderWrapper: long getEchoCancellationTail()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean hasEchoCancellation()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>("echo_cancellation_tail") in <com.csipsimple.utils.PreferencesProviderWrapper: long getEchoCancellationTail()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("echo_cancellation") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean hasEchoCancellation()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>("snd_auto_close_time") in <com.csipsimple.utils.PreferencesProviderWrapper: int getAutoCloseTime()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("enable_stun") in <com.csipsimple.utils.PreferencesProviderWrapper: int getStunEnabled()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("use_ipv6") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean useIPv6()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>("user_agent") in <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getUserAgent(android.content.Context)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3) in <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getUserAgent(android.content.Context)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getKeepAliveInterval(java.lang.String,java.lang.String)>("tls_keep_alive_interval_wifi", "tls_keep_alive_interval_mobile") in <com.csipsimple.utils.PreferencesProviderWrapper: int getTlsKeepAliveInterval()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getKeepAliveInterval(java.lang.String,java.lang.String)>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getKeepAliveInterval(java.lang.String,java.lang.String)>("tcp_keep_alive_interval_wifi", "tcp_keep_alive_interval_mobile") in <com.csipsimple.utils.PreferencesProviderWrapper: int getTcpKeepAliveInterval()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getKeepAliveInterval(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForOutgoing()>() in <com.csipsimple.pjsip.PjSipService: void cleanPjsua()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForOutgoing()>
VIRTUAL edge: virtualinvoke $r6.<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>(r0) in <com.csipsimple.widgets.SeekBarPreference: android.view.View onCreateDialogView()> ==> <com.csipsimple.widgets.SeekBarPreference: void onStartTrackingTouch(android.widget.SeekBar)>
VIRTUAL edge: virtualinvoke $r6.<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>(r0) in <com.csipsimple.widgets.SeekBarPreference: android.view.View onCreateDialogView()> ==> <com.csipsimple.widgets.SeekBarPreference: void onProgressChanged(android.widget.SeekBar,int,boolean)>
VIRTUAL edge: virtualinvoke $r6.<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>(r0) in <com.csipsimple.widgets.SeekBarPreference: android.view.View onCreateDialogView()> ==> <com.csipsimple.widgets.SeekBarPreference: void onStopTrackingTouch(android.widget.SeekBar)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SeekBarPrefs", $r2) in <com.csipsimple.widgets.SeekBarPreference: void onDialogClosed(boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.csipsimple.widgets.SeekBarPreference: void onProgressChanged(android.widget.SeekBar,int,boolean)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.ReachPhones: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.ReachPhones: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.ReachPhones: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r3) in <com.csipsimple.wizards.impl.ReachPhones: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.ReachPhones: java.lang.String getDomain()>() in <com.csipsimple.wizards.impl.ReachPhones: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.ReachPhones: java.lang.String getDomain()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.ReachPhones: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.ReachPhones: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.ReachPhones: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>("stun.telopar.net") in <com.csipsimple.wizards.impl.ReachPhones: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("inCallMediaCtrl", "SipService is connected") in <com.csipsimple.ui.incall.InCallMediaControl$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)>($r2) in <com.csipsimple.ui.incall.InCallMediaControl$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)>
STATIC edge: staticinvoke <com.csipsimple.ui.incall.InCallMediaControl: void access$1(com.csipsimple.ui.incall.InCallMediaControl,com.csipsimple.api.ISipService)>($r4, $r3) in <com.csipsimple.ui.incall.InCallMediaControl$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.incall.InCallMediaControl: void access$1(com.csipsimple.ui.incall.InCallMediaControl,com.csipsimple.api.ISipService)>
STATIC edge: staticinvoke <com.csipsimple.ui.incall.InCallMediaControl: void access$2(com.csipsimple.ui.incall.InCallMediaControl)>($r4) in <com.csipsimple.ui.incall.InCallMediaControl$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.incall.InCallMediaControl: void access$2(com.csipsimple.ui.incall.InCallMediaControl)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("com.csipsimple.service.CALL_CHANGED") in <com.csipsimple.ui.incall.InCallMediaControl$1: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.ui.incall.InCallMediaControl: com.csipsimple.api.ISipService access$0(com.csipsimple.ui.incall.InCallMediaControl)>($r6) in <com.csipsimple.ui.incall.InCallMediaControl$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallMediaControl: com.csipsimple.api.ISipService access$0(com.csipsimple.ui.incall.InCallMediaControl)>
VIRTUAL edge: $i2 = virtualinvoke r3.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.ui.incall.InCallMediaControl$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("inCallMediaCtrl", "Not able to retrieve calls") in <com.csipsimple.ui.incall.InCallMediaControl$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)>($r2) in <com.csipsimple.ui.prefs.AudioTester$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)>
STATIC edge: staticinvoke <com.csipsimple.ui.prefs.AudioTester: void access$0(com.csipsimple.ui.prefs.AudioTester,com.csipsimple.api.ISipService)>($r4, $r5) in <com.csipsimple.ui.prefs.AudioTester$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.prefs.AudioTester: void access$0(com.csipsimple.ui.prefs.AudioTester,com.csipsimple.api.ISipService)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.ui.prefs.AudioTester: com.csipsimple.api.ISipService access$1(com.csipsimple.ui.prefs.AudioTester)>($r4) in <com.csipsimple.ui.prefs.AudioTester$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.prefs.AudioTester: com.csipsimple.api.ISipService access$1(com.csipsimple.ui.prefs.AudioTester)>
STATIC edge: staticinvoke <com.csipsimple.ui.prefs.AudioTester: void access$2(com.csipsimple.ui.prefs.AudioTester)>($r4) in <com.csipsimple.ui.prefs.AudioTester$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.prefs.AudioTester: void access$2(com.csipsimple.ui.prefs.AudioTester)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.ui.prefs.AudioTester: com.csipsimple.api.ISipService access$1(com.csipsimple.ui.prefs.AudioTester)>($r3) in <com.csipsimple.ui.prefs.AudioTester$1: void onServiceDisconnected(android.content.ComponentName)> ==> <com.csipsimple.ui.prefs.AudioTester: com.csipsimple.api.ISipService access$1(com.csipsimple.ui.prefs.AudioTester)>
STATIC edge: staticinvoke <com.csipsimple.ui.prefs.AudioTester: void access$0(com.csipsimple.ui.prefs.AudioTester,com.csipsimple.api.ISipService)>($r3, null) in <com.csipsimple.ui.prefs.AudioTester$1: void onServiceDisconnected(android.content.ComponentName)> ==> <com.csipsimple.ui.prefs.AudioTester: void access$0(com.csipsimple.ui.prefs.AudioTester,com.csipsimple.api.ISipService)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.widgets.SlidingTab$Slider: void <init>(android.view.ViewGroup,int,int,int,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.widgets.SlidingTab$Slider: void hide()>() in <com.csipsimple.widgets.SlidingTab$Slider: void access$1(com.csipsimple.widgets.SlidingTab$Slider)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void hide()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.widgets.SlidingTab$Slider: void setState(int)>($i0) in <com.csipsimple.widgets.SlidingTab$Slider: void access$2(com.csipsimple.widgets.SlidingTab$Slider,int)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void setState(int)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.widgets.SlidingTab$Slider: void showTarget()>() in <com.csipsimple.widgets.SlidingTab$Slider: void access$3(com.csipsimple.widgets.SlidingTab$Slider)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void showTarget()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.widgets.SlidingTab$Slider: void reset()>() in <com.csipsimple.widgets.SlidingTab$Slider: void access$4(com.csipsimple.widgets.SlidingTab$Slider)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void reset()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.widgets.SlidingTab$Slider: void layout(int,int,int,int,int)>($i0, $i1, $i2, $i3, $i4) in <com.csipsimple.widgets.SlidingTab$Slider: void access$5(com.csipsimple.widgets.SlidingTab$Slider,int,int,int,int,int)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void layout(int,int,int,int,int)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.widgets.SlidingTab$Slider: void setResources(int,int,int,int)>($i0, $i1, $i2, $i3) in <com.csipsimple.widgets.SlidingTab$Slider: void access$7(com.csipsimple.widgets.SlidingTab$Slider,int,int,int,int)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void setResources(int,int,int,int)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.widgets.SlidingTab$Slider: void setDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r1, $r2, $r3, $r4) in <com.csipsimple.widgets.SlidingTab$Slider: void access$8(com.csipsimple.widgets.SlidingTab$Slider,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void setDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.widgets.SlidingTab$Slider: void setHintText(int)>($i0) in <com.csipsimple.widgets.SlidingTab$Slider: void access$9(com.csipsimple.widgets.SlidingTab$Slider,int)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void setHintText(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.SlidingTab$Slider: void setState(int)>(0) in <com.csipsimple.widgets.SlidingTab$Slider: void reset()> ==> <com.csipsimple.widgets.SlidingTab$Slider: void setState(int)>
STATIC edge: $r6 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.csipsimple.widgets.SlidingTab$Slider: void setDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_conf_port_info: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_conf_port_info: void <init>()> ==> <org.pjsip.pjsua.pjsua_conf_port_info: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_conf_port_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_conf_port_info: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_conf_port_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_conf_port_info: void delete()>() in <org.pjsip.pjsua.pjsua_conf_port_info: void finalize()> ==> <org.pjsip.pjsua.pjsua_conf_port_info: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_conf_port_info: org.pjsip.pjsua.pj_str_t getName()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_conf_port_info: void setName(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.ui.filters.AccountFiltersListFragment: void setAccountId(long)>($l0) in <com.csipsimple.ui.filters.AccountFilters: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void setAccountId(long)>
STATIC edge: $i1 = staticinvoke <com.csipsimple.utils.Compatibility: int getHomeMenuId()>() in <com.csipsimple.ui.filters.AccountFilters: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.utils.Compatibility: int getHomeMenuId()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.DialerCallBar: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, null, 0) in <com.csipsimple.widgets.DialerCallBar: void <init>(android.content.Context)> ==> <com.csipsimple.widgets.DialerCallBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2) in <com.csipsimple.widgets.DialerCallBar: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.widgets.DialerCallBar: void <init>(android.content.Context,android.util.AttributeSet)>
VIRTUAL edge: virtualinvoke $r4.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.csipsimple.widgets.DialerCallBar: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.widgets.DialerCallBar: void onClick(android.view.View)>
VIRTUAL edge: virtualinvoke $r4.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.csipsimple.widgets.DialerCallBar: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.widgets.DialerCallBar: boolean onLongClick(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Speakezi: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Speakezi: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Speakezi: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Speakezi: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("speex/8000/1", "nb", "245") in <com.csipsimple.wizards.impl.Speakezi: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(2131427823, $r6) in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: void run()> ==> <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$1: void onClick(android.content.DialogInterface,int)>
VIRTUAL edge: virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131427784, $r7) in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: void run()> ==> <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$2: void onClick(android.content.DialogInterface,int)>
VIRTUAL edge: virtualinvoke $r3.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(2131427823, $r9) in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: void run()> ==> <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$3: void onClick(android.content.DialogInterface,int)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getRecordsFolder(android.content.Context)>($r0) in <com.csipsimple.utils.PreferencesProviderWrapper: java.io.File getRecordsFolder(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: java.io.File getRecordsFolder(android.content.Context)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>("dtmf_mode") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean forceDtmfInBand()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>("dtmf_mode") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean forceDtmfRTP()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>($r5) in <com.csipsimple.utils.PreferencesProviderWrapper: java.util.ArrayList getAllIncomingNetworks()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>("headset_action") in <com.csipsimple.utils.PreferencesProviderWrapper: int getHeadsetAction()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <com.csipsimple.utils.PreferencesProviderWrapper: int getHeadsetAction()> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Prefs", "Headset action option not well formated") in <com.csipsimple.utils.PreferencesProviderWrapper: int getHeadsetAction()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
VIRTUAL edge: $f0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: float getPreferenceFloatValue(java.lang.String,float)>("snd_stream_level", 8.0F) in <com.csipsimple.utils.PreferencesProviderWrapper: float getInitialVolumeLevel()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: float getPreferenceFloatValue(java.lang.String,float)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Float getPreferenceFloatValue(android.content.Context,java.lang.String)>($r2, $r1) in <com.csipsimple.utils.PreferencesProviderWrapper: float getPreferenceFloatValue(java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: java.lang.Float getPreferenceFloatValue(android.content.Context,java.lang.String)>
STATIC edge: $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.csipsimple.utils.PreferencesProviderWrapper: float getPreferenceFloatValue(java.lang.String,float)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Float getPreferenceFloatValue(android.content.Context,java.lang.String,java.lang.Float)>($r2, $r1, $r3) in <com.csipsimple.utils.PreferencesProviderWrapper: float getPreferenceFloatValue(java.lang.String,float)> ==> <com.csipsimple.api.SipConfigManager: java.lang.Float getPreferenceFloatValue(android.content.Context,java.lang.String,java.lang.Float)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String,java.lang.String)>("ringtone", $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getRingtone()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String,java.lang.String)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)>($r1, $r2) in <com.csipsimple.utils.PreferencesProviderWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>($r1, $r3) in <com.csipsimple.utils.PreferencesProviderWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
STATIC edge: $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceFloatValue(java.lang.String,float)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceFloatValue(android.content.Context,java.lang.String,java.lang.Float)>($r2, $r1, $r3) in <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceFloatValue(java.lang.String,float)> ==> <com.csipsimple.api.SipConfigManager: void setPreferenceFloatValue(android.content.Context,java.lang.String,java.lang.Float)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>("dtmf_mode") in <com.csipsimple.utils.PreferencesProviderWrapper: boolean useSipInfoDtmf()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Tanstagi: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.wizards.impl.Tanstagi$1: void <init>(com.csipsimple.wizards.impl.Tanstagi)>(r0) in <com.csipsimple.wizards.impl.Tanstagi: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Tanstagi$1: void <init>(com.csipsimple.wizards.impl.Tanstagi)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>($r4) in <com.csipsimple.wizards.impl.Tanstagi: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Tanstagi$1: void onClick(android.view.View)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Tanstagi: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) in <com.csipsimple.wizards.impl.Tanstagi: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Tanstagi: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Tanstagi: void updateAccountInfos(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Tanstagi: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Tanstagi: void updateAccountInfos(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Tanstagi: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_tls", 1) in <com.csipsimple.wizards.impl.Tanstagi: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallInfoGrid: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.csipsimple.ui.incall.InCallInfoGrid: void <init>(android.content.Context)> ==> <com.csipsimple.ui.incall.InCallInfoGrid: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.ui.incall.InCallInfoGrid$1: void <init>(com.csipsimple.ui.incall.InCallInfoGrid)>(r0) in <com.csipsimple.ui.incall.InCallInfoGrid: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.incall.InCallInfoGrid$1: void <init>(com.csipsimple.ui.incall.InCallInfoGrid)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallInfoGrid", $r4) in <com.csipsimple.ui.incall.InCallInfoGrid: void populate()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("InCallInfoGrid", $r4) in <com.csipsimple.ui.incall.InCallInfoGrid: void populate()> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("InCallInfoGrid", $r4) in <com.csipsimple.ui.incall.InCallInfoGrid: void populate()> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.InCallInfoGrid: void removeViewAt(int)>($i2) in <com.csipsimple.ui.incall.InCallInfoGrid: void populate()> ==> <com.csipsimple.ui.incall.InCallInfoGrid: void removeViewAt(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("InCallInfoGrid", $r3) in <com.csipsimple.ui.incall.InCallInfoGrid: void removeViewAt(int)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r6.<com.csipsimple.ui.incall.InCallCard: void terminate()>() in <com.csipsimple.ui.incall.InCallInfoGrid: void removeViewAt(int)> ==> <com.csipsimple.ui.incall.InCallCard: void terminate()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.InCallInfoGrid: void terminate()>() in <com.csipsimple.ui.incall.InCallInfoGrid: void setAdapter(android.widget.ListAdapter)> ==> <com.csipsimple.ui.incall.InCallInfoGrid: void terminate()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.incall.InCallInfoGrid$CallDataObserver: void <init>(com.csipsimple.ui.incall.InCallInfoGrid,com.csipsimple.ui.incall.InCallInfoGrid$CallDataObserver)>(r0, null) in <com.csipsimple.ui.incall.InCallInfoGrid: void setAdapter(android.widget.ListAdapter)> ==> <com.csipsimple.ui.incall.InCallInfoGrid$CallDataObserver: void <init>(com.csipsimple.ui.incall.InCallInfoGrid,com.csipsimple.ui.incall.InCallInfoGrid$CallDataObserver)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.InCallInfoGrid: void populate()>() in <com.csipsimple.ui.incall.InCallInfoGrid: void setAdapter(android.widget.ListAdapter)> ==> <com.csipsimple.ui.incall.InCallInfoGrid: void populate()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.InCallInfoGrid: void removeViewAt(int)>($i0) in <com.csipsimple.ui.incall.InCallInfoGrid: void terminate()> ==> <com.csipsimple.ui.incall.InCallInfoGrid: void removeViewAt(int)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.impl.Betamax$1: void <init>()>() in <com.csipsimple.wizards.impl.Betamax: void <clinit>()> ==> <com.csipsimple.wizards.impl.Betamax$1: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.wizards.impl.Betamax$2: void <init>()>() in <com.csipsimple.wizards.impl.Betamax: void <clinit>()> ==> <com.csipsimple.wizards.impl.Betamax$2: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Betamax: void <init>()> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.wizards.impl.Betamax$AccountBalance: void <init>(com.csipsimple.wizards.impl.Betamax)>(r0) in <com.csipsimple.wizards.impl.Betamax: void <init>()> ==> <com.csipsimple.wizards.impl.Betamax$AccountBalance: void <init>(com.csipsimple.wizards.impl.Betamax)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.wizards.impl.AccountBalanceHelper: void launchRequest(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Betamax: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AccountBalanceHelper: void launchRequest(com.csipsimple.api.SipProfile)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Betamax: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Betamax: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Betamax: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Betamax: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.Betamax: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Betamax: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.wizards.impl.Betamax: android.preference.Preference findPreference(java.lang.String)>("provider_list") in <com.csipsimple.wizards.impl.Betamax: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("BetamaxW", "Create new list pref") in <com.csipsimple.wizards.impl.Betamax: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Betamax: void addPreference(android.preference.Preference)>($r6) in <com.csipsimple.wizards.impl.Betamax: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void addPreference(android.preference.Preference)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Betamax: void hidePreference(java.lang.String,java.lang.String)>(null, $r11) in <com.csipsimple.wizards.impl.Betamax: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void hidePreference(java.lang.String,java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()>() in <com.csipsimple.wizards.impl.Betamax: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Betamax: void updateAccountInfos(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Betamax: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Betamax: void updateAccountInfos(com.csipsimple.api.SipProfile)>
VIRTUAL edge: z0 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r11) in <com.csipsimple.wizards.impl.Betamax: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Betamax: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.Betamax: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>($r3) in <com.csipsimple.wizards.impl.Betamax: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void updateDescriptions()>() in <com.csipsimple.wizards.impl.Betamax: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void updateDescriptions()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Betamax: void setStringFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Betamax: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.dynamic_factory: void <init>(long,boolean)> ==> <org.pjsip.pjsua.dynamic_factory: void <init>()>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.dynamic_factory: long getCPtr(org.pjsip.pjsua.dynamic_factory)>($r2) in <org.pjsip.pjsua.dynamic_factory: long[] cArrayUnwrap(org.pjsip.pjsua.dynamic_factory[])> ==> <org.pjsip.pjsua.dynamic_factory: long getCPtr(org.pjsip.pjsua.dynamic_factory)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.dynamic_factory: org.pjsip.pjsua.pj_str_t getInit_factory_name()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.dynamic_factory: org.pjsip.pjsua.pj_str_t getShared_lib_path()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.SiptelPt: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pj_str_t: void <init>()>
SPECIAL edge: specialinvoke r4.<com.csipsimple.models.Filter: void <init>()>() in <com.csipsimple.ui.filters.AccountFiltersListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.models.Filter: void <init>()>
VIRTUAL edge: virtualinvoke r4.<com.csipsimple.models.Filter: void createFromDb(android.database.Cursor)>($r3) in <com.csipsimple.ui.filters.AccountFiltersListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.models.Filter: void createFromDb(android.database.Cursor)>
VIRTUAL edge: $r5 = virtualinvoke r4.<com.csipsimple.models.Filter: java.lang.String getRepresentation(android.content.Context)>($r2) in <com.csipsimple.ui.filters.AccountFiltersListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.models.Filter: java.lang.String getRepresentation(android.content.Context)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>() in <com.csipsimple.wizards.impl.TOnline: void <init>()> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>
SPECIAL edge: $r2 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.TOnline: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.TOnline: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r5) in <com.csipsimple.wizards.impl.TOnline: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.wizards.impl.TOnline: java.lang.String getText(android.preference.EditTextPreference)>($r4) in <com.csipsimple.wizards.impl.TOnline: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
STATIC edge: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5) in <com.csipsimple.wizards.impl.TOnline: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.TOnline: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.TOnline: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.TOnline: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.TOnline: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.TOnline: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("@") in <com.csipsimple.wizards.impl.TOnline: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.TOnline: void hidePreference(java.lang.String,java.lang.String)>(null, $r2) in <com.csipsimple.wizards.impl.TOnline: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void hidePreference(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.TOnline: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.TOnline: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.TOnline: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.TOnline: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>("stun.t-online.de") in <com.csipsimple.wizards.impl.TOnline: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
STATIC edge: $i1 = staticinvoke <com.csipsimple.utils.Compatibility: int getHomeMenuId()>() in <com.csipsimple.ui.calllog.CallLogDetailsActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.utils.Compatibility: int getHomeMenuId()>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r1) in <com.csipsimple.ui.calllog.CallLogDetailsActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.csipsimple.utils.Ringer$VibratorThread: void <init>(com.csipsimple.utils.Ringer)> ==> <java.lang.Thread: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.Ringer$VibratorThread: void <init>(com.csipsimple.utils.Ringer)>($r1) in <com.csipsimple.utils.Ringer$VibratorThread: void <init>(com.csipsimple.utils.Ringer,com.csipsimple.utils.Ringer$VibratorThread)> ==> <com.csipsimple.utils.Ringer$VibratorThread: void <init>(com.csipsimple.utils.Ringer)>
STATIC edge: staticinvoke <java.lang.Thread: void sleep(long)>(2000L) in <com.csipsimple.utils.Ringer$VibratorThread: void run()> ==> <java.lang.Thread: void sleep(long)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Ringer", "Vibrator thread interrupt") in <com.csipsimple.utils.Ringer$VibratorThread: void run()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.PhoneCallDetailsViews: void <init>(android.widget.TextView,android.view.View,com.csipsimple.ui.calllog.CallTypeIconsView,android.widget.TextView,android.widget.TextView)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.calllog.CallTypeIconsView: void <init>(android.content.Context)>($r0) in <com.csipsimple.ui.calllog.PhoneCallDetailsViews: com.csipsimple.ui.calllog.PhoneCallDetailsViews createForTest(android.content.Context)> ==> <com.csipsimple.ui.calllog.CallTypeIconsView: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.ui.calllog.PhoneCallDetailsViews: void <init>(android.widget.TextView,android.view.View,com.csipsimple.ui.calllog.CallTypeIconsView,android.widget.TextView,android.widget.TextView)>($r2, $r3, $r4, $r5, $r6) in <com.csipsimple.ui.calllog.PhoneCallDetailsViews: com.csipsimple.ui.calllog.PhoneCallDetailsViews createForTest(android.content.Context)> ==> <com.csipsimple.ui.calllog.PhoneCallDetailsViews: void <init>(android.widget.TextView,android.view.View,com.csipsimple.ui.calllog.CallTypeIconsView,android.widget.TextView,android.widget.TextView)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.ui.calllog.PhoneCallDetailsViews: void <init>(android.widget.TextView,android.view.View,com.csipsimple.ui.calllog.CallTypeIconsView,android.widget.TextView,android.widget.TextView)>($r3, $r2, $r5, $r6, $r7) in <com.csipsimple.ui.calllog.PhoneCallDetailsViews: com.csipsimple.ui.calllog.PhoneCallDetailsViews fromView(android.view.View)> ==> <com.csipsimple.ui.calllog.PhoneCallDetailsViews: void <init>(android.widget.TextView,android.view.View,com.csipsimple.ui.calllog.CallTypeIconsView,android.widget.TextView,android.widget.TextView)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipCallSession: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipCallSession: void <init>(android.os.Parcel)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipCallSession: void <init>(android.os.Parcel)> ==> <com.csipsimple.api.SipCallSession: void <init>()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.api.SipCallSession: void setIncoming(boolean)>($z1) in <com.csipsimple.api.SipCallSession: void <init>(android.os.Parcel)> ==> <com.csipsimple.api.SipCallSession: void setIncoming(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.api.SipCallSession: void setLastStatusComment(java.lang.String)>($r2) in <com.csipsimple.api.SipCallSession: void <init>(android.os.Parcel)> ==> <com.csipsimple.api.SipCallSession: void setLastStatusComment(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.api.SipCallSession: void setMediaHasVideo(boolean)>($z1) in <com.csipsimple.api.SipCallSession: void <init>(android.os.Parcel)> ==> <com.csipsimple.api.SipCallSession: void setMediaHasVideo(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.api.SipCallSession: void <init>(android.os.Parcel)>($r1) in <com.csipsimple.api.SipCallSession: void <init>(android.os.Parcel,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: void <init>(android.os.Parcel)>
VIRTUAL edge: $i1 = virtualinvoke r2.<com.csipsimple.api.SipCallSession: int getCallId()>() in <com.csipsimple.api.SipCallSession: boolean equals(java.lang.Object)> ==> <com.csipsimple.api.SipCallSession: int getCallId()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.api.SipCallSession: boolean isActive()>() in <com.csipsimple.api.SipCallSession: boolean isRemoteHeld()> ==> <com.csipsimple.api.SipCallSession: boolean isActive()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.api.SipCallSession: boolean isBeforeConfirmed()>() in <com.csipsimple.api.SipCallSession: boolean isRemoteHeld()> ==> <com.csipsimple.api.SipCallSession: boolean isBeforeConfirmed()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.api.SipCallSession: boolean isIncoming()>() in <com.csipsimple.api.SipCallSession: void writeToParcel(android.os.Parcel,int)> ==> <com.csipsimple.api.SipCallSession: boolean isIncoming()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.api.SipCallSession: java.lang.String getLastStatusComment()>() in <com.csipsimple.api.SipCallSession: void writeToParcel(android.os.Parcel,int)> ==> <com.csipsimple.api.SipCallSession: java.lang.String getLastStatusComment()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.api.SipCallSession: boolean mediaHasVideo()>() in <com.csipsimple.api.SipCallSession: void writeToParcel(android.os.Parcel,int)> ==> <com.csipsimple.api.SipCallSession: boolean mediaHasVideo()>
STATIC edge: $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: long getAccountToCallTo()> ==> <java.lang.Long: java.lang.Long valueOf(long)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void finishServiceIfNeeded(boolean)>(0) in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onBackPressed()> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void finishServiceIfNeeded(boolean)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(5) in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: boolean onKeyDown(int,android.view.KeyEvent)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onBackPressed()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: boolean onKeyDown(int,android.view.KeyEvent)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onBackPressed()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: java.lang.String getPhoneNumber()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: boolean shouldIgnoreRewritingRules()> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: java.lang.String getPhoneNumber()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void <init>(android.content.Context)>($r2) in <com.csipsimple.ui.incall.InCallControls$1: void <init>(com.csipsimple.ui.incall.InCallControls,android.content.Context)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView)>($r1, $r2) in <com.csipsimple.ui.incall.InCallControls$1: void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Viva: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Viva: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>("stun.viva.gr") in <com.csipsimple.wizards.impl.Viva: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjrpid_element: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjrpid_element: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjrpid_element: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjrpid_element: void delete()>() in <org.pjsip.pjsua.pjrpid_element: void finalize()> ==> <org.pjsip.pjsua.pjrpid_element: void delete()>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjrpid_activity: org.pjsip.pjsua.pjrpid_activity swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjrpid_element: org.pjsip.pjsua.pjrpid_activity getActivity()> ==> <org.pjsip.pjsua.pjrpid_activity: org.pjsip.pjsua.pjrpid_activity swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjrpid_element: org.pjsip.pjsua.pj_str_t getId()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjrpid_element: org.pjsip.pjsua.pj_str_t getNote()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjrpid_element: org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type getType()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type: void <init>(long,boolean)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjrpid_activity: int swigValue()>() in <org.pjsip.pjsua.pjrpid_element: void setActivity(org.pjsip.pjsua.pjrpid_activity)> ==> <org.pjsip.pjsua.pjrpid_activity: int swigValue()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjrpid_element: void setId(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjrpid_element: void setNote(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type)>($r1) in <org.pjsip.pjsua.pjrpid_element: void setType(org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Eutelia: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.app.ActionBar: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.BuildConfig: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjmedia_tone_desc: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjmedia_tone_desc: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjmedia_tone_desc: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjmedia_tone_desc: long getCPtr(org.pjsip.pjsua.pjmedia_tone_desc)>($r2) in <org.pjsip.pjsua.pjmedia_tone_desc: long[] cArrayUnwrap(org.pjsip.pjsua.pjmedia_tone_desc[])> ==> <org.pjsip.pjsua.pjmedia_tone_desc: long getCPtr(org.pjsip.pjsua.pjmedia_tone_desc)>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.pjmedia_tone_desc: void <init>(long,boolean)>($l0, $z0) in <org.pjsip.pjsua.pjmedia_tone_desc: org.pjsip.pjsua.pjmedia_tone_desc[] cArrayWrap(long[],boolean)> ==> <org.pjsip.pjsua.pjmedia_tone_desc: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjmedia_tone_desc: void delete()>() in <org.pjsip.pjsua.pjmedia_tone_desc: void finalize()> ==> <org.pjsip.pjsua.pjmedia_tone_desc: void delete()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R$id: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R$array: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_resolve_result__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_resolve_result__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_resolve_result__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_resolve_result__void: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.wizards.WizardChooser: java.util.ArrayList access$0(com.csipsimple.wizards.WizardChooser)>($r3) in <com.csipsimple.wizards.WizardChooser$WizardsListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.wizards.WizardChooser: java.util.ArrayList access$0(com.csipsimple.wizards.WizardChooser)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.WizardChooser$WizardsListAdapter: void bindView(android.view.View,java.util.Map,int,int)>($r1, $r6, $i0, $i1) in <com.csipsimple.wizards.WizardChooser$WizardsListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.wizards.WizardChooser$WizardsListAdapter: void bindView(android.view.View,java.util.Map,int,int)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int)>("PJSUA_CALL_HOLD_TYPE_RFC3264", 0) in <org.pjsip.pjsua.pjsua_call_hold_type: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_call_hold_type$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_call_hold_type$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_call_hold_type$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_call_hold_type$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_call_hold_type$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_call_hold_type$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_hold_type)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_hold_type)> ==> <org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_call_hold_type$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_hold_type)> ==> <org.pjsip.pjsua.pjsua_call_hold_type$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsua_call_hold_type: org.pjsip.pjsua.pjsua_call_hold_type swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Pfingo: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Pfingo: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.Pfingo: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>("stun.pfingo.com") in <com.csipsimple.wizards.impl.Pfingo: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: void <init>(android.widget.SpinnerAdapter)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>($i0, $r1, $r2) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: int getCount()>() in <com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: boolean isEmpty()> ==> <com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: int getCount()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", $r2) in <com.csipsimple.service.SipService$AccountStatusContentObserver: void onChange(boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService: void updateRegistrationsState()>() in <com.csipsimple.service.SipService$AccountStatusContentObserver: void onChange(boolean)> ==> <com.csipsimple.service.SipService: void updateRegistrationsState()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.messages.ConversationsListFragment$5$1: void <init>(com.csipsimple.ui.messages.ConversationsListFragment$5,int,java.lang.String,java.lang.String)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.ui.messages.ConversationsListFragment$5: com.csipsimple.ui.messages.ConversationsListFragment access$0(com.csipsimple.ui.messages.ConversationsListFragment$5)>($r4) in <com.csipsimple.ui.messages.ConversationsListFragment$5$1: void run()> ==> <com.csipsimple.ui.messages.ConversationsListFragment$5: com.csipsimple.ui.messages.ConversationsListFragment access$0(com.csipsimple.ui.messages.ConversationsListFragment$5)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,java.lang.String,java.lang.String)>($i0, $r1, $r2) in <com.csipsimple.ui.messages.ConversationsListFragment$5$1: void run()> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,java.lang.String,java.lang.String)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)>($r3) in <com.csipsimple.ui.messages.ConverstationsAdapter: java.lang.CharSequence formatMessage(android.database.Cursor)> ==> <com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)>
STATIC edge: $r10 = staticinvoke <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>($r2, $r7) in <com.csipsimple.ui.messages.ConverstationsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>
VIRTUAL edge: virtualinvoke $r11.<com.csipsimple.widgets.contactbadge.QuickContactBadge: void assignContactUri(android.net.Uri)>($r12) in <com.csipsimple.ui.messages.ConverstationsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge: void assignContactUri(android.net.Uri)>
VIRTUAL edge: $r13 = virtualinvoke $r11.<com.csipsimple.widgets.contactbadge.QuickContactBadge: android.widget.ImageView getImageView()>() in <com.csipsimple.ui.messages.ConverstationsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge: android.widget.ImageView getImageView()>
STATIC edge: staticinvoke <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>($r2, $r13, $r10, 2130837667) in <com.csipsimple.ui.messages.ConverstationsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>
SPECIAL edge: $r14 = specialinvoke r0.<com.csipsimple.ui.messages.ConverstationsAdapter: java.lang.CharSequence formatMessage(android.database.Cursor)>($r3) in <com.csipsimple.ui.messages.ConverstationsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.messages.ConverstationsAdapter: java.lang.CharSequence formatMessage(android.database.Cursor)>
SPECIAL edge: specialinvoke r4.<com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews: void <init>()>() in <com.csipsimple.ui.messages.ConverstationsAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)> ==> <com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.account.AccountsLoader: void initHandlers()>() in <com.csipsimple.ui.account.AccountsLoader: void <init>(android.content.Context,java.lang.String,boolean)> ==> <com.csipsimple.ui.account.AccountsLoader: void initHandlers()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.account.AccountsLoader: void initHandlers()>() in <com.csipsimple.ui.account.AccountsLoader: void <init>(android.content.Context,boolean,boolean)> ==> <com.csipsimple.ui.account.AccountsLoader: void initHandlers()>
STATIC edge: $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor createCursorForAccount(com.csipsimple.ui.account.AccountsLoader$FilteredProfile)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b2) in <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor createCursorForAccount(com.csipsimple.ui.account.AccountsLoader$FilteredProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r7 = virtualinvoke $r1.<com.csipsimple.ui.account.AccountsLoader$FilteredProfile: java.lang.String rewriteNumber(java.lang.String)>($r7) in <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor createCursorForAccount(com.csipsimple.ui.account.AccountsLoader$FilteredProfile)> ==> <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: java.lang.String rewriteNumber(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.ui.account.AccountsLoader$FilteredProfile: boolean getStatusForOutgoing()>() in <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor createCursorForAccount(com.csipsimple.ui.account.AccountsLoader$FilteredProfile)> ==> <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: boolean getStatusForOutgoing()>
VIRTUAL edge: $i3 = virtualinvoke $r1.<com.csipsimple.ui.account.AccountsLoader$FilteredProfile: int getStatusColor()>() in <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor createCursorForAccount(com.csipsimple.ui.account.AccountsLoader$FilteredProfile)> ==> <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: int getStatusColor()>
STATIC edge: staticinvoke <com.csipsimple.utils.CallHandlerPlugin: void initHandler()>() in <com.csipsimple.ui.account.AccountsLoader: void initHandlers()> ==> <com.csipsimple.utils.CallHandlerPlugin: void initHandler()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.account.AccountsLoader: void onReleaseResources(android.database.Cursor)>($r2) in <com.csipsimple.ui.account.AccountsLoader: void deliverResult(android.database.Cursor)> ==> <com.csipsimple.ui.account.AccountsLoader: void onReleaseResources(android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<android.support.v4.content.AsyncTaskLoader: void deliverResult(java.lang.Object)>($r1) in <com.csipsimple.ui.account.AccountsLoader: void deliverResult(android.database.Cursor)> ==> <com.csipsimple.ui.account.AccountsLoader: void deliverResult(java.lang.Object)>
VIRTUAL edge: $r6 = virtualinvoke r4.<com.csipsimple.ui.account.AccountsLoader$FilteredProfile: com.csipsimple.utils.CallHandlerPlugin getCallHandlerPlugin()>() in <com.csipsimple.ui.account.AccountsLoader: com.csipsimple.utils.CallHandlerPlugin getCallHandlerWithAccountId(long)> ==> <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: com.csipsimple.utils.CallHandlerPlugin getCallHandlerPlugin()>
SPECIAL edge: specialinvoke $r21.<com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>($r3) in <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor loadInBackground()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke $r21.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForOutgoing()>() in <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor loadInBackground()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForOutgoing()>
STATIC edge: r9 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)>($r3) in <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor loadInBackground()> ==> <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)>
STATIC edge: r7 = staticinvoke <com.csipsimple.api.SipProfile: java.util.ArrayList getAllProfiles(android.content.Context,boolean,java.lang.String[])>($r3, $z0, $r14) in <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor loadInBackground()> ==> <com.csipsimple.api.SipProfile: java.util.ArrayList getAllProfiles(android.content.Context,boolean,java.lang.String[])>
SPECIAL edge: specialinvoke $r25.<com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,com.csipsimple.api.SipProfile,boolean)>(r0, r16, 0) in <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor loadInBackground()> ==> <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,com.csipsimple.api.SipProfile,boolean)>
SPECIAL edge: specialinvoke $r25.<com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)>(r0, $r10, 0) in <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor loadInBackground()> ==> <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)>
STATIC edge: $r19 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>($r3, $r10) in <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor loadInBackground()> ==> <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.models.Filter: boolean isCallableNumber(android.content.Context,long,java.lang.String)>($r3, $l2, $r10) in <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor loadInBackground()> ==> <com.csipsimple.models.Filter: boolean isCallableNumber(android.content.Context,long,java.lang.String)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.models.Filter: boolean isMustCallNumber(android.content.Context,long,java.lang.String)>($r3, $l2, $r10) in <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor loadInBackground()> ==> <com.csipsimple.models.Filter: boolean isMustCallNumber(android.content.Context,long,java.lang.String)>
SPECIAL edge: $r20 = specialinvoke r0.<com.csipsimple.ui.account.AccountsLoader: android.database.Cursor createCursorForAccount(com.csipsimple.ui.account.AccountsLoader$FilteredProfile)>($r17) in <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor loadInBackground()> ==> <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor createCursorForAccount(com.csipsimple.ui.account.AccountsLoader$FilteredProfile)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.ui.account.AccountsLoader: android.database.Cursor loadInBackground()>() in <com.csipsimple.ui.account.AccountsLoader: java.lang.Object loadInBackground()> ==> <com.csipsimple.ui.account.AccountsLoader: android.database.Cursor loadInBackground()>
SPECIAL edge: specialinvoke r0.<android.support.v4.content.AsyncTaskLoader: void onCanceled(java.lang.Object)>($r1) in <com.csipsimple.ui.account.AccountsLoader: void onCanceled(android.database.Cursor)> ==> <com.csipsimple.ui.account.AccountsLoader: void onCanceled(java.lang.Object)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.account.AccountsLoader: void onReleaseResources(android.database.Cursor)>($r1) in <com.csipsimple.ui.account.AccountsLoader: void onCanceled(android.database.Cursor)> ==> <com.csipsimple.ui.account.AccountsLoader: void onReleaseResources(android.database.Cursor)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.account.AccountsLoader: void onCanceled(android.database.Cursor)>($r2) in <com.csipsimple.ui.account.AccountsLoader: void onCanceled(java.lang.Object)> ==> <com.csipsimple.ui.account.AccountsLoader: void onCanceled(android.database.Cursor)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.account.AccountsLoader: void onStopLoading()>() in <com.csipsimple.ui.account.AccountsLoader: void onReset()> ==> <com.csipsimple.ui.account.AccountsLoader: void onStopLoading()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.account.AccountsLoader: void onReleaseResources(android.database.Cursor)>($r1) in <com.csipsimple.ui.account.AccountsLoader: void onReset()> ==> <com.csipsimple.ui.account.AccountsLoader: void onReleaseResources(android.database.Cursor)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.account.AccountsLoader: void deliverResult(android.database.Cursor)>($r1) in <com.csipsimple.ui.account.AccountsLoader: void onStartLoading()> ==> <com.csipsimple.ui.account.AccountsLoader: void deliverResult(android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_logging_config: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void getCb()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_logging_config: org.pjsip.pjsua.pj_str_t getLog_filename()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void)>($r1) in <org.pjsip.pjsua.pjsua_logging_config: void setCb(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void)>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: void <init>(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: void <init>(float)>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: void <init>(float,float)>($f0, $f1) in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float,float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: void <init>(float,float)>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: void <init>(float,java.lang.Object)>($f0, null) in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: void <init>(float,java.lang.Object)>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: void <init>(float,java.lang.Object)>($f0, $r0) in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: void <init>(float,java.lang.Object)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport_info: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport_info: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,android.view.View)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjrpid_activity$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void initIndexes(android.database.Cursor)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(11) in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void setRowViewAlpha(android.view.View,float)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
VIRTUAL edge: $r3 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setAlpha", $r5) in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void setRowViewAlpha(android.view.View,float)> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
STATIC edge: $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void setRowViewAlpha(android.view.View,float)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r3, $r1, $r6) in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void setRowViewAlpha(android.view.View,float)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void initIndexes(android.database.Cursor)>($r3) in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void initIndexes(android.database.Cursor)>
STATIC edge: $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7) in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void setRowViewAlpha(android.view.View,float)>($r1, $f0) in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void setRowViewAlpha(android.view.View,float)>
VIRTUAL edge: $r13 = virtualinvoke $r12.<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: com.csipsimple.ui.account.AccountsLoader getAccountLoader()>() in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: com.csipsimple.ui.account.AccountsLoader getAccountLoader()>
VIRTUAL edge: $r14 = virtualinvoke $r13.<com.csipsimple.ui.account.AccountsLoader: com.csipsimple.utils.CallHandlerPlugin getCallHandlerWithAccountId(long)>($l1) in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.account.AccountsLoader: com.csipsimple.utils.CallHandlerPlugin getCallHandlerWithAccountId(long)>
VIRTUAL edge: $r16 = virtualinvoke $r14.<com.csipsimple.utils.CallHandlerPlugin: android.graphics.Bitmap getIcon()>() in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.utils.CallHandlerPlugin: android.graphics.Bitmap getIcon()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.wizards.WizardUtils: int getWizardIconRes(java.lang.String)>($r8) in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.wizards.WizardUtils: int getWizardIconRes(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void initIndexes(android.database.Cursor)>(r2) in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: boolean isEnabled(int)> ==> <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void initIndexes(android.database.Cursor)>
SPECIAL edge: specialinvoke r4.<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter,com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter$AccListItemViewTag)>(r0, null) in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)> ==> <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter,com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter$AccListItemViewTag)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Tlenofon: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Tlenofon: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Tlenofon: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_dns_srv", 1) in <com.csipsimple.wizards.impl.Tlenofon: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("keep_alive_interval_mobile", "60") in <com.csipsimple.wizards.impl.Tlenofon: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.NeufTalk: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.NeufTalk: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.NeufTalk: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("use_compact_form", 1) in <com.csipsimple.wizards.impl.NeufTalk: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.NEW_OUTGOING_CALL") in <com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$19: void <init>(com.csipsimple.service.SipService$1,boolean)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$19: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void setEchoCancellation(boolean)>($z0) in <com.csipsimple.service.SipService$1$19: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: void setEchoCancellation(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()>() in <com.csipsimple.wizards.impl.MagicJack: void <init>()> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.MagicJack: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.MagicJack: java.lang.String getDomain()>() in <com.csipsimple.wizards.impl.MagicJack: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: java.lang.String getDomain()>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.MagicJack: java.lang.String getText(android.preference.EditTextPreference)>($r4) in <com.csipsimple.wizards.impl.MagicJack: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$18: void <init>(com.csipsimple.service.SipService$1,int,float)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$18: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void confAdjustRxLevel(int,float)>($i0, $f0) in <com.csipsimple.service.SipService$1$18: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: void confAdjustRxLevel(int,float)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$17: void <init>(com.csipsimple.service.SipService$1,int,float)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$17: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void confAdjustTxLevel(int,float)>($i0, $f0) in <com.csipsimple.service.SipService$1$17: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: void confAdjustTxLevel(int,float)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipManager$PresenceStatus: com.csipsimple.api.SipManager$PresenceStatus[] values()>() in <com.csipsimple.utils.contacts.ContactsUtils5: int[] $SWITCH_TABLE$com$csipsimple$api$SipManager$PresenceStatus()> ==> <com.csipsimple.api.SipManager$PresenceStatus: com.csipsimple.api.SipManager$PresenceStatus[] values()>
STATIC edge: $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.utils.contacts.ContactsUtils5: void bindContactPhoneView(android.view.View,android.content.Context,android.database.Cursor)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2130837667) in <com.csipsimple.utils.contacts.ContactsUtils5: void bindContactPhoneView(android.view.View,android.content.Context,android.database.Cursor)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r9 = virtualinvoke r0.<com.csipsimple.utils.contacts.ContactsUtils5: android.graphics.Bitmap getContactPhoto(android.content.Context,android.net.Uri,boolean,java.lang.Integer)>($r2, $r7, 0, $r8) in <com.csipsimple.utils.contacts.ContactsUtils5: void bindContactPhoneView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.utils.contacts.ContactsUtils5: android.graphics.Bitmap getContactPhoto(android.content.Context,android.net.Uri,boolean,java.lang.Integer)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.models.CallerInfo: void <init>()>() in <com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.models.CallerInfo findCallerInfo(android.content.Context,java.lang.String)> ==> <com.csipsimple.models.CallerInfo: void <init>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(11) in <com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.models.CallerInfo findCallerInfo(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
VIRTUAL edge: $i0 = virtualinvoke $r7.<java.lang.String: int length()>() in <com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.models.CallerInfo findCallerInfo(android.content.Context,java.lang.String)> ==> <java.lang.String: int length()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContactsUtils5", "Exception while retrieving cursor infos", r5) in <com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.models.CallerInfo findCallerInfo(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r4.<com.csipsimple.models.CallerInfo: void <init>()>() in <com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.models.CallerInfo findCallerInfoForUri(android.content.Context,java.lang.String)> ==> <com.csipsimple.models.CallerInfo: void <init>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(11) in <com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.models.CallerInfo findCallerInfoForUri(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("(mimetype=\'vnd.android.cursor.item/im\'  AND data5=-1 AND data6=\'sip\')") in <com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.models.CallerInfo findCallerInfoForUri(android.content.Context,java.lang.String)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $i0 = virtualinvoke $r2.<java.lang.String: int length()>() in <com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.models.CallerInfo findCallerInfoForUri(android.content.Context,java.lang.String)> ==> <java.lang.String: int length()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContactsUtils5", "Exception while retrieving cursor infos", r6) in <com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.models.CallerInfo findCallerInfoForUri(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor getContactsByGroup(android.content.Context,java.lang.String)>($r1, $r2) in <com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getCSipPhonesByGroup(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor getContactsByGroup(android.content.Context,java.lang.String)>
STATIC edge: $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getCSipPhonesByGroup(android.content.Context,java.lang.String)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
VIRTUAL edge: $r7 = virtualinvoke r0.<com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getCSipPhonesContact(android.content.Context,java.lang.Long)>($r1, $r6) in <com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getCSipPhonesByGroup(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getCSipPhonesContact(android.content.Context,java.lang.Long)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContactsUtils5", "Error while looping on contacts", r3) in <com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getCSipPhonesByGroup(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("mimetype=\'vnd.android.cursor.item/im\'  AND data5=-1 AND  LOWER(data6)=\'csip\'") in <com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getCSipPhonesContact(android.content.Context,java.lang.Long)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0) in <com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getCSipPhonesContact(android.content.Context,java.lang.Long)> ==> <java.lang.Long: java.lang.String toString(long)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContactsUtils5", "Error while looping on data", r4) in <com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getCSipPhonesContact(android.content.Context,java.lang.Long)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.utils.contacts.ContactsWrapper$ContactInfo: void <init>(com.csipsimple.utils.contacts.ContactsWrapper)>(r0) in <com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.utils.contacts.ContactsWrapper$ContactInfo getContactInfo(android.content.Context,android.database.Cursor)> ==> <com.csipsimple.utils.contacts.ContactsWrapper$ContactInfo: void <init>(com.csipsimple.utils.contacts.ContactsWrapper)>
STATIC edge: $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.utils.contacts.ContactsWrapper$ContactInfo getContactInfo(android.content.Context,android.database.Cursor)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(11) in <com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor getContactsByGroup(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContactsUtils5", "Error while retrieving group", r3) in <com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor getContactsByGroup(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(9) in <com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor getContactsPhones(android.content.Context)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("(mimetype=\'vnd.android.cursor.item/phone_v2\' AND data1 IS NOT NULL ) ") in <com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor getContactsPhones(android.content.Context)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0) in <com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getPhoneNumbers(android.content.Context,long,int)> ==> <java.lang.Long: java.lang.String toString(long)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(9) in <com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getPhoneNumbers(android.content.Context,long,int)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.utils.contacts.ContactsWrapper$Phone: void <init>(com.csipsimple.utils.contacts.ContactsWrapper,java.lang.String,java.lang.String)>(r0, $r9, $r10) in <com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getPhoneNumbers(android.content.Context,long,int)> ==> <com.csipsimple.utils.contacts.ContactsWrapper$Phone: void <init>(com.csipsimple.utils.contacts.ContactsWrapper,java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9) in <com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getPhoneNumbers(android.content.Context,long,int)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>($r2, 0) in <com.csipsimple.utils.contacts.ContactsUtils5: boolean insertOrUpdateCSipUri(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(-1) in <com.csipsimple.utils.contacts.ContactsUtils5: boolean insertOrUpdateCSipUri(android.content.Context,long,java.lang.String)> ==> <java.lang.Integer: java.lang.String toString(int)>
STATIC edge: $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1) in <com.csipsimple.utils.contacts.ContactsUtils5: boolean insertOrUpdateCSipUri(android.content.Context,long,java.lang.String)> ==> <java.lang.Long: java.lang.String toString(long)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("ContactsUtils5", $r2) in <com.csipsimple.utils.contacts.ContactsUtils5: boolean insertOrUpdateCSipUri(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContactsUtils5", "Error while looping on contacts", r4) in <com.csipsimple.utils.contacts.ContactsUtils5: boolean insertOrUpdateCSipUri(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) in <com.csipsimple.utils.contacts.ContactsUtils5: boolean insertOrUpdateCSipUri(android.content.Context,long,java.lang.String)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1) in <com.csipsimple.utils.contacts.ContactsUtils5: boolean insertOrUpdateCSipUri(android.content.Context,long,java.lang.String)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.contacts.ContactsUtils5: boolean usefulAsDigits(java.lang.CharSequence)>($r6) in <com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: boolean usefulAsDigits(java.lang.CharSequence)>
VIRTUAL edge: $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r6) in <com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $i0 = virtualinvoke r4.<java.lang.String: int length()>() in <com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)> ==> <java.lang.String: int length()>
STATIC edge: $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) in <com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
VIRTUAL edge: r4 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)> ==> <java.lang.String: java.lang.String trim()>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.utils.contacts.ContactsUtils5: java.lang.CharSequence transformToSipUri(android.content.Context,android.database.Cursor)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(8) in <com.csipsimple.utils.contacts.ContactsUtils5: void updateCSipPresence(android.content.Context,java.lang.String,com.csipsimple.api.SipManager$PresenceStatus,java.lang.String)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.utils.contacts.ContactsUtils5: int[] $SWITCH_TABLE$com$csipsimple$api$SipManager$PresenceStatus()>() in <com.csipsimple.utils.contacts.ContactsUtils5: void updateCSipPresence(android.content.Context,java.lang.String,com.csipsimple.api.SipManager$PresenceStatus,java.lang.String)> ==> <com.csipsimple.utils.contacts.ContactsUtils5: int[] $SWITCH_TABLE$com$csipsimple$api$SipManager$PresenceStatus()>
STATIC edge: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) in <com.csipsimple.utils.contacts.ContactsUtils5: void updateCSipPresence(android.content.Context,java.lang.String,com.csipsimple.api.SipManager$PresenceStatus,java.lang.String)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r11 = staticinvoke <com.csipsimple.utils.PreferencesProviderWrapper: android.content.pm.PackageInfo getCurrentPackageInfos(android.content.Context)>($r1) in <com.csipsimple.utils.contacts.ContactsUtils5: void updateCSipPresence(android.content.Context,java.lang.String,com.csipsimple.api.SipManager$PresenceStatus,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: android.content.pm.PackageInfo getCurrentPackageInfos(android.content.Context)>
STATIC edge: $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) in <com.csipsimple.utils.contacts.ContactsUtils5: void updateCSipPresence(android.content.Context,java.lang.String,com.csipsimple.api.SipManager$PresenceStatus,java.lang.String)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContactsUtils5", "Can\'t update status", r16) in <com.csipsimple.utils.contacts.ContactsUtils5: void updateCSipPresence(android.content.Context,java.lang.String,com.csipsimple.api.SipManager$PresenceStatus,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R$bool: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$16: void <init>(com.csipsimple.service.SipService$1,boolean)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$16: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void setSpeakerphoneOn(boolean)>($z0) in <com.csipsimple.service.SipService$1$16: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: void setSpeakerphoneOn(boolean)>
STATIC edge: $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.utils.contacts.ContactsUtils3: void bindContactPhoneView(android.view.View,android.content.Context,android.database.Cursor)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2130837667) in <com.csipsimple.utils.contacts.ContactsUtils3: void bindContactPhoneView(android.view.View,android.content.Context,android.database.Cursor)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r9 = virtualinvoke r0.<com.csipsimple.utils.contacts.ContactsUtils3: android.graphics.Bitmap getContactPhoto(android.content.Context,android.net.Uri,boolean,java.lang.Integer)>($r2, $r7, 0, $r8) in <com.csipsimple.utils.contacts.ContactsUtils3: void bindContactPhoneView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.utils.contacts.ContactsUtils3: android.graphics.Bitmap getContactPhoto(android.content.Context,android.net.Uri,boolean,java.lang.Integer)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.models.CallerInfo: void <init>()>() in <com.csipsimple.utils.contacts.ContactsUtils3: com.csipsimple.models.CallerInfo findCallerInfo(android.content.Context,java.lang.String)> ==> <com.csipsimple.models.CallerInfo: void <init>()>
VIRTUAL edge: $i0 = virtualinvoke $r7.<java.lang.String: int length()>() in <com.csipsimple.utils.contacts.ContactsUtils3: com.csipsimple.models.CallerInfo findCallerInfo(android.content.Context,java.lang.String)> ==> <java.lang.String: int length()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContactsUtils3", "Exception while retrieving cursor infos", r5) in <com.csipsimple.utils.contacts.ContactsUtils3: com.csipsimple.models.CallerInfo findCallerInfo(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.models.CallerInfo: void <init>()>() in <com.csipsimple.utils.contacts.ContactsUtils3: com.csipsimple.models.CallerInfo findCallerInfoForUri(android.content.Context,java.lang.String)> ==> <com.csipsimple.models.CallerInfo: void <init>()>
SPECIAL edge: specialinvoke r3.<com.csipsimple.utils.contacts.ContactsWrapper$ContactInfo: void <init>(com.csipsimple.utils.contacts.ContactsWrapper)>(r0) in <com.csipsimple.utils.contacts.ContactsUtils3: com.csipsimple.utils.contacts.ContactsWrapper$ContactInfo getContactInfo(android.content.Context,android.database.Cursor)> ==> <com.csipsimple.utils.contacts.ContactsWrapper$ContactInfo: void <init>(com.csipsimple.utils.contacts.ContactsWrapper)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("Contact3", "Failed to find contact photo") in <com.csipsimple.utils.contacts.ContactsUtils3: android.graphics.Bitmap getContactPhoto(android.content.Context,android.net.Uri,boolean,java.lang.Integer)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
STATIC edge: $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0) in <com.csipsimple.utils.contacts.ContactsUtils3: java.util.List getPhoneNumbers(android.content.Context,long,int)> ==> <java.lang.Long: java.lang.String toString(long)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.utils.contacts.ContactsWrapper$Phone: void <init>(com.csipsimple.utils.contacts.ContactsWrapper,java.lang.String,java.lang.String)>(r0, $r6, $r9) in <com.csipsimple.utils.contacts.ContactsUtils3: java.util.List getPhoneNumbers(android.content.Context,long,int)> ==> <com.csipsimple.utils.contacts.ContactsWrapper$Phone: void <init>(com.csipsimple.utils.contacts.ContactsWrapper,java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.contacts.ContactsUtils3: boolean usefulAsDigits(java.lang.CharSequence)>($r7) in <com.csipsimple.utils.contacts.ContactsUtils3: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: boolean usefulAsDigits(java.lang.CharSequence)>
VIRTUAL edge: $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r7) in <com.csipsimple.utils.contacts.ContactsUtils3: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)> ==> <java.lang.String: boolean equals(java.lang.Object)>
STATIC edge: $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s LIKE ? OR %s LIKE ?", $r8) in <com.csipsimple.utils.contacts.ContactsUtils3: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r6) in <com.csipsimple.utils.contacts.ContactsUtils3: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $i0 = virtualinvoke r5.<java.lang.String: int length()>() in <com.csipsimple.utils.contacts.ContactsUtils3: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)> ==> <java.lang.String: int length()>
STATIC edge: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) in <com.csipsimple.utils.contacts.ContactsUtils3: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <com.csipsimple.utils.contacts.ContactsUtils3: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
VIRTUAL edge: r5 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.utils.contacts.ContactsUtils3: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)> ==> <java.lang.String: java.lang.String trim()>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.utils.contacts.ContactsUtils3: java.lang.CharSequence transformToSipUri(android.content.Context,android.database.Cursor)> ==> <java.lang.String: java.lang.String trim()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.widgets.EditSipUri$1: void <init>(com.csipsimple.widgets.EditSipUri)> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.widgets.EditSipUri: void access$0(com.csipsimple.widgets.EditSipUri)>($r3) in <com.csipsimple.widgets.EditSipUri$1: void onChooseAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.widgets.EditSipUri: void access$0(com.csipsimple.widgets.EditSipUri)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.widgets.EditSipUri: com.csipsimple.utils.contacts.ContactsAutocompleteAdapter access$1(com.csipsimple.widgets.EditSipUri)>($r3) in <com.csipsimple.widgets.EditSipUri$1: void onChooseAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.widgets.EditSipUri: com.csipsimple.utils.contacts.ContactsAutocompleteAdapter access$1(com.csipsimple.widgets.EditSipUri)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.contacts.ContactsAutocompleteAdapter: void setSelectedAccount(long)>(l0) in <com.csipsimple.widgets.EditSipUri$1: void onChooseAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.contacts.ContactsAutocompleteAdapter: void setSelectedAccount(long)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Mobex: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.wizards.impl.Mobex$AccountBalance: void <init>(com.csipsimple.wizards.impl.Mobex)>(r0) in <com.csipsimple.wizards.impl.Mobex: void <init>()> ==> <com.csipsimple.wizards.impl.Mobex$AccountBalance: void <init>(com.csipsimple.wizards.impl.Mobex)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.wizards.impl.AccountBalanceHelper: void launchRequest(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Mobex: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AccountBalanceHelper: void launchRequest(com.csipsimple.api.SipProfile)>
SPECIAL edge: $r2 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Mobex: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.Mobex: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r4) in <com.csipsimple.wizards.impl.Mobex: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.csipsimple.wizards.impl.Mobex: java.lang.String getDomain()>() in <com.csipsimple.wizards.impl.Mobex: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Mobex: java.lang.String getDomain()>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>() in <com.csipsimple.wizards.impl.Mobex: boolean canSave()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.Mobex: boolean canSave()> ==> <java.lang.String: java.lang.String trim()>
VIRTUAL edge: $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("12") in <com.csipsimple.wizards.impl.Mobex: boolean canSave()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke r0.<com.csipsimple.wizards.impl.Mobex: boolean checkField(android.preference.Preference,boolean)>($r1, $z1) in <com.csipsimple.wizards.impl.Mobex: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Mobex: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Mobex: void updateAccountInfos(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Mobex: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Mobex: void updateAccountInfos(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("echo_cancellation", 1) in <com.csipsimple.wizards.impl.Mobex: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("PCMU/8000/1", "wb", "220") in <com.csipsimple.wizards.impl.Mobex: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
STATIC edge: $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1) in <com.csipsimple.ui.filters.AccountFiltersListFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)> ==> <java.lang.Long: java.lang.String toString(long)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.filters.AccountFiltersListFragment$1: void <init>(com.csipsimple.ui.filters.AccountFiltersListFragment)>(r0) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment$1: void <init>(com.csipsimple.ui.filters.AccountFiltersListFragment)>
INTERFACE edge: $r3 = interfaceinvoke $r3.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)>($r4) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment$1: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>($r1, $r2) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
VIRTUAL edge: virtualinvoke r7.<com.csipsimple.widgets.DragnDropListView: void setGrabberId(int)>(2131099697) in <com.csipsimple.ui.filters.AccountFiltersListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.widgets.DragnDropListView: void setGrabberId(int)>
VIRTUAL edge: virtualinvoke r7.<com.csipsimple.widgets.DragnDropListView: void setOnDropListener(com.csipsimple.widgets.DragnDropListView$DropListener)>($r8) in <com.csipsimple.ui.filters.AccountFiltersListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.widgets.DragnDropListView: void setOnDropListener(com.csipsimple.widgets.DragnDropListView$DropListener)>
VIRTUAL edge: virtualinvoke r7.<com.csipsimple.widgets.DragnDropListView: void setOnDropListener(com.csipsimple.widgets.DragnDropListView$DropListener)>($r8) in <com.csipsimple.ui.filters.AccountFiltersListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment$2: void drop(int,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>(r1, $r2) in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)> ==> <com.csipsimple.widgets.CSSListFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.filters.AccountFiltersListFragment: void updateCheckedItem()>() in <com.csipsimple.ui.filters.AccountFiltersListFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void updateCheckedItem()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsip_status_code$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R$drawable: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$1$11: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int)> ==> <com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$11: java.lang.Object runWithReturn()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: int sendDtmf(int,int)>($i0, $i1) in <com.csipsimple.service.SipService$1$11: java.lang.Object runWithReturn()> ==> <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,int)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.service.SipService$1$11: java.lang.Object runWithReturn()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$1$10: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int,int)> ==> <com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$10: java.lang.Object runWithReturn()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: int callXferReplace(int,int,int)>($i0, $i1, $i2) in <com.csipsimple.service.SipService$1$10: java.lang.Object runWithReturn()> ==> <com.csipsimple.pjsip.PjSipService: int callXferReplace(int,int,int)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.service.SipService$1$10: java.lang.Object runWithReturn()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.account.AccountsChooserListFragment: void setShowCallHandlerPlugins(boolean)>($z0) in <com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.account.AccountsChooserListFragment: void setShowCallHandlerPlugins(boolean)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.account.AccountsChooserListFragment: void setOnAccountClickListener(com.csipsimple.ui.account.AccountsChooserListFragment$OnAccountClickListener)>(r0) in <com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.account.AccountsChooserListFragment: void setOnAccountClickListener(com.csipsimple.ui.account.AccountsChooserListFragment$OnAccountClickListener)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$15: void <init>(com.csipsimple.service.SipService$1,boolean)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$15: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void setMicrophoneMute(boolean)>($z0) in <com.csipsimple.service.SipService$1$15: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: void setMicrophoneMute(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$14: void <init>(com.csipsimple.service.SipService$1,boolean)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$14: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void setBluetoothOn(boolean)>($z0) in <com.csipsimple.service.SipService$1$14: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: void setBluetoothOn(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$1$13: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,boolean)> ==> <com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$13: java.lang.Object runWithReturn()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: int callReinvite(int,boolean)>($i0, $z0) in <com.csipsimple.service.SipService$1$13: java.lang.Object runWithReturn()> ==> <com.csipsimple.pjsip.PjSipService: int callReinvite(int,boolean)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.service.SipService$1$13: java.lang.Object runWithReturn()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void closeOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchCloseOptionsMenu()>() in <com.actionbarsherlock.app.SherlockListActivity: void closeOptionsMenu()> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchCloseOptionsMenu()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1) in <com.actionbarsherlock.app.SherlockListActivity: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchKeyEvent(android.view.KeyEvent)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.view.MenuInflater getMenuInflater()>() in <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()> ==> <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.view.MenuInflater getMenuInflater()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void invalidateOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchConfigurationChanged(android.content.res.Configuration)>($r1) in <com.actionbarsherlock.app.SherlockListActivity: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchConfigurationChanged(android.content.res.Configuration)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: boolean onCreateOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>($r1) in <com.actionbarsherlock.app.SherlockListActivity: boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockListActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchDestroy()>() in <com.actionbarsherlock.app.SherlockListActivity: void onDestroy()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchDestroy()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r1) in <com.actionbarsherlock.app.SherlockListActivity: boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockListActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: boolean onMenuOpened(int,android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchMenuOpened(int,android.view.Menu)>($i0, $r1) in <com.actionbarsherlock.app.SherlockListActivity: boolean onMenuOpened(int,android.view.Menu)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchMenuOpened(int,android.view.Menu)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void onPanelClosed(int,android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchPanelClosed(int,android.view.Menu)>($i0, $r1) in <com.actionbarsherlock.app.SherlockListActivity: void onPanelClosed(int,android.view.Menu)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPanelClosed(int,android.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchPause()>() in <com.actionbarsherlock.app.SherlockListActivity: void onPause()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPause()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchPostCreate(android.os.Bundle)>($r1) in <com.actionbarsherlock.app.SherlockListActivity: void onPostCreate(android.os.Bundle)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchPostResume()>() in <com.actionbarsherlock.app.SherlockListActivity: void onPostResume()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPostResume()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>($r2) in <com.actionbarsherlock.app.SherlockListActivity: boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockListActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchStop()>() in <com.actionbarsherlock.app.SherlockListActivity: void onStop()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchStop()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void onTitleChanged(java.lang.CharSequence,int)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchTitleChanged(java.lang.CharSequence,int)>($r1, $i0) in <com.actionbarsherlock.app.SherlockListActivity: void onTitleChanged(java.lang.CharSequence,int)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchTitleChanged(java.lang.CharSequence,int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void openOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchOpenOptionsMenu()>() in <com.actionbarsherlock.app.SherlockListActivity: void openOptionsMenu()> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchOpenOptionsMenu()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void requestWindowFeature(long)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void setContentView(int)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void setContentView(android.view.View)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void setContentView(android.view.View)>($r1) in <com.actionbarsherlock.app.SherlockListActivity: void setContentView(android.view.View)> ==> <com.actionbarsherlock.ActionBarSherlock: void setContentView(android.view.View)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void setSupportProgress(int)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void setSupportProgressBarIndeterminate(boolean)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void setSupportProgressBarIndeterminateVisibility(boolean)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void setSupportProgressBarVisibility(boolean)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void setSupportSecondaryProgress(int)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockListActivity: void supportInvalidateOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$1$12: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int)> ==> <com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$12: java.lang.Object runWithReturn()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: int callHold(int)>($i0) in <com.csipsimple.service.SipService$1$12: java.lang.Object runWithReturn()> ==> <com.csipsimple.pjsip.PjSipService: int callHold(int)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.service.SipService$1$12: java.lang.Object runWithReturn()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition: void <init>(java.lang.String,int)>("LEFT", 0) in <com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition: void <clinit>()> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$29: void <init>(com.csipsimple.service.SipService$1,int,android.os.Bundle)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$29: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: int updateCallOptions(int,android.os.Bundle)>($i0, $r1) in <com.csipsimple.service.SipService$1$29: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: int updateCallOptions(int,android.os.Bundle)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$1$28: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int)> ==> <com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$28: java.lang.Object runWithReturn()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $l1 = virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: long getRxTxLevel(int)>($i0) in <com.csipsimple.service.SipService$1$28: java.lang.Object runWithReturn()> ==> <com.csipsimple.pjsip.PjSipService: long getRxTxLevel(int)>
STATIC edge: $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.service.SipService$1$28: java.lang.Object runWithReturn()> ==> <java.lang.Long: java.lang.Long valueOf(long)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$27: void <init>(com.csipsimple.service.SipService$1)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int conf_disconnect(int,int)>(0, 0) in <com.csipsimple.service.SipService$1$27: void doRun()> ==> <org.pjsip.pjsua.pjsua: int conf_disconnect(int,int)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: com.csipsimple.utils.NightlyUpdater access$2(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>($r2) in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$2: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: com.csipsimple.utils.NightlyUpdater access$2(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.NightlyUpdater: android.content.SharedPreferences access$2(com.csipsimple.utils.NightlyUpdater)>($r3) in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$2: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.utils.NightlyUpdater: android.content.SharedPreferences access$2(com.csipsimple.utils.NightlyUpdater)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: com.csipsimple.utils.NightlyUpdater access$2(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>($r5) in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$1: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: com.csipsimple.utils.NightlyUpdater access$2(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.utils.NightlyUpdater: java.lang.String access$0(com.csipsimple.utils.NightlyUpdater)>($r6) in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$1: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.utils.NightlyUpdater: java.lang.String access$0(com.csipsimple.utils.NightlyUpdater)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: int access$0(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>($r5) in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$1: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: int access$0(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>
STATIC edge: $r9 = staticinvoke <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: android.content.Context access$1(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>($r5) in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$1: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: android.content.Context access$1(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>
STATIC edge: $r10 = staticinvoke <com.csipsimple.utils.NightlyUpdater: java.io.File access$1(com.csipsimple.utils.NightlyUpdater)>($r6) in <com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$1: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.utils.NightlyUpdater: java.io.File access$1(com.csipsimple.utils.NightlyUpdater)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>($r4, $r1) in <com.csipsimple.utils.Ringer: android.media.Ringtone getRingtone(java.lang.String,java.lang.String)> ==> <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Ringer", $r1) in <com.csipsimple.utils.Ringer: android.media.Ringtone getRingtone(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.Ringer$RingerThread: void interrupt()>() in <com.csipsimple.utils.Ringer: void stopRinger()> ==> <java.lang.Thread: void interrupt()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.Ringer$VibratorThread: void interrupt()>() in <com.csipsimple.utils.Ringer: void stopVibrator()> ==> <java.lang.Thread: void interrupt()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Ringer", "==> ring() called...") in <com.csipsimple.utils.Ringer: void ring(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: $r6 = specialinvoke r0.<com.csipsimple.utils.Ringer: android.media.Ringtone getRingtone(java.lang.String,java.lang.String)>($r1, $r2) in <com.csipsimple.utils.Ringer: void ring(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Ringer: android.media.Ringtone getRingtone(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.utils.Ringer$VibratorThread: void <init>(com.csipsimple.utils.Ringer,com.csipsimple.utils.Ringer$VibratorThread)>(r0, null) in <com.csipsimple.utils.Ringer: void ring(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Ringer$VibratorThread: void <init>(com.csipsimple.utils.Ringer,com.csipsimple.utils.Ringer$VibratorThread)>
VIRTUAL edge: virtualinvoke $r8.<com.csipsimple.utils.Ringer$VibratorThread: void start()>() in <com.csipsimple.utils.Ringer: void ring(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Ringer$VibratorThread: void run()>
SPECIAL edge: specialinvoke $r10.<com.csipsimple.utils.Ringer$RingerThread: void <init>(com.csipsimple.utils.Ringer,com.csipsimple.utils.Ringer$RingerThread)>(r0, null) in <com.csipsimple.utils.Ringer: void ring(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Ringer$RingerThread: void <init>(com.csipsimple.utils.Ringer,com.csipsimple.utils.Ringer$RingerThread)>
VIRTUAL edge: virtualinvoke $r10.<com.csipsimple.utils.Ringer$RingerThread: void start()>() in <com.csipsimple.utils.Ringer: void ring(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Ringer$RingerThread: void run()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.Ringer: void stopRing()>() in <com.csipsimple.utils.Ringer: void updateRingerMode()> ==> <com.csipsimple.utils.Ringer: void stopRing()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.utils.Ringer$VibratorThread: void <init>(com.csipsimple.utils.Ringer,com.csipsimple.utils.Ringer$VibratorThread)>(r0, null) in <com.csipsimple.utils.Ringer: void updateRingerMode()> ==> <com.csipsimple.utils.Ringer$VibratorThread: void <init>(com.csipsimple.utils.Ringer,com.csipsimple.utils.Ringer$VibratorThread)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.utils.Ringer$VibratorThread: void start()>() in <com.csipsimple.utils.Ringer: void updateRingerMode()> ==> <com.csipsimple.utils.Ringer$VibratorThread: void run()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.Ringer: void stopRinger()>() in <com.csipsimple.utils.Ringer: void updateRingerMode()> ==> <com.csipsimple.utils.Ringer: void stopRinger()>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.utils.Ringer$RingerThread: void <init>(com.csipsimple.utils.Ringer,com.csipsimple.utils.Ringer$RingerThread)>(r0, null) in <com.csipsimple.utils.Ringer: void updateRingerMode()> ==> <com.csipsimple.utils.Ringer$RingerThread: void <init>(com.csipsimple.utils.Ringer,com.csipsimple.utils.Ringer$RingerThread)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Ringer", "Starting ringer...") in <com.csipsimple.utils.Ringer: void updateRingerMode()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.utils.Ringer$RingerThread: void start()>() in <com.csipsimple.utils.Ringer: void updateRingerMode()> ==> <com.csipsimple.utils.Ringer$RingerThread: void run()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_state$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.pjsip.NativeLibManager: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("NativeLibMgr", "Not possible to find self name", r1) in <com.csipsimple.pjsip.NativeLibManager: boolean isDebuggableApp(android.content.Context)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setVisibility(int)>($i0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void setVisibility(int)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void setVisibility(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: void <init>(int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r1.<org.pjsip.pjsua.pjsua_call_info: void <init>()>() in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int startDialtoneGenerator()> ==> <org.pjsip.pjsua.pjsua_call_info: void <init>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int call_get_info(int,org.pjsip.pjsua.pjsua_call_info)>($i0, r1) in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int startDialtoneGenerator()> ==> <org.pjsip.pjsua.pjsua: int call_get_info(int,org.pjsip.pjsua.pjsua_call_info)>
STATIC edge: $r4 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_pool_t pjsua_pool_create(java.lang.String,long,long)>($r3, 512L, 512L) in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int startDialtoneGenerator()> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_pool_t pjsua_pool_create(java.lang.String,long,long)>
STATIC edge: $r5 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>("dialtoneGen") in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int startDialtoneGenerator()> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
SPECIAL edge: specialinvoke $r7.<org.pjsip.pjsua.pjmedia_port: void <init>()>() in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int startDialtoneGenerator()> ==> <org.pjsip.pjsua.pjmedia_port: void <init>()>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int pjmedia_tonegen_create2(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pj_str_t,long,long,long,long,long,org.pjsip.pjsua.pjmedia_port)>($r4, $r5, 8000L, 1L, 160L, 16L, 0L, $r7) in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int startDialtoneGenerator()> ==> <org.pjsip.pjsua.pjsua: int pjmedia_tonegen_create2(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pj_str_t,long,long,long,long,long,org.pjsip.pjsua.pjmedia_port)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.pjsip.PjStreamDialtoneGenerator: void stopDialtoneGenerator()>() in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int startDialtoneGenerator()> ==> <com.csipsimple.pjsip.PjStreamDialtoneGenerator: void stopDialtoneGenerator()>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int conf_add_port(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjmedia_port,int[])>($r4, $r7, $r6) in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int startDialtoneGenerator()> ==> <org.pjsip.pjsua.pjsua: int conf_add_port(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjmedia_port,int[])>
VIRTUAL edge: $i1 = virtualinvoke r1.<org.pjsip.pjsua.pjsua_call_info: int getConf_slot()>() in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int startDialtoneGenerator()> ==> <org.pjsip.pjsua.pjsua_call_info: int getConf_slot()>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int conf_connect(int,int)>($i0, $i1) in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int startDialtoneGenerator()> ==> <org.pjsip.pjsua.pjsua: int conf_connect(int,int)>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.pjsip.PjStreamDialtoneGenerator: int startDialtoneGenerator()>() in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int sendPjMediaDialTone(java.lang.String)> ==> <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int startDialtoneGenerator()>
VIRTUAL edge: $i2 = virtualinvoke $r1.<java.lang.String: int length()>() in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int sendPjMediaDialTone(java.lang.String)> ==> <java.lang.String: int length()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("PjStreamDialtoneGenerator", $r4) in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int sendPjMediaDialTone(java.lang.String)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r6.<org.pjsip.pjsua.pjmedia_tone_digit: void <init>()>() in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int sendPjMediaDialTone(java.lang.String)> ==> <org.pjsip.pjsua.pjmedia_tone_digit: void <init>()>
VIRTUAL edge: virtualinvoke $r6.<org.pjsip.pjsua.pjmedia_tone_digit: void setVolume(short)>(0) in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int sendPjMediaDialTone(java.lang.String)> ==> <org.pjsip.pjsua.pjmedia_tone_digit: void setVolume(short)>
VIRTUAL edge: virtualinvoke $r6.<org.pjsip.pjsua.pjmedia_tone_digit: void setOn_msec(short)>(100) in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int sendPjMediaDialTone(java.lang.String)> ==> <org.pjsip.pjsua.pjmedia_tone_digit: void setOn_msec(short)>
VIRTUAL edge: virtualinvoke $r6.<org.pjsip.pjsua.pjmedia_tone_digit: void setOff_msec(short)>(200) in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int sendPjMediaDialTone(java.lang.String)> ==> <org.pjsip.pjsua.pjmedia_tone_digit: void setOff_msec(short)>
VIRTUAL edge: virtualinvoke $r6.<org.pjsip.pjsua.pjmedia_tone_digit: void setDigit(char)>($c3) in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int sendPjMediaDialTone(java.lang.String)> ==> <org.pjsip.pjsua.pjmedia_tone_digit: void setDigit(char)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int pjmedia_tonegen_play_digits(org.pjsip.pjsua.pjmedia_port,long,org.pjsip.pjsua.pjmedia_tone_digit[],long)>($r3, 1L, r2, 0L) in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int sendPjMediaDialTone(java.lang.String)> ==> <org.pjsip.pjsua.pjsua: int pjmedia_tonegen_play_digits(org.pjsip.pjsua.pjmedia_port,long,org.pjsip.pjsua.pjmedia_tone_digit[],long)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int conf_remove_port(int)>($i0) in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: void stopDialtoneGenerator()> ==> <org.pjsip.pjsua.pjsua: int conf_remove_port(int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void pj_pool_release(org.pjsip.pjsua.pj_pool_t)>($r1) in <com.csipsimple.pjsip.PjStreamDialtoneGenerator: void stopDialtoneGenerator()> ==> <org.pjsip.pjsua.pjsua: void pj_pool_release(org.pjsip.pjsua.pj_pool_t)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.utils.Columns$Type: void <init>(java.lang.String,int)>("STRING", 0) in <com.csipsimple.utils.Columns$Type: void <clinit>()> ==> <com.csipsimple.utils.Columns$Type: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <com.csipsimple.utils.Columns$Type: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$22: void <init>(com.csipsimple.service.SipService$1,java.lang.String,int,int)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$22: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: void playWaveFile(java.lang.String,int,int)>($r1, $i0, $i1) in <com.csipsimple.service.SipService$1$22: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: void playWaveFile(java.lang.String,int,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$21: void <init>(com.csipsimple.service.SipService$1,int)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$21: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void stopRecording(int)>($i0) in <com.csipsimple.service.SipService$1$21: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: void stopRecording(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$20: void <init>(com.csipsimple.service.SipService$1,int)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$20: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void startRecording(int)>($i0) in <com.csipsimple.service.SipService$1$20: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: void startRecording(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Scarlet: void <init>()> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Scarlet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Scarlet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Scarlet: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Scarlet: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Scarlet: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.Scarlet: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Scarlet: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Scarlet: void hidePreference(java.lang.String,java.lang.String)>(null, $r4) in <com.csipsimple.wizards.impl.Scarlet: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void hidePreference(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Scarlet: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Scarlet: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$26: void <init>(com.csipsimple.service.SipService$1)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int conf_connect(int,int)>(0, 0) in <com.csipsimple.service.SipService$1$26: void doRun()> ==> <org.pjsip.pjsua.pjsua: int conf_connect(int,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$1$25: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int)> ==> <com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.pjsip.PjSipCalls: java.lang.String dumpCallInfo(int)>($i0) in <com.csipsimple.service.SipService$1$25: java.lang.Object runWithReturn()> ==> <com.csipsimple.pjsip.PjSipCalls: java.lang.String dumpCallInfo(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", $r1) in <com.csipsimple.service.SipService$1$25: java.lang.Object runWithReturn()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$24: void <init>(com.csipsimple.service.SipService$1,int)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$24: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void zrtpSASVerified(int)>($i0) in <com.csipsimple.service.SipService$1$24: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: void zrtpSASVerified(int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.pjsip.UAStateReceiver: void updateZrtpInfos(int)>($i0) in <com.csipsimple.service.SipService$1$24: void doRun()> ==> <com.csipsimple.pjsip.UAStateReceiver: void updateZrtpInfos(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$23: void <init>(com.csipsimple.service.SipService$1,int,java.lang.String,long)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService$1: com.csipsimple.service.SipService access$0(com.csipsimple.service.SipService$1)>($r1) in <com.csipsimple.service.SipService$1$23: void doRun()> ==> <com.csipsimple.service.SipService$1: com.csipsimple.service.SipService access$0(com.csipsimple.service.SipService$1)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipManager$PresenceStatus: com.csipsimple.api.SipManager$PresenceStatus[] values()>() in <com.csipsimple.service.SipService$1$23: void doRun()> ==> <com.csipsimple.api.SipManager$PresenceStatus: com.csipsimple.api.SipManager$PresenceStatus[] values()>
STATIC edge: staticinvoke <com.csipsimple.service.SipService: void access$5(com.csipsimple.service.SipService,com.csipsimple.api.SipManager$PresenceStatus)>($r2, $r4) in <com.csipsimple.service.SipService$1$23: void doRun()> ==> <com.csipsimple.service.SipService: void access$5(com.csipsimple.service.SipService,com.csipsimple.api.SipManager$PresenceStatus)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$23: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.api.SipManager$PresenceStatus access$6(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$1$23: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.api.SipManager$PresenceStatus access$6(com.csipsimple.service.SipService)>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.pjsip.PjSipService: void setPresence(com.csipsimple.api.SipManager$PresenceStatus,java.lang.String,long)>($r4, $r6, $l0) in <com.csipsimple.service.SipService$1$23: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: void setPresence(com.csipsimple.api.SipManager$PresenceStatus,java.lang.String,long)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_transport_config: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_transport_config: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pj_str_t getBound_addr()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pj_str_t getPublic_addr()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pj_qos_type: org.pjsip.pjsua.pj_qos_type swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pj_qos_type getQos_type()> ==> <org.pjsip.pjsua.pj_qos_type: org.pjsip.pjsua.pj_qos_type swigToEnum(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.MaxScaleImageView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.csipsimple.widgets.MaxScaleImageView: void <init>(android.content.Context)> ==> <com.csipsimple.widgets.MaxScaleImageView: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.MaxScaleImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0) in <com.csipsimple.widgets.MaxScaleImageView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.MaxScaleImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.MaxScaleImageView: void updateScale()>() in <com.csipsimple.widgets.MaxScaleImageView: void onLayout(boolean,int,int,int,int)> ==> <com.csipsimple.widgets.MaxScaleImageView: void updateScale()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.MaxScaleImageView: void updateScale()>() in <com.csipsimple.widgets.MaxScaleImageView: void setImageBitmap(android.graphics.Bitmap)> ==> <com.csipsimple.widgets.MaxScaleImageView: void updateScale()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.MaxScaleImageView: void updateScale()>() in <com.csipsimple.widgets.MaxScaleImageView: void setImageDrawable(android.graphics.drawable.Drawable)> ==> <com.csipsimple.widgets.MaxScaleImageView: void updateScale()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.MaxScaleImageView: void updateScale()>() in <com.csipsimple.widgets.MaxScaleImageView: void setImageMaxScale(float)> ==> <com.csipsimple.widgets.MaxScaleImageView: void updateScale()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.MaxScaleImageView: void updateScale()>() in <com.csipsimple.widgets.MaxScaleImageView: void setImageResource(int)> ==> <com.csipsimple.widgets.MaxScaleImageView: void updateScale()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pj_time_val: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pj_time_val: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pj_time_val: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pj_time_val: void delete()>() in <org.pjsip.pjsua.pj_time_val: void finalize()> ==> <org.pjsip.pjsua.pj_time_val: void delete()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.CapitalizingTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0) in <com.actionbarsherlock.internal.widget.CapitalizingTextView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.widget.CapitalizingTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.actionbarsherlock.internal.widget.CapitalizingTextView: void setTextCompat(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.account.AccountsEditListFragment$1: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.ui.account.AccountsEditListFragment: void access$1(com.csipsimple.ui.account.AccountsEditListFragment)>($r2) in <com.csipsimple.ui.account.AccountsEditListFragment$1: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void access$1(com.csipsimple.ui.account.AccountsEditListFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.account.AccountsEditListFragment$2: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r4.<com.csipsimple.ui.account.AccountsEditListAdapter: void toggleDraggable()>() in <com.csipsimple.ui.account.AccountsEditListFragment$2: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.account.AccountsEditListAdapter: void toggleDraggable()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref getAuth_pref()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsua_call_hold_type: org.pjsip.pjsua.pjsua_call_hold_type swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_call_hold_type getCall_hold_type()> ==> <org.pjsip.pjsua.pjsua_call_hold_type: org.pjsip.pjsua.pjsua_call_hold_type swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getContact_params()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getContact_uri_params()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getForce_contact()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsua_ice_config_use: org.pjsip.pjsua.pjsua_ice_config_use swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_ice_config_use getIce_cfg_use()> ==> <org.pjsip.pjsua.pjsua_ice_config_use: org.pjsip.pjsua.pjsua_ice_config_use swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getKa_data()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsua_stun_use: org.pjsip.pjsua.pjsua_stun_use swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_stun_use getMedia_stun_use()> ==> <org.pjsip.pjsua.pjsua_stun_use: org.pjsip.pjsua.pjsua_stun_use swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getPidf_tuple_id()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt getPublish_opt()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr getReg_hdr_list()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsua_100rel_use: org.pjsip.pjsua.pjsua_100rel_use swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_100rel_use getRequire_100rel()> ==> <org.pjsip.pjsua.pjsua_100rel_use: org.pjsip.pjsua.pjsua_100rel_use swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getRfc5626_instance_id()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getRfc5626_reg_id()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsua_stun_use: org.pjsip.pjsua.pjsua_stun_use swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_stun_use getSip_stun_use()> ==> <org.pjsip.pjsua.pjsua_stun_use: org.pjsip.pjsua.pjsua_stun_use swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr getSub_hdr_list()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjsip_timer_setting: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsip_timer_setting getTimer_setting()> ==> <org.pjsip.pjsua.pjsip_timer_setting: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsua_turn_config_use: org.pjsip.pjsua.pjsua_turn_config_use swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_turn_config_use getTurn_cfg_use()> ==> <org.pjsip.pjsua.pjsua_turn_config_use: org.pjsip.pjsua.pjsua_turn_config_use swigToEnum(int)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjmedia_srtp_use: org.pjsip.pjsua.pjmedia_srtp_use swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjmedia_srtp_use getUse_srtp()> ==> <org.pjsip.pjsua.pjmedia_srtp_use: org.pjsip.pjsua.pjmedia_srtp_use swigToEnum(int)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsua_sip_timer_use: org.pjsip.pjsua.pjsua_sip_timer_use swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_sip_timer_use getUse_timer()> ==> <org.pjsip.pjsua.pjsua_sip_timer_use: org.pjsip.pjsua.pjsua_sip_timer_use swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index getVid_cap_dev()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index getVid_rend_dev()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config getVid_stream_rc_cfg()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setAuth_pref(org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_call_hold_type: int swigValue()>() in <org.pjsip.pjsua.pjsua_acc_config: void setCall_hold_type(org.pjsip.pjsua.pjsua_call_hold_type)> ==> <org.pjsip.pjsua.pjsua_call_hold_type: int swigValue()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setContact_params(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setContact_uri_params(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsip_cred_info: long getCPtr(org.pjsip.pjsua.pjsip_cred_info)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setCred_info(org.pjsip.pjsua.pjsip_cred_info)> ==> <org.pjsip.pjsua.pjsip_cred_info: long getCPtr(org.pjsip.pjsua.pjsip_cred_info)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_ice_config: long getCPtr(org.pjsip.pjsua.pjsua_ice_config)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setIce_cfg(org.pjsip.pjsua.pjsua_ice_config)> ==> <org.pjsip.pjsua.pjsua_ice_config: long getCPtr(org.pjsip.pjsua.pjsua_ice_config)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setKa_data(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setPublish_opt(org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setReg_hdr_list(org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_100rel_use: int swigValue()>() in <org.pjsip.pjsua.pjsua_acc_config: void setRequire_100rel(org.pjsip.pjsua.pjsua_100rel_use)> ==> <org.pjsip.pjsua.pjsua_100rel_use: int swigValue()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_transport_config: long getCPtr(org.pjsip.pjsua.pjsua_transport_config)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setRtp_cfg(org.pjsip.pjsua.pjsua_transport_config)> ==> <org.pjsip.pjsua.pjsua_transport_config: long getCPtr(org.pjsip.pjsua.pjsua_transport_config)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setSub_hdr_list(org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsip_timer_setting: long getCPtr(org.pjsip.pjsua.pjsip_timer_setting)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setTimer_setting(org.pjsip.pjsua.pjsip_timer_setting)> ==> <org.pjsip.pjsua.pjsip_timer_setting: long getCPtr(org.pjsip.pjsua.pjsip_timer_setting)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_turn_config: long getCPtr(org.pjsip.pjsua.pjsua_turn_config)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setTurn_cfg(org.pjsip.pjsua.pjsua_turn_config)> ==> <org.pjsip.pjsua.pjsua_turn_config: long getCPtr(org.pjsip.pjsua.pjsua_turn_config)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjmedia_srtp_use: int swigValue()>() in <org.pjsip.pjsua.pjsua_acc_config: void setUse_srtp(org.pjsip.pjsua.pjmedia_srtp_use)> ==> <org.pjsip.pjsua.pjmedia_srtp_use: int swigValue()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_sip_timer_use: int swigValue()>() in <org.pjsip.pjsua.pjsua_acc_config: void setUse_timer(org.pjsip.pjsua.pjsua_sip_timer_use)> ==> <org.pjsip.pjsua.pjsua_sip_timer_use: int swigValue()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setVid_cap_dev(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setVid_rend_dev(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config)>($r1) in <org.pjsip.pjsua.pjsua_acc_config: void setVid_stream_rc_cfg(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.account.AccountsEditListFragment$3: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r8 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getConfigFolder(android.content.Context)>($r7) in <com.csipsimple.ui.account.AccountsEditListFragment$3: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.utils.PreferencesWrapper: java.io.File getConfigFolder(android.content.Context)>
SPECIAL edge: specialinvoke $r11.<com.csipsimple.ui.account.AccountsEditListFragment$3$1: void <init>(com.csipsimple.ui.account.AccountsEditListFragment$3,java.io.File,java.lang.String[])>(r0, $r8, $r9) in <com.csipsimple.ui.account.AccountsEditListFragment$3: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.account.AccountsEditListFragment$3$1: void <init>(com.csipsimple.ui.account.AccountsEditListFragment$3,java.io.File,java.lang.String[])>
VIRTUAL edge: virtualinvoke r2.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>($r9, $r11) in <com.csipsimple.ui.account.AccountsEditListFragment$3: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.account.AccountsEditListFragment$3$1: void onClick(android.content.DialogInterface,int)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.ui.account.AccountsEditListFragment: java.lang.String access$0()>() in <com.csipsimple.ui.account.AccountsEditListFragment$4: void drop(int,int)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: java.lang.String access$0()>
STATIC edge: r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4) in <com.csipsimple.ui.account.AccountsEditListFragment$4: void drop(int,int)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.account.AccountsEditListFragment$4: void drop(int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int)>("PJSUA_CALL_VID_STRM_NO_OP", 0) in <org.pjsip.pjsua.pjsua_call_vid_strm_op: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_call_vid_strm_op$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_call_vid_strm_op$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_call_vid_strm_op$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_call_vid_strm_op$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_call_vid_strm_op$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_call_vid_strm_op$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_vid_strm_op)> ==> <org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_vid_strm_op)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_call_vid_strm_op$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_vid_strm_op)> ==> <org.pjsip.pjsua.pjsua_call_vid_strm_op$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsua_call_vid_strm_op: org.pjsip.pjsua.pjsua_call_vid_strm_op swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter)>($r1) in <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter,com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter$AccListItemViewTag)> ==> <com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void <init>(com.csipsimple.ui.prefs.cupcake.MainPrefs,java.lang.String,java.lang.String,int,android.content.Intent)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_vid_preview_param: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_vid_preview_param: void <init>()> ==> <org.pjsip.pjsua.pjsua_vid_preview_param: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_vid_preview_param: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_vid_preview_param: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_vid_preview_param: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_vid_preview_param: void delete()>() in <org.pjsip.pjsua.pjsua_vid_preview_param: void finalize()> ==> <org.pjsip.pjsua.pjsua_vid_preview_param: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_vid_preview_param: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index getRend_id()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>($r1) in <org.pjsip.pjsua.pjsua_vid_preview_param: void setRend_id(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void <init>(android.content.Context,android.util.AttributeSet)>
VIRTUAL edge: $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r4, "onPopulateAccessibilityEvent", $r5) in <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r3, r0, $r2) in <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: boolean dispatchHoverEvent(android.view.MotionEvent)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void supportOnPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1) in <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void supportOnPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void supportOnPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1) in <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void supportOnPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r2, r0, $r3) in <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void supportOnPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.SmileyParser$Smileys: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.Threading: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("quit", $r2) in <com.csipsimple.utils.Threading: void stopHandlerThread(android.os.HandlerThread,boolean)> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info: void <init>()>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int,int)>("PJSUA_VID_REQ_KEYFRAME_SIP_INFO", 0, $i0) in <org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_vid_req_keyframe_method$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_vid_req_keyframe_method$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_vid_req_keyframe_method$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_vid_req_keyframe_method$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_vid_req_keyframe_method$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_vid_req_keyframe_method$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_vid_req_keyframe_method)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_vid_req_keyframe_method)> ==> <org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_vid_req_keyframe_method$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_vid_req_keyframe_method)> ==> <org.pjsip.pjsua.pjsua_vid_req_keyframe_method$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsua_vid_req_keyframe_method: org.pjsip.pjsua.pjsua_vid_req_keyframe_method swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy: void <init>(com.actionbarsherlock.widget.ShareActionProvider)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy: void <init>(com.actionbarsherlock.widget.ShareActionProvider)>($r1) in <com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy: void <init>(com.actionbarsherlock.widget.ShareActionProvider,com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy)> ==> <com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy: void <init>(com.actionbarsherlock.widget.ShareActionProvider)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.widget.ShareActionProvider: com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener access$2(com.actionbarsherlock.widget.ShareActionProvider)>($r3) in <com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy: boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent)> ==> <com.actionbarsherlock.widget.ShareActionProvider: com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener access$2(com.actionbarsherlock.widget.ShareActionProvider)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.AlternateUnlocker: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.csipsimple.widgets.AlternateUnlocker: void <init>(android.content.Context)> ==> <com.csipsimple.widgets.AlternateUnlocker: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.AlternateUnlocker: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0) in <com.csipsimple.widgets.AlternateUnlocker: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.AlternateUnlocker: void <init>(android.content.Context,android.util.AttributeSet,int)>
VIRTUAL edge: virtualinvoke $r4.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.csipsimple.widgets.AlternateUnlocker: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.widgets.AlternateUnlocker: void onClick(android.view.View)>
VIRTUAL edge: virtualinvoke $r4.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.csipsimple.widgets.AlternateUnlocker: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.widgets.AlternateUnlocker: void setOnLeftRightListener(com.csipsimple.widgets.IOnLeftRightChoice)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.view.MenuInflater: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r4.<com.actionbarsherlock.view.MenuInflater$MenuState: void <init>(com.actionbarsherlock.view.MenuInflater,com.actionbarsherlock.view.Menu)>(r0, $r3) in <com.actionbarsherlock.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.view.MenuInflater$MenuState: void <init>(com.actionbarsherlock.view.MenuInflater,com.actionbarsherlock.view.Menu)>
VIRTUAL edge: $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("menu") in <com.actionbarsherlock.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>(r5) in <com.actionbarsherlock.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke r4.<com.actionbarsherlock.view.MenuInflater$MenuState: void readGroup(android.util.AttributeSet)>($r2) in <com.actionbarsherlock.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.view.MenuInflater$MenuState: void readGroup(android.util.AttributeSet)>
VIRTUAL edge: virtualinvoke r4.<com.actionbarsherlock.view.MenuInflater$MenuState: void readItem(android.util.AttributeSet)>($r2) in <com.actionbarsherlock.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.view.MenuInflater$MenuState: void readItem(android.util.AttributeSet)>
VIRTUAL edge: $r9 = virtualinvoke r4.<com.actionbarsherlock.view.MenuInflater$MenuState: com.actionbarsherlock.view.SubMenu addSubMenuItem()>() in <com.actionbarsherlock.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.view.MenuInflater$MenuState: com.actionbarsherlock.view.SubMenu addSubMenuItem()>
VIRTUAL edge: virtualinvoke r4.<com.actionbarsherlock.view.MenuInflater$MenuState: void resetGroup()>() in <com.actionbarsherlock.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.view.MenuInflater$MenuState: void resetGroup()>
VIRTUAL edge: $z2 = virtualinvoke r4.<com.actionbarsherlock.view.MenuInflater$MenuState: boolean hasAddedItem()>() in <com.actionbarsherlock.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.view.MenuInflater$MenuState: boolean hasAddedItem()>
STATIC edge: $r10 = staticinvoke <com.actionbarsherlock.view.MenuInflater$MenuState: com.actionbarsherlock.view.ActionProvider access$0(com.actionbarsherlock.view.MenuInflater$MenuState)>(r4) in <com.actionbarsherlock.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.view.MenuInflater$MenuState: com.actionbarsherlock.view.ActionProvider access$0(com.actionbarsherlock.view.MenuInflater$MenuState)>
VIRTUAL edge: $z2 = virtualinvoke $r10.<com.actionbarsherlock.view.ActionProvider: boolean hasSubMenu()>() in <com.actionbarsherlock.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.view.ActionProvider: boolean hasSubMenu()>
VIRTUAL edge: virtualinvoke r4.<com.actionbarsherlock.view.MenuInflater$MenuState: void addItem()>() in <com.actionbarsherlock.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.view.MenuInflater$MenuState: void addItem()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu)>($r5, $r6, $r1) in <com.actionbarsherlock.view.MenuInflater: void inflate(int,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu)>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_codec_info: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_codec_info: void <init>()> ==> <org.pjsip.pjsua.pjsua_codec_info: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_codec_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_codec_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_codec_info: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_codec_info: void delete()>() in <org.pjsip.pjsua.pjsua_codec_info: void finalize()> ==> <org.pjsip.pjsua.pjsua_codec_info: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_codec_info: org.pjsip.pjsua.pj_str_t getCodec_id()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_codec_info: org.pjsip.pjsua.pj_str_t getDesc()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_codec_info: void setCodec_id(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_codec_info: void setDesc(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Vegatel: void <init>()> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Vegatel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Vegatel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Vegatel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Vegatel: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Sbohempevnalinko: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Sbohempevnalinko: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Sbohempevnalinko: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void <init>(int,int,int,int,int,int)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r8 = staticinvoke <org.webrtc.videoengine.ViEAndroidGLES20: java.lang.String access$0()>() in <org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)> ==> <org.webrtc.videoengine.ViEAndroidGLES20: java.lang.String access$0()>
STATIC edge: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) in <org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("  %s: %d\n", $r9) in <org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r4 = staticinvoke <org.webrtc.videoengine.ViEAndroidGLES20: java.lang.String access$0()>() in <org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])> ==> <org.webrtc.videoengine.ViEAndroidGLES20: java.lang.String access$0()>
STATIC edge: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) in <org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d configurations", $r5) in <org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
SPECIAL edge: specialinvoke r0.<org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>($r1, $r2, $r8) in <org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])> ==> <org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>
VIRTUAL edge: $r4 = virtualinvoke r0.<org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])>($r1, $r2, r7) in <org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)> ==> <org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])>
SPECIAL edge: $i2 = specialinvoke r0.<org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)>($r1, $r2, r4, 12325, 0) in <org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])> ==> <org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsip_cred_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsip_cred_info: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsip_cred_info: org.pjsip.pjsua.pj_str_t getData()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsip_cred_info: org.pjsip.pjsua.pj_str_t getRealm()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsip_cred_info: org.pjsip.pjsua.pj_str_t getScheme()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsip_cred_info: org.pjsip.pjsua.pj_str_t getUsername()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsip_cred_info: void setScheme(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_call_flag$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_call_flag$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_call_flag$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_call_flag$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_flag)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_flag)> ==> <org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_call_flag$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_flag)> ==> <org.pjsip.pjsua.pjsua_call_flag$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsua_call_flag: org.pjsip.pjsua.pjsua_call_flag swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.favorites.FavAdapter$1: void <init>(com.csipsimple.ui.favorites.FavAdapter)>(r0) in <com.csipsimple.ui.favorites.FavAdapter: void <init>(android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.favorites.FavAdapter$1: void <init>(com.csipsimple.ui.favorites.FavAdapter)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.favorites.FavAdapter$2: void <init>(com.csipsimple.ui.favorites.FavAdapter)>(r0) in <com.csipsimple.ui.favorites.FavAdapter: void <init>(android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.favorites.FavAdapter$2: void <init>(com.csipsimple.ui.favorites.FavAdapter)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.favorites.FavAdapter: void showDialogForGroupSelection(android.content.Context,java.lang.Long,java.lang.String)>($r1, $r2, $r3) in <com.csipsimple.ui.favorites.FavAdapter: void access$1(com.csipsimple.ui.favorites.FavAdapter,android.content.Context,java.lang.Long,java.lang.String)> ==> <com.csipsimple.ui.favorites.FavAdapter: void showDialogForGroupSelection(android.content.Context,java.lang.Long,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.favorites.FavAdapter: void showDialogForSipData(android.content.Context,java.lang.Long,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4) in <com.csipsimple.ui.favorites.FavAdapter: void access$2(com.csipsimple.ui.favorites.FavAdapter,android.content.Context,java.lang.Long,java.lang.String,java.lang.String)> ==> <com.csipsimple.ui.favorites.FavAdapter: void showDialogForSipData(android.content.Context,java.lang.Long,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.favorites.FavAdapter: void applyNumbersToCSip(java.lang.String,int,java.lang.String,long)>($r1, $i0, $r2, $l1) in <com.csipsimple.ui.favorites.FavAdapter: void access$3(com.csipsimple.ui.favorites.FavAdapter,java.lang.String,int,java.lang.String,long)> ==> <com.csipsimple.ui.favorites.FavAdapter: void applyNumbersToCSip(java.lang.String,int,java.lang.String,long)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("FavAdapter", $r5) in <com.csipsimple.ui.favorites.FavAdapter: void applyNumbersToCSip(java.lang.String,int,java.lang.String,long)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.ui.favorites.FavAdapter: void applyNumbersToCSip(java.lang.String,int,java.lang.String,long)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
VIRTUAL edge: $r5 = virtualinvoke $r11.<com.csipsimple.utils.contacts.ContactsWrapper$Phone: java.lang.String getNumber()>() in <com.csipsimple.ui.favorites.FavAdapter: void applyNumbersToCSip(java.lang.String,int,java.lang.String,long)> ==> <com.csipsimple.utils.contacts.ContactsWrapper$Phone: java.lang.String getNumber()>
VIRTUAL edge: $z0 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("@") in <com.csipsimple.ui.favorites.FavAdapter: void applyNumbersToCSip(java.lang.String,int,java.lang.String,long)> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)>($r7, $l1, $r5) in <com.csipsimple.ui.favorites.FavAdapter: void applyNumbersToCSip(java.lang.String,int,java.lang.String,long)> ==> <com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)>
STATIC edge: $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1) in <com.csipsimple.ui.favorites.FavAdapter: void applyNumbersToCSip(java.lang.String,int,java.lang.String,long)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("FavAdapter", "Error while looping on contacts", r3) in <com.csipsimple.ui.favorites.FavAdapter: void applyNumbersToCSip(java.lang.String,int,java.lang.String,long)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.ui.favorites.FavAdapter: void showDialogForGroupSelection(android.content.Context,java.lang.Long,java.lang.String)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
VIRTUAL edge: $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3) in <com.csipsimple.ui.favorites.FavAdapter: void showDialogForGroupSelection(android.content.Context,java.lang.Long,java.lang.String)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.ui.favorites.FavAdapter$3: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.database.Cursor,android.content.Context,java.lang.Long)>(r0, $r6, $r1, $r2) in <com.csipsimple.ui.favorites.FavAdapter: void showDialogForGroupSelection(android.content.Context,java.lang.Long,java.lang.String)> ==> <com.csipsimple.ui.favorites.FavAdapter$3: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.database.Cursor,android.content.Context,java.lang.Long)>
VIRTUAL edge: virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener)>($r6, i0, "title", $r8) in <com.csipsimple.ui.favorites.FavAdapter: void showDialogForGroupSelection(android.content.Context,java.lang.Long,java.lang.String)> ==> <com.csipsimple.ui.favorites.FavAdapter$3: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.ui.favorites.FavAdapter$4: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.database.Cursor)>(r0, $r6) in <com.csipsimple.ui.favorites.FavAdapter: void showDialogForGroupSelection(android.content.Context,java.lang.Long,java.lang.String)> ==> <com.csipsimple.ui.favorites.FavAdapter$4: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.database.Cursor)>
VIRTUAL edge: virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>(2131427784, $r9) in <com.csipsimple.ui.favorites.FavAdapter: void showDialogForGroupSelection(android.content.Context,java.lang.Long,java.lang.String)> ==> <com.csipsimple.ui.favorites.FavAdapter$4: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r10.<com.csipsimple.ui.favorites.FavAdapter$5: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.database.Cursor)>(r0, $r6) in <com.csipsimple.ui.favorites.FavAdapter: void showDialogForGroupSelection(android.content.Context,java.lang.Long,java.lang.String)> ==> <com.csipsimple.ui.favorites.FavAdapter$5: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.database.Cursor)>
VIRTUAL edge: virtualinvoke r4.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>($r10) in <com.csipsimple.ui.favorites.FavAdapter: void showDialogForGroupSelection(android.content.Context,java.lang.Long,java.lang.String)> ==> <com.csipsimple.ui.favorites.FavAdapter$5: void onCancel(android.content.DialogInterface)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.favorites.FavAdapter$6: void <init>(com.csipsimple.ui.favorites.FavAdapter,java.lang.String,java.lang.String,java.lang.Long)>(r0, $r3, $r4, $r2) in <com.csipsimple.ui.favorites.FavAdapter: void showDialogForSipData(android.content.Context,java.lang.Long,java.lang.String,java.lang.String)> ==> <com.csipsimple.ui.favorites.FavAdapter$6: void <init>(com.csipsimple.ui.favorites.FavAdapter,java.lang.String,java.lang.String,java.lang.Long)>
VIRTUAL edge: virtualinvoke r5.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener)>(2131558402, $r6) in <com.csipsimple.ui.favorites.FavAdapter: void showDialogForSipData(android.content.Context,java.lang.Long,java.lang.String,java.lang.String)> ==> <com.csipsimple.ui.favorites.FavAdapter$6: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.favorites.FavAdapter: void showViewForType(android.view.View,int)>($r1, i0) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.favorites.FavAdapter: void showViewForType(android.view.View,int)>
SPECIAL edge: specialinvoke r6.<com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>($r3) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>
VIRTUAL edge: $r20 = virtualinvoke r6.<com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()>() in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()>
STATIC edge: i0 = staticinvoke <com.csipsimple.wizards.WizardUtils: int getWizardIconRes(java.lang.String)>($r19) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.wizards.WizardUtils: int getWizardIconRes(java.lang.String)>
VIRTUAL edge: virtualinvoke r17.<com.csipsimple.ui.favorites.PresenceStatusSpinner: void setProfileId(long)>($l1) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner: void setProfileId(long)>
SPECIAL edge: specialinvoke r4.<com.csipsimple.ui.favorites.FavAdapter$MenuCallback: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.content.Context,java.lang.Long,java.lang.String,java.lang.String,boolean)>(r0, $r2, $r18, r5, $r20, $z0) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.favorites.FavAdapter$MenuCallback: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.content.Context,java.lang.Long,java.lang.String,java.lang.String,boolean)>
SPECIAL edge: specialinvoke r12.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void <init>(android.content.Context)>($r23) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r12.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setReserveOverflow(boolean)>(1) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setReserveOverflow(boolean)>
SPECIAL edge: specialinvoke r24.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>($r2) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r24.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r4) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>
VIRTUAL edge: virtualinvoke r24.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r4) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.favorites.FavAdapter$MenuCallback: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: virtualinvoke r24.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r4) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.favorites.FavAdapter$MenuCallback: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
SPECIAL edge: specialinvoke r10.<com.actionbarsherlock.view.MenuInflater: void <init>(android.content.Context)>($r2) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.actionbarsherlock.view.MenuInflater: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r10.<com.actionbarsherlock.view.MenuInflater: void inflate(int,com.actionbarsherlock.view.Menu)>(2131623937, r24) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.actionbarsherlock.view.MenuInflater: void inflate(int,com.actionbarsherlock.view.Menu)>
VIRTUAL edge: virtualinvoke r24.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>(r12) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>
VIRTUAL edge: $r25 = virtualinvoke r12.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>(r21) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
STATIC edge: $r27 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
VIRTUAL edge: $r28 = virtualinvoke r24.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>(2131099918) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>
STATIC edge: $r29 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
STATIC edge: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: virtualinvoke r31.<com.csipsimple.widgets.contactbadge.QuickContactBadge: void assignContactUri(android.net.Uri)>($r34) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge: void assignContactUri(android.net.Uri)>
VIRTUAL edge: $r35 = virtualinvoke r31.<com.csipsimple.widgets.contactbadge.QuickContactBadge: android.widget.ImageView getImageView()>() in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge: android.widget.ImageView getImageView()>
STATIC edge: staticinvoke <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>($r2, $r35, $r33, 2130837667) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>
VIRTUAL edge: virtualinvoke $r14.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r36) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.favorites.FavAdapter: void onClick(android.view.View)>
SPECIAL edge: specialinvoke r7.<com.csipsimple.ui.favorites.FavAdapter$ConfigureObj: void <init>(com.csipsimple.ui.favorites.FavAdapter,com.csipsimple.ui.favorites.FavAdapter$ConfigureObj)>(r0, null) in <com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.favorites.FavAdapter$ConfigureObj: void <init>(com.csipsimple.ui.favorites.FavAdapter,com.csipsimple.ui.favorites.FavAdapter$ConfigureObj)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.favorites.FavAdapter: void showDialogForGroupSelection(android.content.Context,java.lang.Long,java.lang.String)>($r6, $r2, $r3) in <com.csipsimple.ui.favorites.FavAdapter: void onClick(android.view.View)> ==> <com.csipsimple.ui.favorites.FavAdapter: void showDialogForGroupSelection(android.content.Context,java.lang.Long,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarContainer: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.actionbarsherlock.internal.widget.ActionBarContainer: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.widget.ActionBarContainer: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2) in <com.actionbarsherlock.internal.widget.ActionBarContainer: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
VIRTUAL edge: $i4 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView: int getDisplayOptions()>() in <com.actionbarsherlock.internal.widget.ActionBarContainer: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: int getDisplayOptions()>
VIRTUAL edge: z1 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView: boolean isCollapsed()>() in <com.actionbarsherlock.internal.widget.ActionBarContainer: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: boolean isCollapsed()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: boolean isCollapsed()>() in <com.actionbarsherlock.internal.widget.ActionBarContainer: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: boolean isCollapsed()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)>(0) in <com.actionbarsherlock.internal.widget.ActionBarContainer: void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1: void <init>(com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: com.actionbarsherlock.widget.ActivityChooserModel access$1(com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader)>($r1) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: com.actionbarsherlock.widget.ActivityChooserModel access$1(com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader)>
STATIC edge: staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: void access$6(com.actionbarsherlock.widget.ActivityChooserModel)>($r2) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void access$6(com.actionbarsherlock.widget.ActivityChooserModel)>
STATIC edge: staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: void access$7(com.actionbarsherlock.widget.ActivityChooserModel)>($r2) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void access$7(com.actionbarsherlock.widget.ActivityChooserModel)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void changeMenuMode()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable: void run()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void changeMenuMode()>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup: boolean tryShow()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable: void run()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void access$0(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup)>($r1, $r6) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable: void run()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void access$0(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void access$3(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable)>($r1, null) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable: void run()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void access$3(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Interphone365: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Interphone365: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Interphone365: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Interphone365: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.Interphone365: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Sipkom: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Sipkom: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.models.Filter: void <init>()>() in <com.csipsimple.wizards.impl.Sipkom: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.models.Filter: void <init>()>
STATIC edge: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.wizards.impl.Sipkom: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Sipkom: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.Sipkom: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>("stun.sipkom.com") in <com.csipsimple.wizards.impl.Sipkom: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.ActionBarView$1: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.app.ActionBar$OnNavigationListener access$0(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$1: void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.app.ActionBar$OnNavigationListener access$0(com.actionbarsherlock.internal.widget.ActionBarView)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.ActionBarView$3: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.view.menu.ActionMenuItem access$2(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$3: void onClick(android.view.View)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.view.menu.ActionMenuItem access$2(com.actionbarsherlock.internal.widget.ActionBarView)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.ActionBarView$2: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$1(com.actionbarsherlock.internal.widget.ActionBarView)>($r4) in <com.actionbarsherlock.internal.widget.ActionBarView$2: void onClick(android.view.View)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$1(com.actionbarsherlock.internal.widget.ActionBarView)>
VIRTUAL edge: virtualinvoke r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean collapseActionView()>() in <com.actionbarsherlock.internal.widget.ActionBarView$2: void onClick(android.view.View)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean collapseActionView()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Cotas: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Cotas: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Cotas: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Cotas: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_sip_timer_use$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void end()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void finishAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void end()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void setSupportTranslationX(float)>($f0) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void setSupportTranslationX(float)>
STATIC edge: $r7 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>($r2, "supportTranslationX", $r6) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long)>(200L) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>(r0) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>(r0) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>(r0) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>(r0) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>(r0) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setInterpolator(android.view.animation.Interpolator)>($r8) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setInterpolator(android.view.animation.Interpolator)>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void <init>()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void <init>()>
VIRTUAL edge: $r9 = virtualinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r7) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
STATIC edge: $r12 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>($r11) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>
VIRTUAL edge: virtualinvoke $r12.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setScaleY(float)>(0.0F) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setScaleY(float)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setStartDelay(long)>($l3) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setStartDelay(long)>
VIRTUAL edge: virtualinvoke $r9.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r7) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
STATIC edge: $r7 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>($r3, "supportTranslationX", $r2) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long)>(200L) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>(r0) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setInterpolator(android.view.animation.Interpolator)>($r8) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setInterpolator(android.view.animation.Interpolator)>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void <init>()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void <init>()>
VIRTUAL edge: $r9 = virtualinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r7) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
STATIC edge: $r12 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>($r11) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>
VIRTUAL edge: virtualinvoke $r12.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setScaleY(float)>(0.0F) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setScaleY(float)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setStartDelay(long)>($l2) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setStartDelay(long)>
VIRTUAL edge: virtualinvoke $r9.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r7) in <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarContextView: void killMode()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void closeMode()> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void killMode()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarContextView: void finishAnimation()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void closeMode()> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void finishAnimation()>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void closeMode()> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void start()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void closeMode()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void start()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: boolean hideOverflowMenu()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>
SPECIAL edge: specialinvoke $r7.<com.actionbarsherlock.internal.widget.ActionBarContextView$1: void <init>(com.actionbarsherlock.internal.widget.ActionBarContextView,com.actionbarsherlock.view.ActionMode)>(r0, $r1) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void initForMode(com.actionbarsherlock.view.ActionMode)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView$1: void <init>(com.actionbarsherlock.internal.widget.ActionBarContextView,com.actionbarsherlock.view.ActionMode)>
VIRTUAL edge: virtualinvoke $r6.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r7) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void initForMode(com.actionbarsherlock.view.ActionMode)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView$1: void onClick(android.view.View)>
VIRTUAL edge: virtualinvoke $r10.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean dismissPopupMenus()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void initForMode(com.actionbarsherlock.view.ActionMode)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean dismissPopupMenus()>
SPECIAL edge: specialinvoke $r10.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void <init>(android.content.Context)>($r4) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void initForMode(com.actionbarsherlock.view.ActionMode)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r10.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setReserveOverflow(boolean)>(1) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void initForMode(com.actionbarsherlock.view.ActionMode)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setReserveOverflow(boolean)>
VIRTUAL edge: virtualinvoke r9.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>($r10) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void initForMode(com.actionbarsherlock.view.ActionMode)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>
VIRTUAL edge: $r11 = virtualinvoke $r10.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>(r0) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void initForMode(com.actionbarsherlock.view.ActionMode)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
VIRTUAL edge: virtualinvoke $r10.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setWidthLimit(int,boolean)>($i0, 1) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void initForMode(com.actionbarsherlock.view.ActionMode)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setWidthLimit(int,boolean)>
VIRTUAL edge: virtualinvoke $r10.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setItemLimit(int)>(2147483647) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void initForMode(com.actionbarsherlock.view.ActionMode)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setItemLimit(int)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean isOverflowMenuShowing()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: boolean isOverflowMenuShowing()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean isOverflowMenuShowing()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarContextView: void finishAnimation()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void killMode()> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void finishAnimation()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarContextView: void killMode()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void killMode()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void onDetachedFromWindow()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideSubMenus()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void onDetachedFromWindow()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideSubMenus()>
VIRTUAL edge: $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> ==> <java.lang.Class: java.lang.String getName()>
VIRTUAL edge: $i4 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarContextView: int positionChild(android.view.View,int,int,int)>($r1, $i3, $i6, $i1) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: int positionChild(android.view.View,int,int,int)>
SPECIAL edge: $r4 = specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void start()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void start()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarContextView: int positionChildInverse(android.view.View,int,int,int)>($r7, $i0, $i6, $i1) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: int positionChildInverse(android.view.View,int,int,int)>
VIRTUAL edge: $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void onMeasure(int,int)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void onMeasure(int,int)> ==> <java.lang.Class: java.lang.String getSimpleName()>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void onMeasure(int,int)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: i3 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarContextView: int measureChildView(android.view.View,int,int,int)>($r5, i3, $i5, 0) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: int measureChildView(android.view.View,int,int,int)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>(r0) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void setSplitActionBar(boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.AbsActionBarView: void setSplitActionBar(boolean)>($z0) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void setSplitActionBar(boolean)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void setSplitActionBar(boolean)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setWidthLimit(int,boolean)>($i0, 1) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void setSplitActionBar(boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setWidthLimit(int,boolean)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setItemLimit(int)>(2147483647) in <com.actionbarsherlock.internal.widget.ActionBarContextView: void setSplitActionBar(boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setItemLimit(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarContextView: void initTitle()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void initTitle()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarContextView: void initTitle()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void initTitle()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView: boolean showOverflowMenu()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int,int)>("PJSIP_CRED_DATA_PLAIN_PASSWD", 0, $i0) in <org.pjsip.pjsua.pjsip_cred_data_type: void <clinit>()> ==> <org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsip_cred_data_type$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsip_cred_data_type$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_cred_data_type$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsip_cred_data_type$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_cred_data_type$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsip_cred_data_type$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_cred_data_type)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_cred_data_type)> ==> <org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_cred_data_type$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_cred_data_type)> ==> <org.pjsip.pjsua.pjsip_cred_data_type$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsip_cred_data_type: org.pjsip.pjsua.pjsip_cred_data_type swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_msg_data: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_msg_data: void delete()>() in <org.pjsip.pjsua.pjsua_msg_data: void finalize()> ==> <org.pjsip.pjsua.pjsua_msg_data: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_msg_data: org.pjsip.pjsua.pj_str_t getContent_type()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_msg_data: org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr getHdr_list()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_msg_data: org.pjsip.pjsua.pj_str_t getMsg_body()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_msg_data: org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type getMultipart_ctype()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_msg_data: org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part getMultipart_parts()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_msg_data: void setContent_type(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr)>($r1) in <org.pjsip.pjsua.pjsua_msg_data: void setHdr_list(org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_msg_data: void setMsg_body(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type)>($r1) in <org.pjsip.pjsua.pjsua_msg_data: void setMultipart_ctype(org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part)>($r1) in <org.pjsip.pjsua.pjsua_msg_data: void setMultipart_parts(org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.utils.DialingFeedback$ThreadedTonePlay: void <init>(com.csipsimple.utils.DialingFeedback,int)>(r0, $i0) in <com.csipsimple.utils.DialingFeedback: void giveFeedback(int)> ==> <com.csipsimple.utils.DialingFeedback$ThreadedTonePlay: void <init>(com.csipsimple.utils.DialingFeedback,int)>
VIRTUAL edge: virtualinvoke r1.<com.csipsimple.utils.DialingFeedback$ThreadedTonePlay: void start()>() in <com.csipsimple.utils.DialingFeedback: void giveFeedback(int)> ==> <com.csipsimple.utils.DialingFeedback$ThreadedTonePlay: void run()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.utils.DialingFeedback$StopTimerTask: void <init>(com.csipsimple.utils.DialingFeedback)>(r0) in <com.csipsimple.utils.DialingFeedback: void giveFeedback(int)> ==> <com.csipsimple.utils.DialingFeedback$StopTimerTask: void <init>(com.csipsimple.utils.DialingFeedback)>
VIRTUAL edge: virtualinvoke $r3.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r4, 150L) in <com.csipsimple.utils.DialingFeedback: void giveFeedback(int)> ==> <java.util.Timer: void schedule(java.util.TimerTask,long)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_transport_type_e)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_transport_type_e)> ==> <org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_transport_type_e)> ==> <org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsip_transport_type_e: org.pjsip.pjsua.pjsip_transport_type_e swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: void <init>(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: void <init>(float,float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void <init>()>
VIRTUAL edge: $f1 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: float getFraction()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: float getFraction()>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: void <init>(float,float)>($f1, $f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: void <init>(float,float)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: android.view.animation.Interpolator getInterpolator()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: android.view.animation.Interpolator getInterpolator()>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: void setInterpolator(android.view.animation.Interpolator)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void setInterpolator(android.view.animation.Interpolator)>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone()>
STATIC edge: $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: java.lang.Object getValue()> ==> <java.lang.Float: java.lang.Float valueOf(float)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: void setValue(java.lang.Object)> ==> <java.lang.Object: java.lang.Class getClass()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0) in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2) in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertCheckBox()> ==> <com.actionbarsherlock.internal.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertIconView()> ==> <com.actionbarsherlock.internal.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertRadioButton()> ==> <com.actionbarsherlock.internal.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isVisible()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isVisible()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView)>(r0) in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)>($r2) in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isCheckable()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isCheckable()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setCheckable(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setCheckable(boolean)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean shouldShowShortcut()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean shouldShowShortcut()>
VIRTUAL edge: $c2 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getShortcut()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getShortcut()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setShortcut(boolean,char)>($z0, $c2) in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setShortcut(boolean,char)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)>($r3) in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isEnabled()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isEnabled()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertRadioButton()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setCheckable(boolean)> ==> <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertRadioButton()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertCheckBox()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setCheckable(boolean)> ==> <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertCheckBox()>
VIRTUAL edge: $z1 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isExclusiveCheckable()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setCheckable(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isExclusiveCheckable()>
VIRTUAL edge: $z1 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isChecked()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setCheckable(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isChecked()>
VIRTUAL edge: $z1 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isExclusiveCheckable()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setChecked(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isExclusiveCheckable()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertRadioButton()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setChecked(boolean)> ==> <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertRadioButton()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertCheckBox()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setChecked(boolean)> ==> <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertCheckBox()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean shouldShowIcon()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean shouldShowIcon()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertIconView()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertIconView()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean shouldShowShortcut()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setShortcut(boolean,char)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean shouldShowShortcut()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.String getShortcutLabel()>() in <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setShortcut(boolean,char)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.String getShortcutLabel()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.widget.ActivityChooserView$SetActivated: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.actionbarsherlock.widget.ActivityChooserView$SetActivated: void invoke(android.view.View,boolean)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.impl.Broadsoft$1: void <init>()>() in <com.csipsimple.wizards.impl.Broadsoft: void <clinit>()> ==> <com.csipsimple.wizards.impl.Broadsoft$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.BaseImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Broadsoft: void <init>()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.wizards.impl.Broadsoft: android.preference.Preference findPreference(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Broadsoft: void bindFields()> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.Broadsoft: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r3) in <com.csipsimple.wizards.impl.Broadsoft: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.Broadsoft: java.lang.String getDomain()>() in <com.csipsimple.wizards.impl.Broadsoft: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Broadsoft: java.lang.String getDomain()>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.Broadsoft: java.lang.String getText(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Broadsoft: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
STATIC edge: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Broadsoft: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Broadsoft: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Broadsoft: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Broadsoft: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.Broadsoft: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Broadsoft: void bindFields()>() in <com.csipsimple.wizards.impl.Broadsoft: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Broadsoft: void bindFields()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getDisplayName()>() in <com.csipsimple.wizards.impl.Broadsoft: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: java.lang.String getDisplayName()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getSipUserName()>() in <com.csipsimple.wizards.impl.Broadsoft: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: java.lang.String getSipUserName()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getSipDomain()>() in <com.csipsimple.wizards.impl.Broadsoft: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: java.lang.String getSipDomain()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getProxyAddress()>() in <com.csipsimple.wizards.impl.Broadsoft: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: java.lang.String getProxyAddress()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Broadsoft: void setStringFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Broadsoft: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Broadsoft: void setPasswordFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Broadsoft: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setPasswordFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int)>("PJSUA_STATE_NULL", 0) in <org.pjsip.pjsua.pjsua_state: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_state$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_state$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_state$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_state$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_state$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_state$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_state)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_state)> ==> <org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_state$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_state)> ==> <org.pjsip.pjsua.pjsua_state$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsua_state: org.pjsip.pjsua.pjsua_state swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131427920) in <com.csipsimple.wizards.impl.Broadsoft$1: void <init>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.incall.InCallCard$ContactLoadedHandler: void <init>(com.csipsimple.ui.incall.InCallCard$ContactLoadedHandler)>(null) in <com.csipsimple.ui.incall.InCallCard: void <clinit>()> ==> <com.csipsimple.ui.incall.InCallCard$ContactLoadedHandler: void <init>(com.csipsimple.ui.incall.InCallCard$ContactLoadedHandler)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.incall.InCallCard$1: void <init>(com.csipsimple.ui.incall.InCallCard)>(r0) in <com.csipsimple.ui.incall.InCallCard: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.incall.InCallCard$1: void <init>(com.csipsimple.ui.incall.InCallCard)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>($r1) in <com.csipsimple.ui.incall.InCallCard: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("use_video") in <com.csipsimple.ui.incall.InCallCard: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallCard: void initControllerView()>() in <com.csipsimple.ui.incall.InCallCard: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.incall.InCallCard: void initControllerView()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.incall.InCallCard: void updateMenuView()>() in <com.csipsimple.ui.incall.InCallCard: void access$4(com.csipsimple.ui.incall.InCallCard)> ==> <com.csipsimple.ui.incall.InCallCard: void updateMenuView()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallCard", $r3) in <com.csipsimple.ui.incall.InCallCard: void dispatchTriggerEvent(int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.csipsimple.ui.incall.InCallCard: void initControllerView()> ==> <com.csipsimple.ui.incall.InCallCard: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
VIRTUAL edge: virtualinvoke $r2.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.csipsimple.ui.incall.InCallCard: void initControllerView()> ==> <com.csipsimple.ui.incall.InCallCard: void onClick(android.view.View)>
VIRTUAL edge: virtualinvoke $r2.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.csipsimple.ui.incall.InCallCard: void initControllerView()> ==> <com.csipsimple.ui.incall.InCallCard: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: specialinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>($r8) in <com.csipsimple.ui.incall.InCallCard: void initControllerView()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.csipsimple.ui.incall.InCallCard: void initControllerView()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.view.MenuInflater: void <init>(android.content.Context)>($r8) in <com.csipsimple.ui.incall.InCallCard: void initControllerView()> ==> <com.actionbarsherlock.view.MenuInflater: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.view.MenuInflater: void inflate(int,com.actionbarsherlock.view.Menu)>(2131623938, $r7) in <com.csipsimple.ui.incall.InCallCard: void initControllerView()> ==> <com.actionbarsherlock.view.MenuInflater: void inflate(int,com.actionbarsherlock.view.Menu)>
SPECIAL edge: specialinvoke $r9.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void <init>(android.content.Context)>($r8) in <com.csipsimple.ui.incall.InCallCard: void initControllerView()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r9.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setReserveOverflow(boolean)>(1) in <com.csipsimple.ui.incall.InCallCard: void initControllerView()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setReserveOverflow(boolean)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>($r9) in <com.csipsimple.ui.incall.InCallCard: void initControllerView()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallCard: void updateMenuView()>() in <com.csipsimple.ui.incall.InCallCard: void initControllerView()> ==> <com.csipsimple.ui.incall.InCallCard: void updateMenuView()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.ui.incall.InCallCard: void updateCallStateBar()> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getMediaStatus()>() in <com.csipsimple.ui.incall.InCallCard: void updateCallStateBar()> ==> <com.csipsimple.api.SipCallSession: int getMediaStatus()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isAfterEnded()>() in <com.csipsimple.ui.incall.InCallCard: void updateCallStateBar()> ==> <com.csipsimple.api.SipCallSession: boolean isAfterEnded()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isBeforeConfirmed()>() in <com.csipsimple.ui.incall.InCallCard: void updateCallStateBar()> ==> <com.csipsimple.api.SipCallSession: boolean isBeforeConfirmed()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isIncoming()>() in <com.csipsimple.ui.incall.InCallCard: void updateCallStateBar()> ==> <com.csipsimple.api.SipCallSession: boolean isIncoming()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallCard: void setVisibleWithFade(android.view.View,boolean)>($r3, 1) in <com.csipsimple.ui.incall.InCallCard: void updateCallStateBar()> ==> <com.csipsimple.ui.incall.InCallCard: void setVisibleWithFade(android.view.View,boolean)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isLocalHeld()>() in <com.csipsimple.ui.incall.InCallCard: void updateCallStateBar()> ==> <com.csipsimple.api.SipCallSession: boolean isLocalHeld()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isRemoteHeld()>() in <com.csipsimple.ui.incall.InCallCard: void updateCallStateBar()> ==> <com.csipsimple.api.SipCallSession: boolean isRemoteHeld()>
VIRTUAL edge: $l0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: long getConnectStart()>() in <com.csipsimple.ui.incall.InCallCard: void updateElapsedTimer()> ==> <com.csipsimple.api.SipCallSession: long getConnectStart()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isSecure()>() in <com.csipsimple.ui.incall.InCallCard: void updateElapsedTimer()> ==> <com.csipsimple.api.SipCallSession: boolean isSecure()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallCard: void setVisibleWithFade(android.view.View,boolean)>($r3, $z0) in <com.csipsimple.ui.incall.InCallCard: void updateElapsedTimer()> ==> <com.csipsimple.ui.incall.InCallCard: void setVisibleWithFade(android.view.View,boolean)>
VIRTUAL edge: $r5 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: java.lang.String getMediaSecureInfo()>() in <com.csipsimple.ui.incall.InCallCard: void updateElapsedTimer()> ==> <com.csipsimple.api.SipCallSession: java.lang.String getMediaSecureInfo()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.ui.incall.InCallCard: void updateElapsedTimer()> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("InCallCard", "we start the timer now ") in <com.csipsimple.ui.incall.InCallCard: void updateElapsedTimer()> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isLocalHeld()>() in <com.csipsimple.ui.incall.InCallCard: void updateElapsedTimer()> ==> <com.csipsimple.api.SipCallSession: boolean isLocalHeld()>
VIRTUAL edge: virtualinvoke $r6.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setReserveOverflow(boolean)>(1) in <com.csipsimple.ui.incall.InCallCard: void updateMenuView()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setReserveOverflow(boolean)>
VIRTUAL edge: virtualinvoke $r6.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setWidthLimit(int,boolean)>($i0, 1) in <com.csipsimple.ui.incall.InCallCard: void updateMenuView()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setWidthLimit(int,boolean)>
VIRTUAL edge: virtualinvoke $r6.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setItemLimit(int)>(20) in <com.csipsimple.ui.incall.InCallCard: void updateMenuView()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setItemLimit(int)>
VIRTUAL edge: $r7 = virtualinvoke $r6.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>(r5) in <com.csipsimple.ui.incall.InCallCard: void updateMenuView()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
STATIC edge: $r9 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.csipsimple.ui.incall.InCallCard: void updateMenuView()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
VIRTUAL edge: virtualinvoke $r6.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)>(1) in <com.csipsimple.ui.incall.InCallCard: void updateMenuView()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.ui.incall.InCallCard: void updateQuickActions()> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getMediaStatus()>() in <com.csipsimple.ui.incall.InCallCard: void updateQuickActions()> ==> <com.csipsimple.api.SipCallSession: int getMediaStatus()>
VIRTUAL edge: $z1 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isRecording()>() in <com.csipsimple.ui.incall.InCallCard: void updateQuickActions()> ==> <com.csipsimple.api.SipCallSession: boolean isRecording()>
VIRTUAL edge: $z1 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean canRecord()>() in <com.csipsimple.ui.incall.InCallCard: void updateQuickActions()> ==> <com.csipsimple.api.SipCallSession: boolean canRecord()>
VIRTUAL edge: $z1 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isLocalHeld()>() in <com.csipsimple.ui.incall.InCallCard: void updateQuickActions()> ==> <com.csipsimple.api.SipCallSession: boolean isLocalHeld()>
VIRTUAL edge: $z1 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean mediaHasVideo()>() in <com.csipsimple.ui.incall.InCallCard: void updateQuickActions()> ==> <com.csipsimple.api.SipCallSession: boolean mediaHasVideo()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallCard", "Nothing changed, ignore this update") in <com.csipsimple.ui.incall.InCallCard: void updateQuickActions()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isBeforeConfirmed()>() in <com.csipsimple.ui.incall.InCallCard: void updateQuickActions()> ==> <com.csipsimple.api.SipCallSession: boolean isBeforeConfirmed()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isIncoming()>() in <com.csipsimple.ui.incall.InCallCard: void updateQuickActions()> ==> <com.csipsimple.api.SipCallSession: boolean isIncoming()>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>(2131099703) in <com.csipsimple.ui.incall.InCallCard: void updateQuickActions()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isAfterEnded()>() in <com.csipsimple.ui.incall.InCallCard: void updateQuickActions()> ==> <com.csipsimple.api.SipCallSession: boolean isAfterEnded()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.CustomDistribution: boolean supportCallRecord()>() in <com.csipsimple.ui.incall.InCallCard: void updateQuickActions()> ==> <com.csipsimple.utils.CustomDistribution: boolean supportCallRecord()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.api.SipCallSession: java.lang.String getRemoteContact()>() in <com.csipsimple.ui.incall.InCallCard: void updateRemoteName()> ==> <com.csipsimple.api.SipCallSession: java.lang.String getRemoteContact()>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5) in <com.csipsimple.ui.incall.InCallCard: void updateRemoteName()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>($r5) in <com.csipsimple.ui.incall.InCallCard: void updateRemoteName()> ==> <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)>($r4) in <com.csipsimple.ui.incall.InCallCard: void updateRemoteName()> ==> <com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)>
SPECIAL edge: specialinvoke r1.<java.lang.StringBuffer: void <init>()>() in <com.csipsimple.ui.incall.InCallCard: void updateRemoteName()> ==> <java.lang.StringBuffer: void <init>()>
VIRTUAL edge: $l0 = virtualinvoke $r3.<com.csipsimple.api.SipCallSession: long getAccId()>() in <com.csipsimple.ui.incall.InCallCard: void updateRemoteName()> ==> <com.csipsimple.api.SipCallSession: long getAccId()>
STATIC edge: $r10 = staticinvoke <com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])>($r8, $l0, $r9) in <com.csipsimple.ui.incall.InCallCard: void updateRemoteName()> ==> <com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])>
VIRTUAL edge: virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4) in <com.csipsimple.ui.incall.InCallCard: void updateRemoteName()> ==> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>() in <com.csipsimple.ui.incall.InCallCard: void updateRemoteName()> ==> <java.lang.StringBuffer: java.lang.String toString()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.ui.incall.InCallCard$2: void <init>(com.csipsimple.ui.incall.InCallCard)>(r0) in <com.csipsimple.ui.incall.InCallCard: void updateRemoteName()> ==> <com.csipsimple.ui.incall.InCallCard$2: void <init>(com.csipsimple.ui.incall.InCallCard)>
VIRTUAL edge: virtualinvoke r2.<java.lang.Thread: void start()>() in <com.csipsimple.ui.incall.InCallCard: void updateRemoteName()> ==> <com.csipsimple.ui.incall.InCallCard$2: void run()>
VIRTUAL edge: $i3 = virtualinvoke $r3.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.ui.incall.InCallCard: void updateRemoteName()> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
VIRTUAL edge: $i3 = virtualinvoke $r3.<com.csipsimple.api.SipCallSession: int getMediaStatus()>() in <com.csipsimple.ui.incall.InCallCard: void updateRemoteName()> ==> <com.csipsimple.api.SipCallSession: int getMediaStatus()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.api.SipCallSession: boolean isBeforeConfirmed()>() in <com.csipsimple.ui.incall.InCallCard: void onClick(android.view.View)> ==> <com.csipsimple.api.SipCallSession: boolean isBeforeConfirmed()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.api.SipCallSession: boolean isIncoming()>() in <com.csipsimple.ui.incall.InCallCard: void onClick(android.view.View)> ==> <com.csipsimple.api.SipCallSession: boolean isIncoming()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallCard: void dispatchTriggerEvent(int)>(3) in <com.csipsimple.ui.incall.InCallCard: void onClick(android.view.View)> ==> <com.csipsimple.ui.incall.InCallCard: void dispatchTriggerEvent(int)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.api.SipCallSession: boolean isAfterEnded()>() in <com.csipsimple.ui.incall.InCallCard: void onClick(android.view.View)> ==> <com.csipsimple.api.SipCallSession: boolean isAfterEnded()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallCard: void dispatchTriggerEvent(int)>(2) in <com.csipsimple.ui.incall.InCallCard: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.incall.InCallCard: void dispatchTriggerEvent(int)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.csipsimple.api.SipCallSession: boolean isRecording()>() in <com.csipsimple.ui.incall.InCallCard: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.api.SipCallSession: boolean isRecording()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.csipsimple.api.SipCallSession: boolean mediaHasVideo()>() in <com.csipsimple.ui.incall.InCallCard: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.api.SipCallSession: boolean mediaHasVideo()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallCard: void updateElapsedTimer()>() in <com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.ui.incall.InCallCard: void updateElapsedTimer()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallCard: void updateRemoteName()>() in <com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.ui.incall.InCallCard: void updateRemoteName()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallCard: void updateCallStateBar()>() in <com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.ui.incall.InCallCard: void updateCallStateBar()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallCard: void updateQuickActions()>() in <com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.ui.incall.InCallCard: void updateQuickActions()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getMediaStatus()>() in <com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: int getMediaStatus()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean canRecord()>() in <com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: boolean canRecord()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isRecording()>() in <com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: boolean isRecording()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isLocalHeld()>() in <com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: boolean isLocalHeld()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean mediaHasVideo()>() in <com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: boolean mediaHasVideo()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getCallId()>() in <com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: int getCallId()>
STATIC edge: $r3 = staticinvoke <org.webrtc.videoengine.ViERenderer: android.view.SurfaceView CreateRenderer(android.content.Context,boolean)>($r4, 1) in <com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)> ==> <org.webrtc.videoengine.ViERenderer: android.view.SurfaceView CreateRenderer(android.content.Context,boolean)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallCard", "Render window added") in <com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.service.SipService: void setVideoWindow(int,java.lang.Object)>($i0, $r3) in <com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.service.SipService: void setVideoWindow(int,java.lang.Object)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getCallId()>() in <com.csipsimple.ui.incall.InCallCard: void terminate()> ==> <com.csipsimple.api.SipCallSession: int getCallId()>
STATIC edge: staticinvoke <com.csipsimple.service.SipService: void setVideoWindow(int,java.lang.Object)>($i0, null) in <com.csipsimple.ui.incall.InCallCard: void terminate()> ==> <com.csipsimple.service.SipService: void setVideoWindow(int,java.lang.Object)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class "Lcom/actionbarsherlock/internal/view/menu/ActionMenuItemView;", "onPopulateAccessibilityEvent", $r5) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
STATIC edge: $z0 = staticinvoke <com.actionbarsherlock.internal.ResourcesCompat: boolean getResources_getBoolean(android.content.Context,int)>($r1, $i0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.ResourcesCompat: boolean getResources_getBoolean(android.content.Context,int)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean showsTextAsAction()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void updateTextButtonVisibility()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean showsTextAsAction()>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r2, r0, $r3) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean dispatchHoverEvent(android.view.MotionEvent)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void supportOnPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void supportOnPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)>($r2) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)>($r3) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isVisible()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isVisible()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isEnabled()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isEnabled()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setEnabled(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setEnabled(boolean)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isChecked()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isChecked()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setChecked(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setChecked(boolean)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean hasText()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean needsDividerAfter()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean hasText()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean hasText()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean needsDividerBefore()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean hasText()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean needsDividerBefore()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean prefersCondensedTitle()>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setChecked(boolean)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onClick(android.view.View)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setShortcut(boolean,char)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean needsDividerBefore()>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean showsIcon()>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean needsDividerAfter()>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setCheckable(boolean)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean onLongClick(android.view.View)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData()>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setEnabled(boolean)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean hasText()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean onLongClick(android.view.View)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean hasText()>
VIRTUAL edge: $r8 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean onLongClick(android.view.View)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void supportOnPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>($r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void supportOnPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void actionFormatChanged()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void actionFormatChanged()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void updateTextButtonVisibility()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void updateTextButtonVisibility()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.CapitalizingButton: void setTextCompat(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.widget.CapitalizingButton: void setTextCompat(java.lang.CharSequence)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void updateTextButtonVisibility()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void updateTextButtonVisibility()>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r2, r0, $r3) in <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void supportOnPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void <init>()>() in <com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void <init>(com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor)> ==> <com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor$1: void <init>(com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor,java.lang.Runnable)>(r0, $r1) in <com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void execute(java.lang.Runnable)> ==> <com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor$1: void <init>(com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor,java.lang.Runnable)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void scheduleNext()>() in <com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void execute(java.lang.Runnable)> ==> <com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void scheduleNext()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Mondotalk: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.wizards.impl.Mondotalk$1: void <init>(com.csipsimple.wizards.impl.Mondotalk)>(r0) in <com.csipsimple.wizards.impl.Mondotalk: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Mondotalk$1: void <init>(com.csipsimple.wizards.impl.Mondotalk)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>($r4) in <com.csipsimple.wizards.impl.Mondotalk: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Mondotalk$1: void onClick(android.view.View)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Mondotalk: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Mondotalk: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Mondotalk: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $i0 = virtualinvoke $r4.<com.csipsimple.wizards.BasePrefsWizard: int getFreeSubActivityCode()>() in <com.csipsimple.wizards.impl.Mondotalk: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.BasePrefsWizard: int getFreeSubActivityCode()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Mondotalk: void updateAccountInfos(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Mondotalk: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Mondotalk: void updateAccountInfos(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Mondotalk: void setUsername(java.lang.String)>($r2) in <com.csipsimple.wizards.impl.Mondotalk: void onActivityResult(int,int,android.content.Intent)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void setUsername(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Mondotalk: void setPassword(java.lang.String)>($r3) in <com.csipsimple.wizards.impl.Mondotalk: void onActivityResult(int,int,android.content.Intent)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void setPassword(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Mondotalk: boolean canSave()>() in <com.csipsimple.wizards.impl.Mondotalk: void onActivityResult(int,int,android.content.Intent)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()>() in <com.csipsimple.wizards.impl.Mondotalk: void onActivityResult(int,int,android.content.Intent)> ==> <com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.IPshka: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.IPshka: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.VoipNor: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.VoipNor: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.VoipNor: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.VoipNor: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("PCMU/8000/1", "wb", "240") in <com.csipsimple.wizards.impl.VoipNor: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.api.ISipService$Stub$Proxy: void <init>(android.os.IBinder)>($r0) in <com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)> ==> <com.csipsimple.api.ISipService$Stub$Proxy: void <init>(android.os.IBinder)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.api.SipProfileState: void writeToParcel(android.os.Parcel,int)>($r2, 1) in <com.csipsimple.api.ISipService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> ==> <com.csipsimple.api.SipProfileState: void writeToParcel(android.os.Parcel,int)>
VIRTUAL edge: virtualinvoke $r8.<com.csipsimple.api.SipCallSession: void writeToParcel(android.os.Parcel,int)>($r2, 1) in <com.csipsimple.api.ISipService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> ==> <com.csipsimple.api.SipCallSession: void writeToParcel(android.os.Parcel,int)>
VIRTUAL edge: virtualinvoke $r10.<com.csipsimple.api.MediaState: void writeToParcel(android.os.Parcel,int)>($r2, 1) in <com.csipsimple.api.ISipService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> ==> <com.csipsimple.api.MediaState: void writeToParcel(android.os.Parcel,int)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.ui.favorites.FavLoader: android.database.Cursor createContentCursorFor(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
STATIC edge: $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.ui.favorites.FavLoader: android.database.Cursor createContentCursorFor(com.csipsimple.api.SipProfile)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) in <com.csipsimple.ui.favorites.FavLoader: android.database.Cursor createContentCursorFor(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.ui.favorites.FavLoader: android.database.Cursor createHeaderCursorFor(com.csipsimple.api.SipProfile)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <com.csipsimple.ui.favorites.FavLoader: android.database.Cursor createHeaderCursorFor(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.favorites.FavLoader: void onReleaseResources(android.database.Cursor)>($r2) in <com.csipsimple.ui.favorites.FavLoader: void deliverResult(android.database.Cursor)> ==> <com.csipsimple.ui.favorites.FavLoader: void onReleaseResources(android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<android.support.v4.content.AsyncTaskLoader: void deliverResult(java.lang.Object)>($r1) in <com.csipsimple.ui.favorites.FavLoader: void deliverResult(android.database.Cursor)> ==> <com.csipsimple.ui.favorites.FavLoader: void deliverResult(java.lang.Object)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipProfile: java.util.ArrayList getAllProfiles(android.content.Context,boolean,java.lang.String[])>($r2, 1, $r3) in <com.csipsimple.ui.favorites.FavLoader: android.database.Cursor loadInBackground()> ==> <com.csipsimple.api.SipProfile: java.util.ArrayList getAllProfiles(android.content.Context,boolean,java.lang.String[])>
SPECIAL edge: $r12 = specialinvoke r0.<com.csipsimple.ui.favorites.FavLoader: android.database.Cursor createHeaderCursorFor(com.csipsimple.api.SipProfile)>(r11) in <com.csipsimple.ui.favorites.FavLoader: android.database.Cursor loadInBackground()> ==> <com.csipsimple.ui.favorites.FavLoader: android.database.Cursor createHeaderCursorFor(com.csipsimple.api.SipProfile)>
SPECIAL edge: $r12 = specialinvoke r0.<com.csipsimple.ui.favorites.FavLoader: android.database.Cursor createContentCursorFor(com.csipsimple.api.SipProfile)>(r11) in <com.csipsimple.ui.favorites.FavLoader: android.database.Cursor loadInBackground()> ==> <com.csipsimple.ui.favorites.FavLoader: android.database.Cursor createContentCursorFor(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.ui.favorites.FavLoader: android.database.Cursor loadInBackground()>() in <com.csipsimple.ui.favorites.FavLoader: java.lang.Object loadInBackground()> ==> <com.csipsimple.ui.favorites.FavLoader: android.database.Cursor loadInBackground()>
SPECIAL edge: specialinvoke r0.<android.support.v4.content.AsyncTaskLoader: void onCanceled(java.lang.Object)>($r1) in <com.csipsimple.ui.favorites.FavLoader: void onCanceled(android.database.Cursor)> ==> <com.csipsimple.ui.favorites.FavLoader: void onCanceled(java.lang.Object)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.favorites.FavLoader: void onReleaseResources(android.database.Cursor)>($r1) in <com.csipsimple.ui.favorites.FavLoader: void onCanceled(android.database.Cursor)> ==> <com.csipsimple.ui.favorites.FavLoader: void onReleaseResources(android.database.Cursor)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.favorites.FavLoader: void onCanceled(android.database.Cursor)>($r2) in <com.csipsimple.ui.favorites.FavLoader: void onCanceled(java.lang.Object)> ==> <com.csipsimple.ui.favorites.FavLoader: void onCanceled(android.database.Cursor)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.favorites.FavLoader: void onStopLoading()>() in <com.csipsimple.ui.favorites.FavLoader: void onReset()> ==> <com.csipsimple.ui.favorites.FavLoader: void onStopLoading()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.favorites.FavLoader: void onReleaseResources(android.database.Cursor)>($r1) in <com.csipsimple.ui.favorites.FavLoader: void onReset()> ==> <com.csipsimple.ui.favorites.FavLoader: void onReleaseResources(android.database.Cursor)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.favorites.FavLoader: void deliverResult(android.database.Cursor)>($r1) in <com.csipsimple.ui.favorites.FavLoader: void onStartLoading()> ==> <com.csipsimple.ui.favorites.FavLoader: void deliverResult(android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.HalooCentrala: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.HalooCentrala: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$1: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.widget.IcsListPopupWindow: com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r4) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$1: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: void access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean)>($r3, 0) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$1: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: void access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r1) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void clearListSelection()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider: void run()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void clearListSelection()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.ActionBarSherlock: void <init>(android.app.Activity,int)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>($r0, 0) in <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity)> ==> <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.view.MenuInflater: void <init>(android.content.Context)>($r3) in <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.view.MenuInflater getMenuInflater()> ==> <com.actionbarsherlock.view.MenuInflater: void <init>(android.content.Context)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>(r0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void loadStaticMethods()>() in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void loadStaticMethods()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>(r0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void loadStaticMethods()>() in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void loadStaticMethods()>
VIRTUAL edge: $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void loadStaticMethods()> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r1, "getAlpha", $r3) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void loadStaticMethods()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
VIRTUAL edge: $f0 = virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getAlpha()>() in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: float getSupportAlpha()> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getAlpha()>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r2, r0, $r3) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: float getSupportAlpha()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
VIRTUAL edge: $f0 = virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getTranslationX()>() in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: float getSupportTranslationX()> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getTranslationX()>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r2, r0, $r3) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: float getSupportTranslationX()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setAlpha(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void setSupportAlpha(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setAlpha(float)>
STATIC edge: $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void setSupportAlpha(float)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r3, r0, $r4) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void setSupportAlpha(float)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setTranslationX(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void setSupportTranslationX(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setTranslationX(float)>
STATIC edge: $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void setSupportTranslationX(float)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r3, r0, $r4) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void setSupportTranslationX(float)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_acc_info: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_acc_info: void <init>()> ==> <org.pjsip.pjsua.pjsua_acc_info: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_acc_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_acc_info: void delete()>() in <org.pjsip.pjsua.pjsua_acc_info: void finalize()> ==> <org.pjsip.pjsua.pjsua_acc_info: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_info: org.pjsip.pjsua.pj_str_t getAcc_uri()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_info: org.pjsip.pjsua.pj_str_t getOnline_status_text()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjrpid_element: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_info: org.pjsip.pjsua.pjrpid_element getRpid()> ==> <org.pjsip.pjsua.pjrpid_element: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsip_status_code: org.pjsip.pjsua.pjsip_status_code swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_acc_info: org.pjsip.pjsua.pjsip_status_code getStatus()> ==> <org.pjsip.pjsua.pjsip_status_code: org.pjsip.pjsua.pjsip_status_code swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_acc_info: org.pjsip.pjsua.pj_str_t getStatus_text()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_acc_info: void setAcc_uri(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_acc_info: void setOnline_status_text(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjrpid_element: long getCPtr(org.pjsip.pjsua.pjrpid_element)>($r1) in <org.pjsip.pjsua.pjsua_acc_info: void setRpid(org.pjsip.pjsua.pjrpid_element)> ==> <org.pjsip.pjsua.pjrpid_element: long getCPtr(org.pjsip.pjsua.pjrpid_element)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsip_status_code: int swigValue()>() in <org.pjsip.pjsua.pjsua_acc_info: void setStatus(org.pjsip.pjsua.pjsip_status_code)> ==> <org.pjsip.pjsua.pjsip_status_code: int swigValue()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_acc_info: void setStatus_text(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterContextMenuInfo: void <init>(android.view.View,int,long)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R$xml: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Ippi: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.wizards.impl.Ippi$AccountBalance: void <init>(com.csipsimple.wizards.impl.Ippi)>(r0) in <com.csipsimple.wizards.impl.Ippi: void <init>()> ==> <com.csipsimple.wizards.impl.Ippi$AccountBalance: void <init>(com.csipsimple.wizards.impl.Ippi)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.wizards.impl.AccountBalanceHelper: void launchRequest(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Ippi: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AccountBalanceHelper: void launchRequest(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.wizards.impl.Ippi$1: void <init>(com.csipsimple.wizards.impl.Ippi)>(r0) in <com.csipsimple.wizards.impl.Ippi: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Ippi$1: void <init>(com.csipsimple.wizards.impl.Ippi)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>($r5) in <com.csipsimple.wizards.impl.Ippi: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Ippi$1: void onClick(android.view.View)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Ippi: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Ippi: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Ippi: void updateAccountInfos(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Ippi: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Ippi: void updateAccountInfos(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>($r4, "https://m.ippi.fr/subscribe/android.php", r0) in <com.csipsimple.wizards.impl.Ippi: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>($r4, "https://m.ippi.fr/subscribe/android.php", r0) in <com.csipsimple.wizards.impl.Ippi: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Ippi: void onAccountCreationDone(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>($r4, "https://m.ippi.fr/subscribe/android.php", r0) in <com.csipsimple.wizards.impl.Ippi: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Ippi: boolean saveAndQuit()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Ippi: void setUsername(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Ippi: void onAccountCreationDone(java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void setUsername(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Ippi: void setPassword(java.lang.String)>($r2) in <com.csipsimple.wizards.impl.Ippi: void onAccountCreationDone(java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void setPassword(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Ippi: boolean canSave()>() in <com.csipsimple.wizards.impl.Ippi: boolean saveAndQuit()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()>() in <com.csipsimple.wizards.impl.Ippi: boolean saveAndQuit()> ==> <com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Ippi: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.Ippi: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>("stun.ippi.fr") in <com.csipsimple.wizards.impl.Ippi: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.models.Filter: void <init>(android.database.Cursor)> ==> <com.csipsimple.models.Filter: void <init>()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getForPosition(android.util.SparseArray,java.lang.Integer)>($r1, $r0) in <com.csipsimple.models.Filter: int getReplaceForPosition(java.lang.Integer)> ==> <com.csipsimple.models.Filter: int getForPosition(android.util.SparseArray,java.lang.Integer)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)>($r0, $l0) in <com.csipsimple.models.Filter: int isAutoAnswerNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)>
VIRTUAL edge: $z0 = virtualinvoke r6.<com.csipsimple.models.Filter: boolean autoAnswer(java.lang.String)>($r2) in <com.csipsimple.models.Filter: int isAutoAnswerNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: boolean autoAnswer(java.lang.String)>
STATIC edge: $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <com.csipsimple.models.Filter: int isAutoAnswerNumber(android.content.Context,long,java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Filter", $r2) in <com.csipsimple.models.Filter: int isAutoAnswerNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r6.<com.csipsimple.models.Filter: boolean stopProcessing(java.lang.String)>($r2) in <com.csipsimple.models.Filter: int isAutoAnswerNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: boolean stopProcessing(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r6.<com.csipsimple.models.Filter: java.lang.String rewrite(java.lang.String)>($r2) in <com.csipsimple.models.Filter: int isAutoAnswerNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: java.lang.String rewrite(java.lang.String)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)>($r0, $l0) in <com.csipsimple.models.Filter: boolean isCallableNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Filter", $r7) in <com.csipsimple.models.Filter: boolean isCallableNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke r5.<com.csipsimple.models.Filter: boolean canCall(java.lang.String)>($r1) in <com.csipsimple.models.Filter: boolean isCallableNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: boolean canCall(java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke r5.<com.csipsimple.models.Filter: boolean stopProcessing(java.lang.String)>($r1) in <com.csipsimple.models.Filter: boolean isCallableNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: boolean stopProcessing(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke r5.<com.csipsimple.models.Filter: java.lang.String rewrite(java.lang.String)>($r1) in <com.csipsimple.models.Filter: boolean isCallableNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: java.lang.String rewrite(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r5.<com.csipsimple.models.Filter: boolean mustCall(android.content.Context,java.lang.String)>($r0, $r1) in <com.csipsimple.models.Filter: boolean isMustCallNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: boolean mustCall(android.content.Context,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r5.<com.csipsimple.models.Filter: boolean stopProcessing(java.lang.String)>($r1) in <com.csipsimple.models.Filter: boolean isMustCallNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: boolean stopProcessing(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke r5.<com.csipsimple.models.Filter: java.lang.String rewrite(java.lang.String)>($r1) in <com.csipsimple.models.Filter: boolean isMustCallNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: java.lang.String rewrite(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Filter", "Invalid pattern ", $r1) in <com.csipsimple.models.Filter: void logInvalidPattern(java.util.regex.PatternSyntaxException)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)>($r0, $l0) in <com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)>
VIRTUAL edge: $r6 = virtualinvoke r5.<com.csipsimple.models.Filter: java.lang.String rewrite(java.lang.String)>(r1) in <com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: java.lang.String rewrite(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r5.<com.csipsimple.models.Filter: boolean stopProcessing(java.lang.String)>($r6) in <com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)> ==> <com.csipsimple.models.Filter: boolean stopProcessing(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.models.Filter: void logInvalidPattern(java.util.regex.PatternSyntaxException)>($r5) in <com.csipsimple.models.Filter: boolean autoAnswer(java.lang.String)> ==> <com.csipsimple.models.Filter: void logInvalidPattern(java.util.regex.PatternSyntaxException)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.models.Filter: void logInvalidPattern(java.util.regex.PatternSyntaxException)>($r5) in <com.csipsimple.models.Filter: boolean canCall(java.lang.String)> ==> <com.csipsimple.models.Filter: void logInvalidPattern(java.util.regex.PatternSyntaxException)>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForMatcher()>() in <com.csipsimple.models.Filter: java.lang.String getRepresentation(android.content.Context)> ==> <com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForMatcher()>
SPECIAL edge: specialinvoke r2.<java.lang.StringBuffer: void <init>()>() in <com.csipsimple.models.Filter: java.lang.String getRepresentation(android.content.Context)> ==> <java.lang.StringBuffer: void <init>()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getPositionForMatcher(java.lang.Integer)>($r7) in <com.csipsimple.models.Filter: java.lang.String getRepresentation(android.content.Context)> ==> <com.csipsimple.models.Filter: int getPositionForMatcher(java.lang.Integer)>
VIRTUAL edge: virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8) in <com.csipsimple.models.Filter: java.lang.String getRepresentation(android.content.Context)> ==> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForReplace()>() in <com.csipsimple.models.Filter: java.lang.String getRepresentation(android.content.Context)> ==> <com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForReplace()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getPositionForReplace(java.lang.Integer)>($r7) in <com.csipsimple.models.Filter: java.lang.String getRepresentation(android.content.Context)> ==> <com.csipsimple.models.Filter: int getPositionForReplace(java.lang.Integer)>
VIRTUAL edge: $r8 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>() in <com.csipsimple.models.Filter: java.lang.String getRepresentation(android.content.Context)> ==> <java.lang.StringBuffer: java.lang.String toString()>
VIRTUAL edge: $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6) in <com.csipsimple.models.Filter: boolean mustCall(android.content.Context,java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.utils.bluetooth.BluetoothWrapper: com.csipsimple.utils.bluetooth.BluetoothWrapper getInstance(android.content.Context)>($r1) in <com.csipsimple.models.Filter: boolean mustCall(android.content.Context,java.lang.String)> ==> <com.csipsimple.utils.bluetooth.BluetoothWrapper: com.csipsimple.utils.bluetooth.BluetoothWrapper getInstance(android.content.Context)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.models.Filter: void logInvalidPattern(java.util.regex.PatternSyntaxException)>($r8) in <com.csipsimple.models.Filter: boolean mustCall(android.content.Context,java.lang.String)> ==> <com.csipsimple.models.Filter: void logInvalidPattern(java.util.regex.PatternSyntaxException)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.models.Filter: void logInvalidPattern(java.util.regex.PatternSyntaxException)>($r8) in <com.csipsimple.models.Filter: java.lang.String rewrite(java.lang.String)> ==> <com.csipsimple.models.Filter: void logInvalidPattern(java.util.regex.PatternSyntaxException)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Filter", "Out of bounds ", r7) in <com.csipsimple.models.Filter: java.lang.String rewrite(java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4) in <com.csipsimple.models.Filter: void setMatcherRepresentation(com.csipsimple.models.Filter$RegExpRepresentation)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) in <com.csipsimple.models.Filter: void setReplaceRepresentation(com.csipsimple.models.Filter$RegExpRepresentation)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.models.Filter: void logInvalidPattern(java.util.regex.PatternSyntaxException)>($r5) in <com.csipsimple.models.Filter: boolean stopProcessing(java.lang.String)> ==> <com.csipsimple.models.Filter: void logInvalidPattern(java.util.regex.PatternSyntaxException)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.EasyBell: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.EasyBell: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) in <com.csipsimple.wizards.impl.EasyBell: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("tcp_keep_alive_interval_mobile", "90") in <com.csipsimple.wizards.impl.EasyBell: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.db.DBAdapter: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.db.DBAdapter$DatabaseHelper: void <init>(android.content.Context)>($r1) in <com.csipsimple.db.DBAdapter: void <init>(android.content.Context)> ==> <com.csipsimple.db.DBAdapter$DatabaseHelper: void <init>(android.content.Context)>
STATIC edge: staticinvoke <com.csipsimple.db.DBAdapter: void addColumn(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String)>($r0, $r1, $r2, $r3) in <com.csipsimple.db.DBAdapter: void access$0(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.db.DBAdapter: void addColumn(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>() in <com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)> ==> <java.lang.Class: java.lang.String getSimpleName()>
VIRTUAL edge: $r4 = virtualinvoke $r5.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>() in <com.actionbarsherlock.app.SherlockListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>() in <com.csipsimple.wizards.impl.XNet: void <init>()> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.XNet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.XNet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.XNet: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.XNet: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.XNet: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.XNet: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.XNet: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.XNet: void hidePreference(java.lang.String,java.lang.String)>(null, $r4) in <com.csipsimple.wizards.impl.XNet: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void hidePreference(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.XNet: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.XNet: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.ActionBar$Tab: void <init>()>() in <com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void <init>(com.actionbarsherlock.internal.app.ActionBarWrapper,android.app.ActionBar$Tab)> ==> <com.actionbarsherlock.app.ActionBar$Tab: void <init>()>
STATIC edge: $r6 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarWrapper: android.app.Activity access$0(com.actionbarsherlock.internal.app.ActionBarWrapper)>($r5) in <com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction)> ==> <com.actionbarsherlock.internal.app.ActionBarWrapper: android.app.Activity access$0(com.actionbarsherlock.internal.app.ActionBarWrapper)>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarWrapper: android.support.v4.app.FragmentTransaction access$1(com.actionbarsherlock.internal.app.ActionBarWrapper)>($r4) in <com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction)> ==> <com.actionbarsherlock.internal.app.ActionBarWrapper: android.support.v4.app.FragmentTransaction access$1(com.actionbarsherlock.internal.app.ActionBarWrapper)>
STATIC edge: $r6 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarWrapper: android.app.Activity access$0(com.actionbarsherlock.internal.app.ActionBarWrapper)>($r4) in <com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction)> ==> <com.actionbarsherlock.internal.app.ActionBarWrapper: android.app.Activity access$0(com.actionbarsherlock.internal.app.ActionBarWrapper)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.app.ActionBarWrapper: void access$2(com.actionbarsherlock.internal.app.ActionBarWrapper,android.support.v4.app.FragmentTransaction)>($r4, $r5) in <com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction)> ==> <com.actionbarsherlock.internal.app.ActionBarWrapper: void access$2(com.actionbarsherlock.internal.app.ActionBarWrapper,android.support.v4.app.FragmentTransaction)>
STATIC edge: $r6 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarWrapper: android.app.Activity access$0(com.actionbarsherlock.internal.app.ActionBarWrapper)>($r5) in <com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction)> ==> <com.actionbarsherlock.internal.app.ActionBarWrapper: android.app.Activity access$0(com.actionbarsherlock.internal.app.ActionBarWrapper)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.app.ActionBarWrapper: void access$2(com.actionbarsherlock.internal.app.ActionBarWrapper,android.support.v4.app.FragmentTransaction)>($r5, $r9) in <com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction)> ==> <com.actionbarsherlock.internal.app.ActionBarWrapper: void access$2(com.actionbarsherlock.internal.app.ActionBarWrapper,android.support.v4.app.FragmentTransaction)>
VIRTUAL edge: virtualinvoke $r2.<android.app.ActionBar$Tab: android.app.ActionBar$Tab setTabListener(android.app.ActionBar$TabListener)>($r3) in <com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener)> ==> <com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>
VIRTUAL edge: virtualinvoke $r2.<android.app.ActionBar$Tab: android.app.ActionBar$Tab setTabListener(android.app.ActionBar$TabListener)>($r3) in <com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener)> ==> <com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>
VIRTUAL edge: virtualinvoke $r2.<android.app.ActionBar$Tab: android.app.ActionBar$Tab setTabListener(android.app.ActionBar$TabListener)>($r3) in <com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener)> ==> <com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.impl.VoipMS$1: void <init>()>() in <com.csipsimple.wizards.impl.VoipMS: void <clinit>()> ==> <com.csipsimple.wizards.impl.VoipMS$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.VoipMS: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.VoipMS: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.wizards.impl.VoipMS: android.preference.Preference findPreference(java.lang.String)>("provider_list") in <com.csipsimple.wizards.impl.VoipMS: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.VoipMS: void addPreference(android.preference.Preference)>($r7) in <com.csipsimple.wizards.impl.VoipMS: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void addPreference(android.preference.Preference)>
VIRTUAL edge: z0 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2) in <com.csipsimple.wizards.impl.VoipMS: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.VoipMS: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void updateDescriptions()>() in <com.csipsimple.wizards.impl.VoipMS: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void updateDescriptions()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.VoipMS: void setStringFieldSummary(java.lang.String)>("provider_list") in <com.csipsimple.wizards.impl.VoipMS: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int)>("PJSIP_EVENT_UNKNOWN", 0) in <org.pjsip.pjsua.pjsip_event_id_e: void <clinit>()> ==> <org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsip_event_id_e$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsip_event_id_e$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_event_id_e$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsip_event_id_e$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_event_id_e$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsip_event_id_e$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_event_id_e)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_event_id_e)> ==> <org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_event_id_e$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_event_id_e)> ==> <org.pjsip.pjsua.pjsip_event_id_e$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsip_event_id_e: org.pjsip.pjsua.pjsip_event_id_e swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_transport_info: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_transport_info: void <init>()> ==> <org.pjsip.pjsua.pjsua_transport_info: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_transport_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_transport_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_transport_info: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_transport_info: void delete()>() in <org.pjsip.pjsua.pjsua_transport_info: void finalize()> ==> <org.pjsip.pjsua.pjsua_transport_info: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_transport_info: org.pjsip.pjsua.pj_str_t getInfo()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_transport_info: org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr getLocal_addr()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_transport_info: org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port getLocal_name()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsip_transport_type_e: org.pjsip.pjsua.pjsip_transport_type_e swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_transport_info: org.pjsip.pjsua.pjsip_transport_type_e getType()> ==> <org.pjsip.pjsua.pjsip_transport_type_e: org.pjsip.pjsua.pjsip_transport_type_e swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_transport_info: org.pjsip.pjsua.pj_str_t getType_name()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_transport_info: void setInfo(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr)>($r1) in <org.pjsip.pjsua.pjsua_transport_info: void setLocal_addr(org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port)>($r1) in <org.pjsip.pjsua.pjsua_transport_info: void setLocal_name(org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsip_transport_type_e: int swigValue()>() in <org.pjsip.pjsua.pjsua_transport_info: void setType(org.pjsip.pjsua.pjsip_transport_type_e)> ==> <org.pjsip.pjsua.pjsip_transport_type_e: int swigValue()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_transport_info: void setType_name(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R$attr: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjmedia_srtp_use)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjmedia_srtp_use)> ==> <org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjmedia_srtp_use)> ==> <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_endpt: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_endpt: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_endpt: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_endpt: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Zeng: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Zeng: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.ui.account.AccountEditFragment: void <init>()>() in <com.csipsimple.ui.account.AccountEditFragment: com.csipsimple.ui.account.AccountEditFragment newInstance(long)> ==> <com.csipsimple.ui.account.AccountEditFragment: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>($r1) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
VIRTUAL edge: $r3 = virtualinvoke r2.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: com.actionbarsherlock.app.ActionBar$Tab getTab()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener: void onClick(android.view.View)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: com.actionbarsherlock.app.ActionBar$Tab getTab()>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>($r4) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener: void onClick(android.view.View)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("RewriterPlugin", "Can\'t acquire run semaphore... problem...") in <com.csipsimple.utils.RewriterPlugin$OnRewriteReceiver: java.lang.String getResult()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("RewriterPlugin", "Rewriter receive") in <com.csipsimple.utils.RewriterPlugin$OnRewriteReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131427920) in <com.csipsimple.wizards.impl.Advanced$1: void <init>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void <init>()> ==> <org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void delete()>() in <org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void finalize()> ==> <org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_call_vid_strm_op_param: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index getCap_dev()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjmedia_dir: org.pjsip.pjsua.pjmedia_dir swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_call_vid_strm_op_param: org.pjsip.pjsua.pjmedia_dir getDir()> ==> <org.pjsip.pjsua.pjmedia_dir: org.pjsip.pjsua.pjmedia_dir swigToEnum(int)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>($r1) in <org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void setCap_dev(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjmedia_dir: int swigValue()>() in <org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void setDir(org.pjsip.pjsua.pjmedia_dir)> ==> <org.pjsip.pjsua.pjmedia_dir: int swigValue()>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_med_tp_state_info: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_med_tp_state_info: void <init>()> ==> <org.pjsip.pjsua.pjsua_med_tp_state_info: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_med_tp_state_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_med_tp_state_info: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_med_tp_state_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_med_tp_state_info: void delete()>() in <org.pjsip.pjsua.pjsua_med_tp_state_info: void finalize()> ==> <org.pjsip.pjsua.pjsua_med_tp_state_info: void delete()>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsua_med_tp_st: org.pjsip.pjsua.pjsua_med_tp_st swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_med_tp_state_info: org.pjsip.pjsua.pjsua_med_tp_st getState()> ==> <org.pjsip.pjsua.pjsua_med_tp_st: org.pjsip.pjsua.pjsua_med_tp_st swigToEnum(int)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_med_tp_st: int swigValue()>() in <org.pjsip.pjsua.pjsua_med_tp_state_info: void setState(org.pjsip.pjsua.pjsua_med_tp_st)> ==> <org.pjsip.pjsua.pjsua_med_tp_st: int swigValue()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R$anim: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $r6 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.service.SipWakeLock access$8(com.csipsimple.service.SipService)>(r5) in <com.csipsimple.service.SipService$SipServiceExecutor: void executeInternal(java.lang.Runnable)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipWakeLock access$8(com.csipsimple.service.SipService)>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.service.SipWakeLock: void release(java.lang.Object)>($r1) in <com.csipsimple.service.SipService$SipServiceExecutor: void executeInternal(java.lang.Runnable)> ==> <com.csipsimple.service.SipWakeLock: void release(java.lang.Object)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SIP SRV", $r8, r2) in <com.csipsimple.service.SipService$SipServiceExecutor: void executeInternal(java.lang.Runnable)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipServiceExecutor: void executeInternal(java.lang.Runnable)>($r3) in <com.csipsimple.service.SipService$SipServiceExecutor: void handleMessage(android.os.Message)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void executeInternal(java.lang.Runnable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("SIP SRV", $r5) in <com.csipsimple.service.SipService$SipServiceExecutor: void handleMessage(android.os.Message)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_create_media_transport_flag$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.ui.incall.AccelerometerListener: void access$0(com.csipsimple.ui.incall.AccelerometerListener,double,double,double)>($r2, $d0, $d1, $d2) in <com.csipsimple.ui.incall.AccelerometerListener$1: void onSensorChanged(android.hardware.SensorEvent)> ==> <com.csipsimple.ui.incall.AccelerometerListener: void access$0(com.csipsimple.ui.incall.AccelerometerListener,double,double,double)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>(r0) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>(r0) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>(r0) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>(r0) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$4(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$4(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void access$5(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,boolean)>($r2, 0) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void access$5(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.PresenceManager$1: void <init>(com.csipsimple.service.PresenceManager,java.util.List)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r6 = staticinvoke <com.csipsimple.service.PresenceManager: com.csipsimple.service.SipService access$1(com.csipsimple.service.PresenceManager)>($r5) in <com.csipsimple.service.PresenceManager$1: void doRun()> ==> <com.csipsimple.service.PresenceManager: com.csipsimple.service.SipService access$1(com.csipsimple.service.PresenceManager)>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.service.SipService: int addBuddy(java.lang.String)>(r4) in <com.csipsimple.service.PresenceManager$1: void doRun()> ==> <com.csipsimple.service.SipService: int addBuddy(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.PresenceManager$2: void <init>(com.csipsimple.service.PresenceManager,java.util.List)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.PresenceManager: com.csipsimple.service.SipService access$1(com.csipsimple.service.PresenceManager)>($r1) in <com.csipsimple.service.PresenceManager$2: void doRun()> ==> <com.csipsimple.service.PresenceManager: com.csipsimple.service.SipService access$1(com.csipsimple.service.PresenceManager)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.SipService: void removeBuddy(java.lang.String)>(r6) in <com.csipsimple.service.PresenceManager$2: void doRun()> ==> <com.csipsimple.service.SipService: void removeBuddy(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.InCallCard$LoadCallerInfoMessage: void <init>(com.csipsimple.ui.incall.InCallCard,com.csipsimple.ui.incall.InCallCard,com.csipsimple.models.CallerInfo)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1) in <com.csipsimple.ui.calllog.CallDetailHistoryAdapter: java.lang.String formatDuration(long)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.ui.calllog.CallDetailHistoryAdapter: java.lang.Object getItem(int)>($i0) in <com.csipsimple.ui.calllog.CallDetailHistoryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.ui.calllog.CallDetailHistoryAdapter: java.lang.Object getItem(int)>
VIRTUAL edge: virtualinvoke r8.<com.csipsimple.ui.calllog.CallTypeIconsView: void clear()>() in <com.csipsimple.ui.calllog.CallDetailHistoryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.ui.calllog.CallTypeIconsView: void clear()>
VIRTUAL edge: virtualinvoke r8.<com.csipsimple.ui.calllog.CallTypeIconsView: void add(int)>($i0) in <com.csipsimple.ui.calllog.CallDetailHistoryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.ui.calllog.CallTypeIconsView: void add(int)>
SPECIAL edge: $i2 = specialinvoke r0.<com.csipsimple.ui.calllog.CallDetailHistoryAdapter: int getCallTypeText(int)>($i0) in <com.csipsimple.ui.calllog.CallDetailHistoryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.ui.calllog.CallDetailHistoryAdapter: int getCallTypeText(int)>
SPECIAL edge: $r15 = specialinvoke r0.<com.csipsimple.ui.calllog.CallDetailHistoryAdapter: java.lang.String formatDuration(long)>($l1) in <com.csipsimple.ui.calllog.CallDetailHistoryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.ui.calllog.CallDetailHistoryAdapter: java.lang.String formatDuration(long)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r11.<com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: void <init>(com.csipsimple.wizards.impl.AccountCreationWebview)>(r0) in <com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: void <init>(com.csipsimple.wizards.impl.AccountCreationWebview)>
SPECIAL edge: specialinvoke $r12.<com.csipsimple.wizards.impl.AccountCreationWebview$1: void <init>(com.csipsimple.wizards.impl.AccountCreationWebview)>(r0) in <com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview$1: void <init>(com.csipsimple.wizards.impl.AccountCreationWebview)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void <init>(com.actionbarsherlock.internal.widget.IcsAbsSpinner)> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void access$2(com.actionbarsherlock.internal.widget.IcsAbsSpinner,android.view.View,boolean)>($r2, r4, 1) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void clear()> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void access$2(com.actionbarsherlock.internal.widget.IcsAbsSpinner,android.view.View,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R$attr: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.InCallActivity$4: void <init>(com.csipsimple.ui.incall.InCallActivity)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.InCallActivity$3: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.SipCallSession,java.util.ArrayList)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.ISipService access$0(com.csipsimple.ui.incall.InCallActivity)>($r3) in <com.csipsimple.ui.incall.InCallActivity$3: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.ISipService access$0(com.csipsimple.ui.incall.InCallActivity)>
VIRTUAL edge: $i1 = virtualinvoke $r5.<com.csipsimple.api.SipCallSession: int getCallId()>() in <com.csipsimple.ui.incall.InCallActivity$3: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.api.SipCallSession: int getCallId()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("InCallActivity", "Was not able to call service method", r2) in <com.csipsimple.ui.incall.InCallActivity$3: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)>($r2) in <com.csipsimple.ui.incall.InCallActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)>
STATIC edge: staticinvoke <com.csipsimple.ui.incall.InCallActivity: void access$5(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.ISipService)>($r4, $r5) in <com.csipsimple.ui.incall.InCallActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.incall.InCallActivity: void access$5(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.ISipService)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.ISipService access$0(com.csipsimple.ui.incall.InCallActivity)>($r6) in <com.csipsimple.ui.incall.InCallActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.ISipService access$0(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: staticinvoke <com.csipsimple.ui.incall.InCallActivity: void access$2(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.SipCallSession[])>($r4, $r7) in <com.csipsimple.ui.incall.InCallActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.incall.InCallActivity: void access$2(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.SipCallSession[])>
STATIC edge: staticinvoke <com.csipsimple.ui.incall.InCallActivity: void access$6(com.csipsimple.ui.incall.InCallActivity,boolean)>($r4, 1) in <com.csipsimple.ui.incall.InCallActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.incall.InCallActivity: void access$6(com.csipsimple.ui.incall.InCallActivity,boolean)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable)>($r6, null) in <com.csipsimple.ui.incall.InCallActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.incall.InCallActivity: void runOnUiThread(java.lang.Runnable)>($r8) in <com.csipsimple.ui.incall.InCallActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable)>($r6, null) in <com.csipsimple.ui.incall.InCallActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.incall.InCallActivity: void runOnUiThread(java.lang.Runnable)>($r9) in <com.csipsimple.ui.incall.InCallActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void run()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("InCallActivity", "Can\'t get back the call", r3) in <com.csipsimple.ui.incall.InCallActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <com.csipsimple.ui.incall.InCallActivity: void access$6(com.csipsimple.ui.incall.InCallActivity,boolean)>($r2, 0) in <com.csipsimple.ui.incall.InCallActivity$2: void onServiceDisconnected(android.content.ComponentName)> ==> <com.csipsimple.ui.incall.InCallActivity: void access$6(com.csipsimple.ui.incall.InCallActivity,boolean)>
STATIC edge: staticinvoke <com.csipsimple.ui.incall.InCallActivity: void access$2(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.SipCallSession[])>($r2, null) in <com.csipsimple.ui.incall.InCallActivity$2: void onServiceDisconnected(android.content.ComponentName)> ==> <com.csipsimple.ui.incall.InCallActivity: void access$2(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.SipCallSession[])>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("com.csipsimple.service.CALL_CHANGED") in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.ISipService access$0(com.csipsimple.ui.incall.InCallActivity)>($r4) in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.ISipService access$0(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: java.lang.Object access$1(com.csipsimple.ui.incall.InCallActivity)>($r4) in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity: java.lang.Object access$1(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: staticinvoke <com.csipsimple.ui.incall.InCallActivity: void access$2(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.SipCallSession[])>($r4, $r8) in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity: void access$2(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.SipCallSession[])>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable)>($r7, null) in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.incall.InCallActivity: void runOnUiThread(java.lang.Runnable)>($r9) in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("InCallActivity", "Not able to retrieve calls") in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", $r3) in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r14 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.MediaState access$3(com.csipsimple.ui.incall.InCallActivity)>($r4) in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.MediaState access$3(com.csipsimple.ui.incall.InCallActivity)>
VIRTUAL edge: $z0 = virtualinvoke $r12.<com.csipsimple.api.MediaState: boolean equals(java.lang.Object)>($r14) in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.api.MediaState: boolean equals(java.lang.Object)>
STATIC edge: staticinvoke <com.csipsimple.ui.incall.InCallActivity: void access$4(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.MediaState)>($r4, $r12) in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity: void access$4(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.MediaState)>
SPECIAL edge: specialinvoke $r15.<com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable)>($r7, null) in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.incall.InCallActivity: void runOnUiThread(java.lang.Runnable)>($r15) in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void run()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("InCallActivity", "Can\'t get the media state ", r17) in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r18.<com.csipsimple.ui.incall.InCallActivity$ShowZRTPInfoRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,int,java.lang.String)>($r7, $i0, $r3) in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity$ShowZRTPInfoRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,int,java.lang.String)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.incall.InCallActivity: void runOnUiThread(java.lang.Runnable)>($r18) in <com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.ui.incall.InCallActivity$ShowZRTPInfoRunnable: void run()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.Log: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.service.SipService$ToCall: void <init>(java.lang.Integer,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.service.SipService$ToCall: void <init>(java.lang.Integer,java.lang.String,java.lang.String)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void closeOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchCloseOptionsMenu()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void closeOptionsMenu()> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchCloseOptionsMenu()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1) in <com.actionbarsherlock.app.SherlockExpandableListActivity: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchKeyEvent(android.view.KeyEvent)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.view.MenuInflater getMenuInflater()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()> ==> <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.view.MenuInflater getMenuInflater()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void invalidateOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchConfigurationChanged(android.content.res.Configuration)>($r1) in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchConfigurationChanged(android.content.res.Configuration)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onCreateOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>($r1) in <com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchDestroy()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onDestroy()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchDestroy()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r1) in <com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onMenuOpened(int,android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchMenuOpened(int,android.view.Menu)>($i0, $r1) in <com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onMenuOpened(int,android.view.Menu)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchMenuOpened(int,android.view.Menu)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onPanelClosed(int,android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchPanelClosed(int,android.view.Menu)>($i0, $r1) in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onPanelClosed(int,android.view.Menu)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPanelClosed(int,android.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchPause()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onPause()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPause()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchPostCreate(android.os.Bundle)>($r1) in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onPostCreate(android.os.Bundle)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchPostResume()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onPostResume()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPostResume()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>($r2) in <com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchStop()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onStop()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchStop()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onTitleChanged(java.lang.CharSequence,int)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchTitleChanged(java.lang.CharSequence,int)>($r1, $i0) in <com.actionbarsherlock.app.SherlockExpandableListActivity: void onTitleChanged(java.lang.CharSequence,int)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchTitleChanged(java.lang.CharSequence,int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void openOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchOpenOptionsMenu()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void openOptionsMenu()> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchOpenOptionsMenu()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void requestWindowFeature(long)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void setContentView(android.view.View)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void setContentView(android.view.View)>($r1) in <com.actionbarsherlock.app.SherlockExpandableListActivity: void setContentView(android.view.View)> ==> <com.actionbarsherlock.ActionBarSherlock: void setContentView(android.view.View)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void setSupportProgress(int)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void setSupportProgressBarIndeterminate(boolean)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void setSupportProgressBarIndeterminateVisibility(boolean)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void setSupportProgressBarVisibility(boolean)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void setSupportSecondaryProgress(int)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockExpandableListActivity: void supportInvalidateOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsip_redirect_op$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1) in <com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews: java.lang.String getRemoteNumber()> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.SipCel: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.SipCel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("sip:sip.sipcel.") in <com.csipsimple.wizards.impl.SipCel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <com.csipsimple.wizards.impl.SipCel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.SipCel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.SipCel: void addPreference(android.preference.Preference)>($r4) in <com.csipsimple.wizards.impl.SipCel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void addPreference(android.preference.Preference)>
VIRTUAL edge: $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>($r9) in <com.csipsimple.wizards.impl.SipCel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean startsWith(java.lang.String)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.models.Filter: void <init>()>() in <com.csipsimple.wizards.impl.SipCel: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.models.Filter: void <init>()>
STATIC edge: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.wizards.impl.SipCel: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.SipCel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("echo_cancellation", 1) in <com.csipsimple.wizards.impl.SipCel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(0) in <com.csipsimple.wizards.impl.SipCel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <java.lang.Integer: java.lang.String toString(int)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("dtmf_mode", $r2) in <com.csipsimple.wizards.impl.SipCel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("G729/8000/1", "wb", "244") in <com.csipsimple.wizards.impl.SipCel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R$anim: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R$styleable: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131427920) in <com.csipsimple.wizards.impl.Ecs$1: void <init>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallAnswerControls: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, null, 0) in <com.csipsimple.ui.incall.InCallAnswerControls: void <init>(android.content.Context)> ==> <com.csipsimple.ui.incall.InCallAnswerControls: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallAnswerControls: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0) in <com.csipsimple.ui.incall.InCallAnswerControls: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.incall.InCallAnswerControls: void <init>(android.content.Context,android.util.AttributeSet,int)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.accessibility.AccessibilityWrapper: com.csipsimple.utils.accessibility.AccessibilityWrapper getInstance()>() in <com.csipsimple.ui.incall.InCallAnswerControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.utils.accessibility.AccessibilityWrapper: com.csipsimple.utils.accessibility.AccessibilityWrapper getInstance()>
STATIC edge: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) in <com.csipsimple.ui.incall.InCallAnswerControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)>($r1, "use_alternate_unlocker", $r5) in <com.csipsimple.ui.incall.InCallAnswerControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.widgets.SlidingTab: void <init>(android.content.Context)>($r2) in <com.csipsimple.ui.incall.InCallAnswerControls: void setCallLockerVisibility(int)> ==> <com.csipsimple.widgets.SlidingTab: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.widgets.SlidingTab: void setOnLeftRightListener(com.csipsimple.widgets.IOnLeftRightChoice)>(r0) in <com.csipsimple.ui.incall.InCallAnswerControls: void setCallLockerVisibility(int)> ==> <com.csipsimple.widgets.SlidingTab: void setOnLeftRightListener(com.csipsimple.widgets.IOnLeftRightChoice)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.widgets.SlidingTab: void setLeftHintText(int)>(2131427384) in <com.csipsimple.ui.incall.InCallAnswerControls: void setCallLockerVisibility(int)> ==> <com.csipsimple.widgets.SlidingTab: void setLeftHintText(int)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.widgets.SlidingTab: void setRightHintText(int)>(2131427385) in <com.csipsimple.ui.incall.InCallAnswerControls: void setCallLockerVisibility(int)> ==> <com.csipsimple.widgets.SlidingTab: void setRightHintText(int)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.widgets.AlternateUnlocker: void <init>(android.content.Context)>($r2) in <com.csipsimple.ui.incall.InCallAnswerControls: void setCallLockerVisibility(int)> ==> <com.csipsimple.widgets.AlternateUnlocker: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.widgets.AlternateUnlocker: void setOnLeftRightListener(com.csipsimple.widgets.IOnLeftRightChoice)>(r0) in <com.csipsimple.ui.incall.InCallAnswerControls: void setCallLockerVisibility(int)> ==> <com.csipsimple.widgets.AlternateUnlocker: void setOnLeftRightListener(com.csipsimple.widgets.IOnLeftRightChoice)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>("ic_jog_dial_answer") in <com.csipsimple.ui.incall.InCallAnswerControls: void applyTheme(com.csipsimple.utils.Theme)> ==> <com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.widgets.SlidingTab: void setLeftTabDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r3, $r4, $r5, $r6) in <com.csipsimple.ui.incall.InCallAnswerControls: void applyTheme(com.csipsimple.utils.Theme)> ==> <com.csipsimple.widgets.SlidingTab: void setLeftTabDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.widgets.SlidingTab: void setRightTabDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r3, $r4, $r5, $r6) in <com.csipsimple.ui.incall.InCallAnswerControls: void applyTheme(com.csipsimple.utils.Theme)> ==> <com.csipsimple.widgets.SlidingTab: void setRightTabDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallAnswerControls", $r3) in <com.csipsimple.ui.incall.InCallAnswerControls: boolean onKeyDown(int,android.view.KeyEvent)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallAnswerControls: void dispatchTriggerEvent(int)>(2) in <com.csipsimple.ui.incall.InCallAnswerControls: boolean onKeyDown(int,android.view.KeyEvent)> ==> <com.csipsimple.ui.incall.InCallAnswerControls: void dispatchTriggerEvent(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallAnswerControls", $r2) in <com.csipsimple.ui.incall.InCallAnswerControls: void onLeftRightChoice(int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.widgets.SlidingTab: void resetView()>() in <com.csipsimple.ui.incall.InCallAnswerControls: void onLeftRightChoice(int)> ==> <com.csipsimple.widgets.SlidingTab: void resetView()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallAnswerControls: void dispatchTriggerEvent(int)>(2) in <com.csipsimple.ui.incall.InCallAnswerControls: void onLeftRightChoice(int)> ==> <com.csipsimple.ui.incall.InCallAnswerControls: void dispatchTriggerEvent(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallAnswerControls: void setCallLockerVisibility(int)>(8) in <com.csipsimple.ui.incall.InCallAnswerControls: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.ui.incall.InCallAnswerControls: void setCallLockerVisibility(int)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.ui.incall.InCallAnswerControls: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isIncoming()>() in <com.csipsimple.ui.incall.InCallAnswerControls: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: boolean isIncoming()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Beeztel: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Beeztel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Beeztel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Beeztel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.Beeztel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("PCMU/8000/1", "wb", "0") in <com.csipsimple.wizards.impl.Beeztel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void <init>(com.actionbarsherlock.widget.ActivityChooserModel)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void <init>(com.actionbarsherlock.widget.ActivityChooserModel)>($r1) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader)> ==> <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void <init>(com.actionbarsherlock.widget.ActivityChooserModel)>
STATIC edge: $r8 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: android.content.Context access$0(com.actionbarsherlock.widget.ActivityChooserModel)>($r7) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: android.content.Context access$0(com.actionbarsherlock.widget.ActivityChooserModel)>
STATIC edge: $r9 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String access$1(com.actionbarsherlock.widget.ActivityChooserModel)>($r7) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String access$1(com.actionbarsherlock.widget.ActivityChooserModel)>
VIRTUAL edge: $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r12) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void run()> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Share records file does not start with historical-records tag.") in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void run()> ==> <org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>
STATIC edge: $r9 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String access$8()>() in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String access$8()>
STATIC edge: $r14 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object access$2(com.actionbarsherlock.widget.ActivityChooserModel)>($r7) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object access$2(com.actionbarsherlock.widget.ActivityChooserModel)>
STATIC edge: $r15 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: java.util.List access$3(com.actionbarsherlock.widget.ActivityChooserModel)>($r7) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: java.util.List access$3(com.actionbarsherlock.widget.ActivityChooserModel)>
SPECIAL edge: specialinvoke r3.<com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: void <init>(java.lang.String,long,float)>($r9, $l2, $f0) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: void <init>(java.lang.String,long,float)>
STATIC edge: staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: void access$4(com.actionbarsherlock.widget.ActivityChooserModel,boolean)>($r7, 1) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void access$4(com.actionbarsherlock.widget.ActivityChooserModel,boolean)>
STATIC edge: $r20 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: android.os.Handler access$5(com.actionbarsherlock.widget.ActivityChooserModel)>($r7) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: android.os.Handler access$5(com.actionbarsherlock.widget.ActivityChooserModel)>
SPECIAL edge: specialinvoke $r21.<com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1: void <init>(com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader)>(r0) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1: void <init>(com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader)>
VIRTUAL edge: virtualinvoke $r20.<android.os.Handler: boolean post(java.lang.Runnable)>($r21) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void run()> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.widgets.AccountChooserButton$2: void <init>(com.csipsimple.widgets.AccountChooserButton)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.widgets.HorizontalQuickActionWindow access$1(com.csipsimple.widgets.AccountChooserButton)>($r3) in <com.csipsimple.widgets.AccountChooserButton$2: void onLoad(com.csipsimple.utils.CallHandlerPlugin)> ==> <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.widgets.HorizontalQuickActionWindow access$1(com.csipsimple.widgets.AccountChooserButton)>
VIRTUAL edge: $r5 = virtualinvoke $r1.<com.csipsimple.utils.CallHandlerPlugin: android.graphics.drawable.Drawable getIconDrawable()>() in <com.csipsimple.widgets.AccountChooserButton$2: void onLoad(com.csipsimple.utils.CallHandlerPlugin)> ==> <com.csipsimple.utils.CallHandlerPlugin: android.graphics.drawable.Drawable getIconDrawable()>
VIRTUAL edge: $r6 = virtualinvoke $r1.<com.csipsimple.utils.CallHandlerPlugin: java.lang.String getLabel()>() in <com.csipsimple.widgets.AccountChooserButton$2: void onLoad(com.csipsimple.utils.CallHandlerPlugin)> ==> <com.csipsimple.utils.CallHandlerPlugin: java.lang.String getLabel()>
VIRTUAL edge: $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toString()>() in <com.csipsimple.widgets.AccountChooserButton$2: void onLoad(com.csipsimple.utils.CallHandlerPlugin)> ==> <java.lang.String: java.lang.String toString()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.widgets.AccountChooserButton$2$1: void <init>(com.csipsimple.widgets.AccountChooserButton$2,com.csipsimple.utils.CallHandlerPlugin)>(r0, $r1) in <com.csipsimple.widgets.AccountChooserButton$2: void onLoad(com.csipsimple.utils.CallHandlerPlugin)> ==> <com.csipsimple.widgets.AccountChooserButton$2$1: void <init>(com.csipsimple.widgets.AccountChooserButton$2,com.csipsimple.utils.CallHandlerPlugin)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)>($r5, $r6, $r2) in <com.csipsimple.widgets.AccountChooserButton$2: void onLoad(com.csipsimple.utils.CallHandlerPlugin)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)>($r5, $r6, $r2) in <com.csipsimple.widgets.AccountChooserButton$2: void onLoad(com.csipsimple.utils.CallHandlerPlugin)> ==> <com.csipsimple.widgets.AccountChooserButton$2$1: void onClick(android.view.View)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.widgets.AccountChooserButton$1: void <init>(com.csipsimple.widgets.AccountChooserButton,com.csipsimple.api.SipProfile)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)>($r2) in <com.csipsimple.widgets.AccountChooserButton$1: void onClick(android.view.View)> ==> <com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.widgets.HorizontalQuickActionWindow access$1(com.csipsimple.widgets.AccountChooserButton)>($r4) in <com.csipsimple.widgets.AccountChooserButton$1: void onClick(android.view.View)> ==> <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.widgets.HorizontalQuickActionWindow access$1(com.csipsimple.widgets.AccountChooserButton)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat$1: void <init>(com.actionbarsherlock.internal.ActionBarSherlockCompat)> ==> <java.lang.Object: void <init>()>
STATIC edge: $z0 = staticinvoke <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean access$4(com.actionbarsherlock.internal.ActionBarSherlockCompat)>($r1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat$1: void run()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean access$4(com.actionbarsherlock.internal.ActionBarSherlockCompat)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.ActionBarSherlockCompat: android.app.Activity access$1(com.actionbarsherlock.internal.ActionBarSherlockCompat)>($r1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat$1: void run()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: android.app.Activity access$1(com.actionbarsherlock.internal.ActionBarSherlockCompat)>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.internal.view.menu.MenuBuilder access$5(com.actionbarsherlock.internal.ActionBarSherlockCompat)>($r1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat$1: void run()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.internal.view.menu.MenuBuilder access$5(com.actionbarsherlock.internal.ActionBarSherlockCompat)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchInvalidateOptionsMenu()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat$1: void run()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchInvalidateOptionsMenu()>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_stream_stat: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_stream_stat: void <init>()> ==> <org.pjsip.pjsua.pjsua_stream_stat: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_stream_stat: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_stream_stat: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_stream_stat: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_stream_stat: void delete()>() in <org.pjsip.pjsua.pjsua_stream_stat: void finalize()> ==> <org.pjsip.pjsua.pjsua_stream_stat: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_stream_stat: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state getJbuf()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_stream_stat: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat getRtcp()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state)>($r1) in <org.pjsip.pjsua.pjsua_stream_stat: void setJbuf(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat)>($r1) in <org.pjsip.pjsua.pjsua_stream_stat: void setRtcp(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.favorites.FavAdapter: void <init>(android.content.Context,android.database.Cursor)>($r3, null) in <com.csipsimple.ui.favorites.FavListFragment: void attachAdapter()> ==> <com.csipsimple.ui.favorites.FavAdapter: void <init>(android.content.Context,android.database.Cursor)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.favorites.FavLoader: void <init>(android.content.Context)>($r3) in <com.csipsimple.ui.favorites.FavListFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)> ==> <com.csipsimple.ui.favorites.FavLoader: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.favorites.FavListFragment: void attachAdapter()>() in <com.csipsimple.ui.favorites.FavListFragment: void onVisibilityChanged(boolean)> ==> <com.csipsimple.ui.favorites.FavListFragment: void attachAdapter()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.widgets.AccountChooserButton$2$1: void <init>(com.csipsimple.widgets.AccountChooserButton$2,com.csipsimple.utils.CallHandlerPlugin)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.widgets.AccountChooserButton$2: com.csipsimple.widgets.AccountChooserButton access$0(com.csipsimple.widgets.AccountChooserButton$2)>($r2) in <com.csipsimple.widgets.AccountChooserButton$2$1: void onClick(android.view.View)> ==> <com.csipsimple.widgets.AccountChooserButton$2: com.csipsimple.widgets.AccountChooserButton access$0(com.csipsimple.widgets.AccountChooserButton$2)>
VIRTUAL edge: $r5 = virtualinvoke $r4.<com.csipsimple.utils.CallHandlerPlugin: com.csipsimple.api.SipProfile getFakeProfile()>() in <com.csipsimple.widgets.AccountChooserButton$2$1: void onClick(android.view.View)> ==> <com.csipsimple.utils.CallHandlerPlugin: com.csipsimple.api.SipProfile getFakeProfile()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)>($r5) in <com.csipsimple.widgets.AccountChooserButton$2$1: void onClick(android.view.View)> ==> <com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.widgets.HorizontalQuickActionWindow access$1(com.csipsimple.widgets.AccountChooserButton)>($r3) in <com.csipsimple.widgets.AccountChooserButton$2$1: void onClick(android.view.View)> ==> <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.widgets.HorizontalQuickActionWindow access$1(com.csipsimple.widgets.AccountChooserButton)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("AccountChooserButton", $r2) in <com.csipsimple.widgets.AccountChooserButton$AccountStatusContentObserver: void onChange(boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.widgets.AccountChooserButton: void access$0(com.csipsimple.widgets.AccountChooserButton)>($r3) in <com.csipsimple.widgets.AccountChooserButton$AccountStatusContentObserver: void onChange(boolean)> ==> <com.csipsimple.widgets.AccountChooserButton: void access$0(com.csipsimple.widgets.AccountChooserButton)>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.utils.contacts.ContactsAutocompleteAdapter: void <init>(android.content.Context)>($r1) in <com.csipsimple.widgets.EditSipUri: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.utils.contacts.ContactsAutocompleteAdapter: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r10.<com.csipsimple.widgets.EditSipUri$1: void <init>(com.csipsimple.widgets.EditSipUri)>(r0) in <com.csipsimple.widgets.EditSipUri: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.EditSipUri$1: void <init>(com.csipsimple.widgets.EditSipUri)>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.widgets.AccountChooserButton: void setOnAccountChangeListener(com.csipsimple.widgets.AccountChooserButton$OnAccountChangeListener)>($r10) in <com.csipsimple.widgets.EditSipUri: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.EditSipUri$1: void onChooseAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.widgets.AccountChooserButton: void setOnAccountChangeListener(com.csipsimple.widgets.AccountChooserButton$OnAccountChangeListener)>($r10) in <com.csipsimple.widgets.EditSipUri: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.AccountChooserButton: void setOnAccountChangeListener(com.csipsimple.widgets.AccountChooserButton$OnAccountChangeListener)>
VIRTUAL edge: virtualinvoke $r5.<android.widget.AutoCompleteTextView: void addTextChangedListener(android.text.TextWatcher)>(r0) in <com.csipsimple.widgets.EditSipUri: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.EditSipUri: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
VIRTUAL edge: virtualinvoke $r5.<android.widget.AutoCompleteTextView: void addTextChangedListener(android.text.TextWatcher)>(r0) in <com.csipsimple.widgets.EditSipUri: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.EditSipUri: void onTextChanged(java.lang.CharSequence,int,int,int)>
VIRTUAL edge: virtualinvoke $r5.<android.widget.AutoCompleteTextView: void addTextChangedListener(android.text.TextWatcher)>(r0) in <com.csipsimple.widgets.EditSipUri: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.EditSipUri: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
VIRTUAL edge: virtualinvoke $r5.<android.widget.AutoCompleteTextView: void addTextChangedListener(android.text.TextWatcher)>(r0) in <com.csipsimple.widgets.EditSipUri: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.EditSipUri: void afterTextChanged(android.text.Editable)>
STATIC edge: $r11 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.widgets.EditSipUri: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
SPECIAL edge: specialinvoke $r13.<com.csipsimple.widgets.EditSipUri$ContactAdapter: void <init>(com.csipsimple.widgets.EditSipUri,android.content.Context,android.database.Cursor)>(r0, $r1, $r12) in <com.csipsimple.widgets.EditSipUri: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.EditSipUri$ContactAdapter: void <init>(com.csipsimple.widgets.EditSipUri,android.content.Context,android.database.Cursor)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.widgets.EditSipUri: void updateDialTextHelper()>() in <com.csipsimple.widgets.EditSipUri: void access$0(com.csipsimple.widgets.EditSipUri)> ==> <com.csipsimple.widgets.EditSipUri: void updateDialTextHelper()>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.widgets.AccountChooserButton: void setChangeable(boolean)>($z0) in <com.csipsimple.widgets.EditSipUri: void updateDialTextHelper()> ==> <com.csipsimple.widgets.AccountChooserButton: void setChangeable(boolean)>
VIRTUAL edge: $r5 = virtualinvoke $r4.<com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>() in <com.csipsimple.widgets.EditSipUri: void updateDialTextHelper()> ==> <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>
VIRTUAL edge: $r3 = virtualinvoke $r5.<com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()>() in <com.csipsimple.widgets.EditSipUri: void updateDialTextHelper()> ==> <com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.EditSipUri: void updateDialTextHelper()>() in <com.csipsimple.widgets.EditSipUri: void afterTextChanged(android.text.Editable)> ==> <com.csipsimple.widgets.EditSipUri: void updateDialTextHelper()>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>() in <com.csipsimple.widgets.EditSipUri: com.csipsimple.api.SipProfile getSelectedAccount()> ==> <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[ \t]", "") in <com.csipsimple.widgets.EditSipUri: com.csipsimple.widgets.EditSipUri$ToCall getValue()> ==> <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>() in <com.csipsimple.widgets.EditSipUri: com.csipsimple.widgets.EditSipUri$ToCall getValue()> ==> <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>
STATIC edge: $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.widgets.EditSipUri: com.csipsimple.widgets.EditSipUri$ToCall getValue()> ==> <java.lang.Long: java.lang.Long valueOf(long)>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.widgets.EditSipUri$ToCall: void <init>(com.csipsimple.widgets.EditSipUri,java.lang.Long,java.lang.String)>(r0, r4, $r3) in <com.csipsimple.widgets.EditSipUri: com.csipsimple.widgets.EditSipUri$ToCall getValue()> ==> <com.csipsimple.widgets.EditSipUri$ToCall: void <init>(com.csipsimple.widgets.EditSipUri,java.lang.Long,java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r6.<com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()>() in <com.csipsimple.widgets.EditSipUri: com.csipsimple.widgets.EditSipUri$ToCall getValue()> ==> <com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()>
VIRTUAL edge: $r6 = virtualinvoke $r5.<com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>() in <com.csipsimple.widgets.EditSipUri: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>
STATIC edge: $r8 = staticinvoke <com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)>($r7, $l1, r4) in <com.csipsimple.widgets.EditSipUri: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.EditSipUri: void setTextValue(java.lang.String)>($r8) in <com.csipsimple.widgets.EditSipUri: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.widgets.EditSipUri: void setTextValue(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("EditSipUri", r4) in <com.csipsimple.widgets.EditSipUri: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.EditSipUri: void updateDialTextHelper()>() in <com.csipsimple.widgets.EditSipUri: void onTextChanged(java.lang.CharSequence,int,int,int)> ==> <com.csipsimple.widgets.EditSipUri: void updateDialTextHelper()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.widgets.AccountChooserButton: void setShowExternals(boolean)>($z0) in <com.csipsimple.widgets.EditSipUri: void setShowExternals(boolean)> ==> <com.csipsimple.widgets.AccountChooserButton: void setShowExternals(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.EditSipUri: void clear()>() in <com.csipsimple.widgets.EditSipUri: void setTextValue(java.lang.String)> ==> <com.csipsimple.widgets.EditSipUri: void clear()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsip_timer_setting: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsip_timer_setting: void <init>()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131427920) in <com.csipsimple.wizards.impl.Betamax$2: void <init>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipCallSession$MediaState: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.pj_str_t getStorage_folder()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.dynamic_factory: long[] cArrayUnwrap(org.pjsip.pjsua.dynamic_factory[])>($r1) in <org.pjsip.pjsua.csipsimple_config: void setExtra_aud_codecs(org.pjsip.pjsua.dynamic_factory[])> ==> <org.pjsip.pjsua.dynamic_factory: long[] cArrayUnwrap(org.pjsip.pjsua.dynamic_factory[])>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.dynamic_factory: long[] cArrayUnwrap(org.pjsip.pjsua.dynamic_factory[])>($r1) in <org.pjsip.pjsua.csipsimple_config: void setExtra_vid_codecs(org.pjsip.pjsua.dynamic_factory[])> ==> <org.pjsip.pjsua.dynamic_factory: long[] cArrayUnwrap(org.pjsip.pjsua.dynamic_factory[])>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.dynamic_factory: long[] cArrayUnwrap(org.pjsip.pjsua.dynamic_factory[])>($r1) in <org.pjsip.pjsua.csipsimple_config: void setExtra_vid_codecs_destroy(org.pjsip.pjsua.dynamic_factory[])> ==> <org.pjsip.pjsua.dynamic_factory: long[] cArrayUnwrap(org.pjsip.pjsua.dynamic_factory[])>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.dynamic_factory: long getCPtr(org.pjsip.pjsua.dynamic_factory)>($r1) in <org.pjsip.pjsua.csipsimple_config: void setVid_converter(org.pjsip.pjsua.dynamic_factory)> ==> <org.pjsip.pjsua.dynamic_factory: long getCPtr(org.pjsip.pjsua.dynamic_factory)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.dynamic_factory: long getCPtr(org.pjsip.pjsua.dynamic_factory)>($r1) in <org.pjsip.pjsua.csipsimple_config: void setVideo_capture_implementation(org.pjsip.pjsua.dynamic_factory)> ==> <org.pjsip.pjsua.dynamic_factory: long getCPtr(org.pjsip.pjsua.dynamic_factory)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.dynamic_factory: long getCPtr(org.pjsip.pjsua.dynamic_factory)>($r1) in <org.pjsip.pjsua.csipsimple_config: void setVideo_render_implementation(org.pjsip.pjsua.dynamic_factory)> ==> <org.pjsip.pjsua.dynamic_factory: long getCPtr(org.pjsip.pjsua.dynamic_factory)>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.utils.Theme: void applyBackgroundStateListDrawable(android.view.View,java.lang.String)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>($r4) in <com.csipsimple.utils.Theme: void applyBackgroundStateListDrawable(android.view.View,java.lang.String)> ==> <com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>
STATIC edge: $r11 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.csipsimple.utils.Theme: void applyBackgroundStateListDrawable(android.view.View,java.lang.String)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.csipsimple.wizards.impl.MondotalkCreate$2: void <init>(com.csipsimple.wizards.impl.MondotalkCreate)> ==> <java.lang.Thread: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$5(com.csipsimple.wizards.impl.MondotalkCreate)>($r3) in <com.csipsimple.wizards.impl.MondotalkCreate$2: void run()> ==> <com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$5(com.csipsimple.wizards.impl.MondotalkCreate)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.wizards.impl.MondotalkCreate: java.lang.String access$6(com.csipsimple.wizards.impl.MondotalkCreate,android.widget.EditText)>($r2, $r4) in <com.csipsimple.wizards.impl.MondotalkCreate$2: void run()> ==> <com.csipsimple.wizards.impl.MondotalkCreate: java.lang.String access$6(com.csipsimple.wizards.impl.MondotalkCreate,android.widget.EditText)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$7(com.csipsimple.wizards.impl.MondotalkCreate)>($r3) in <com.csipsimple.wizards.impl.MondotalkCreate$2: void run()> ==> <com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$7(com.csipsimple.wizards.impl.MondotalkCreate)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$8(com.csipsimple.wizards.impl.MondotalkCreate)>($r3) in <com.csipsimple.wizards.impl.MondotalkCreate$2: void run()> ==> <com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$8(com.csipsimple.wizards.impl.MondotalkCreate)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$9(com.csipsimple.wizards.impl.MondotalkCreate)>($r3) in <com.csipsimple.wizards.impl.MondotalkCreate$2: void run()> ==> <com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$9(com.csipsimple.wizards.impl.MondotalkCreate)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$10(com.csipsimple.wizards.impl.MondotalkCreate)>($r3) in <com.csipsimple.wizards.impl.MondotalkCreate$2: void run()> ==> <com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$10(com.csipsimple.wizards.impl.MondotalkCreate)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$11(com.csipsimple.wizards.impl.MondotalkCreate)>($r3) in <com.csipsimple.wizards.impl.MondotalkCreate$2: void run()> ==> <com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$11(com.csipsimple.wizards.impl.MondotalkCreate)>
STATIC edge: staticinvoke <com.csipsimple.wizards.impl.MondotalkCreate: boolean access$12(com.csipsimple.wizards.impl.MondotalkCreate,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r5, $r6, $r7, $r8, $r9, $r10) in <com.csipsimple.wizards.impl.MondotalkCreate$2: void run()> ==> <com.csipsimple.wizards.impl.MondotalkCreate: boolean access$12(com.csipsimple.wizards.impl.MondotalkCreate,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<android.support.v4.app.LoaderManager: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>(0, $r3, r0) in <com.csipsimple.ui.messages.MessageFragment: void loadMessageContent()> ==> <com.csipsimple.ui.messages.MessageFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r2.<android.support.v4.app.LoaderManager: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>(0, $r3, r0) in <com.csipsimple.ui.messages.MessageFragment: void loadMessageContent()> ==> <com.csipsimple.ui.messages.MessageFragment: void onLoaderReset(android.support.v4.content.Loader)>
VIRTUAL edge: virtualinvoke $r2.<android.support.v4.app.LoaderManager: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>(0, $r3, r0) in <com.csipsimple.ui.messages.MessageFragment: void loadMessageContent()> ==> <com.csipsimple.ui.messages.MessageFragment: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>() in <com.csipsimple.ui.messages.MessageFragment: void sendMessage()> ==> <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>($r1, $r2) in <com.csipsimple.ui.messages.MessageFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.messages.MessageFragment$2: void <init>(com.csipsimple.ui.messages.MessageFragment)>(r0) in <com.csipsimple.ui.messages.MessageFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.messages.MessageFragment$2: void <init>(com.csipsimple.ui.messages.MessageFragment)>
INTERFACE edge: interfaceinvoke $r4.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)>($r6) in <com.csipsimple.ui.messages.MessageFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.messages.MessageFragment$2: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r8.<com.csipsimple.widgets.AccountChooserButton: void setShowExternals(boolean)>(0) in <com.csipsimple.ui.messages.MessageFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.widgets.AccountChooserButton: void setShowExternals(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.messages.MessageFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>($r1, $r3) in <com.csipsimple.ui.messages.MessageFragment: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)> ==> <com.csipsimple.ui.messages.MessageFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)>
STATIC edge: $i4 = staticinvoke <com.actionbarsherlock.internal.view.menu.MenuBuilder: int getOrdering(int)>($i2) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: int getOrdering(int)>
SPECIAL edge: specialinvoke r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void <init>(com.actionbarsherlock.internal.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int)>(r0, $i0, $i1, $i2, $i4, $r1, $i3) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void <init>(com.actionbarsherlock.internal.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int)>
VIRTUAL edge: virtualinvoke r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)>($r3) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)>
STATIC edge: $i0 = staticinvoke <com.actionbarsherlock.internal.view.menu.MenuBuilder: int findInsertIndex(java.util.ArrayList,int)>($r5, $i4) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: int findInsertIndex(java.util.ArrayList,int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
VIRTUAL edge: $i2 = virtualinvoke r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getOrdering()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: int findInsertIndex(java.util.ArrayList,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getOrdering()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.res.Resources getResources()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.res.Resources getResources()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
SPECIAL edge: $r3 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>(0, 0, 0, $r2) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem add(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>
SPECIAL edge: $r3 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>($i0, $i1, $i2, $r2) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem add(int,int,int,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>
SPECIAL edge: $r2 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>($i0, $i1, $i2, $r1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>
SPECIAL edge: $r2 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>(0, 0, 0, $r1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeGroup(int)>($i0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[])> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeGroup(int)>
VIRTUAL edge: $r17 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)>($i0, $i1, $i2, $r16) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[])> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>(0, 0, 0, $r2) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>($i0, $i1, $i2, $r2) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>
SPECIAL edge: $r4 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>($i0, $i1, $i2, $r1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>
SPECIAL edge: specialinvoke r2.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>($r3, r0, r5) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
VIRTUAL edge: virtualinvoke r5.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>(r2) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>(0, 0, 0, $r1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>
VIRTUAL edge: $z1 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isVisible()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isVisible()>
VIRTUAL edge: $z1 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasSubMenu()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasSubMenu()>
VIRTUAL edge: $i0 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>
VIRTUAL edge: $i1 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>
VIRTUAL edge: $i2 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getOrder()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getOrder()>
VIRTUAL edge: $r8 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>
VIRTUAL edge: $r10 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.SubMenu getSubMenu()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.SubMenu getSubMenu()>
VIRTUAL edge: $r4 = virtualinvoke r11.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: java.util.ArrayList getVisibleItems()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>
VIRTUAL edge: $r14 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>
VIRTUAL edge: $z1 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isEnabled()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isEnabled()>
VIRTUAL edge: $r15 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.content.Intent getIntent()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.content.Intent getIntent()>
VIRTUAL edge: $c3 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getNumericShortcut()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getNumericShortcut()>
VIRTUAL edge: $c3 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()>
VIRTUAL edge: $r8 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()>
VIRTUAL edge: $z1 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isCheckable()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isCheckable()>
VIRTUAL edge: $z1 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isChecked()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isChecked()>
VIRTUAL edge: $z1 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isExclusiveCheckable()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isExclusiveCheckable()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>($r1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void clear()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void clear()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void clear()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void clearAll()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void clear()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void clearHeader()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void clearAll()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void clearHeader()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void clearAll()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void clearHeader()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void close()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int findGroupIndex(int,int)>($i0, 0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: int findGroupIndex(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: int findGroupIndex(int,int)>
VIRTUAL edge: $i2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: int findGroupIndex(int,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>
VIRTUAL edge: $i3 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: int findGroupIndex(int,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>
VIRTUAL edge: $i1 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>
VIRTUAL edge: $i3 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>
VIRTUAL edge: $z0 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasSubMenu()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasSubMenu()>
VIRTUAL edge: $r4 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.SubMenu getSubMenu()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.SubMenu getSubMenu()>
VIRTUAL edge: $i1 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: int findItemIndex(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>
VIRTUAL edge: $i3 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: int findItemIndex(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)>(r2, $i0, $r1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isQwertyMode()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isQwertyMode()>
VIRTUAL edge: $c4 = virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()>
VIRTUAL edge: $c4 = virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getNumericShortcut()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getNumericShortcut()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isQwertyMode()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isQwertyMode()>
VIRTUAL edge: $z1 = virtualinvoke r6.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasSubMenu()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasSubMenu()>
VIRTUAL edge: $r7 = virtualinvoke r6.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.SubMenu getSubMenu()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.SubMenu getSubMenu()>
VIRTUAL edge: $c4 = virtualinvoke r6.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()>
VIRTUAL edge: $z1 = virtualinvoke r6.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isEnabled()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isEnabled()>
VIRTUAL edge: $c4 = virtualinvoke r6.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getNumericShortcut()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getNumericShortcut()>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void flagActionItems()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>
VIRTUAL edge: $z0 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionButton()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void flagActionItems()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionButton()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void flagActionItems()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getActionItems()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void flagActionItems()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void flagActionItems()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void flagActionItems()>
VIRTUAL edge: $z0 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isVisible()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isVisible()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean hasVisibleItems()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>
VIRTUAL edge: $z0 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isVisible()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean hasVisibleItems()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isVisible()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)>($i0, $r1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isShortcutKey(int,android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemVisibleChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>($i0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performIdentifierAction(int,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)>($r1, $i1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performIdentifierAction(int,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)>
VIRTUAL edge: $z0 = virtualinvoke r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isEnabled()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isEnabled()>
VIRTUAL edge: $z0 = virtualinvoke r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean invoke()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean invoke()>
VIRTUAL edge: $z1 = virtualinvoke r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()>
VIRTUAL edge: $z1 = virtualinvoke r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean expandActionView()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean expandActionView()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>
VIRTUAL edge: $z1 = virtualinvoke $r5.<com.actionbarsherlock.view.ActionProvider: boolean hasSubMenu()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)> ==> <com.actionbarsherlock.view.ActionProvider: boolean hasSubMenu()>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.view.ActionProvider: void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu)>(r4) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)> ==> <com.actionbarsherlock.view.ActionProvider: void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu)>
SPECIAL edge: $z1 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean dispatchSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>(r4) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean dispatchSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)>($i0, $r1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)>
VIRTUAL edge: z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)>($r2, $i1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>
VIRTUAL edge: $i2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int findGroupIndex(int)>($i0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeGroup(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: int findGroupIndex(int)>
VIRTUAL edge: i3 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeGroup(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeGroup(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)>($i2, 0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeGroup(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int findItemIndex(int)>($i0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItem(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: int findItemIndex(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)>($i0, 1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItem(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)>($i0, 1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItemAt(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>($i0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem getItem(int)>(i1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem getItem(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void dispatchRestoreInstanceState(android.os.Bundle)>($r1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void restorePresenterStates(android.os.Bundle)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void dispatchRestoreInstanceState(android.os.Bundle)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem getItem(int)>(i1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem getItem(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void dispatchSaveInstanceState(android.os.Bundle)>($r1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void savePresenterStates(android.os.Bundle)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void dispatchSaveInstanceState(android.os.Bundle)>
VIRTUAL edge: $i3 = virtualinvoke r4.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>
VIRTUAL edge: $z0 = virtualinvoke r4.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isExclusiveCheckable()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isExclusiveCheckable()>
VIRTUAL edge: $z0 = virtualinvoke r4.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isCheckable()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isCheckable()>
VIRTUAL edge: virtualinvoke r4.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setCheckedInt(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setCheckedInt(boolean)>
VIRTUAL edge: $i3 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)>($z1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setCheckable(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setCheckable(boolean)>
VIRTUAL edge: $i3 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setEnabled(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setEnabled(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setGroupVisible(int,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: $i3 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>() in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setGroupVisible(int,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>
VIRTUAL edge: $z2 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean setVisibleInt(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setGroupVisible(int,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean setVisibleInt(boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>(0, null, $i0, null, null) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>(0, null, 0, $r1, null) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>($i0, null, 0, null, null) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>(0, $r1, 0, null, null) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>(0, null, 0, null, $r1) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setQwertyMode(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setShortcutsVisible(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setShortcutsVisible(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.FitTextView: void initialise()>() in <com.csipsimple.widgets.FitTextView: void <init>(android.content.Context)> ==> <com.csipsimple.widgets.FitTextView: void initialise()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.FitTextView: void initialise()>() in <com.csipsimple.widgets.FitTextView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.FitTextView: void initialise()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.FitTextView: void refitText(java.lang.String,int)>($r2, $i0) in <com.csipsimple.widgets.FitTextView: void onMeasure(int,int)> ==> <com.csipsimple.widgets.FitTextView: void refitText(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.FitTextView: void refitText(java.lang.String,int)>($r2, $i0) in <com.csipsimple.widgets.FitTextView: void onSizeChanged(int,int,int,int)> ==> <com.csipsimple.widgets.FitTextView: void refitText(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.FitTextView: void refitText(java.lang.String,int)>($r2, $i0) in <com.csipsimple.widgets.FitTextView: void onTextChanged(java.lang.CharSequence,int,int,int)> ==> <com.csipsimple.widgets.FitTextView: void refitText(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.ActionBar: void <init>()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void <init>(android.app.Activity,int)> ==> <com.actionbarsherlock.app.ActionBar: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.app.ActionBarImpl$1: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)>(r0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void <init>(android.app.Activity,int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$1: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)>
SPECIAL edge: specialinvoke $r5.<com.actionbarsherlock.internal.app.ActionBarImpl$2: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)>(r0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void <init>(android.app.Activity,int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$2: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void init(android.view.View)>($r7) in <com.actionbarsherlock.internal.app.ActionBarImpl: void <init>(android.app.Activity,int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void init(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.ActionBar: void <init>()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void <init>(android.app.Dialog)> ==> <com.actionbarsherlock.app.ActionBar: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.app.ActionBarImpl$1: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)>(r0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void <init>(android.app.Dialog)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$1: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)>
SPECIAL edge: specialinvoke $r5.<com.actionbarsherlock.internal.app.ActionBarImpl$2: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)>(r0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void <init>(android.app.Dialog)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$2: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void init(android.view.View)>($r7) in <com.actionbarsherlock.internal.app.ActionBarImpl: void <init>(android.app.Dialog)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void init(android.view.View)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>(null) in <com.actionbarsherlock.internal.app.ActionBarImpl: void cleanupTabs()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void removeAllTabs()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void cleanupTabs()> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void removeAllTabs()>
VIRTUAL edge: $r3 = virtualinvoke r2.<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$TabListener getCallback()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void configureTab(com.actionbarsherlock.app.ActionBar$Tab,int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$TabListener getCallback()>
VIRTUAL edge: virtualinvoke r2.<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: void setPosition(int)>($i0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void configureTab(com.actionbarsherlock.app.ActionBar$Tab,int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: void setPosition(int)>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void <init>(android.content.Context)>($r2) in <com.actionbarsherlock.internal.app.ActionBarImpl: void ensureTabsExist()> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void ensureTabsExist()> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void setVisibility(int)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarView: void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>(r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void ensureTabsExist()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: int getNavigationMode()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void ensureTabsExist()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: int getNavigationMode()>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.ActionBarContainer: void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>(r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void ensureTabsExist()> ==> <com.actionbarsherlock.internal.widget.ActionBarContainer: void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
VIRTUAL edge: $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void init(android.view.View)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void init(android.view.View)> ==> <java.lang.Class: java.lang.String getSimpleName()>
STATIC edge: $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10) in <com.actionbarsherlock.internal.app.ActionBarImpl: void init(android.view.View)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.ActionBarView: void setContextView(com.actionbarsherlock.internal.widget.ActionBarContextView)>($r5) in <com.actionbarsherlock.internal.app.ActionBarImpl: void init(android.view.View)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setContextView(com.actionbarsherlock.internal.widget.ActionBarContextView)>
VIRTUAL edge: $z1 = virtualinvoke $r4.<com.actionbarsherlock.internal.widget.ActionBarView: boolean isSplitActionBar()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void init(android.view.View)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: boolean isSplitActionBar()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void setHomeButtonEnabled(boolean)>($z0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void init(android.view.View)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void setHomeButtonEnabled(boolean)>
STATIC edge: $z0 = staticinvoke <com.actionbarsherlock.internal.ResourcesCompat: boolean getResources_getBoolean(android.content.Context,int)>($r2, $i0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void init(android.view.View)> ==> <com.actionbarsherlock.internal.ResourcesCompat: boolean getResources_getBoolean(android.content.Context,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void setHasEmbeddedTabs(boolean)>($z0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void init(android.view.View)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void setHasEmbeddedTabs(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>(null) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setHasEmbeddedTabs(boolean)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContainer: void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>($r3) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setHasEmbeddedTabs(boolean)> ==> <com.actionbarsherlock.internal.widget.ActionBarContainer: void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: int getNavigationMode()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void setHasEmbeddedTabs(boolean)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: int getNavigationMode()>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setVisibility(int)>($b1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setHasEmbeddedTabs(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void setVisibility(int)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: void setCollapsable(boolean)>($z1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setHasEmbeddedTabs(boolean)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setCollapsable(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean)>($r1, $z0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean)>($r1, $i0, $z0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void ensureTabsExist()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void ensureTabsExist()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean)>($r1, $i0, $z0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void configureTab(com.actionbarsherlock.app.ActionBar$Tab,int)>($r1, $i0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void configureTab(com.actionbarsherlock.app.ActionBar$Tab,int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void ensureTabsExist()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void ensureTabsExist()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean)>($r1, $z0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void configureTab(com.actionbarsherlock.app.ActionBar$Tab,int)>($r1, $i0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void configureTab(com.actionbarsherlock.app.ActionBar$Tab,int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void show(boolean)>(0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void animateToMode(boolean)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void show(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void end()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void animateToMode(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void end()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView: void animateToVisibility(int)>($b1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void animateToMode(boolean)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)>
VIRTUAL edge: $z1 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView: boolean hasEmbeddedTabs()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void animateToMode(boolean)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: boolean hasEmbeddedTabs()>
VIRTUAL edge: $z1 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView: boolean isCollapsed()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void animateToMode(boolean)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: boolean isCollapsed()>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)>($b0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void animateToMode(boolean)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView: android.view.View getCustomNavigationView()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: android.view.View getCustomView()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: android.view.View getCustomNavigationView()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: int getDisplayOptions()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: int getDisplayOptions()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: int getDisplayOptions()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: int getNavigationMode()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: int getNavigationItemCount()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: int getNavigationMode()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: android.widget.SpinnerAdapter getDropdownAdapter()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: int getNavigationItemCount()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: android.widget.SpinnerAdapter getDropdownAdapter()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: int getNavigationMode()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: int getNavigationMode()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: int getNavigationMode()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: int getNavigationMode()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: int getSelectedNavigationIndex()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: int getNavigationMode()>
VIRTUAL edge: $i0 = virtualinvoke $r2.<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: int getPosition()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: int getSelectedNavigationIndex()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: int getPosition()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: int getDropdownSelectedPosition()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: int getSelectedNavigationIndex()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: int getDropdownSelectedPosition()>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView: java.lang.CharSequence getSubtitle()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: java.lang.CharSequence getSubtitle()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: java.lang.CharSequence getSubtitle()>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView: java.lang.CharSequence getTitle()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: java.lang.CharSequence getTitle()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: java.lang.CharSequence getTitle()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void end()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void hide()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void end()>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarContainer: void setSupportAlpha(float)>(1.0F) in <com.actionbarsherlock.internal.app.ActionBarImpl: void hide()> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setSupportAlpha(float)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarContainer: void setTransitioning(boolean)>(1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void hide()> ==> <com.actionbarsherlock.internal.widget.ActionBarContainer: void setTransitioning(boolean)>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void <init>()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void hide()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void <init>()>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>($r3, "supportAlpha", $r4) in <com.actionbarsherlock.internal.app.ActionBarImpl: void hide()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>
VIRTUAL edge: $r6 = virtualinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r5) in <com.actionbarsherlock.internal.app.ActionBarImpl: void hide()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r6.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r5) in <com.actionbarsherlock.internal.app.ActionBarImpl: void hide()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r9) in <com.actionbarsherlock.internal.app.ActionBarImpl: void hide()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void hide()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)>(r0) in <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.app.ActionBar$Tab newTab()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)>
STATIC edge: $z0 = staticinvoke <com.actionbarsherlock.internal.ResourcesCompat: boolean getResources_getBoolean(android.content.Context,int)>($r2, $i0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.ResourcesCompat: boolean getResources_getBoolean(android.content.Context,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void setHasEmbeddedTabs(boolean)>($z0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void setHasEmbeddedTabs(boolean)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarView: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void onConfigurationChanged(android.content.res.Configuration)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.ActionBarContextView: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void cleanupTabs()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void removeAllTabs()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void cleanupTabs()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void removeTabAt(int)>($i0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void removeTab(com.actionbarsherlock.app.ActionBar$Tab)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void removeTabAt(int)>
VIRTUAL edge: $i1 = virtualinvoke $r2.<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: int getPosition()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void removeTabAt(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: int getPosition()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void removeTabAt(int)>($i0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void removeTabAt(int)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void removeTabAt(int)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: void setPosition(int)>(-1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void removeTabAt(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: void setPosition(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>($r2) in <com.actionbarsherlock.internal.app.ActionBarImpl: void removeTabAt(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>
VIRTUAL edge: $i1 = virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: int getNavigationMode()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: int getNavigationMode()>
VIRTUAL edge: $r7 = virtualinvoke $r6.<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$TabListener getCallback()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$TabListener getCallback()>
VIRTUAL edge: virtualinvoke $r8.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToTab(int)>($i0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToTab(int)>
VIRTUAL edge: virtualinvoke $r8.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setTabSelected(int)>($i0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setTabSelected(int)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setBackgroundDrawable(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context getThemedContext()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void setCustomView(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context getThemedContext()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void setCustomView(android.view.View)>($r4) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setCustomView(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void setCustomView(android.view.View)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView: void setCustomNavigationView(android.view.View)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setCustomView(android.view.View)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setCustomNavigationView(android.view.View)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarView: void setCustomNavigationView(android.view.View)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setCustomNavigationView(android.view.View)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>($b0, 4) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayHomeAsUpEnabled(boolean)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: void setDisplayOptions(int)>($i0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayOptions(int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setDisplayOptions(int)>
VIRTUAL edge: $i2 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: int getDisplayOptions()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayOptions(int,int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: int getDisplayOptions()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: void setDisplayOptions(int)>($i0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayOptions(int,int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setDisplayOptions(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>($b0, 16) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayShowCustomEnabled(boolean)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>($b0, 2) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayShowHomeEnabled(boolean)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>($b0, 8) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayShowTitleEnabled(boolean)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>($b0, 1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayUseLogoEnabled(boolean)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: void setHomeButtonEnabled(boolean)>($z0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setHomeButtonEnabled(boolean)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setHomeButtonEnabled(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: void setIcon(int)>($i0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setIcon(int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setIcon(int)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView: void setIcon(android.graphics.drawable.Drawable)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setIcon(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setIcon(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarView: void setDropdownAdapter(android.widget.SpinnerAdapter)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setDropdownAdapter(android.widget.SpinnerAdapter)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarView: void setCallback(com.actionbarsherlock.app.ActionBar$OnNavigationListener)>($r2) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setCallback(com.actionbarsherlock.app.ActionBar$OnNavigationListener)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: void setLogo(int)>($i0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setLogo(int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setLogo(int)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView: void setLogo(android.graphics.drawable.Drawable)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setLogo(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setLogo(android.graphics.drawable.Drawable)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: int getNavigationMode()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void setNavigationMode(int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: int getNavigationMode()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: void setNavigationMode(int)>($i0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setNavigationMode(int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setNavigationMode(int)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: void setCollapsable(boolean)>($z0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setNavigationMode(int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setCollapsable(boolean)>
VIRTUAL edge: $i1 = virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: int getSelectedNavigationIndex()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void setNavigationMode(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: int getSelectedNavigationIndex()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>(null) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setNavigationMode(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(8) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setNavigationMode(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void setVisibility(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void ensureTabsExist()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void setNavigationMode(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void ensureTabsExist()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void setSelectedNavigationItem(int)>($i1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setNavigationMode(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void setSelectedNavigationItem(int)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: int getNavigationMode()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void setSelectedNavigationItem(int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: int getNavigationMode()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>($r5) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setSelectedNavigationItem(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: void setDropdownSelectedPosition(int)>($i0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setSelectedNavigationItem(int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setDropdownSelectedPosition(int)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void end()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void setShowHideAnimationEnabled(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void end()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void setSubtitle(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setSubtitle(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void setSubtitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView: void setSubtitle(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setSubtitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setSubtitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void setTitle(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setTitle(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView: void setTitle(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void setTitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void show(boolean)>(1) in <com.actionbarsherlock.internal.app.ActionBarImpl: void show()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void show(boolean)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void end()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void show(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void end()>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarContainer: void setVisibility(int)>(0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void show(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setVisibility(int)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarContainer: void setSupportAlpha(float)>(0.0F) in <com.actionbarsherlock.internal.app.ActionBarImpl: void show(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setSupportAlpha(float)>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void <init>()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void show(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void <init>()>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>($r3, "supportAlpha", $r4) in <com.actionbarsherlock.internal.app.ActionBarImpl: void show(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>
VIRTUAL edge: $r6 = virtualinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r5) in <com.actionbarsherlock.internal.app.ActionBarImpl: void show(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r6.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r5) in <com.actionbarsherlock.internal.app.ActionBarImpl: void show(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarContainer: void setSupportTranslationY(float)>($f0) in <com.actionbarsherlock.internal.app.ActionBarImpl: void show(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setSupportTranslationY(float)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r9) in <com.actionbarsherlock.internal.app.ActionBarImpl: void show(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: void show(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void finish()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void finish()>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarContextView: void killMode()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void killMode()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.view.ActionMode$Callback)>(r0, $r1) in <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.view.ActionMode$Callback)>
VIRTUAL edge: $z1 = virtualinvoke $r2.<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: boolean dispatchOnCreate()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: boolean dispatchOnCreate()>
VIRTUAL edge: $z1 = virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: boolean isShowing()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: boolean isShowing()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void invalidate()>() in <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void invalidate()>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarContextView: void initForMode(com.actionbarsherlock.view.ActionMode)>($r2) in <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void initForMode(com.actionbarsherlock.view.ActionMode)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl: void animateToMode(boolean)>(1) in <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void animateToMode(boolean)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.ActionBarContainer: void setVisibility(int)>(0) in <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setVisibility(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>() in <com.csipsimple.wizards.impl.DeltaThree: void <init>()> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.DeltaThree: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.DeltaThree: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.DeltaThree: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.DeltaThree: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.DeltaThree: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.DeltaThree: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.DeltaThree: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.DeltaThree: void hidePreference(java.lang.String,java.lang.String)>(null, $r4) in <com.csipsimple.wizards.impl.DeltaThree: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void hidePreference(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.DeltaThree: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.DeltaThree: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.DeltaThree: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("g729/8000/1", "nb", "240") in <com.csipsimple.wizards.impl.DeltaThree: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Ekiga: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Ekiga: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Ekiga: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.Ekiga: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>("stun.counterpath.com") in <com.csipsimple.wizards.impl.Ekiga: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallInfoGrid$CallDataObserver: void <init>(com.csipsimple.ui.incall.InCallInfoGrid)>($r1) in <com.csipsimple.ui.incall.InCallInfoGrid$CallDataObserver: void <init>(com.csipsimple.ui.incall.InCallInfoGrid,com.csipsimple.ui.incall.InCallInfoGrid$CallDataObserver)> ==> <com.csipsimple.ui.incall.InCallInfoGrid$CallDataObserver: void <init>(com.csipsimple.ui.incall.InCallInfoGrid)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.ui.incall.InCallInfoGrid: void populate()>() in <com.csipsimple.ui.incall.InCallInfoGrid$CallDataObserver: void onChanged()> ==> <com.csipsimple.ui.incall.InCallInfoGrid: void populate()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.ui.incall.InCallInfoGrid: void populate()>() in <com.csipsimple.ui.incall.InCallInfoGrid$CallDataObserver: void onInvalidated()> ==> <com.csipsimple.ui.incall.InCallInfoGrid: void populate()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter)>($r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)> ==> <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>
VIRTUAL edge: $r4 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.MenuItem getItem()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.MenuItem getItem()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsuaJNI: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_buddy_state(int)>($i0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_buddy_state(org.pjsip.pjsua.Callback,int)> ==> <org.pjsip.pjsua.Callback: void on_buddy_state(int)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_call_media_state(int)>($i0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_media_state(org.pjsip.pjsua.Callback,int)> ==> <org.pjsip.pjsua.Callback: void on_call_media_state(int)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<org.pjsip.pjsua.Callback: org.pjsip.pjsua.pjsip_redirect_op on_call_redirected(int,org.pjsip.pjsua.pj_str_t)>($i0, $r1) in <org.pjsip.pjsua.pjsuaJNI: int SwigDirector_Callback_on_call_redirected(org.pjsip.pjsua.Callback,int,long)> ==> <org.pjsip.pjsua.Callback: org.pjsip.pjsua.pjsip_redirect_op on_call_redirected(int,org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $i0 = virtualinvoke $r2.<org.pjsip.pjsua.pjsip_redirect_op: int swigValue()>() in <org.pjsip.pjsua.pjsuaJNI: int SwigDirector_Callback_on_call_redirected(org.pjsip.pjsua.Callback,int,long)> ==> <org.pjsip.pjsua.pjsip_redirect_op: int swigValue()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l1, 0) in <org.pjsip.pjsua.pjsuaJNI: int SwigDirector_Callback_on_call_redirected(org.pjsip.pjsua.Callback,int,long)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_call_replace_request(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data,org.pjsip.pjsua.SWIGTYPE_p_int,org.pjsip.pjsua.pj_str_t)>($i0, $r2, $r3, $r1) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_replace_request(org.pjsip.pjsua.Callback,int,long,long,long)> ==> <org.pjsip.pjsua.Callback: void on_call_replace_request(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data,org.pjsip.pjsua.SWIGTYPE_p_int,org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>(long,boolean)>($l1, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_replace_request(org.pjsip.pjsua.Callback,int,long,long,long)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r3.<org.pjsip.pjsua.SWIGTYPE_p_int: void <init>(long,boolean)>($l2, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_replace_request(org.pjsip.pjsua.Callback,int,long,long,long)> ==> <org.pjsip.pjsua.SWIGTYPE_p_int: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l3, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_replace_request(org.pjsip.pjsua.Callback,int,long,long,long)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_call_replaced(int,int)>($i0, $i1) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_replaced(org.pjsip.pjsua.Callback,int,int)> ==> <org.pjsip.pjsua.Callback: void on_call_replaced(int,int)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_call_sdp_created(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session,org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session)>($i0, $r2, $r3, $r1) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_sdp_created(org.pjsip.pjsua.Callback,int,long,long,long)> ==> <org.pjsip.pjsua.Callback: void on_call_sdp_created(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session,org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session)>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session: void <init>(long,boolean)>($l1, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_sdp_created(org.pjsip.pjsua.Callback,int,long,long,long)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r3.<org.pjsip.pjsua.pj_pool_t: void <init>(long,boolean)>($l2, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_sdp_created(org.pjsip.pjsua.Callback,int,long,long,long)> ==> <org.pjsip.pjsua.pj_pool_t: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_call_state(int,org.pjsip.pjsua.pjsip_event)>($i0, $r1) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_state(org.pjsip.pjsua.Callback,int,long)> ==> <org.pjsip.pjsua.Callback: void on_call_state(int,org.pjsip.pjsua.pjsip_event)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjsip_event: void <init>(long,boolean)>($l1, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_state(org.pjsip.pjsua.Callback,int,long)> ==> <org.pjsip.pjsua.pjsip_event: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_call_transfer_request(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code)>($i0, $r2, $r1) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_transfer_request(org.pjsip.pjsua.Callback,int,long,long)> ==> <org.pjsip.pjsua.Callback: void on_call_transfer_request(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code)>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l1, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_transfer_request(org.pjsip.pjsua.Callback,int,long,long)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code: void <init>(long,boolean)>($l2, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_transfer_request(org.pjsip.pjsua.Callback,int,long,long)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_call_transfer_status(int,int,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.SWIGTYPE_p_int)>($i0, $i1, $r2, $i3, $r1) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_transfer_status(org.pjsip.pjsua.Callback,int,int,long,int,long)> ==> <org.pjsip.pjsua.Callback: void on_call_transfer_status(int,int,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.SWIGTYPE_p_int)>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l2, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_transfer_status(org.pjsip.pjsua.Callback,int,int,long,int,long)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_int: void <init>(long,boolean)>($l4, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_transfer_status(org.pjsip.pjsua.Callback,int,int,long,int,long)> ==> <org.pjsip.pjsua.SWIGTYPE_p_int: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_call_tsx_state(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction,org.pjsip.pjsua.pjsip_event)>($i0, $r2, $r1) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_tsx_state(org.pjsip.pjsua.Callback,int,long,long)> ==> <org.pjsip.pjsua.Callback: void on_call_tsx_state(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction,org.pjsip.pjsua.pjsip_event)>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction: void <init>(long,boolean)>($l1, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_tsx_state(org.pjsip.pjsua.Callback,int,long,long)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjsip_event: void <init>(long,boolean)>($l2, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_tsx_state(org.pjsip.pjsua.Callback,int,long,long)> ==> <org.pjsip.pjsua.pjsip_event: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_dtmf_digit(int,int)>($i0, $i1) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_dtmf_digit(org.pjsip.pjsua.Callback,int,int)> ==> <org.pjsip.pjsua.Callback: void on_dtmf_digit(int,int)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>($i0, $i1, $r1) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_incoming_call(org.pjsip.pjsua.Callback,int,int,long)> ==> <org.pjsip.pjsua.Callback: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>(long,boolean)>($l2, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_incoming_call(org.pjsip.pjsua.Callback,int,int,long)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)>($i0, $r2, $r1) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_mwi_info(org.pjsip.pjsua.Callback,int,long,long)> ==> <org.pjsip.pjsua.Callback: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l1, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_mwi_info(org.pjsip.pjsua.Callback,int,long,long)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_nat_detect(org.pjsip.pjsua.pj_stun_nat_detect_result)>($r1) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_nat_detect(org.pjsip.pjsua.Callback,long)> ==> <org.pjsip.pjsua.Callback: void on_nat_detect(org.pjsip.pjsua.pj_stun_nat_detect_result)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_stun_nat_detect_result: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_nat_detect(org.pjsip.pjsua.Callback,long)> ==> <org.pjsip.pjsua.pj_stun_nat_detect_result: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)>($i0, $r1, $r2, $r3, $r4, $r5) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager(org.pjsip.pjsua.Callback,int,long,long,long,long,long)> ==> <org.pjsip.pjsua.Callback: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l1, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager(org.pjsip.pjsua.Callback,int,long,long,long,long,long)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_pager2(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>($i0, $r1, $r2, $r3, $r4, $r5, $r6) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager2(org.pjsip.pjsua.Callback,int,long,long,long,long,long,long)> ==> <org.pjsip.pjsua.Callback: void on_pager2(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l1, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager2(org.pjsip.pjsua.Callback,int,long,long,long,long,long,long)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r6.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>(long,boolean)>($l6, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager2(org.pjsip.pjsua.Callback,int,long,long,long,long,long,long)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsip_status_code: org.pjsip.pjsua.pjsip_status_code swigToEnum(int)>($i3) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager_status(org.pjsip.pjsua.Callback,int,long,long,int,long)> ==> <org.pjsip.pjsua.pjsip_status_code: org.pjsip.pjsua.pjsip_status_code swigToEnum(int)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)>($i0, $r2, $r3, $r1, $r4) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager_status(org.pjsip.pjsua.Callback,int,long,long,int,long)> ==> <org.pjsip.pjsua.Callback: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l1, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager_status(org.pjsip.pjsua.Callback,int,long,long,int,long)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsip_status_code: org.pjsip.pjsua.pjsip_status_code swigToEnum(int)>($i3) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager_status2(org.pjsip.pjsua.Callback,int,long,long,int,long,long,long)> ==> <org.pjsip.pjsua.pjsip_status_code: org.pjsip.pjsua.pjsip_status_code swigToEnum(int)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_pager_status2(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>($i0, $r2, $r3, $r1, $r4, $r5, $r6) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager_status2(org.pjsip.pjsua.Callback,int,long,long,int,long,long,long)> ==> <org.pjsip.pjsua.Callback: void on_pager_status2(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l1, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager_status2(org.pjsip.pjsua.Callback,int,long,long,int,long,long,long)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r5.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data: void <init>(long,boolean)>($l5, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager_status2(org.pjsip.pjsua.Callback,int,long,long,int,long,long,long)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r6.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>(long,boolean)>($l6, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager_status2(org.pjsip.pjsua.Callback,int,long,long,int,long,long,long)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_reg_state(int)>($i0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_reg_state(org.pjsip.pjsua.Callback,int)> ==> <org.pjsip.pjsua.Callback: void on_reg_state(int)>
VIRTUAL edge: $i0 = virtualinvoke $r0.<org.pjsip.pjsua.Callback: int on_set_micro_source()>() in <org.pjsip.pjsua.pjsuaJNI: int SwigDirector_Callback_on_set_micro_source(org.pjsip.pjsua.Callback)> ==> <org.pjsip.pjsua.Callback: int on_set_micro_source()>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_setup_audio()>() in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_setup_audio(org.pjsip.pjsua.Callback)> ==> <org.pjsip.pjsua.Callback: void on_setup_audio()>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_stream_created(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream,long,org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)>($i0, $r2, $l2, $r1) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_stream_created(org.pjsip.pjsua.Callback,int,long,long,long)> ==> <org.pjsip.pjsua.Callback: void on_stream_created(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream,long,org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream: void <init>(long,boolean)>($l1, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_stream_created(org.pjsip.pjsua.Callback,int,long,long,long)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port: void <init>(long,boolean)>($l3, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_stream_created(org.pjsip.pjsua.Callback,int,long,long,long)> ==> <org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_stream_destroyed(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream,long)>($i0, $r1, $l2) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_stream_destroyed(org.pjsip.pjsua.Callback,int,long,long)> ==> <org.pjsip.pjsua.Callback: void on_stream_destroyed(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream,long)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream: void <init>(long,boolean)>($l1, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_stream_destroyed(org.pjsip.pjsua.Callback,int,long,long)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_teardown_audio()>() in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_teardown_audio(org.pjsip.pjsua.Callback)> ==> <org.pjsip.pjsua.Callback: void on_teardown_audio()>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_typing(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,int)>($i0, $r2, $r3, $r1, $i4) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_typing(org.pjsip.pjsua.Callback,int,long,long,long,int)> ==> <org.pjsip.pjsua.Callback: void on_typing(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,int)>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l1, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_typing(org.pjsip.pjsua.Callback,int,long,long,long,int)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
VIRTUAL edge: $i0 = virtualinvoke $r0.<org.pjsip.pjsua.Callback: int on_validate_audio_clock_rate(int)>($i0) in <org.pjsip.pjsua.pjsuaJNI: int SwigDirector_Callback_on_validate_audio_clock_rate(org.pjsip.pjsua.Callback,int)> ==> <org.pjsip.pjsua.Callback: int on_validate_audio_clock_rate(int)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_zrtp_show_sas(int,org.pjsip.pjsua.pj_str_t,int)>($i0, $r1, $i2) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_zrtp_show_sas(org.pjsip.pjsua.Callback,int,long,int)> ==> <org.pjsip.pjsua.Callback: void on_zrtp_show_sas(int,org.pjsip.pjsua.pj_str_t,int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l1, 0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_zrtp_show_sas(org.pjsip.pjsua.Callback,int,long,int)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke $r0.<org.pjsip.pjsua.Callback: void on_zrtp_update_transport(int)>($i0) in <org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_zrtp_update_transport(org.pjsip.pjsua.Callback,int)> ==> <org.pjsip.pjsua.Callback: void on_zrtp_update_transport(int)>
VIRTUAL edge: $i0 = virtualinvoke $r0.<org.pjsip.pjsua.Callback: int timer_cancel(int,int)>($i0, $i1) in <org.pjsip.pjsua.pjsuaJNI: int SwigDirector_Callback_timer_cancel(org.pjsip.pjsua.Callback,int,int)> ==> <org.pjsip.pjsua.Callback: int timer_cancel(int,int)>
VIRTUAL edge: $i0 = virtualinvoke $r0.<org.pjsip.pjsua.Callback: int timer_schedule(int,int,int)>($i0, $i1, $i2) in <org.pjsip.pjsua.pjsuaJNI: int SwigDirector_Callback_timer_schedule(org.pjsip.pjsua.Callback,int,int,int)> ==> <org.pjsip.pjsua.Callback: int timer_schedule(int,int,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.InCallInfoGrid$1: void <init>(com.csipsimple.ui.incall.InCallInfoGrid)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.ui.incall.InCallInfoGrid: void populate()>() in <com.csipsimple.ui.incall.InCallInfoGrid$1: void run()> ==> <com.csipsimple.ui.incall.InCallInfoGrid: void populate()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("ContactsAsyncHelper", "Tag has been removed meanwhile") in <com.csipsimple.utils.ContactsAsyncHelper: void handleMessage(android.os.Message)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.UriUtils: boolean areEqual(android.net.Uri,android.net.Uri)>($r6, $r7) in <com.csipsimple.utils.ContactsAsyncHelper: void handleMessage(android.os.Message)> ==> <com.csipsimple.utils.UriUtils: boolean areEqual(android.net.Uri,android.net.Uri)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("ContactsAsyncHelper", $r11) in <com.csipsimple.utils.ContactsAsyncHelper: void handleMessage(android.os.Message)> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context,android.view.View)>($r1, null) in <com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context,android.view.View)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context,android.view.View)>($r1, null) in <com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context,android.view.View)>
SPECIAL edge: specialinvoke r0.<android.widget.PopupWindow: void <init>(android.content.Context)>($r1) in <com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context,android.view.View)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.HorizontalQuickActionWindow: void setContentView(int)>(2130903113) in <com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context,android.view.View)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void setContentView(int)>
SPECIAL edge: specialinvoke $r13.<com.csipsimple.widgets.HorizontalQuickActionWindow$1: void <init>(com.csipsimple.widgets.HorizontalQuickActionWindow)>(r0) in <com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context,android.view.View)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow$1: void <init>(com.csipsimple.widgets.HorizontalQuickActionWindow)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)>($r3, $r5, $r1) in <com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(int,int,android.view.View$OnClickListener)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)>($r3, $r1, $r2) in <com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(int,java.lang.String,android.view.View$OnClickListener)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)>($r1, $r3, $r2) in <com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,int,android.view.View$OnClickListener)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)>
VIRTUAL edge: virtualinvoke r7.<com.csipsimple.widgets.QuickActionItem: void setImageDrawable(android.graphics.drawable.Drawable)>($r1) in <com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)> ==> <com.csipsimple.widgets.QuickActionItem: void setImageDrawable(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke r7.<com.csipsimple.widgets.QuickActionItem: void setText(java.lang.CharSequence)>($r2) in <com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)> ==> <com.csipsimple.widgets.QuickActionItem: void setText(java.lang.CharSequence)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.HorizontalQuickActionWindow: void onBackPressed()>() in <com.csipsimple.widgets.HorizontalQuickActionWindow: boolean onKeyUp(int,android.view.KeyEvent)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void onBackPressed()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.HorizontalQuickActionWindow: void show(int)>($i0) in <com.csipsimple.widgets.HorizontalQuickActionWindow: void show()> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void show(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("HorizontalQuickActionWindow", "Anchor not defined : Impossible to show the window") in <com.csipsimple.widgets.HorizontalQuickActionWindow: void show(int)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.HorizontalQuickActionWindow: void showArrow(int,int)>(2131099879, $i0) in <com.csipsimple.widgets.HorizontalQuickActionWindow: void show(int)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void showArrow(int,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_call_setting: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_call_setting: void delete()>() in <org.pjsip.pjsua.pjsua_call_setting: void finalize()> ==> <org.pjsip.pjsua.pjsua_call_setting: void delete()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_call_vid_strm_op$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.impl.Cryptel$1: void <init>(com.csipsimple.wizards.impl.Cryptel)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.wizards.impl.Cryptel: com.csipsimple.wizards.impl.AccountCreationWebview access$0(com.csipsimple.wizards.impl.Cryptel)>($r3) in <com.csipsimple.wizards.impl.Cryptel$1: void onClick(android.view.View)> ==> <com.csipsimple.wizards.impl.Cryptel: com.csipsimple.wizards.impl.AccountCreationWebview access$0(com.csipsimple.wizards.impl.Cryptel)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.wizards.impl.AccountCreationWebview: void show()>() in <com.csipsimple.wizards.impl.Cryptel$1: void onClick(android.view.View)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: void show()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.MegaVoip: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.MegaVoip: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("PCMU/8000/1", "wb", "210") in <com.csipsimple.wizards.impl.MegaVoip: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("use_wifi_in", 1) in <com.csipsimple.wizards.impl.MegaVoip: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Gradwell: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Gradwell: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Gradwell: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Vono: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Vono: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Vono: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.filters.AccountFiltersListFragment$1: void <init>(com.csipsimple.ui.filters.AccountFiltersListFragment)> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.ui.filters.AccountFiltersListFragment: void access$0(com.csipsimple.ui.filters.AccountFiltersListFragment)>($r2) in <com.csipsimple.ui.filters.AccountFiltersListFragment$1: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.filters.AccountFiltersListFragment: void access$0(com.csipsimple.ui.filters.AccountFiltersListFragment)>
STATIC edge: r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4) in <com.csipsimple.ui.filters.AccountFiltersListFragment$2: void drop(int,int)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.filters.AccountFiltersListFragment$2: void drop(int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.messages.MessageAdapter$MessageListItemViews: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState: void <init>(android.os.Parcel,com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState)>($r1, null) in <com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1: com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState createFromParcel(android.os.Parcel)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState: void <init>(android.os.Parcel,com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1: com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState createFromParcel(android.os.Parcel)>($r1) in <com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1: com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState createFromParcel(android.os.Parcel)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1: com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState[] newArray(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1: java.lang.Object[] newArray(int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1: com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState[] newArray(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.contactbadge.ContactBadgeContract: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>($r1, $r2, $i0, $r3) in <com.csipsimple.widgets.contactbadge.ContactBadge5: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)> ==> <com.csipsimple.widgets.contactbadge.ContactBadgeContract: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.widgets.contactbadge.OverlayedQuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>($r1, $r2, $i0, $r3) in <com.csipsimple.widgets.contactbadge.ContactBadge5: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)> ==> <com.csipsimple.widgets.contactbadge.OverlayedQuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.view.ActionMode: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.contactbadge.ContactBadgeContract: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>($r1, $r2, $i0, $r3) in <com.csipsimple.widgets.contactbadge.ContactBadge3: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)> ==> <com.csipsimple.widgets.contactbadge.ContactBadgeContract: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.widgets.contactbadge.OverlayedImageView: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>($r1, $r2, $i0, $r3) in <com.csipsimple.widgets.contactbadge.ContactBadge3: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)> ==> <com.csipsimple.widgets.contactbadge.OverlayedImageView: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R$array: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.account.AccountsEditListFragment$3$1: void <init>(com.csipsimple.ui.account.AccountsEditListFragment$3,java.io.File,java.lang.String[])> ==> <java.lang.Object: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.ui.account.AccountsEditListFragment$3: com.csipsimple.ui.account.AccountsEditListFragment access$0(com.csipsimple.ui.account.AccountsEditListFragment$3)>($r3) in <com.csipsimple.ui.account.AccountsEditListFragment$3$1: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.ui.account.AccountsEditListFragment$3: com.csipsimple.ui.account.AccountsEditListFragment access$0(com.csipsimple.ui.account.AccountsEditListFragment$3)>
STATIC edge: staticinvoke <com.csipsimple.utils.SipProfileJson: boolean saveSipConfiguration(android.content.Context)>($r5) in <com.csipsimple.ui.account.AccountsEditListFragment$3$1: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.utils.SipProfileJson: boolean saveSipConfiguration(android.content.Context)>
STATIC edge: staticinvoke <com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)>($r5, r2) in <com.csipsimple.ui.account.AccountsEditListFragment$3$1: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R$layout: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.ui.help.Help: void <init>()>() in <com.csipsimple.ui.help.Help: com.csipsimple.ui.help.Help newInstance()> ==> <com.csipsimple.ui.help.Help: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AccountBalanceHelper: void <init>()>() in <com.csipsimple.wizards.impl.Mobex$AccountBalance: void <init>(com.csipsimple.wizards.impl.Mobex)> ==> <com.csipsimple.wizards.impl.AccountBalanceHelper: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.wizards.impl.Mobex: android.widget.LinearLayout access$1(com.csipsimple.wizards.impl.Mobex)>(r3) in <com.csipsimple.wizards.impl.Mobex$AccountBalance: void applyResultError()> ==> <com.csipsimple.wizards.impl.Mobex: android.widget.LinearLayout access$1(com.csipsimple.wizards.impl.Mobex)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.wizards.impl.Mobex: android.widget.TextView access$2(com.csipsimple.wizards.impl.Mobex)>(r4) in <com.csipsimple.wizards.impl.Mobex$AccountBalance: void applyResultSuccess(java.lang.String)> ==> <com.csipsimple.wizards.impl.Mobex: android.widget.TextView access$2(com.csipsimple.wizards.impl.Mobex)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.wizards.impl.Mobex: android.widget.LinearLayout access$1(com.csipsimple.wizards.impl.Mobex)>(r4) in <com.csipsimple.wizards.impl.Mobex$AccountBalance: void applyResultSuccess(java.lang.String)> ==> <com.csipsimple.wizards.impl.Mobex: android.widget.LinearLayout access$1(com.csipsimple.wizards.impl.Mobex)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("^12", "") in <com.csipsimple.wizards.impl.Mobex$AccountBalance: org.apache.http.client.methods.HttpRequestBase getRequest(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.wizards.impl.Mobex: java.lang.String access$0()>() in <com.csipsimple.wizards.impl.Mobex$AccountBalance: org.apache.http.client.methods.HttpRequestBase getRequest(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Mobex: java.lang.String access$0()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>($r5, $r6) in <com.csipsimple.wizards.impl.Mobex$AccountBalance: org.apache.http.client.methods.HttpRequestBase getRequest(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.Mobex$AccountBalance: java.lang.String parseResponseLine(java.lang.String)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.wizards.impl.Mobex: java.lang.String access$0()>() in <com.csipsimple.wizards.impl.Mobex$AccountBalance: java.lang.String parseResponseLine(java.lang.String)> ==> <com.csipsimple.wizards.impl.Mobex: java.lang.String access$0()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>($r5, $r1) in <com.csipsimple.wizards.impl.Mobex$AccountBalance: java.lang.String parseResponseLine(java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.csipsimple.utils.DialingFeedback$ThreadedTonePlay: void <init>(com.csipsimple.utils.DialingFeedback,int)> ==> <java.lang.Thread: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.DialingFeedback: java.lang.Object access$0(com.csipsimple.utils.DialingFeedback)>($r1) in <com.csipsimple.utils.DialingFeedback$ThreadedTonePlay: void run()> ==> <com.csipsimple.utils.DialingFeedback: java.lang.Object access$0(com.csipsimple.utils.DialingFeedback)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.DialingFeedback: android.media.ToneGenerator access$1(com.csipsimple.utils.DialingFeedback)>($r1) in <com.csipsimple.utils.DialingFeedback$ThreadedTonePlay: void run()> ==> <com.csipsimple.utils.DialingFeedback: android.media.ToneGenerator access$1(com.csipsimple.utils.DialingFeedback)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.filters.EditFilter: void saveFilter()>() in <com.csipsimple.ui.filters.EditFilter: void access$0(com.csipsimple.ui.filters.EditFilter)> ==> <com.csipsimple.ui.filters.EditFilter: void saveFilter()>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.ui.filters.EditFilter: void saveFilter()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $i1 = staticinvoke <com.csipsimple.models.Filter: int getActionForPosition(java.lang.Integer)>($r3) in <com.csipsimple.ui.filters.EditFilter: void saveFilter()> ==> <com.csipsimple.models.Filter: int getActionForPosition(java.lang.Integer)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.models.Filter$RegExpRepresentation: void <init>()>() in <com.csipsimple.ui.filters.EditFilter: void saveFilter()> ==> <com.csipsimple.models.Filter$RegExpRepresentation: void <init>()>
STATIC edge: $i1 = staticinvoke <com.csipsimple.models.Filter: int getMatcherForPosition(java.lang.Integer)>($r3) in <com.csipsimple.ui.filters.EditFilter: void saveFilter()> ==> <com.csipsimple.models.Filter: int getMatcherForPosition(java.lang.Integer)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.models.Filter: void setMatcherRepresentation(com.csipsimple.models.Filter$RegExpRepresentation)>(r1) in <com.csipsimple.ui.filters.EditFilter: void saveFilter()> ==> <com.csipsimple.models.Filter: void setMatcherRepresentation(com.csipsimple.models.Filter$RegExpRepresentation)>
STATIC edge: $i1 = staticinvoke <com.csipsimple.models.Filter: int getReplaceForPosition(java.lang.Integer)>($r3) in <com.csipsimple.ui.filters.EditFilter: void saveFilter()> ==> <com.csipsimple.models.Filter: int getReplaceForPosition(java.lang.Integer)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.models.Filter: void setReplaceRepresentation(com.csipsimple.models.Filter$RegExpRepresentation)>(r1) in <com.csipsimple.ui.filters.EditFilter: void saveFilter()> ==> <com.csipsimple.models.Filter: void setReplaceRepresentation(com.csipsimple.models.Filter$RegExpRepresentation)>
VIRTUAL edge: $r14 = virtualinvoke $r2.<com.csipsimple.models.Filter: android.content.ContentValues getDbContentValues()>() in <com.csipsimple.ui.filters.EditFilter: void saveFilter()> ==> <com.csipsimple.models.Filter: android.content.ContentValues getDbContentValues()>
STATIC edge: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.filters.EditFilter: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.models.Filter: int getActionForPosition(java.lang.Integer)>($r4) in <com.csipsimple.ui.filters.EditFilter: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.models.Filter: int getActionForPosition(java.lang.Integer)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.ui.filters.EditFilter: boolean matcherNeedsText()>() in <com.csipsimple.ui.filters.EditFilter: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.ui.filters.EditFilter: boolean matcherNeedsText()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.filters.EditFilter: void checkFormValidity()>() in <com.csipsimple.ui.filters.EditFilter: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.ui.filters.EditFilter: void checkFormValidity()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.filters.EditFilter: void checkFormValidity()>() in <com.csipsimple.ui.filters.EditFilter: void onNothingSelected(android.widget.AdapterView)> ==> <com.csipsimple.ui.filters.EditFilter: void checkFormValidity()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.filters.EditFilter: void checkFormValidity()>() in <com.csipsimple.ui.filters.EditFilter: void onTextChanged(java.lang.CharSequence,int,int,int)> ==> <com.csipsimple.ui.filters.EditFilter: void checkFormValidity()>
VIRTUAL edge: $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>() in <com.actionbarsherlock.app.SherlockFragment: void onAttach(android.app.Activity)> ==> <java.lang.Class: java.lang.String getSimpleName()>
VIRTUAL edge: $r4 = virtualinvoke $r5.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>() in <com.actionbarsherlock.app.SherlockFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>
SPECIAL edge: specialinvoke $r0.<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType: void <init>(java.lang.String,int)>("None", 0) in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType: void <clinit>()> ==> <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int,int)>("PJSUA_MED_TP_CLOSE_MEMBER", 0, $i0) in <org.pjsip.pjsua.pjsua_create_media_transport_flag: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_create_media_transport_flag$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_create_media_transport_flag$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_create_media_transport_flag$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_create_media_transport_flag$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_create_media_transport_flag$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_create_media_transport_flag$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_create_media_transport_flag)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_create_media_transport_flag)> ==> <org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_create_media_transport_flag$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_create_media_transport_flag)> ==> <org.pjsip.pjsua.pjsua_create_media_transport_flag$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsua_create_media_transport_flag: org.pjsip.pjsua.pjsua_create_media_transport_flag swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
STATIC edge: r0 = staticinvoke <com.csipsimple.ui.prefs.cupcake.MainPrefs: com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroupAdapter access$0(com.csipsimple.ui.prefs.cupcake.MainPrefs)>($r4) in <com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroupAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.ui.prefs.cupcake.MainPrefs: com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroupAdapter access$0(com.csipsimple.ui.prefs.cupcake.MainPrefs)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R$layout: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_vid_win_info: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_vid_win_info: void <init>()> ==> <org.pjsip.pjsua.pjsua_vid_win_info: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_vid_win_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_vid_win_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_vid_win_info: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_vid_win_info: void delete()>() in <org.pjsip.pjsua.pjsua_vid_win_info: void finalize()> ==> <org.pjsip.pjsua.pjsua_vid_win_info: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_vid_win_info: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd getHwnd()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_vid_win_info: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord getPos()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_vid_win_info: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index getRdr_dev()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_vid_win_info: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size getSize()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd)>($r1) in <org.pjsip.pjsua.pjsua_vid_win_info: void setHwnd(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord)>($r1) in <org.pjsip.pjsua.pjsua_vid_win_info: void setPos(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>($r1) in <org.pjsip.pjsua.pjsua_vid_win_info: void setRdr_dev(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size)>($r1) in <org.pjsip.pjsua.pjsua_vid_win_info: void setSize(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size)>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.csipsimple.utils.Ringer$RingerThread: void <init>(com.csipsimple.utils.Ringer)> ==> <java.lang.Thread: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.Ringer$RingerThread: void <init>(com.csipsimple.utils.Ringer)>($r1) in <com.csipsimple.utils.Ringer$RingerThread: void <init>(com.csipsimple.utils.Ringer,com.csipsimple.utils.Ringer$RingerThread)> ==> <com.csipsimple.utils.Ringer$RingerThread: void <init>(com.csipsimple.utils.Ringer)>
STATIC edge: staticinvoke <java.lang.Thread: void sleep(long)>(100L) in <com.csipsimple.utils.Ringer$RingerThread: void run()> ==> <java.lang.Thread: void sleep(long)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Ringer", "Ringer thread interrupt") in <com.csipsimple.utils.Ringer$RingerThread: void run()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_unsigned_int: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_unsigned_int: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_unsigned_int: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_unsigned_int: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.bluetooth.BluetoothWrapper: void setContext(android.content.Context)>($r0) in <com.csipsimple.utils.bluetooth.BluetoothWrapper: com.csipsimple.utils.bluetooth.BluetoothWrapper getInstance(android.content.Context)> ==> <com.csipsimple.utils.bluetooth.BluetoothWrapper: void setContext(android.content.Context)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.VoipTiger: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.VoipTiger: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.VoipTiger: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.VoipTiger: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("PCMU/8000/1", "wb", "0") in <com.csipsimple.wizards.impl.VoipTiger: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceFloatValue(java.lang.String,float)>("snd_speaker_level", 1.2F) in <com.csipsimple.wizards.impl.VoipTiger: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceFloatValue(java.lang.String,float)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R$string: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.BasePrefsWizard: void saveAccount(java.lang.String)>($r1) in <com.csipsimple.wizards.BasePrefsWizard: void saveAccount()> ==> <com.csipsimple.wizards.BasePrefsWizard: void saveAccount(java.lang.String)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>($r4) in <com.csipsimple.wizards.BasePrefsWizard: void saveAccount(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r3.<com.csipsimple.utils.PreferencesWrapper: void startEditing()>() in <com.csipsimple.wizards.BasePrefsWizard: void saveAccount(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: void startEditing()>
VIRTUAL edge: virtualinvoke r3.<com.csipsimple.utils.PreferencesWrapper: void endEditing()>() in <com.csipsimple.wizards.BasePrefsWizard: void saveAccount(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: void endEditing()>
VIRTUAL edge: $r9 = virtualinvoke $r6.<com.csipsimple.api.SipProfile: android.content.ContentValues getDbContentValues()>() in <com.csipsimple.wizards.BasePrefsWizard: void saveAccount(java.lang.String)> ==> <com.csipsimple.api.SipProfile: android.content.ContentValues getDbContentValues()>
STATIC edge: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) in <com.csipsimple.wizards.BasePrefsWizard: void saveAccount(java.lang.String)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r9 = virtualinvoke r13.<com.csipsimple.models.Filter: android.content.ContentValues getDbContentValues()>() in <com.csipsimple.wizards.BasePrefsWizard: void saveAccount(java.lang.String)> ==> <com.csipsimple.models.Filter: android.content.ContentValues getDbContentValues()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.BasePrefsWizard: void saveAccount(java.lang.String)>($r3) in <com.csipsimple.wizards.BasePrefsWizard: void onActivityResult(int,int,android.content.Intent)> ==> <com.csipsimple.wizards.BasePrefsWizard: void saveAccount(java.lang.String)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>($r1) in <com.csipsimple.wizards.BasePrefsWizard: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r1) in <com.csipsimple.wizards.BasePrefsWizard: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()>() in <com.csipsimple.wizards.BasePrefsWizard: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>($r1) in <com.csipsimple.wizards.BasePrefsWizard: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.BasePrefsWizard: void updateDescriptions()>() in <com.csipsimple.wizards.BasePrefsWizard: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)> ==> <com.csipsimple.wizards.BasePrefsWizard: void updateDescriptions()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.BasePrefsWizard: void updateValidation()>() in <com.csipsimple.wizards.BasePrefsWizard: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)> ==> <com.csipsimple.wizards.BasePrefsWizard: void updateValidation()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.BasePrefsWizard: void saveAccount()>() in <com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()> ==> <com.csipsimple.wizards.BasePrefsWizard: void saveAccount()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Ip2Mobile: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Ip2Mobile: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Ip2Mobile: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.Ip2Mobile: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>("stun.sip2mobile.dk") in <com.csipsimple.wizards.impl.Ip2Mobile: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Balses: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Balses: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Balses: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Balses: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Orbtalk: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.ITTelenet: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Keyyo: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 0) in <com.csipsimple.wizards.impl.Keyyo: void setKeyyoDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("PCMU/8000/1", "wb", "0") in <com.csipsimple.wizards.impl.Keyyo: void setKeyyoDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Keyyo: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <com.csipsimple.wizards.impl.Keyyo: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Keyyo: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Keyyo: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Keyyo: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Keyyo: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
STATIC edge: staticinvoke <com.csipsimple.wizards.impl.Keyyo: void setKeyyoDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Keyyo: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.Keyyo: void setKeyyoDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Voipdoup: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("com.android") in <com.csipsimple.plugins.telephony.CallHandler: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean startsWith(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>($r1) in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>($r1) in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>($r1, $r2) in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>($r1) in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>() in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>
SPECIAL edge: $r3 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()>() in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()>
STATIC edge: $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isQwertyMode()>() in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: boolean isQwertyMode()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isQwertyMode()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isShortcutsVisible()>() in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: boolean isShortcutsVisible()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isShortcutsVisible()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>($r1) in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(int)>($i0) in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setHeaderIcon(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(int)>
SPECIAL edge: $r2 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)>($r1) in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(int)>($i0) in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setHeaderTitle(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(int)>
SPECIAL edge: $r2 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)>
SPECIAL edge: $r2 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View)>($r1) in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setIcon(int)>($i0) in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setIcon(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setIcon(int)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable)>($r1) in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setQwertyMode(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: void setQwertyMode(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setQwertyMode(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setShortcutsVisible(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: void setShortcutsVisible(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setShortcutsVisible(boolean)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.ui.favorites.PresenceStatusSpinner$1: void <init>(com.csipsimple.ui.favorites.PresenceStatusSpinner)>(r0) in <com.csipsimple.ui.favorites.PresenceStatusSpinner: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner$1: void <init>(com.csipsimple.ui.favorites.PresenceStatusSpinner)>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.ui.favorites.PresenceStatusSpinner$PresencesAdapter: void <init>(com.csipsimple.ui.favorites.PresenceStatusSpinner,android.content.Context,java.util.List)>(r0, $r1, r3) in <com.csipsimple.ui.favorites.PresenceStatusSpinner: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner$PresencesAdapter: void <init>(com.csipsimple.ui.favorites.PresenceStatusSpinner,android.content.Context,java.util.List)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.favorites.PresenceStatusSpinner: void updateRegistration()>() in <com.csipsimple.ui.favorites.PresenceStatusSpinner: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner: void updateRegistration()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.favorites.PresenceStatusSpinner: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>(r0) in <com.csipsimple.ui.favorites.PresenceStatusSpinner: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner: void onNothingSelected(android.widget.AdapterView)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.favorites.PresenceStatusSpinner: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>(r0) in <com.csipsimple.ui.favorites.PresenceStatusSpinner: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.favorites.PresenceStatusSpinner: void updateRegistration()>() in <com.csipsimple.ui.favorites.PresenceStatusSpinner: void access$2(com.csipsimple.ui.favorites.PresenceStatusSpinner)> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner: void updateRegistration()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])>($r2, $l1, $r1) in <com.csipsimple.ui.favorites.PresenceStatusSpinner: void updateRegistration()> ==> <com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)>($r2, $l1) in <com.csipsimple.ui.favorites.PresenceStatusSpinner: void updateRegistration()> ==> <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.ui.favorites.PresenceStatusSpinner$AccountStatusContentObserver: void <init>(com.csipsimple.ui.favorites.PresenceStatusSpinner,android.os.Handler)>(r0, $r6) in <com.csipsimple.ui.favorites.PresenceStatusSpinner: void onAttachedToWindow()> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner$AccountStatusContentObserver: void <init>(com.csipsimple.ui.favorites.PresenceStatusSpinner,android.os.Handler)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.favorites.PresenceStatusSpinner: void updateRegistration()>() in <com.csipsimple.ui.favorites.PresenceStatusSpinner: void onAttachedToWindow()> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner: void updateRegistration()>
SPECIAL edge: $r5 = specialinvoke r0.<com.csipsimple.ui.favorites.PresenceStatusSpinner: com.csipsimple.api.SipManager$PresenceStatus getSelectedPresence()>() in <com.csipsimple.ui.favorites.PresenceStatusSpinner: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner: com.csipsimple.api.SipManager$PresenceStatus getSelectedPresence()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("PresenceStatusSpinner", "Error while trying to set presence through service", r3) in <com.csipsimple.ui.favorites.PresenceStatusSpinner: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int__int: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int__int: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int__int: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int__int: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallTypeIconsView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.csipsimple.ui.calllog.CallTypeIconsView: void <init>(android.content.Context)> ==> <com.csipsimple.ui.calllog.CallTypeIconsView: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.calllog.CallTypeIconsView$Resources: void <init>(android.content.Context)>($r1) in <com.csipsimple.ui.calllog.CallTypeIconsView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.calllog.CallTypeIconsView$Resources: void <init>(android.content.Context)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.calllog.CallTypeIconsView: void add(int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: $r3 = specialinvoke r0.<com.csipsimple.ui.calllog.CallTypeIconsView: android.graphics.drawable.Drawable getCallTypeDrawable(int)>($i0) in <com.csipsimple.ui.calllog.CallTypeIconsView: void add(int)> ==> <com.csipsimple.ui.calllog.CallTypeIconsView: android.graphics.drawable.Drawable getCallTypeDrawable(int)>
SPECIAL edge: $r6 = specialinvoke r0.<com.csipsimple.ui.calllog.CallTypeIconsView: android.graphics.drawable.Drawable getCallTypeDrawable(int)>(i0) in <com.csipsimple.ui.calllog.CallTypeIconsView: void onDraw(android.graphics.Canvas)> ==> <com.csipsimple.ui.calllog.CallTypeIconsView: android.graphics.drawable.Drawable getCallTypeDrawable(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_destroy_flag$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.VPhone: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
VIRTUAL edge: $r4 = virtualinvoke r3.<com.actionbarsherlock.internal.view.ActionProviderWrapper: com.actionbarsherlock.view.ActionProvider unwrap()>() in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.ActionProvider getActionProvider()> ==> <com.actionbarsherlock.internal.view.ActionProviderWrapper: com.actionbarsherlock.view.ActionProvider unwrap()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean hasSubMenu()>() in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.SubMenu getSubMenu()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean hasSubMenu()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.view.menu.SubMenuWrapper: void <init>(android.view.SubMenu)>($r4) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.SubMenu getSubMenu()> ==> <com.actionbarsherlock.internal.view.menu.SubMenuWrapper: void <init>(android.view.SubMenu)>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.view.ActionProviderWrapper: void <init>(com.actionbarsherlock.view.ActionProvider)>($r1) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider)> ==> <com.actionbarsherlock.internal.view.ActionProviderWrapper: void <init>(com.actionbarsherlock.view.ActionProvider)>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1: void <init>(com.actionbarsherlock.internal.view.menu.MenuItemWrapper)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1: void <init>(com.actionbarsherlock.internal.view.menu.MenuItemWrapper)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean collapseActionView()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean isActionViewExpanded()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: android.view.ContextMenu$ContextMenuInfo getMenuInfo()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.SubMenu getSubMenu()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setActionView(int)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean isEnabled()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setChecked(boolean)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setTitle(int)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: char getNumericShortcut()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: java.lang.CharSequence getTitle()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean isVisible()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void setShowAsAction(int)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setShortcut(char,char)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setNumericShortcut(char)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: char getAlphabeticShortcut()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setCheckable(boolean)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.ActionProvider getActionProvider()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: android.content.Intent getIntent()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setEnabled(boolean)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean expandActionView()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: int getItemId()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean isChecked()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean onMenuItemClick(android.view.MenuItem)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setIcon(int)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: int getGroupId()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean hasSubMenu()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: android.view.View getActionView()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: int getOrder()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: java.lang.CharSequence getTitleCondensed()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setActionView(android.view.View)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setVisible(boolean)>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: android.graphics.drawable.Drawable getIcon()>
INTERFACE edge: interfaceinvoke $r4.<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean isCheckable()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.ui.favorites.PresenceStatusSpinner: boolean access$1(com.csipsimple.ui.favorites.PresenceStatusSpinner)>($r7) in <com.csipsimple.ui.favorites.PresenceStatusSpinner$PresencesAdapter: android.view.View getCustomView(int,android.view.View,android.view.ViewGroup,boolean)> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner: boolean access$1(com.csipsimple.ui.favorites.PresenceStatusSpinner)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.ui.favorites.PresenceStatusSpinner$PresencesAdapter: android.view.View getCustomView(int,android.view.View,android.view.ViewGroup,boolean)>($i0, $r1, $r2, 1) in <com.csipsimple.ui.favorites.PresenceStatusSpinner$PresencesAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner$PresencesAdapter: android.view.View getCustomView(int,android.view.View,android.view.ViewGroup,boolean)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.ui.favorites.PresenceStatusSpinner$PresencesAdapter: android.view.View getCustomView(int,android.view.View,android.view.ViewGroup,boolean)>($i0, $r1, $r2, 0) in <com.csipsimple.ui.favorites.PresenceStatusSpinner$PresencesAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner$PresencesAdapter: android.view.View getCustomView(int,android.view.View,android.view.ViewGroup,boolean)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: void initIndexes(android.database.Cursor)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: void initIndexes(android.database.Cursor)>($r3) in <com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: void initIndexes(android.database.Cursor)>
STATIC edge: $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r12 = staticinvoke <com.csipsimple.ui.account.AccountsChooserListFragment: com.csipsimple.ui.account.AccountsLoader access$0(com.csipsimple.ui.account.AccountsChooserListFragment)>($r11) in <com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.account.AccountsChooserListFragment: com.csipsimple.ui.account.AccountsLoader access$0(com.csipsimple.ui.account.AccountsChooserListFragment)>
VIRTUAL edge: $r13 = virtualinvoke $r12.<com.csipsimple.ui.account.AccountsLoader: com.csipsimple.utils.CallHandlerPlugin getCallHandlerWithAccountId(long)>($l1) in <com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.account.AccountsLoader: com.csipsimple.utils.CallHandlerPlugin getCallHandlerWithAccountId(long)>
VIRTUAL edge: $r15 = virtualinvoke $r13.<com.csipsimple.utils.CallHandlerPlugin: android.graphics.Bitmap getIcon()>() in <com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.utils.CallHandlerPlugin: android.graphics.Bitmap getIcon()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.wizards.WizardUtils: int getWizardIconRes(java.lang.String)>($r9) in <com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.wizards.WizardUtils: int getWizardIconRes(java.lang.String)>
SPECIAL edge: specialinvoke r4.<com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter,com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter$AccListItemViewTag)>(r0, null) in <com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)> ==> <com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter,com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter$AccListItemViewTag)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.Manifest: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.ActionBarContextView$1: void <init>(com.actionbarsherlock.internal.widget.ActionBarContextView,com.actionbarsherlock.view.ActionMode)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipUri: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $r0 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>($r0, 1) in <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String)> ==> <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.api.SipUri: boolean isPhoneNumber(java.lang.String)>($r1) in <com.csipsimple.api.SipUri: java.lang.String getPhoneNumber(com.csipsimple.api.SipUri$ParsedSipContactInfos)> ==> <com.csipsimple.api.SipUri: boolean isPhoneNumber(java.lang.String)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.api.SipUri$ParsedSipUriInfos: void <init>()>() in <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipUriInfos parseSipUri(java.lang.String)> ==> <com.csipsimple.api.SipUri$ParsedSipUriInfos: void <init>()>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0) in <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipUriInfos parseSipUri(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.wizards.impl.AccountCreationWebview: android.widget.ProgressBar access$5(com.csipsimple.wizards.impl.AccountCreationWebview)>($r2) in <com.csipsimple.wizards.impl.AccountCreationWebview$1: void onProgressChanged(android.webkit.WebView,int)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: android.widget.ProgressBar access$5(com.csipsimple.wizards.impl.AccountCreationWebview)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int)>("PJSUA_100REL_NOT_USED", 0) in <org.pjsip.pjsua.pjsua_100rel_use: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_100rel_use$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_100rel_use$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_100rel_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_100rel_use$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_100rel_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_100rel_use$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_100rel_use)> ==> <org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_100rel_use)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_100rel_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_100rel_use)> ==> <org.pjsip.pjsua.pjsua_100rel_use$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsua_100rel_use: org.pjsip.pjsua.pjsua_100rel_use swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.ExtraPlugins: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjmedia_tone_digit: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjmedia_tone_digit: long getCPtr(org.pjsip.pjsua.pjmedia_tone_digit)>($r2) in <org.pjsip.pjsua.pjmedia_tone_digit: long[] cArrayUnwrap(org.pjsip.pjsua.pjmedia_tone_digit[])> ==> <org.pjsip.pjsua.pjmedia_tone_digit: long getCPtr(org.pjsip.pjsua.pjmedia_tone_digit)>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.pjmedia_tone_digit: void <init>(long,boolean)>($l0, $z0) in <org.pjsip.pjsua.pjmedia_tone_digit: org.pjsip.pjsua.pjmedia_tone_digit[] cArrayWrap(long[],boolean)> ==> <org.pjsip.pjsua.pjmedia_tone_digit: void <init>(long,boolean)>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjmedia_tone_digit: void delete()>() in <org.pjsip.pjsua.pjmedia_tone_digit: void finalize()> ==> <org.pjsip.pjsua.pjmedia_tone_digit: void delete()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.CallLogHelper: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: java.lang.String getRemoteContact()>() in <com.csipsimple.utils.CallLogHelper: android.content.ContentValues logValuesForCall(android.content.Context,com.csipsimple.api.SipCallSession,long)> ==> <com.csipsimple.api.SipCallSession: java.lang.String getRemoteContact()>
STATIC edge: $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) in <com.csipsimple.utils.CallLogHelper: android.content.ContentValues logValuesForCall(android.content.Context,com.csipsimple.api.SipCallSession,long)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isIncoming()>() in <com.csipsimple.utils.CallLogHelper: android.content.ContentValues logValuesForCall(android.content.Context,com.csipsimple.api.SipCallSession,long)> ==> <com.csipsimple.api.SipCallSession: boolean isIncoming()>
VIRTUAL edge: $i4 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getLastStatusCode()>() in <com.csipsimple.utils.CallLogHelper: android.content.ContentValues logValuesForCall(android.content.Context,com.csipsimple.api.SipCallSession,long)> ==> <com.csipsimple.api.SipCallSession: int getLastStatusCode()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallLogHelper", $r9) in <com.csipsimple.utils.CallLogHelper: android.content.ContentValues logValuesForCall(android.content.Context,com.csipsimple.api.SipCallSession,long)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $l2 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: long getAccId()>() in <com.csipsimple.utils.CallLogHelper: android.content.ContentValues logValuesForCall(android.content.Context,com.csipsimple.api.SipCallSession,long)> ==> <com.csipsimple.api.SipCallSession: long getAccId()>
STATIC edge: $i4 = staticinvoke <com.csipsimple.models.Filter: int isAutoAnswerNumber(android.content.Context,long,java.lang.String)>($r0, $l2, r6) in <com.csipsimple.utils.CallLogHelper: android.content.ContentValues logValuesForCall(android.content.Context,com.csipsimple.api.SipCallSession,long)> ==> <com.csipsimple.models.Filter: int isAutoAnswerNumber(android.content.Context,long,java.lang.String)>
STATIC edge: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b1) in <com.csipsimple.utils.CallLogHelper: android.content.ContentValues logValuesForCall(android.content.Context,com.csipsimple.api.SipCallSession,long)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: r6 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: java.lang.String getLastStatusComment()>() in <com.csipsimple.utils.CallLogHelper: android.content.ContentValues logValuesForCall(android.content.Context,com.csipsimple.api.SipCallSession,long)> ==> <com.csipsimple.api.SipCallSession: java.lang.String getLastStatusComment()>
STATIC edge: $r11 = staticinvoke <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>($r0, $r3) in <com.csipsimple.utils.CallLogHelper: android.content.ContentValues logValuesForCall(android.content.Context,com.csipsimple.api.SipCallSession,long)> ==> <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.prefs.AudioTester: void updateStatusDisplay()>() in <com.csipsimple.ui.prefs.AudioTester: void access$2(com.csipsimple.ui.prefs.AudioTester)> ==> <com.csipsimple.ui.prefs.AudioTester: void updateStatusDisplay()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Mobile4U: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Mobile4U: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Mobile4U: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Mobile4U: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.models.Filter: void <init>()>() in <com.csipsimple.wizards.impl.Mobile4U: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.models.Filter: void <init>()>
STATIC edge: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.wizards.impl.Mobile4U: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Smarto: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Smarto: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Smarto: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_dns_srv", 1) in <com.csipsimple.wizards.impl.Smarto: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("keep_alive_interval_mobile", "60") in <com.csipsimple.wizards.impl.Smarto: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.InterTelecomGr: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.InterTelecomGr: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.InterTelecomGr: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.VoipBel: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.VoipBel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.VoipBel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.VoipBel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.VoipBel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>("stun.voipbel.nl") in <com.csipsimple.wizards.impl.VoipBel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata: void <init>()>() in <com.csipsimple.ui.calllog.GroupingListAdapter: void <init>(android.content.Context)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata: void <init>()>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.ui.calllog.GroupingListAdapter$1: void <init>(com.csipsimple.ui.calllog.GroupingListAdapter,android.os.Handler)>(r0, $r2) in <com.csipsimple.ui.calllog.GroupingListAdapter: void <init>(android.content.Context)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter$1: void <init>(com.csipsimple.ui.calllog.GroupingListAdapter,android.os.Handler)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.calllog.GroupingListAdapter$2: void <init>(com.csipsimple.ui.calllog.GroupingListAdapter)>(r0) in <com.csipsimple.ui.calllog.GroupingListAdapter: void <init>(android.content.Context)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter$2: void <init>(com.csipsimple.ui.calllog.GroupingListAdapter)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.GroupingListAdapter: void resetCache()>() in <com.csipsimple.ui.calllog.GroupingListAdapter: void <init>(android.content.Context)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: void resetCache()>
STATIC edge: $i2 = staticinvoke <com.csipsimple.utils.ArrayUtils: int idealLongArraySize(int)>($i2) in <com.csipsimple.ui.calllog.GroupingListAdapter: void addGroup(int,int,boolean)> ==> <com.csipsimple.utils.ArrayUtils: int idealLongArraySize(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.GroupingListAdapter: void resetCache()>() in <com.csipsimple.ui.calllog.GroupingListAdapter: void changeCursor(android.database.Cursor)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: void resetCache()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.GroupingListAdapter: void findGroups()>() in <com.csipsimple.ui.calllog.GroupingListAdapter: void changeCursor(android.database.Cursor)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: void findGroups()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.calllog.GroupingListAdapter: void obtainPositionMetadata(com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata,int)>($r1, $i0) in <com.csipsimple.ui.calllog.GroupingListAdapter: int getGroupSize(int)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: void obtainPositionMetadata(com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata,int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.calllog.GroupingListAdapter: void obtainPositionMetadata(com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata,int)>($r2, $i0) in <com.csipsimple.ui.calllog.GroupingListAdapter: java.lang.Object getItem(int)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: void obtainPositionMetadata(com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata,int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.ui.calllog.GroupingListAdapter: java.lang.Object getItem(int)>($i0) in <com.csipsimple.ui.calllog.GroupingListAdapter: long getItemId(int)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: java.lang.Object getItem(int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.calllog.GroupingListAdapter: void obtainPositionMetadata(com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata,int)>($r1, $i0) in <com.csipsimple.ui.calllog.GroupingListAdapter: int getItemViewType(int)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: void obtainPositionMetadata(com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata,int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.calllog.GroupingListAdapter: void obtainPositionMetadata(com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata,int)>($r5, $i0) in <com.csipsimple.ui.calllog.GroupingListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: void obtainPositionMetadata(com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata,int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.calllog.GroupingListAdapter: void obtainPositionMetadata(com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata,int)>($r1, $i0) in <com.csipsimple.ui.calllog.GroupingListAdapter: boolean isGroupHeader(int)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: void obtainPositionMetadata(com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata,int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.calllog.GroupingListAdapter: void obtainPositionMetadata(com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata,int)>($r1, $i0) in <com.csipsimple.ui.calllog.GroupingListAdapter: void toggleGroup(int)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: void obtainPositionMetadata(com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.GroupingListAdapter: void resetCache()>() in <com.csipsimple.ui.calllog.GroupingListAdapter: void toggleGroup(int)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: void resetCache()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory: void <init>()>() in <org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory: void <init>(org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory)> ==> <org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory: void <init>()>
STATIC edge: $r5 = staticinvoke <org.webrtc.videoengine.ViEAndroidGLES20: java.lang.String access$0()>() in <org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)> ==> <org.webrtc.videoengine.ViEAndroidGLES20: java.lang.String access$0()>
STATIC edge: staticinvoke <org.webrtc.videoengine.ViEAndroidGLES20: void access$1(java.lang.String,javax.microedition.khronos.egl.EGL10)>("Before eglCreateContext", $r1) in <org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)> ==> <org.webrtc.videoengine.ViEAndroidGLES20: void access$1(java.lang.String,javax.microedition.khronos.egl.EGL10)>
SPECIAL edge: specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r1) in <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>($r1, $r2) in <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void closeOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchCloseOptionsMenu()>() in <com.actionbarsherlock.app.SherlockActivity: void closeOptionsMenu()> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchCloseOptionsMenu()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1) in <com.actionbarsherlock.app.SherlockActivity: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchKeyEvent(android.view.KeyEvent)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.view.MenuInflater getMenuInflater()>() in <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()> ==> <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.view.MenuInflater getMenuInflater()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void invalidateOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchConfigurationChanged(android.content.res.Configuration)>($r1) in <com.actionbarsherlock.app.SherlockActivity: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchConfigurationChanged(android.content.res.Configuration)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: boolean onCreateOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>($r1) in <com.actionbarsherlock.app.SherlockActivity: boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchDestroy()>() in <com.actionbarsherlock.app.SherlockActivity: void onDestroy()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchDestroy()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r1) in <com.actionbarsherlock.app.SherlockActivity: boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: boolean onMenuOpened(int,android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchMenuOpened(int,android.view.Menu)>($i0, $r1) in <com.actionbarsherlock.app.SherlockActivity: boolean onMenuOpened(int,android.view.Menu)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchMenuOpened(int,android.view.Menu)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void onPanelClosed(int,android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchPanelClosed(int,android.view.Menu)>($i0, $r1) in <com.actionbarsherlock.app.SherlockActivity: void onPanelClosed(int,android.view.Menu)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPanelClosed(int,android.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchPause()>() in <com.actionbarsherlock.app.SherlockActivity: void onPause()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPause()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchPostCreate(android.os.Bundle)>($r1) in <com.actionbarsherlock.app.SherlockActivity: void onPostCreate(android.os.Bundle)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchPostResume()>() in <com.actionbarsherlock.app.SherlockActivity: void onPostResume()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPostResume()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>($r2) in <com.actionbarsherlock.app.SherlockActivity: boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchStop()>() in <com.actionbarsherlock.app.SherlockActivity: void onStop()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchStop()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void onTitleChanged(java.lang.CharSequence,int)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchTitleChanged(java.lang.CharSequence,int)>($r1, $i0) in <com.actionbarsherlock.app.SherlockActivity: void onTitleChanged(java.lang.CharSequence,int)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchTitleChanged(java.lang.CharSequence,int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void openOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchOpenOptionsMenu()>() in <com.actionbarsherlock.app.SherlockActivity: void openOptionsMenu()> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchOpenOptionsMenu()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void requestWindowFeature(long)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void setContentView(android.view.View)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void setContentView(android.view.View)>($r1) in <com.actionbarsherlock.app.SherlockActivity: void setContentView(android.view.View)> ==> <com.actionbarsherlock.ActionBarSherlock: void setContentView(android.view.View)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void setSupportProgress(int)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void setSupportProgressBarIndeterminate(boolean)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void setSupportProgressBarIndeterminateVisibility(boolean)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void setSupportProgressBarVisibility(boolean)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void setSupportSecondaryProgress(int)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockActivity: void supportInvalidateOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5: java.util.ArrayList initialValue()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5: java.lang.Object initialValue()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5: java.util.ArrayList initialValue()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3: java.util.ArrayList initialValue()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3: java.lang.Object initialValue()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3: java.util.ArrayList initialValue()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4: java.util.ArrayList initialValue()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4: java.lang.Object initialValue()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4: java.util.ArrayList initialValue()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.UkrTelecom: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.UkrTelecom: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.UkrTelecom: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.UkrTelecom: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.UkrTelecom: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.UkrTelecom: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.ui.filters.EditFilter: void access$0(com.csipsimple.ui.filters.EditFilter)>($r3) in <com.csipsimple.ui.filters.EditFilter$2: void onClick(android.view.View)> ==> <com.csipsimple.ui.filters.EditFilter: void access$0(com.csipsimple.ui.filters.EditFilter)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.SlidingTab: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.csipsimple.widgets.SlidingTab: void <init>(android.content.Context)> ==> <com.csipsimple.widgets.SlidingTab: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.widgets.SlidingTab$Slider: void <init>(android.view.ViewGroup,int,int,int,int)>(r0, 2130837682, 2130837855, 2130837839, 2130837847) in <com.csipsimple.widgets.SlidingTab: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void <init>(android.view.ViewGroup,int,int,int,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.SlidingTab: void vibrate(long)>(40L) in <com.csipsimple.widgets.SlidingTab: void dispatchTriggerEvent(int)> ==> <com.csipsimple.widgets.SlidingTab: void vibrate(long)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SlidingTab", "We take the call....") in <com.csipsimple.widgets.SlidingTab: void dispatchTriggerEvent(int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: android.widget.ImageView access$0(com.csipsimple.widgets.SlidingTab$Slider)>($r1) in <com.csipsimple.widgets.SlidingTab: void moveHandle(float,float)> ==> <com.csipsimple.widgets.SlidingTab$Slider: android.widget.ImageView access$0(com.csipsimple.widgets.SlidingTab$Slider)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: android.widget.TextView access$6(com.csipsimple.widgets.SlidingTab$Slider)>($r1) in <com.csipsimple.widgets.SlidingTab: void moveHandle(float,float)> ==> <com.csipsimple.widgets.SlidingTab$Slider: android.widget.TextView access$6(com.csipsimple.widgets.SlidingTab$Slider)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: android.widget.ImageView access$0(com.csipsimple.widgets.SlidingTab$Slider)>($r3) in <com.csipsimple.widgets.SlidingTab: boolean onInterceptTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.SlidingTab$Slider: android.widget.ImageView access$0(com.csipsimple.widgets.SlidingTab$Slider)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.SlidingTab: void vibrate(long)>(30L) in <com.csipsimple.widgets.SlidingTab: boolean onInterceptTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.SlidingTab: void vibrate(long)>
STATIC edge: staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: void access$1(com.csipsimple.widgets.SlidingTab$Slider)>($r3) in <com.csipsimple.widgets.SlidingTab: boolean onInterceptTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void access$1(com.csipsimple.widgets.SlidingTab$Slider)>
STATIC edge: staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: void access$2(com.csipsimple.widgets.SlidingTab$Slider,int)>($r3, 1) in <com.csipsimple.widgets.SlidingTab: boolean onInterceptTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void access$2(com.csipsimple.widgets.SlidingTab$Slider,int)>
STATIC edge: staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: void access$3(com.csipsimple.widgets.SlidingTab$Slider)>($r3) in <com.csipsimple.widgets.SlidingTab: boolean onInterceptTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void access$3(com.csipsimple.widgets.SlidingTab$Slider)>
STATIC edge: staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: void access$5(com.csipsimple.widgets.SlidingTab$Slider,int,int,int,int,int)>($r1, $i0, $i1, $i2, $i3, 0) in <com.csipsimple.widgets.SlidingTab: void onLayout(boolean,int,int,int,int)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void access$5(com.csipsimple.widgets.SlidingTab$Slider,int,int,int,int,int)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<com.csipsimple.widgets.SlidingTab$Slider: int getTabHeight()>() in <com.csipsimple.widgets.SlidingTab: void onMeasure(int,int)> ==> <com.csipsimple.widgets.SlidingTab$Slider: int getTabHeight()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: android.widget.ImageView access$0(com.csipsimple.widgets.SlidingTab$Slider)>($r2) in <com.csipsimple.widgets.SlidingTab: boolean onTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.SlidingTab$Slider: android.widget.ImageView access$0(com.csipsimple.widgets.SlidingTab$Slider)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.SlidingTab: void moveHandle(float,float)>($f1, $f2) in <com.csipsimple.widgets.SlidingTab: boolean onTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.SlidingTab: void moveHandle(float,float)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r4) in <com.csipsimple.widgets.SlidingTab: boolean onTouchEvent(android.view.MotionEvent)> ==> <java.lang.Object: boolean equals(java.lang.Object)>
STATIC edge: staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: void access$2(com.csipsimple.widgets.SlidingTab$Slider,int)>($r2, 2) in <com.csipsimple.widgets.SlidingTab: boolean onTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void access$2(com.csipsimple.widgets.SlidingTab$Slider,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.SlidingTab: void dispatchTriggerEvent(int)>($b1) in <com.csipsimple.widgets.SlidingTab: boolean onTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.SlidingTab: void dispatchTriggerEvent(int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.SlidingTab: void resetView()>() in <com.csipsimple.widgets.SlidingTab: boolean onTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.SlidingTab: void resetView()>
STATIC edge: staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: void access$4(com.csipsimple.widgets.SlidingTab$Slider)>($r1) in <com.csipsimple.widgets.SlidingTab: void resetView()> ==> <com.csipsimple.widgets.SlidingTab$Slider: void access$4(com.csipsimple.widgets.SlidingTab$Slider)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.SlidingTab: void onLayout(boolean,int,int,int,int)>(1, $i0, $i1, $i2, $i3) in <com.csipsimple.widgets.SlidingTab: void resetView()> ==> <com.csipsimple.widgets.SlidingTab: void onLayout(boolean,int,int,int,int)>
STATIC edge: staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: void access$9(com.csipsimple.widgets.SlidingTab$Slider,int)>($r1, $i0) in <com.csipsimple.widgets.SlidingTab: void setLeftHintText(int)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void access$9(com.csipsimple.widgets.SlidingTab$Slider,int)>
STATIC edge: staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: void access$8(com.csipsimple.widgets.SlidingTab$Slider,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r5, $r1, $r2, $r3, $r4) in <com.csipsimple.widgets.SlidingTab: void setLeftTabDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void access$8(com.csipsimple.widgets.SlidingTab$Slider,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
STATIC edge: staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: void access$7(com.csipsimple.widgets.SlidingTab$Slider,int,int,int,int)>($r1, $i0, $i1, $i2, $i3) in <com.csipsimple.widgets.SlidingTab: void setLeftTabResources(int,int,int,int)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void access$7(com.csipsimple.widgets.SlidingTab$Slider,int,int,int,int)>
STATIC edge: staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: void access$9(com.csipsimple.widgets.SlidingTab$Slider,int)>($r1, $i0) in <com.csipsimple.widgets.SlidingTab: void setRightHintText(int)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void access$9(com.csipsimple.widgets.SlidingTab$Slider,int)>
STATIC edge: staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: void access$8(com.csipsimple.widgets.SlidingTab$Slider,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>($r5, $r1, $r2, $r3, $r4) in <com.csipsimple.widgets.SlidingTab: void setRightTabDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void access$8(com.csipsimple.widgets.SlidingTab$Slider,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
STATIC edge: staticinvoke <com.csipsimple.widgets.SlidingTab$Slider: void access$7(com.csipsimple.widgets.SlidingTab$Slider,int,int,int,int)>($r1, $i0, $i1, $i2, $i3) in <com.csipsimple.widgets.SlidingTab: void setRightTabResources(int,int,int,int)> ==> <com.csipsimple.widgets.SlidingTab$Slider: void access$7(com.csipsimple.widgets.SlidingTab$Slider,int,int,int,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.VoipMuch: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.VoipMuch: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PresenceStatusSpinner", $r2) in <com.csipsimple.ui.favorites.PresenceStatusSpinner$AccountStatusContentObserver: void onChange(boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.ui.favorites.PresenceStatusSpinner: void access$2(com.csipsimple.ui.favorites.PresenceStatusSpinner)>($r3) in <com.csipsimple.ui.favorites.PresenceStatusSpinner$AccountStatusContentObserver: void onChange(boolean)> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner: void access$2(com.csipsimple.ui.favorites.PresenceStatusSpinner)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1: java.util.ArrayList initialValue()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1: java.lang.Object initialValue()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1: java.util.ArrayList initialValue()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener: void <init>(android.content.Context,java.lang.String)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r5 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener: void <init>(android.content.Context,java.lang.String)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r2, $r6) in <com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener: void <init>(android.content.Context,java.lang.String)> ==> <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
VIRTUAL edge: $r2 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>() in <com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener: void <init>(android.content.Context,java.lang.String)> ==> <java.lang.Class: java.lang.String getName()>
SPECIAL edge: specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2) in <com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <java.lang.RuntimeException: void <init>(java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2: java.util.ArrayList initialValue()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2: java.lang.Object initialValue()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2: java.util.ArrayList initialValue()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.service.PresenceManager: void updateRegistrations()>() in <com.csipsimple.service.PresenceManager: void access$0(com.csipsimple.service.PresenceManager)> ==> <com.csipsimple.service.PresenceManager: void updateRegistrations()>
SPECIAL edge: $r3 = specialinvoke r0.<com.csipsimple.service.PresenceManager: java.util.List getBuddiesForAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.service.PresenceManager: void addBuddiesForAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.service.PresenceManager: java.util.List getBuddiesForAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r5 = virtualinvoke $r4.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.PresenceManager: void addBuddiesForAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.service.PresenceManager$1: void <init>(com.csipsimple.service.PresenceManager,java.util.List)>(r0, $r3) in <com.csipsimple.service.PresenceManager: void addBuddiesForAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.service.PresenceManager$1: void <init>(com.csipsimple.service.PresenceManager,java.util.List)>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r2) in <com.csipsimple.service.PresenceManager: void addBuddiesForAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
SPECIAL edge: $r3 = specialinvoke r0.<com.csipsimple.service.PresenceManager: java.util.List getBuddiesForAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.service.PresenceManager: void deleteBuddiesForAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.service.PresenceManager: java.util.List getBuddiesForAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r6 = virtualinvoke $r4.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.PresenceManager: void deleteBuddiesForAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r7.<com.csipsimple.service.PresenceManager$2: void <init>(com.csipsimple.service.PresenceManager,java.util.List)>(r0, $r3) in <com.csipsimple.service.PresenceManager: void deleteBuddiesForAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.service.PresenceManager$2: void <init>(com.csipsimple.service.PresenceManager,java.util.List)>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r7) in <com.csipsimple.service.PresenceManager: void deleteBuddiesForAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: $r11 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.service.PresenceManager: void deleteBuddiesForAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.service.PresenceManager: java.util.List getBuddiesForAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
SPECIAL edge: specialinvoke r13.<com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>($r10) in <com.csipsimple.service.PresenceManager: void updateRegistrations()> ==> <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>
STATIC edge: $r14 = staticinvoke <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)>($r6, $l1) in <com.csipsimple.service.PresenceManager: void updateRegistrations()> ==> <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)>
STATIC edge: $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.service.PresenceManager: void updateRegistrations()> ==> <java.lang.Long: java.lang.Long valueOf(long)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.PresenceManager: void addBuddiesForAccount(com.csipsimple.api.SipProfile)>(r13) in <com.csipsimple.service.PresenceManager: void updateRegistrations()> ==> <com.csipsimple.service.PresenceManager: void addBuddiesForAccount(com.csipsimple.api.SipProfile)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("PresenceManager", "Error on looping over sip profiles", r5) in <com.csipsimple.service.PresenceManager: void updateRegistrations()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.PresenceManager: void deleteBuddiesForAccount(com.csipsimple.api.SipProfile)>(r13) in <com.csipsimple.service.PresenceManager: void updateRegistrations()> ==> <com.csipsimple.service.PresenceManager: void deleteBuddiesForAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.service.PresenceManager: void changeBuddyState(java.lang.String,int,com.csipsimple.api.SipManager$PresenceStatus,java.lang.String)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r1) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
STATIC edge: $z0 = staticinvoke <com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean access$5(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r2) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean access$5(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.widget.PopupWindow access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r2) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.widget.PopupWindow access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.os.Handler access$3(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r2) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.os.Handler access$3(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
STATIC edge: $r6 = staticinvoke <com.actionbarsherlock.internal.widget.IcsListPopupWindow: com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$4(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r2) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$4(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
VIRTUAL edge: virtualinvoke $r6.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void run()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void run()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.AccountChooserButton: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.csipsimple.widgets.AccountChooserButton: void <init>(android.content.Context)> ==> <com.csipsimple.widgets.AccountChooserButton: void <init>(android.content.Context,android.util.AttributeSet)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.AccountChooserButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.csipsimple.widgets.AccountChooserButton: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)>(null) in <com.csipsimple.widgets.AccountChooserButton: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.AccountChooserButton: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2) in <com.csipsimple.widgets.AccountChooserButton: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.widgets.AccountChooserButton: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.widgets.AccountChooserButton: void updateRegistration()>() in <com.csipsimple.widgets.AccountChooserButton: void access$0(com.csipsimple.widgets.AccountChooserButton)> ==> <com.csipsimple.widgets.AccountChooserButton: void updateRegistration()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>($r8) in <com.csipsimple.widgets.AccountChooserButton: void updateRegistration()> ==> <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>
STATIC edge: $r11 = staticinvoke <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)>($r3, $l1) in <com.csipsimple.widgets.AccountChooserButton: void updateRegistration()> ==> <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)>(r9) in <com.csipsimple.widgets.AccountChooserButton: void updateRegistration()> ==> <com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountChooserButton", "Error on looping over sip profiles", r2) in <com.csipsimple.widgets.AccountChooserButton: void updateRegistration()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.api.SipProfile: void <init>()>() in <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()> ==> <com.csipsimple.api.SipProfile: void <init>()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)>($r2) in <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()> ==> <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)>($r2) in <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()> ==> <com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)>
VIRTUAL edge: $z1 = virtualinvoke r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r10) in <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
STATIC edge: $r11 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>($r2, r8) in <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()> ==> <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r10) in <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.widgets.AccountChooserButton$AccountStatusContentObserver: void <init>(com.csipsimple.widgets.AccountChooserButton,android.os.Handler)>(r0, $r2) in <com.csipsimple.widgets.AccountChooserButton: void onAttachedToWindow()> ==> <com.csipsimple.widgets.AccountChooserButton$AccountStatusContentObserver: void <init>(com.csipsimple.widgets.AccountChooserButton,android.os.Handler)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.AccountChooserButton: void updateRegistration()>() in <com.csipsimple.widgets.AccountChooserButton: void onAttachedToWindow()> ==> <com.csipsimple.widgets.AccountChooserButton: void updateRegistration()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("AccountChooserButton", "Click the account chooser button") in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context,android.view.View)>($r9, r0) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context,android.view.View)>
VIRTUAL edge: virtualinvoke $r8.<com.csipsimple.widgets.HorizontalQuickActionWindow: void setAnchor(android.graphics.Rect)>(r6) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void setAnchor(android.graphics.Rect)>
VIRTUAL edge: virtualinvoke $r8.<com.csipsimple.widgets.HorizontalQuickActionWindow: void removeAllItems()>() in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void removeAllItems()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>($r14) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>
STATIC edge: $r15 = staticinvoke <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)>($r9, $l5) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)>
STATIC edge: $r17 = staticinvoke <com.csipsimple.wizards.WizardUtils: android.graphics.Bitmap getWizardBitmap(android.content.Context,com.csipsimple.api.SipProfile)>($r9, r2) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.wizards.WizardUtils: android.graphics.Bitmap getWizardBitmap(android.content.Context,com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke $r19.<com.csipsimple.widgets.AccountChooserButton$1: void <init>(com.csipsimple.widgets.AccountChooserButton,com.csipsimple.api.SipProfile)>(r0, r2) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.widgets.AccountChooserButton$1: void <init>(com.csipsimple.widgets.AccountChooserButton,com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke $r8.<com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)>(r4, $r18, $r19) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)>
VIRTUAL edge: virtualinvoke $r8.<com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)>(r4, $r18, $r19) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.widgets.AccountChooserButton$1: void onClick(android.view.View)>
STATIC edge: $r20 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)>($r9) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)>($r9) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)>
VIRTUAL edge: virtualinvoke $r8.<com.csipsimple.widgets.HorizontalQuickActionWindow: void show()>() in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.widgets.HorizontalQuickActionWindow: void show()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("AccountChooserButton", "Error on looping over sip profiles", r5) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
VIRTUAL edge: $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r27) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.utils.CallHandlerPlugin: void <init>(android.content.Context)>($r9) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.utils.CallHandlerPlugin: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r28.<com.csipsimple.widgets.AccountChooserButton$2: void <init>(com.csipsimple.widgets.AccountChooserButton)>(r0) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.widgets.AccountChooserButton$2: void <init>(com.csipsimple.widgets.AccountChooserButton)>
VIRTUAL edge: virtualinvoke r3.<com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.String,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)>($r18, null, $r28) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.String,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)>
VIRTUAL edge: virtualinvoke r3.<com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.String,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)>($r18, null, $r28) in <com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)> ==> <com.csipsimple.widgets.AccountChooserButton$2: void onLoad(com.csipsimple.utils.CallHandlerPlugin)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)>($r2) in <com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)>
STATIC edge: $r9 = staticinvoke <com.csipsimple.wizards.WizardUtils: android.graphics.Bitmap getWizardBitmap(android.content.Context,com.csipsimple.api.SipProfile)>($r2, $r1) in <com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.WizardUtils: android.graphics.Bitmap getWizardBitmap(android.content.Context,com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R$drawable: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.pjsip.PjSipService$1$1: void <init>(com.csipsimple.pjsip.PjSipService$1,int)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", "Running pending DTMF send") in <com.csipsimple.pjsip.PjSipService$1$1: void doRun()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.pjsip.PjSipService$1: com.csipsimple.pjsip.PjSipService access$0(com.csipsimple.pjsip.PjSipService$1)>($r2) in <com.csipsimple.pjsip.PjSipService$1$1: void doRun()> ==> <com.csipsimple.pjsip.PjSipService$1: com.csipsimple.pjsip.PjSipService access$0(com.csipsimple.pjsip.PjSipService$1)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void sendPendingDtmf(int)>($i0) in <com.csipsimple.pjsip.PjSipService$1$1: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: void sendPendingDtmf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.AbsActionBarView$1: void <init>(com.actionbarsherlock.internal.widget.AbsActionBarView)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.AbsActionBarView: boolean showOverflowMenu()>() in <com.actionbarsherlock.internal.widget.AbsActionBarView$1: void run()> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean showOverflowMenu()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.account.AccountsLoader: void <init>(android.content.Context,boolean,boolean)>($r2, 0, $z0) in <com.csipsimple.ui.account.AccountsChooserListFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)> ==> <com.csipsimple.ui.account.AccountsLoader: void <init>(android.content.Context,boolean,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.dialpad.DigitsEditText: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.csipsimple.ui.dialpad.DigitsEditText: void <init>(android.content.Context)> ==> <com.csipsimple.ui.dialpad.DigitsEditText: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.dialpad.DigitsEditText: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2) in <com.csipsimple.ui.dialpad.DigitsEditText: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.dialpad.DigitsEditText: void <init>(android.content.Context,android.util.AttributeSet)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.dialpad.DigitsEditText: void setIsDigit(boolean,boolean)>($z0, 0) in <com.csipsimple.ui.dialpad.DigitsEditText: void onLayout(boolean,int,int,int,int)> ==> <com.csipsimple.ui.dialpad.DigitsEditText: void setIsDigit(boolean,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,android.content.pm.ResolveInfo)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: int compareTo(com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo)>($r2) in <com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: int compareTo(java.lang.Object)> ==> <com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: int compareTo(com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo)>
VIRTUAL edge: $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: boolean equals(java.lang.Object)> ==> <java.lang.Object: java.lang.Class getClass()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.favorites.FavAdapter$MenuCallback: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.content.Context,java.lang.Long,java.lang.String,java.lang.String,boolean)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <com.csipsimple.ui.favorites.FavAdapter$MenuCallback: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.content.Context,java.lang.Long,java.lang.String,java.lang.String,boolean)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: staticinvoke <com.csipsimple.ui.favorites.FavAdapter: void access$1(com.csipsimple.ui.favorites.FavAdapter,android.content.Context,java.lang.Long,java.lang.String)>($r4, $r5, $r6, $r7) in <com.csipsimple.ui.favorites.FavAdapter$MenuCallback: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.favorites.FavAdapter: void access$1(com.csipsimple.ui.favorites.FavAdapter,android.content.Context,java.lang.Long,java.lang.String)>
STATIC edge: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b0) in <com.csipsimple.ui.favorites.FavAdapter$MenuCallback: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: staticinvoke <com.csipsimple.ui.favorites.FavAdapter: void access$2(com.csipsimple.ui.favorites.FavAdapter,android.content.Context,java.lang.Long,java.lang.String,java.lang.String)>($r4, $r5, $r6, $r7, $r11) in <com.csipsimple.ui.favorites.FavAdapter$MenuCallback: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.favorites.FavAdapter: void access$2(com.csipsimple.ui.favorites.FavAdapter,android.content.Context,java.lang.Long,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.PrefsFast: void setProfile(com.csipsimple.ui.prefs.PrefsFast$Profile)>($r2) in <com.csipsimple.ui.prefs.PrefsFast: void onClick(android.view.View)> ==> <com.csipsimple.ui.prefs.PrefsFast: void setProfile(com.csipsimple.ui.prefs.PrefsFast$Profile)>
STATIC edge: $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <com.csipsimple.ui.prefs.PrefsFast: void onClick(android.view.View)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)>(r0, "has_already_setup", $r4) in <com.csipsimple.ui.prefs.PrefsFast: void onClick(android.view.View)> ==> <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)>
STATIC edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>(r0, "has_already_setup", 1) in <com.csipsimple.ui.prefs.PrefsFast: void onClick(android.view.View)> ==> <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,java.util.ArrayList)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void start()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void start()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>($r5) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.widget.IcsAdapterView: void access$0(com.actionbarsherlock.internal.widget.IcsAdapterView,android.os.Parcelable)>($r1, $r4) in <com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver: void onChanged()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void access$0(com.actionbarsherlock.internal.widget.IcsAdapterView,android.os.Parcelable)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsAdapterView: void checkFocus()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver: void onChanged()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void checkFocus()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsAdapterView: void rememberSyncState()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver: void onChanged()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void rememberSyncState()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.widget.IcsAdapterView: android.os.Parcelable access$1(com.actionbarsherlock.internal.widget.IcsAdapterView)>($r1) in <com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver: void onInvalidated()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: android.os.Parcelable access$1(com.actionbarsherlock.internal.widget.IcsAdapterView)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsAdapterView: void checkFocus()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver: void onInvalidated()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void checkFocus()>
SPECIAL edge: specialinvoke r0.<org.webrtc.videoengine.ViEAndroidGLES20: void init(boolean,int,int)>(0, 0, 0) in <org.webrtc.videoengine.ViEAndroidGLES20: void <init>(android.content.Context)> ==> <org.webrtc.videoengine.ViEAndroidGLES20: void init(boolean,int,int)>
SPECIAL edge: specialinvoke r0.<android.opengl.GLSurfaceView: void <init>(android.content.Context)>($r1) in <org.webrtc.videoengine.ViEAndroidGLES20: void <init>(android.content.Context,boolean,int,int)> ==> <org.webrtc.videoengine.ViEAndroidGLES20: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke r0.<org.webrtc.videoengine.ViEAndroidGLES20: void init(boolean,int,int)>($z0, $i0, $i1) in <org.webrtc.videoengine.ViEAndroidGLES20: void <init>(android.content.Context,boolean,int,int)> ==> <org.webrtc.videoengine.ViEAndroidGLES20: void init(boolean,int,int)>
STATIC edge: staticinvoke <org.webrtc.videoengine.ViEAndroidGLES20: void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10)>($r0, $r1) in <org.webrtc.videoengine.ViEAndroidGLES20: void access$1(java.lang.String,javax.microedition.khronos.egl.EGL10)> ==> <org.webrtc.videoengine.ViEAndroidGLES20: void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10)>
STATIC edge: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <org.webrtc.videoengine.ViEAndroidGLES20: void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: EGL error: 0x%x", $r3) in <org.webrtc.videoengine.ViEAndroidGLES20: void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
SPECIAL edge: specialinvoke $r2.<org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory: void <init>(org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory)>(null) in <org.webrtc.videoengine.ViEAndroidGLES20: void init(boolean,int,int)> ==> <org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory: void <init>(org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory)>
SPECIAL edge: specialinvoke $r3.<org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void <init>(int,int,int,int,int,int)>(8, 8, 8, 8, $i0, $i1) in <org.webrtc.videoengine.ViEAndroidGLES20: void init(boolean,int,int)> ==> <org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void <init>(int,int,int,int,int,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier: void <init>(com.actionbarsherlock.internal.widget.IcsAdapterView)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier: void <init>(com.actionbarsherlock.internal.widget.IcsAdapterView)>($r1) in <com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier: void <init>(com.actionbarsherlock.internal.widget.IcsAdapterView,com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier: void <init>(com.actionbarsherlock.internal.widget.IcsAdapterView)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.widget.IcsAdapterView: void access$2(com.actionbarsherlock.internal.widget.IcsAdapterView)>($r2) in <com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier: void run()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void access$2(com.actionbarsherlock.internal.widget.IcsAdapterView)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.CallLogListFragment$3: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.ui.calllog.CallLogListFragment: void access$7(com.csipsimple.ui.calllog.CallLogListFragment)>($r2) in <com.csipsimple.ui.calllog.CallLogListFragment$3: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void access$7(com.csipsimple.ui.calllog.CallLogListFragment)>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.csipsimple.ui.calllog.CallLogListFragment$2: void <init>(com.csipsimple.ui.calllog.CallLogListFragment,int)> ==> <java.lang.Thread: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.ui.calllog.CallLogListFragment: com.csipsimple.ui.calllog.CallLogAdapter access$6(com.csipsimple.ui.calllog.CallLogListFragment)>($r1) in <com.csipsimple.ui.calllog.CallLogListFragment$2: void run()> ==> <com.csipsimple.ui.calllog.CallLogListFragment: com.csipsimple.ui.calllog.CallLogAdapter access$6(com.csipsimple.ui.calllog.CallLogListFragment)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.csipsimple.ui.calllog.CallLogAdapter: long[] getCallIdsAtPosition(int)>($i0) in <com.csipsimple.ui.calllog.CallLogListFragment$2: void run()> ==> <com.csipsimple.ui.calllog.CallLogAdapter: long[] getCallIdsAtPosition(int)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.ui.calllog.CallLogListFragment$2$1: void <init>(com.csipsimple.ui.calllog.CallLogListFragment$2,int,long[])>(r0, $i0, $r3) in <com.csipsimple.ui.calllog.CallLogListFragment$2: void run()> ==> <com.csipsimple.ui.calllog.CallLogListFragment$2$1: void <init>(com.csipsimple.ui.calllog.CallLogListFragment$2,int,long[])>
VIRTUAL edge: virtualinvoke $r4.<android.support.v4.app.FragmentActivity: void runOnUiThread(java.lang.Runnable)>($r5) in <com.csipsimple.ui.calllog.CallLogListFragment$2: void run()> ==> <com.csipsimple.ui.calllog.CallLogListFragment$2$1: void run()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.CallLogListFragment$4: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.Manifest: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.webrtc.videoengine.CaptureCapabilityAndroid: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>($r2, $r3) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.MenuItem getItem()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.MenuItem getItem()>
VIRTUAL edge: $z0 = virtualinvoke r5.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionButton()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionButton()>
STATIC edge: $r6 = staticinvoke <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.view.View access$1(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter)>($r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.view.View access$1(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void setAnchorView(android.view.View)>($r6) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void setAnchorView(android.view.View)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>($r8) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void onSubUiVisibilityChanged(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>($r8) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>
VIRTUAL edge: $i0 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: int size()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void setForceShowIcon(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void setForceShowIcon(boolean)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.MenuItem getItem(int)>(i1) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem getItem(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void access$2(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu)>($r1, null) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void access$2(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context)> ==> <com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0) in <com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.widget.ActivityChooserView$1: void <init>(com.actionbarsherlock.widget.ActivityChooserView)>(r0) in <com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.widget.ActivityChooserView$1: void <init>(com.actionbarsherlock.widget.ActivityChooserView)>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.widget.ActivityChooserView$2: void <init>(com.actionbarsherlock.widget.ActivityChooserView)>(r0) in <com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.widget.ActivityChooserView$2: void <init>(com.actionbarsherlock.widget.ActivityChooserView)>
SPECIAL edge: specialinvoke $r10.<com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void <init>(com.actionbarsherlock.widget.ActivityChooserView,com.actionbarsherlock.widget.ActivityChooserView$Callbacks)>(r0, null) in <com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void <init>(com.actionbarsherlock.widget.ActivityChooserView,com.actionbarsherlock.widget.ActivityChooserView$Callbacks)>
VIRTUAL edge: virtualinvoke $r14.<android.widget.FrameLayout: void setOnClickListener(android.view.View$OnClickListener)>($r10) in <com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.widget.ActivityChooserView: void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel)>
SPECIAL edge: specialinvoke $r16.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void <init>(com.actionbarsherlock.widget.ActivityChooserView,com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter)>(r0, null) in <com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void <init>(com.actionbarsherlock.widget.ActivityChooserView,com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter)>
SPECIAL edge: specialinvoke $r17.<com.actionbarsherlock.widget.ActivityChooserView$3: void <init>(com.actionbarsherlock.widget.ActivityChooserView)>(r0) in <com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.widget.ActivityChooserView$3: void <init>(com.actionbarsherlock.widget.ActivityChooserView)>
SPECIAL edge: $r1 = specialinvoke $r0.<com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()>() in <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow access$1(com.actionbarsherlock.widget.ActivityChooserView)> ==> <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.widget.ActivityChooserView: void updateAppearance()>() in <com.actionbarsherlock.widget.ActivityChooserView: void access$12(com.actionbarsherlock.widget.ActivityChooserView)> ==> <com.actionbarsherlock.widget.ActivityChooserView: void updateAppearance()>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)>($i0) in <com.actionbarsherlock.widget.ActivityChooserView: void access$2(com.actionbarsherlock.widget.ActivityChooserView,int)> ==> <com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context)>($r1) in <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setAdapter(android.widget.ListAdapter)>($r3) in <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setAdapter(android.widget.ListAdapter)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setAnchorView(android.view.View)>(r0) in <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setAnchorView(android.view.View)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setModal(boolean)>(1) in <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setModal(boolean)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>($r4) in <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>($r4) in <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>() in <com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getActivityCount()>() in <com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getActivityCount()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void setShowFooterView(boolean)>(1) in <com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void setShowFooterView(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void setMaxActivityCount(int)>($i0) in <com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void setMaxActivityCount(int)>
SPECIAL edge: $r7 = specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()>() in <com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)> ==> <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()>
VIRTUAL edge: $z1 = virtualinvoke $r7.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isShowing()>() in <com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isShowing()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void setShowDefaultActivity(boolean,boolean)>(1, z0) in <com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void setShowDefaultActivity(boolean,boolean)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int measureContentWidth()>() in <com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int measureContentWidth()>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setContentWidth(int)>($i0) in <com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setContentWidth(int)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()>() in <com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()>
VIRTUAL edge: virtualinvoke $r8.<com.actionbarsherlock.view.ActionProvider: void subUiVisibilityChanged(boolean)>(1) in <com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)> ==> <com.actionbarsherlock.view.ActionProvider: void subUiVisibilityChanged(boolean)>
VIRTUAL edge: $r9 = virtualinvoke $r7.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.widget.ListView getListView()>() in <com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.widget.ListView getListView()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getCount()>() in <com.actionbarsherlock.widget.ActivityChooserView: void updateAppearance()> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getCount()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getActivityCount()>() in <com.actionbarsherlock.widget.ActivityChooserView: void updateAppearance()> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getActivityCount()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getHistorySize()>() in <com.actionbarsherlock.widget.ActivityChooserView: void updateAppearance()> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getHistorySize()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: android.content.pm.ResolveInfo getDefaultActivity()>() in <com.actionbarsherlock.widget.ActivityChooserView: void updateAppearance()> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: android.content.pm.ResolveInfo getDefaultActivity()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView: boolean isShowingPopup()>() in <com.actionbarsherlock.widget.ActivityChooserView: boolean dismissPopup()> ==> <com.actionbarsherlock.widget.ActivityChooserView: boolean isShowingPopup()>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()>() in <com.actionbarsherlock.widget.ActivityChooserView: boolean dismissPopup()> ==> <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void dismiss()>() in <com.actionbarsherlock.widget.ActivityChooserView: boolean dismissPopup()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void dismiss()>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>() in <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()>() in <com.actionbarsherlock.widget.ActivityChooserView: boolean isShowingPopup()> ==> <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isShowing()>() in <com.actionbarsherlock.widget.ActivityChooserView: boolean isShowingPopup()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isShowing()>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>() in <com.actionbarsherlock.widget.ActivityChooserView: void onAttachedToWindow()> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>() in <com.actionbarsherlock.widget.ActivityChooserView: void onDetachedFromWindow()> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>
SPECIAL edge: $r2 = specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()>() in <com.actionbarsherlock.widget.ActivityChooserView: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isShowing()>() in <com.actionbarsherlock.widget.ActivityChooserView: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isShowing()>
VIRTUAL edge: $i0 = virtualinvoke $r3.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getMaxActivityCount()>() in <com.actionbarsherlock.widget.ActivityChooserView: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getMaxActivityCount()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)>($i0) in <com.actionbarsherlock.widget.ActivityChooserView: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView: boolean dismissPopup()>() in <com.actionbarsherlock.widget.ActivityChooserView: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.widget.ActivityChooserView: boolean dismissPopup()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void setDataModel(com.actionbarsherlock.widget.ActivityChooserModel)>($r1) in <com.actionbarsherlock.widget.ActivityChooserView: void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void setDataModel(com.actionbarsherlock.widget.ActivityChooserModel)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView: boolean isShowingPopup()>() in <com.actionbarsherlock.widget.ActivityChooserView: void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel)> ==> <com.actionbarsherlock.widget.ActivityChooserView: boolean isShowingPopup()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView: boolean dismissPopup()>() in <com.actionbarsherlock.widget.ActivityChooserView: void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel)> ==> <com.actionbarsherlock.widget.ActivityChooserView: boolean dismissPopup()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView: boolean showPopup()>() in <com.actionbarsherlock.widget.ActivityChooserView: void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel)> ==> <com.actionbarsherlock.widget.ActivityChooserView: boolean showPopup()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView: boolean isShowingPopup()>() in <com.actionbarsherlock.widget.ActivityChooserView: boolean showPopup()> ==> <com.actionbarsherlock.widget.ActivityChooserView: boolean isShowingPopup()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)>($i0) in <com.actionbarsherlock.widget.ActivityChooserView: boolean showPopup()> ==> <com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.account.AccountsEditListAdapter$AccountRowTag: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice: void <init>(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void <init>(android.content.Context,int,int)>($r1, $i0, $i1) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void <init>(android.content.Context,int,int)>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback)>(r0, null) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback)>
STATIC edge: $z1 = staticinvoke <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey: boolean get(android.content.Context)>($r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean reserveOverflow(android.content.Context)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey: boolean get(android.content.Context)>
VIRTUAL edge: virtualinvoke r5.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setItemInvoker(com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker)>(r4) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setItemInvoker(com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean dismissPopupMenus()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>
VIRTUAL edge: $z1 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideSubMenus()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean dismissPopupMenus()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideSubMenus()>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)>($r1, $i0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean flagActionItems()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>
VIRTUAL edge: $z1 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean requiresActionButton()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean flagActionItems()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean requiresActionButton()>
VIRTUAL edge: $z1 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionViewExpanded()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean flagActionItems()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionViewExpanded()>
VIRTUAL edge: $z1 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean requestsActionButton()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean flagActionItems()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean requestsActionButton()>
VIRTUAL edge: $r8 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>(r7, $r8, r4) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean flagActionItems()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>
STATIC edge: i8 = staticinvoke <com.actionbarsherlock.internal.view.menu.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)>($r8, i6, i5, $i4, 0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean flagActionItems()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)>
VIRTUAL edge: i8 = virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean flagActionItems()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>
VIRTUAL edge: virtualinvoke r7.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setIsActionButton(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean flagActionItems()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setIsActionButton(boolean)>
VIRTUAL edge: z0 = virtualinvoke r10.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionButton()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean flagActionItems()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionButton()>
VIRTUAL edge: $r4 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.view.View getActionView()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.view.View getActionView()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()>
SPECIAL edge: r5 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>($r1, $r3, $r2) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionViewExpanded()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionViewExpanded()>
VIRTUAL edge: $z0 = virtualinvoke r6.<com.actionbarsherlock.internal.view.menu.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>($r7) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
VIRTUAL edge: $r8 = virtualinvoke r6.<com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r7) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
SPECIAL edge: $r2 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>($r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.ActionMenuView: void setPresenter(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: void setPresenter(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void dismiss()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void dismiss()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void dismiss()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideSubMenus()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void dismiss()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>($r1, $r2) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>
STATIC edge: $z0 = staticinvoke <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean reserveOverflow(android.content.Context)>($r5) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean reserveOverflow(android.content.Context)>
STATIC edge: $i0 = staticinvoke <com.actionbarsherlock.internal.ResourcesCompat: int getResources_getInteger(android.content.Context,int)>($r1, $i0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.ResourcesCompat: int getResources_getInteger(android.content.Context,int)>
SPECIAL edge: specialinvoke $r8.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context)>(r0, $r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup: boolean isShowing()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean isOverflowMenuShowing()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean isShowing()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean dismissPopupMenus()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean dismissPopupMenus()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)>($r1, $z0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)>
STATIC edge: $i0 = staticinvoke <com.actionbarsherlock.internal.ResourcesCompat: int getResources_getInteger(android.content.Context,int)>($r2, $i0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.ResourcesCompat: int getResources_getInteger(android.content.Context,int)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>($i0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>(r6) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState: void <init>()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.os.Parcelable onSaveInstanceState()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: boolean hasVisibleItems()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean hasVisibleItems()>
VIRTUAL edge: $r4 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.Menu getParentMenu()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.Menu getParentMenu()>
VIRTUAL edge: $r5 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.MenuItem getItem()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.MenuItem getItem()>
SPECIAL edge: $r6 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.view.View findViewForItem(com.actionbarsherlock.view.MenuItem)>($r5) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.view.View findViewForItem(com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: specialinvoke $r8.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>(r0, $r9, $r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
VIRTUAL edge: virtualinvoke $r8.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void setAnchorView(android.view.View)>(r7) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void setAnchorView(android.view.View)>
VIRTUAL edge: virtualinvoke $r8.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void show()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void show()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>($r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>(null) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void onSubUiVisibilityChanged(boolean)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void onSubUiVisibilityChanged(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean flagActionItems()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setWidthLimit(int,boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean flagActionItems()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionButton()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionButton()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean isOverflowMenuShowing()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean isOverflowMenuShowing()>
VIRTUAL edge: $r6 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)>(r0, $r7, $r2, $r3, 1) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)>
SPECIAL edge: specialinvoke $r5.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup)>(r0, r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>(null) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>(null) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getActionItems()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getActionItems()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>
VIRTUAL edge: $z0 = virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionViewExpanded()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionViewExpanded()>
SPECIAL edge: specialinvoke $r6.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context)>(r0, $r7) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context)>
VIRTUAL edge: $r12 = virtualinvoke r11.<com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()>
VIRTUAL edge: virtualinvoke r11.<com.actionbarsherlock.internal.view.menu.ActionMenuView: void setOverflowReserved(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: void setOverflowReserved(boolean)>
VIRTUAL edge: $r13 = virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.ActionProvider getActionProvider()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.ActionProvider getActionProvider()>
VIRTUAL edge: virtualinvoke $r13.<com.actionbarsherlock.view.ActionProvider: void setSubUiVisibilityListener(com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener)>(r0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.view.ActionProvider: void setSubUiVisibilityListener(com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.view.ActionMode: void <init>()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.view.ActionMode: void <init>()>
VIRTUAL edge: $r4 = virtualinvoke $r1.<com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context getThemedContext()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context getThemedContext()>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>($r4) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setDefaultShowAsAction(int)>(1) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setDefaultShowAsAction(int)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: boolean dispatchOnCreate()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: boolean dispatchOnCreate()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.app.ActionBarImpl: void animateToMode(boolean)>(0) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void finish()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void animateToMode(boolean)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void finish()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.ActionBarContextView: void closeMode()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void finish()> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void closeMode()>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarView access$6(com.actionbarsherlock.internal.app.ActionBarImpl)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void finish()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarView access$6(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.app.ActionBarImpl: void hide()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void finish()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void hide()>
VIRTUAL edge: $r2 = virtualinvoke $r3.<com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context getThemedContext()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: com.actionbarsherlock.view.MenuInflater getMenuInflater()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context getThemedContext()>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.view.MenuInflater: void <init>(android.content.Context)>($r2) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: com.actionbarsherlock.view.MenuInflater getMenuInflater()> ==> <com.actionbarsherlock.view.MenuInflater: void <init>(android.content.Context)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: java.lang.CharSequence getSubtitle()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: java.lang.CharSequence getSubtitle()> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: java.lang.CharSequence getTitle()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContextView: java.lang.CharSequence getTitle()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: java.lang.CharSequence getTitle()> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: java.lang.CharSequence getTitle()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void invalidate()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void invalidate()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void invalidate()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void invalidate()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl)>($r4) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContextView: boolean showOverflowMenu()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: boolean showOverflowMenu()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: boolean hasVisibleItems()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean hasVisibleItems()>
VIRTUAL edge: $r5 = virtualinvoke $r4.<com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context getThemedContext()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context getThemedContext()>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>($r5, $r1) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void show()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void show()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl)>($r3) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setCustomView(android.view.View)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContextView: void setCustomView(android.view.View)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setCustomView(android.view.View)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void setCustomView(android.view.View)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setSubtitle(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setSubtitle(java.lang.CharSequence)>($r4) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setSubtitle(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setSubtitle(java.lang.CharSequence)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl)>($r3) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setSubtitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setSubtitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setTitle(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setTitle(java.lang.CharSequence)>($r4) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setTitle(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setTitle(java.lang.CharSequence)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl)>($r3) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setTitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setTitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_transport: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_transport: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_transport: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_transport: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R$integer: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131427920) in <com.csipsimple.wizards.impl.AuthorizationImplementation$1: void <init>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.webrtc.videoengine.ViERenderer: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $r1 = staticinvoke <org.webrtc.videoengine.ViERenderer: android.view.SurfaceView CreateRenderer(android.content.Context,boolean)>($r0, 0) in <org.webrtc.videoengine.ViERenderer: android.view.SurfaceView CreateRenderer(android.content.Context)> ==> <org.webrtc.videoengine.ViERenderer: android.view.SurfaceView CreateRenderer(android.content.Context,boolean)>
STATIC edge: $z0 = staticinvoke <org.webrtc.videoengine.ViEAndroidGLES20: boolean IsSupported(android.content.Context)>($r0) in <org.webrtc.videoengine.ViERenderer: android.view.SurfaceView CreateRenderer(android.content.Context,boolean)> ==> <org.webrtc.videoengine.ViEAndroidGLES20: boolean IsSupported(android.content.Context)>
SPECIAL edge: specialinvoke $r1.<org.webrtc.videoengine.ViEAndroidGLES20: void <init>(android.content.Context)>($r0) in <org.webrtc.videoengine.ViERenderer: android.view.SurfaceView CreateRenderer(android.content.Context,boolean)> ==> <org.webrtc.videoengine.ViEAndroidGLES20: void <init>(android.content.Context)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void closeOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchCloseOptionsMenu()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void closeOptionsMenu()> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchCloseOptionsMenu()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1) in <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchKeyEvent(android.view.KeyEvent)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.view.MenuInflater getMenuInflater()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()> ==> <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.view.MenuInflater getMenuInflater()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void invalidateOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchConfigurationChanged(android.content.res.Configuration)>($r1) in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchConfigurationChanged(android.content.res.Configuration)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onCreateOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>($r1) in <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchDestroy()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onDestroy()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchDestroy()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r1) in <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onMenuOpened(int,android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchMenuOpened(int,android.view.Menu)>($i0, $r1) in <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onMenuOpened(int,android.view.Menu)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchMenuOpened(int,android.view.Menu)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPanelClosed(int,android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchPanelClosed(int,android.view.Menu)>($i0, $r1) in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPanelClosed(int,android.view.Menu)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPanelClosed(int,android.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchPause()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPause()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPause()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchPostCreate(android.os.Bundle)>($r1) in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostCreate(android.os.Bundle)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchPostResume()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostResume()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPostResume()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onPrepareOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>($r2) in <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchStop()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onStop()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchStop()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onTitleChanged(java.lang.CharSequence,int)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchTitleChanged(java.lang.CharSequence,int)>($r1, $i0) in <com.actionbarsherlock.app.SherlockPreferenceActivity: void onTitleChanged(java.lang.CharSequence,int)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchTitleChanged(java.lang.CharSequence,int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void openOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchOpenOptionsMenu()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void openOptionsMenu()> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchOpenOptionsMenu()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void requestWindowFeature(long)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void setContentView(android.view.View)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void setContentView(android.view.View)>($r1) in <com.actionbarsherlock.app.SherlockPreferenceActivity: void setContentView(android.view.View)> ==> <com.actionbarsherlock.ActionBarSherlock: void setContentView(android.view.View)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void setSupportProgress(int)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void setSupportProgressBarIndeterminate(boolean)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void setSupportProgressBarIndeterminateVisibility(boolean)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void setSupportProgressBarVisibility(boolean)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void setSupportSecondaryProgress(int)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockPreferenceActivity: void supportInvalidateOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.service.Downloader: android.app.NotificationManager access$0(com.csipsimple.service.Downloader)>($r3) in <com.csipsimple.service.Downloader$1: void run(long,long)> ==> <com.csipsimple.service.Downloader: android.app.NotificationManager access$0(com.csipsimple.service.Downloader)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.CustomDistribution: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.ui.account.AccountsEditListAdapter: void setOnCheckedRowListener(com.csipsimple.ui.account.AccountsEditListAdapter$OnCheckedRowListener)>(r0) in <com.csipsimple.ui.account.AccountsEditListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void onToggleRow(com.csipsimple.ui.account.AccountsEditListAdapter$AccountRowTag)>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.account.AccountsEditListFragment$1: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)>(r0) in <com.csipsimple.ui.account.AccountsEditListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.account.AccountsEditListFragment$1: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)>
INTERFACE edge: $r3 = interfaceinvoke $r3.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)>($r4) in <com.csipsimple.ui.account.AccountsEditListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.account.AccountsEditListFragment$1: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.ui.account.AccountsEditListFragment$2: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)>(r0) in <com.csipsimple.ui.account.AccountsEditListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.account.AccountsEditListFragment$2: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)>
INTERFACE edge: $r3 = interfaceinvoke $r3.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)>($r5) in <com.csipsimple.ui.account.AccountsEditListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.account.AccountsEditListFragment$2: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.account.AccountsEditListFragment$3: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)>(r0) in <com.csipsimple.ui.account.AccountsEditListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.account.AccountsEditListFragment$3: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)>
INTERFACE edge: interfaceinvoke $r3.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)>($r6) in <com.csipsimple.ui.account.AccountsEditListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.account.AccountsEditListFragment$3: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>($r1, $r2) in <com.csipsimple.ui.account.AccountsEditListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
VIRTUAL edge: virtualinvoke r7.<com.csipsimple.widgets.DragnDropListView: void setGrabberId(int)>(2131099697) in <com.csipsimple.ui.account.AccountsEditListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.widgets.DragnDropListView: void setGrabberId(int)>
VIRTUAL edge: virtualinvoke r7.<com.csipsimple.widgets.DragnDropListView: void setOnDropListener(com.csipsimple.widgets.DragnDropListView$DropListener)>($r8) in <com.csipsimple.ui.account.AccountsEditListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.account.AccountsEditListFragment$4: void drop(int,int)>
VIRTUAL edge: virtualinvoke r7.<com.csipsimple.widgets.DragnDropListView: void setOnDropListener(com.csipsimple.widgets.DragnDropListView$DropListener)>($r8) in <com.csipsimple.ui.account.AccountsEditListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.widgets.DragnDropListView: void setOnDropListener(com.csipsimple.widgets.DragnDropListView$DropListener)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>(r1, $r2) in <com.csipsimple.ui.account.AccountsEditListFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)> ==> <com.csipsimple.widgets.CSSListFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.account.AccountsEditListFragment: void updateCheckedItem()>() in <com.csipsimple.ui.account.AccountsEditListFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: void updateCheckedItem()>
STATIC edge: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.ui.account.AccountsEditListFragment: void onToggleRow(com.csipsimple.ui.account.AccountsEditListAdapter$AccountRowTag)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.pjsip.PjSipCalls: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $r0 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t call_dump(int,int,java.lang.String)>($i0, $i1, " ") in <com.csipsimple.pjsip.PjSipCalls: java.lang.String dumpCallInfo(int)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t call_dump(int,int,java.lang.String)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r0) in <com.csipsimple.pjsip.PjSipCalls: java.lang.String dumpCallInfo(int)> ==> <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_call_info: int getId()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua_call_info: int getId()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.api.SipCallSession: void setCallId(int)>($i0) in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.api.SipCallSession: void setCallId(int)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsip_inv_state getState()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsip_inv_state getState()>
VIRTUAL edge: $i0 = virtualinvoke $r3.<org.pjsip.pjsua.pjsip_inv_state: int swigValue()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsip_inv_state: int swigValue()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.api.SipCallSession: void setCallState(int)>($i0) in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.api.SipCallSession: void setCallState(int)>
VIRTUAL edge: $r4 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsua_call_media_status getMedia_status()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsua_call_media_status getMedia_status()>
VIRTUAL edge: $i0 = virtualinvoke $r4.<org.pjsip.pjsua.pjsua_call_media_status: int swigValue()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua_call_media_status: int swigValue()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.api.SipCallSession: void setMediaStatus(int)>($i0) in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.api.SipCallSession: void setMediaStatus(int)>
VIRTUAL edge: $r5 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getRemote_info()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getRemote_info()>
STATIC edge: $r6 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r5) in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.api.SipCallSession: void setRemoteContact(java.lang.String)>($r6) in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.api.SipCallSession: void setRemoteContact(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_call_info: int getConf_slot()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua_call_info: int getConf_slot()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.api.SipCallSession: void setConfPort(int)>($i0) in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.api.SipCallSession: void setConfPort(int)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_call_info: int getAcc_id()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua_call_info: int getAcc_id()>
VIRTUAL edge: $l1 = virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: long getAccountIdForPjsipId(int)>($i0) in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.pjsip.PjSipService: long getAccountIdForPjsipId(int)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.api.SipCallSession: void setAccId(long)>($l1) in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.api.SipCallSession: void setAccId(long)>
VIRTUAL edge: $r7 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_time_val getConnect_duration()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_time_val getConnect_duration()>
VIRTUAL edge: $i0 = virtualinvoke $r7.<org.pjsip.pjsua.pj_time_val: int getSec()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pj_time_val: int getSec()>
VIRTUAL edge: $i0 = virtualinvoke $r7.<org.pjsip.pjsua.pj_time_val: int getMsec()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pj_time_val: int getMsec()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.api.SipCallSession: void setConnectStart(long)>($l1) in <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.api.SipCallSession: void setConnectStart(long)>
VIRTUAL edge: $i0 = virtualinvoke $r0.<com.csipsimple.api.SipCallSession: int getCallId()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.api.SipCallSession: int getCallId()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjSipCalls", $r5) in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r3.<org.pjsip.pjsua.pjsua_call_info: void <init>()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua_call_info: void <init>()>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int call_get_info(int,org.pjsip.pjsua.pjsua_call_info)>($i0, r3) in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua: int call_get_info(int,org.pjsip.pjsua.pjsua_call_info)>
STATIC edge: staticinvoke <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)>($r0, r3, $r2) in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua: int get_event_status_code(org.pjsip.pjsua.pjsip_event)>($r1) in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua: int get_event_status_code(org.pjsip.pjsua.pjsip_event)>
VIRTUAL edge: $r6 = virtualinvoke r3.<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsip_status_code getLast_status()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsip_status_code getLast_status()>
VIRTUAL edge: $i1 = virtualinvoke $r6.<org.pjsip.pjsua.pjsip_status_code: int swigValue()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsip_status_code: int swigValue()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.api.SipCallSession: void setLastStatusCode(int)>($i0) in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.api.SipCallSession: void setLastStatusCode(int)>
VIRTUAL edge: $r7 = virtualinvoke r3.<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getLast_status_text()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getLast_status_text()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r7) in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.api.SipCallSession: void setLastStatusComment(java.lang.String)>($r5) in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.api.SipCallSession: void setLastStatusComment(java.lang.String)>
STATIC edge: $r7 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t call_secure_info(int)>($i0) in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t call_secure_info(int)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.api.SipCallSession: void setMediaSecureInfo(java.lang.String)>($r5) in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.api.SipCallSession: void setMediaSecureInfo(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.api.SipCallSession: void setMediaSecure(boolean)>($z1) in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.api.SipCallSession: void setMediaSecure(boolean)>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int call_get_vid_stream_idx(int)>($i0) in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua: int call_get_vid_stream_idx(int)>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int call_vid_stream_is_running(int,int,org.pjsip.pjsua.pjmedia_dir)>($i1, $i0, $r8) in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsua: int call_vid_stream_is_running(int,int,org.pjsip.pjsua.pjmedia_dir)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.api.SipCallSession: void setMediaHasVideo(boolean)>($z0) in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.api.SipCallSession: void setMediaHasVideo(boolean)>
VIRTUAL edge: $i0 = virtualinvoke $r9.<org.pjsip.pjsua.pjsip_inv_state: int swigValue()>() in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <org.pjsip.pjsua.pjsip_inv_state: int swigValue()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.api.SipCallSession: void setCallState(int)>($i0) in <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)> ==> <com.csipsimple.api.SipCallSession: void setCallState(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.CallRomania: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.CallRomania: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.CallRomania: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.CallRomania: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.CallRomania: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.CallRomania: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.CallRomania: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>("stun.ippi.fr") in <com.csipsimple.wizards.impl.CallRomania: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Amivox: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Amivox: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Amivox: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Amivox: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)>($r2, $l0, $f0) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: void <init>(java.lang.String,long,float)> ==> <com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)>
VIRTUAL edge: $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: boolean equals(java.lang.Object)> ==> <java.lang.Object: java.lang.Class getClass()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Anv: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Anv: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Anv: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Anv: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Localphone: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Localphone: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Localphone: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Localphone: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Localphone: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.Localphone: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)>($r2) in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)>
STATIC edge: staticinvoke <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void access$0(com.csipsimple.ui.outgoingcall.OutgoingCallChooser,com.csipsimple.api.ISipService)>($r3, $r4) in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void access$0(com.csipsimple.ui.outgoingcall.OutgoingCallChooser,com.csipsimple.api.ISipService)>
STATIC edge: staticinvoke <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void access$0(com.csipsimple.ui.outgoingcall.OutgoingCallChooser,com.csipsimple.api.ISipService)>($r2, null) in <com.csipsimple.ui.outgoingcall.OutgoingCallChooser$1: void onServiceDisconnected(android.content.ComponentName)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void access$0(com.csipsimple.ui.outgoingcall.OutgoingCallChooser,com.csipsimple.api.ISipService)>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_buddy_config: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_buddy_config: void <init>()> ==> <org.pjsip.pjsua.pjsua_buddy_config: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_buddy_config: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_buddy_config: void delete()>() in <org.pjsip.pjsua.pjsua_buddy_config: void finalize()> ==> <org.pjsip.pjsua.pjsua_buddy_config: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_buddy_config: org.pjsip.pjsua.pj_str_t getUri()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_buddy_config: void setUri(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder)>($r1, null) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder)>($r1, null) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setFloatValues(float[])>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setFloatValues(float[])>
VIRTUAL edge: $f0 = virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: float getFloatValue(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void calculateValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: float getFloatValue(float)>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone()>
STATIC edge: $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: java.lang.Object getAnimatedValue()> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setAnimatedValue(java.lang.Object)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setFloatValues(float[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setFloatValues(float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setFloatValues(float[])>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setupSetter(java.lang.Class)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0) in <com.actionbarsherlock.internal.widget.IcsSpinner: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.widget.IcsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0) in <com.actionbarsherlock.internal.widget.IcsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r3.<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void <init>(com.actionbarsherlock.internal.widget.IcsSpinner,android.content.Context,android.util.AttributeSet,int)>(r0, $r1, $r2, $i0) in <com.actionbarsherlock.internal.widget.IcsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void <init>(com.actionbarsherlock.internal.widget.IcsSpinner,android.content.Context,android.util.AttributeSet,int)>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r7) in <com.actionbarsherlock.internal.widget.IcsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void setVerticalOffset(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setVerticalOffset(int)>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void setHorizontalOffset(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setHorizontalOffset(int)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: android.view.View get(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsSpinner: android.view.View makeAndAddView(int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: android.view.View get(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: void setUpChild(android.view.View)>($r2) in <com.actionbarsherlock.internal.widget.IcsSpinner: android.view.View makeAndAddView(int)> ==> <com.actionbarsherlock.internal.widget.IcsSpinner: void setUpChild(android.view.View)>
VIRTUAL edge: r3 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>() in <com.actionbarsherlock.internal.widget.IcsSpinner: void setUpChild(android.view.View)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
SPECIAL edge: $r3 = specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: android.view.View makeAndAddView(int)>(0) in <com.actionbarsherlock.internal.widget.IcsSpinner: int getBaseline()> ==> <com.actionbarsherlock.internal.widget.IcsSpinner: android.view.View makeAndAddView(int)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void put(int,android.view.View)>(0, $r3) in <com.actionbarsherlock.internal.widget.IcsSpinner: int getBaseline()> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void put(int,android.view.View)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: void handleDataChanged()>() in <com.actionbarsherlock.internal.widget.IcsSpinner: void layout(int,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void handleDataChanged()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: void resetList()>() in <com.actionbarsherlock.internal.widget.IcsSpinner: void layout(int,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void resetList()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: void setSelectedPositionInt(int)>($i2) in <com.actionbarsherlock.internal.widget.IcsSpinner: void layout(int,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void setSelectedPositionInt(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: void recycleAllViews()>() in <com.actionbarsherlock.internal.widget.IcsSpinner: void layout(int,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void recycleAllViews()>
SPECIAL edge: $r2 = specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: android.view.View makeAndAddView(int)>($i2) in <com.actionbarsherlock.internal.widget.IcsSpinner: void layout(int,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsSpinner: android.view.View makeAndAddView(int)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void clear()>() in <com.actionbarsherlock.internal.widget.IcsSpinner: void layout(int,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void clear()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: void checkSelectionChanged()>() in <com.actionbarsherlock.internal.widget.IcsSpinner: void layout(int,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void checkSelectionChanged()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: void setNextSelectedPositionInt(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsSpinner: void layout(int,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void setNextSelectedPositionInt(int)>
VIRTUAL edge: $i5 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: int getSelectedItemPosition()>() in <com.actionbarsherlock.internal.widget.IcsSpinner: int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: int getSelectedItemPosition()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: void setSelection(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsSpinner: void onClick(android.content.DialogInterface,int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelection(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void onDetachedFromWindow()>() in <com.actionbarsherlock.internal.widget.IcsSpinner: void onDetachedFromWindow()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void onDetachedFromWindow()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void onLayout(boolean,int,int,int,int)>($z0, $i0, $i1, $i2, $i3) in <com.actionbarsherlock.internal.widget.IcsSpinner: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void onLayout(boolean,int,int,int,int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: void layout(int,boolean)>(0, 0) in <com.actionbarsherlock.internal.widget.IcsSpinner: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsSpinner: void layout(int,boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void onMeasure(int,int)>($i0, $i1) in <com.actionbarsherlock.internal.widget.IcsSpinner: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void onMeasure(int,int)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: android.widget.SpinnerAdapter getAdapter()>() in <com.actionbarsherlock.internal.widget.IcsSpinner: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.widget.SpinnerAdapter getAdapter()>
VIRTUAL edge: $i2 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)>($r2, $r3) in <com.actionbarsherlock.internal.widget.IcsSpinner: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.IcsSpinner: int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setAdapter(android.widget.SpinnerAdapter)>($r1) in <com.actionbarsherlock.internal.widget.IcsSpinner: void setAdapter(android.widget.SpinnerAdapter)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setAdapter(android.widget.SpinnerAdapter)>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: void <init>(android.widget.SpinnerAdapter)>($r1) in <com.actionbarsherlock.internal.widget.IcsSpinner: void setAdapter(android.widget.SpinnerAdapter)> ==> <com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: void <init>(android.widget.SpinnerAdapter)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: void requestLayout()>() in <com.actionbarsherlock.internal.widget.IcsSpinner: void setGravity(int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void requestLayout()>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("setOnItemClickListener cannot be used with a spinner.") in <com.actionbarsherlock.internal.widget.IcsSpinner: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner: void setPrompt(java.lang.CharSequence)>($r2) in <com.actionbarsherlock.internal.widget.IcsSpinner: void setPromptId(int)> ==> <com.actionbarsherlock.internal.widget.IcsSpinner: void setPrompt(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.CSSListFragment: void setListShown(boolean)>(1) in <com.csipsimple.widgets.CSSListFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)> ==> <com.csipsimple.widgets.CSSListFragment: void setListShown(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.CSSListFragment: void setListShownNoAnimation(boolean)>(1) in <com.csipsimple.widgets.CSSListFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)> ==> <com.csipsimple.widgets.CSSListFragment: void setListShownNoAnimation(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.CSSListFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>($r1, $r3) in <com.csipsimple.widgets.CSSListFragment: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)> ==> <com.csipsimple.widgets.CSSListFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void setListShown(boolean,boolean)>($z0, 0) in <com.csipsimple.widgets.CSSListFragment: void setListShownNoAnimation(boolean)> ==> <com.csipsimple.widgets.CSSListFragment: void setListShown(boolean,boolean)>
SPECIAL edge: $z0 = specialinvoke $r0.<com.csipsimple.wizards.impl.MondotalkCreate: boolean saveOnline(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4, $r5, $r6) in <com.csipsimple.wizards.impl.MondotalkCreate: boolean access$12(com.csipsimple.wizards.impl.MondotalkCreate,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.MondotalkCreate: boolean saveOnline(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: $r2 = specialinvoke $r0.<com.csipsimple.wizards.impl.MondotalkCreate: java.lang.String getEditTextValue(android.widget.EditText)>($r1) in <com.csipsimple.wizards.impl.MondotalkCreate: java.lang.String access$6(com.csipsimple.wizards.impl.MondotalkCreate,android.widget.EditText)> ==> <com.csipsimple.wizards.impl.MondotalkCreate: java.lang.String getEditTextValue(android.widget.EditText)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("MondotalkCreate", $r3) in <com.csipsimple.wizards.impl.MondotalkCreate: boolean saveOnline(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.MondotalkCreate: boolean saveOnline(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String trim()>
VIRTUAL edge: $r24 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\|") in <com.csipsimple.wizards.impl.MondotalkCreate: boolean saveOnline(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
SPECIAL edge: specialinvoke $r31.<com.csipsimple.wizards.impl.MondotalkCreate$AccountCreationResult: void <init>(com.csipsimple.wizards.impl.MondotalkCreate,java.lang.String,java.lang.String)>(r0, $r1, $r2) in <com.csipsimple.wizards.impl.MondotalkCreate: boolean saveOnline(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.MondotalkCreate$AccountCreationResult: void <init>(com.csipsimple.wizards.impl.MondotalkCreate,java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("MondotalkCreate", "Something went wrong while retrieving the captcha webservice ") in <com.csipsimple.wizards.impl.MondotalkCreate: boolean saveOnline(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("MondotalkCreate", "Can\'t create account", r8) in <com.csipsimple.wizards.impl.MondotalkCreate: boolean saveOnline(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.MondotalkCreate: boolean canSave()>() in <com.csipsimple.wizards.impl.MondotalkCreate: void afterTextChanged(android.text.Editable)> ==> <com.csipsimple.wizards.impl.MondotalkCreate: boolean canSave()>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.wizards.impl.MondotalkCreate: boolean canSave()>() in <com.csipsimple.wizards.impl.MondotalkCreate: void onClick(android.view.View)> ==> <com.csipsimple.wizards.impl.MondotalkCreate: boolean canSave()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.wizards.impl.MondotalkCreate$2: void <init>(com.csipsimple.wizards.impl.MondotalkCreate)>(r0) in <com.csipsimple.wizards.impl.MondotalkCreate: void onClick(android.view.View)> ==> <com.csipsimple.wizards.impl.MondotalkCreate$2: void <init>(com.csipsimple.wizards.impl.MondotalkCreate)>
VIRTUAL edge: virtualinvoke r2.<java.lang.Thread: void start()>() in <com.csipsimple.wizards.impl.MondotalkCreate: void onClick(android.view.View)> ==> <com.csipsimple.wizards.impl.MondotalkCreate$2: void run()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile$1: void <init>(com.csipsimple.ui.account.AccountsLoader$FilteredProfile,java.util.concurrent.Semaphore)> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("OutgoingAccountsLoader", "Callhandler loaded") in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile$1: void onLoad(com.csipsimple.utils.CallHandlerPlugin)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity)>($r1) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable)> ==> <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallControls access$9(com.csipsimple.ui.incall.InCallActivity)>($r1) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallControls access$9(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.MediaState access$3(com.csipsimple.ui.incall.InCallActivity)>($r1) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.MediaState access$3(com.csipsimple.ui.incall.InCallActivity)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.incall.InCallControls: void setMediaState(com.csipsimple.api.MediaState)>($r3) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallControls: void setMediaState(com.csipsimple.api.MediaState)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.CallProximityManager access$16(com.csipsimple.ui.incall.InCallActivity)>($r1) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.CallProximityManager access$16(com.csipsimple.ui.incall.InCallActivity)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.incall.CallProximityManager: void updateProximitySensorMode()>() in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void run()> ==> <com.csipsimple.ui.incall.CallProximityManager: void updateProximitySensorMode()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Gizmo5: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Gizmo5: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Gizmo5: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Gizmo5: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Gizmo5: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Gizmo5: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Gizmo5: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.Gizmo5: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>("stun01.sipphone.com") in <com.csipsimple.wizards.impl.Gizmo5: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(2) in <com.csipsimple.wizards.impl.Gizmo5: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <java.lang.Integer: java.lang.String toString(int)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("dtmf_mode", $r2) in <com.csipsimple.wizards.impl.Gizmo5: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$ReturnRunnable: void setResult(java.lang.Object)>($r1) in <com.csipsimple.service.SipService$ReturnRunnable: void doRun()> ==> <com.csipsimple.service.SipService$ReturnRunnable: void setResult(java.lang.Object)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP SRV", "Can\'t acquire run semaphore... problem...") in <com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.Manifest$permission: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>($i0, $i1) in <com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams: void <init>(int,int,boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams: void <init>(int,int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjmedia_port: org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int getGet_frame()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjmedia_port_info: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjmedia_port: org.pjsip.pjsua.pjmedia_port_info getInfo()> ==> <org.pjsip.pjsua.pjmedia_port_info: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjmedia_port: org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int getOn_destroy()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjmedia_port: org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int getPut_frame()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int)>($r1) in <org.pjsip.pjsua.pjmedia_port: void setGet_frame(org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjmedia_port_info: long getCPtr(org.pjsip.pjsua.pjmedia_port_info)>($r1) in <org.pjsip.pjsua.pjmedia_port: void setInfo(org.pjsip.pjsua.pjmedia_port_info)> ==> <org.pjsip.pjsua.pjmedia_port_info: long getCPtr(org.pjsip.pjsua.pjmedia_port_info)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int)>($r1) in <org.pjsip.pjsua.pjmedia_port: void setOn_destroy(org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int)>($r1) in <org.pjsip.pjsua.pjmedia_port: void setPut_frame(org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.PhoneCapabilityTester: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: boolean isIntentRegistered(android.content.Context,android.content.Intent)>($r0, r1) in <com.csipsimple.utils.PhoneCapabilityTester: boolean isSmsIntentRegistered(android.content.Context)> ==> <com.csipsimple.utils.PhoneCapabilityTester: boolean isIntentRegistered(android.content.Context,android.content.Intent)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: void <init>(com.actionbarsherlock.widget.ShareActionProvider)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: void <init>(com.actionbarsherlock.widget.ShareActionProvider)>($r1) in <com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: void <init>(com.actionbarsherlock.widget.ShareActionProvider,com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener)> ==> <com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: void <init>(com.actionbarsherlock.widget.ShareActionProvider)>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.widget.ShareActionProvider: android.content.Context access$0(com.actionbarsherlock.widget.ShareActionProvider)>($r2) in <com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.widget.ShareActionProvider: android.content.Context access$0(com.actionbarsherlock.widget.ShareActionProvider)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.widget.ShareActionProvider: java.lang.String access$1(com.actionbarsherlock.widget.ShareActionProvider)>($r2) in <com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.widget.ShareActionProvider: java.lang.String access$1(com.actionbarsherlock.widget.ShareActionProvider)>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String)>($r3, $r4) in <com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)>($i0) in <com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.CallLogAdapter$1: void <init>(com.csipsimple.ui.calllog.CallLogAdapter)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r6 = staticinvoke <com.csipsimple.ui.calllog.CallLogAdapter: com.csipsimple.ui.calllog.CallLogAdapter$OnCallLogAction access$0(com.csipsimple.ui.calllog.CallLogAdapter)>($r5) in <com.csipsimple.ui.calllog.CallLogAdapter$1: void onClick(android.view.View)> ==> <com.csipsimple.ui.calllog.CallLogAdapter: com.csipsimple.ui.calllog.CallLogAdapter$OnCallLogAction access$0(com.csipsimple.ui.calllog.CallLogAdapter)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.CallLogAdapter$2: void <init>(com.csipsimple.ui.calllog.CallLogAdapter)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r7 = staticinvoke <com.csipsimple.ui.calllog.CallLogAdapter: com.csipsimple.ui.calllog.CallLogAdapter$OnCallLogAction access$0(com.csipsimple.ui.calllog.CallLogAdapter)>($r6) in <com.csipsimple.ui.calllog.CallLogAdapter$2: void onClick(android.view.View)> ==> <com.csipsimple.ui.calllog.CallLogAdapter: com.csipsimple.ui.calllog.CallLogAdapter$OnCallLogAction access$0(com.csipsimple.ui.calllog.CallLogAdapter)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_vid_req_keyframe_method$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()>() in <com.csipsimple.wizards.impl.OXO810: void <init>()> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.OXO810: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.OXO810: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.OXO810: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r4 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getSipDomain()>() in <com.csipsimple.wizards.impl.OXO810: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: java.lang.String getSipDomain()>
SPECIAL edge: $r2 = specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: java.lang.String getDomain()>() in <com.csipsimple.wizards.impl.OXO810: java.lang.String getDomain()> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: java.lang.String getDomain()>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.OXO810: java.lang.String getDomain()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.OXO810: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.widgets.EditSipUri$ToCall: void <init>(com.csipsimple.widgets.EditSipUri,java.lang.Long,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_ice_config_use)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_ice_config_use)> ==> <org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_ice_config_use)> ==> <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsua_ice_config_use: org.pjsip.pjsua.pjsua_ice_config_use swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: $r4 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: java.lang.Object clone()>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: java.lang.Object clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R$string: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void <init>()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void <init>(java.lang.Object,java.lang.String)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void <init>()>
SPECIAL edge: specialinvoke r3.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void <init>(java.lang.Object,java.lang.String)>($r0, $r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void <init>(java.lang.Object,java.lang.String)>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setFloatValues(float[])>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setFloatValues(float[])>
SPECIAL edge: specialinvoke r4.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void <init>(java.lang.Object,java.lang.String)>($r0, $r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void <init>(java.lang.Object,java.lang.String)>
VIRTUAL edge: virtualinvoke r4.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])>
VIRTUAL edge: virtualinvoke r4.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)>
SPECIAL edge: specialinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void <init>()>
VIRTUAL edge: virtualinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setAnimatedValue(java.lang.Object)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void animateValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setAnimatedValue(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone()>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone()>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator clone()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long)>($l0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>($r4, $r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setFloatValues(float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setFloatValues(float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setFloatValues(float[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setFloatValues(float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setFloatValues(float[])>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])>($r4, null, $r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>
VIRTUAL edge: $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setTarget(java.lang.Object)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void initAnimation()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setupEndValues()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void initAnimation()>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupEndValue(java.lang.Object)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setupEndValues()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupEndValue(java.lang.Object)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void initAnimation()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setupStartValues()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void initAnimation()>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupStartValue(java.lang.Object)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setupStartValues()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupStartValue(java.lang.Object)>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4) in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: java.lang.String toString()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $r2 = virtualinvoke $r6.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String toString()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: java.lang.String toString()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String toString()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>(r0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void loadStaticMethods()>() in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void loadStaticMethods()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>(r0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void loadStaticMethods()>() in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void loadStaticMethods()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>(r0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void loadStaticMethods()>() in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void loadStaticMethods()>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class "Lcom/actionbarsherlock/internal/nineoldandroids/widget/NineFrameLayout;", "getAlpha", $r2) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void loadStaticMethods()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
VIRTUAL edge: $f0 = virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getAlpha()>() in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: float getSupportAlpha()> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getAlpha()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r2, r0, null) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: float getSupportAlpha()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
VIRTUAL edge: $f0 = virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getTranslationY()>() in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: float getSupportTranslationY()> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getTranslationY()>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r2, r0, $r3) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: float getSupportTranslationY()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setAlpha(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setSupportAlpha(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setAlpha(float)>
STATIC edge: $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setSupportAlpha(float)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r3, r0, $r4) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setSupportAlpha(float)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setTranslationY(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setSupportTranslationY(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setTranslationY(float)>
STATIC edge: $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setSupportTranslationY(float)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r3, r0, $r4) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setSupportTranslationY(float)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AccountBalanceHelper: void <init>()>() in <com.csipsimple.wizards.impl.Sipgate$AccountBalance: void <init>(com.csipsimple.wizards.impl.Sipgate)> ==> <com.csipsimple.wizards.impl.AccountBalanceHelper: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.wizards.impl.Sipgate: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Sipgate)>(r3) in <com.csipsimple.wizards.impl.Sipgate$AccountBalance: void applyResultError()> ==> <com.csipsimple.wizards.impl.Sipgate: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Sipgate)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.wizards.impl.Sipgate: android.widget.TextView access$1(com.csipsimple.wizards.impl.Sipgate)>(r4) in <com.csipsimple.wizards.impl.Sipgate$AccountBalance: void applyResultSuccess(java.lang.String)> ==> <com.csipsimple.wizards.impl.Sipgate: android.widget.TextView access$1(com.csipsimple.wizards.impl.Sipgate)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.wizards.impl.Sipgate: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Sipgate)>(r4) in <com.csipsimple.wizards.impl.Sipgate$AccountBalance: void applyResultSuccess(java.lang.String)> ==> <com.csipsimple.wizards.impl.Sipgate: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Sipgate)>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <com.csipsimple.wizards.impl.Sipgate$AccountBalance: org.apache.http.client.methods.HttpRequestBase getRequest(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[])>($r5) in <com.csipsimple.wizards.impl.Sipgate$AccountBalance: org.apache.http.client.methods.HttpRequestBase getRequest(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[])>
VIRTUAL edge: $r5 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.Sipgate$AccountBalance: java.lang.String parseResponseLine(java.lang.String)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SipgateW", $r5) in <com.csipsimple.wizards.impl.Sipgate$AccountBalance: java.lang.String parseResponseLine(java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsip_cred_data_type$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AccountBalanceHelper: void <init>()>() in <com.csipsimple.wizards.impl.Zadarma$AccountBalance: void <init>(com.csipsimple.wizards.impl.Zadarma)> ==> <com.csipsimple.wizards.impl.AccountBalanceHelper: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.wizards.impl.Zadarma: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Zadarma)>(r3) in <com.csipsimple.wizards.impl.Zadarma$AccountBalance: void applyResultError()> ==> <com.csipsimple.wizards.impl.Zadarma: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Zadarma)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.wizards.impl.Zadarma: android.widget.TextView access$1(com.csipsimple.wizards.impl.Zadarma)>(r4) in <com.csipsimple.wizards.impl.Zadarma$AccountBalance: void applyResultSuccess(java.lang.String)> ==> <com.csipsimple.wizards.impl.Zadarma: android.widget.TextView access$1(com.csipsimple.wizards.impl.Zadarma)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.wizards.impl.Zadarma: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Zadarma)>(r4) in <com.csipsimple.wizards.impl.Zadarma$AccountBalance: void applyResultSuccess(java.lang.String)> ==> <com.csipsimple.wizards.impl.Zadarma: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Zadarma)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.MD5: java.lang.String MD5Hash(java.lang.String)>($r3) in <com.csipsimple.wizards.impl.Zadarma$AccountBalance: org.apache.http.client.methods.HttpRequestBase getRequest(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.MD5: java.lang.String MD5Hash(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.Zadarma$AccountBalance: java.lang.String parseResponseLine(java.lang.String)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("ZadarmaW", "Can\'t get value for line") in <com.csipsimple.wizards.impl.Zadarma$AccountBalance: java.lang.String parseResponseLine(java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r6.<com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>() in <com.csipsimple.ui.calllog.CallLogDetailsFragment$1: void onClick(android.view.View)> ==> <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>
VIRTUAL edge: $r7 = virtualinvoke r6.<com.csipsimple.ui.SipHome: android.support.v4.app.Fragment getCurrentFragment()>() in <com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <com.csipsimple.ui.SipHome: android.support.v4.app.Fragment getCurrentFragment()>
VIRTUAL edge: virtualinvoke r8.<com.csipsimple.ui.dialpad.DialerFragment: void setTextFieldValue(java.lang.CharSequence)>($r10) in <com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void setTextFieldValue(java.lang.CharSequence)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.IiNet: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.IiNet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.IiNet: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.IiNet: void addPreference(android.preference.Preference)>($r5) in <com.csipsimple.wizards.impl.IiNet: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void addPreference(android.preference.Preference)>
VIRTUAL edge: $z0 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2) in <com.csipsimple.wizards.impl.IiNet: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.IiNet: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.IiNet: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.IiNet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.IiNet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.ui.prefs.cupcake.MainPrefs: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>() in <com.csipsimple.ui.prefs.cupcake.MainPrefs: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.view.MenuInflater: void inflate(int,com.actionbarsherlock.view.Menu)>(2131623940, $r1) in <com.csipsimple.ui.prefs.cupcake.MainPrefs: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.view.MenuInflater: void inflate(int,com.actionbarsherlock.view.Menu)>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>($r1) in <com.csipsimple.ui.prefs.cupcake.MainPrefs: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockListActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("Main prefs", $r4) in <com.csipsimple.ui.prefs.cupcake.MainPrefs: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.ui.prefs.PrefsLogic: boolean onMainActivityOptionsItemSelected(com.actionbarsherlock.view.MenuItem,android.content.Context,com.csipsimple.utils.PreferencesWrapper)>($r1, r0, $r2) in <com.csipsimple.ui.prefs.cupcake.MainPrefs: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.prefs.PrefsLogic: boolean onMainActivityOptionsItemSelected(com.actionbarsherlock.view.MenuItem,android.content.Context,com.csipsimple.utils.PreferencesWrapper)>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r1) in <com.csipsimple.ui.prefs.cupcake.MainPrefs: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockListActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
STATIC edge: staticinvoke <com.csipsimple.ui.prefs.PrefsLogic: void onMainActivityPrepareOptionMenu(com.actionbarsherlock.view.Menu,android.content.Context,com.csipsimple.utils.PreferencesWrapper)>($r1, r0, $r2) in <com.csipsimple.ui.prefs.cupcake.MainPrefs: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.csipsimple.ui.prefs.PrefsLogic: void onMainActivityPrepareOptionMenu(com.actionbarsherlock.view.Menu,android.content.Context,com.csipsimple.utils.PreferencesWrapper)>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.app.SherlockListActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>($r1) in <com.csipsimple.ui.prefs.cupcake.MainPrefs: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockListActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningVpnIcs: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0) in <com.csipsimple.ui.warnings.WarningVpnIcs: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.warnings.WarningVpnIcs: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void <init>(android.content.Context)>($r1) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void <init>(com.actionbarsherlock.internal.widget.AbsActionBarView)>(r0) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void <init>(com.actionbarsherlock.internal.widget.AbsActionBarView)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void <init>(com.actionbarsherlock.internal.widget.AbsActionBarView)>(r0) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void <init>(com.actionbarsherlock.internal.widget.AbsActionBarView)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void <init>(com.actionbarsherlock.internal.widget.AbsActionBarView)>(r0) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void <init>(com.actionbarsherlock.internal.widget.AbsActionBarView)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void cancel()>() in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void cancel()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.AbsActionBarView: void setSupportAlpha(float)>(0.0F) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setSupportAlpha(float)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.ActionMenuView: void setSupportAlpha(float)>(0.0F) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void setSupportAlpha(float)>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r0, "supportAlpha", $r4) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long)>(200L) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setInterpolator(android.view.animation.Interpolator)>($r6) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setInterpolator(android.view.animation.Interpolator)>
SPECIAL edge: specialinvoke r7.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void <init>()>() in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void <init>()>
VIRTUAL edge: $r9 = virtualinvoke $r9.<com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int)>($i0) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int)>
VIRTUAL edge: virtualinvoke r7.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r9) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke r7.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r9) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke r7.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r9) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke r7.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r9) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke r7.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r9) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>
VIRTUAL edge: $r10 = virtualinvoke r7.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r5) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r10.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r8) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke r7.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()>() in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void start()>() in <com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void start()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean dismissPopupMenus()>() in <com.actionbarsherlock.internal.widget.AbsActionBarView: void dismissPopupMenus()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean dismissPopupMenus()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>() in <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean hideOverflowMenu()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean isOverflowMenuShowing()>() in <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean isOverflowMenuShowing()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean isOverflowMenuShowing()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean isOverflowReserved()>() in <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean isOverflowReserved()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean isOverflowReserved()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void onConfigurationChanged(android.content.res.Configuration)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.AbsActionBarView: void setContentHeight(int)>($i0) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void setContentHeight(int)>
STATIC edge: $z0 = staticinvoke <com.actionbarsherlock.internal.ResourcesCompat: boolean getResources_getBoolean(android.content.Context,int)>($r3, $i0) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.ResourcesCompat: boolean getResources_getBoolean(android.content.Context,int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.AbsActionBarView: void setSplitActionBar(boolean)>($z0) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void setSplitActionBar(boolean)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)>
VIRTUAL edge: virtualinvoke $r6.<com.actionbarsherlock.internal.view.menu.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.internal.widget.AbsActionBarView$1: void <init>(com.actionbarsherlock.internal.widget.AbsActionBarView)>(r0) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void postShowOverflowMenu()> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView$1: void <init>(com.actionbarsherlock.internal.widget.AbsActionBarView)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void end()>() in <com.actionbarsherlock.internal.widget.AbsActionBarView: void setVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void end()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setVisibility(int)>($i0) in <com.actionbarsherlock.internal.widget.AbsActionBarView: void setVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setVisibility(int)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()>() in <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean showOverflowMenu()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.PasswordPreference: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.csipsimple.widgets.PasswordPreference: void <init>(android.content.Context)> ==> <com.csipsimple.widgets.PasswordPreference: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.PasswordPreference: void updateCanShowPassword()>() in <com.csipsimple.widgets.PasswordPreference: void setCanShowPassword(boolean)> ==> <com.csipsimple.widgets.PasswordPreference: void updateCanShowPassword()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.PasswordPreference: void setCanShowPassword(boolean)>(1) in <com.csipsimple.widgets.PasswordPreference: void afterTextChanged(android.text.Editable)> ==> <com.csipsimple.widgets.PasswordPreference: void setCanShowPassword(boolean)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>(r0) in <com.csipsimple.widgets.PasswordPreference: void onAddEditTextToDialogView(android.view.View,android.widget.EditText)> ==> <com.csipsimple.widgets.PasswordPreference: void afterTextChanged(android.text.Editable)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>(r0) in <com.csipsimple.widgets.PasswordPreference: void onAddEditTextToDialogView(android.view.View,android.widget.EditText)> ==> <com.csipsimple.widgets.PasswordPreference: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>(r0) in <com.csipsimple.widgets.PasswordPreference: void onAddEditTextToDialogView(android.view.View,android.widget.EditText)> ==> <com.csipsimple.widgets.PasswordPreference: void onTextChanged(java.lang.CharSequence,int,int,int)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>(r0) in <com.csipsimple.widgets.PasswordPreference: void onAddEditTextToDialogView(android.view.View,android.widget.EditText)> ==> <com.csipsimple.widgets.PasswordPreference: void onClick(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.PasswordPreference: void updateCanShowPassword()>() in <com.csipsimple.widgets.PasswordPreference: void onBindDialogView(android.view.View)> ==> <com.csipsimple.widgets.PasswordPreference: void updateCanShowPassword()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(8) in <com.csipsimple.widgets.PasswordPreference: void onBindDialogView(android.view.View)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>("PasswordPreference", "Unsupported device for enhanced password", r2) in <com.csipsimple.widgets.PasswordPreference: void onBindDialogView(android.view.View)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.PasswordPreference: void setCanShowPassword(boolean)>($z0) in <com.csipsimple.widgets.PasswordPreference: void setText(java.lang.String)> ==> <com.csipsimple.widgets.PasswordPreference: void setCanShowPassword(boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r1) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.widget.PopupWindow access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r3) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor: boolean onTouch(android.view.View,android.view.MotionEvent)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.widget.PopupWindow access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.os.Handler access$3(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r3) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor: boolean onTouch(android.view.View,android.view.MotionEvent)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.os.Handler access$3(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
STATIC edge: $r6 = staticinvoke <com.actionbarsherlock.internal.widget.IcsListPopupWindow: com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$4(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r3) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor: boolean onTouch(android.view.View,android.view.MotionEvent)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$4(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
VIRTUAL edge: virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, 250L) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor: boolean onTouch(android.view.View,android.view.MotionEvent)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void run()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender: void <init>(com.actionbarsherlock.internal.widget.IcsProgressBar)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender: void <init>(com.actionbarsherlock.internal.widget.IcsProgressBar)>($r1) in <com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender: void <init>(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender: void <init>(com.actionbarsherlock.internal.widget.IcsProgressBar)>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_stream_info: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_stream_info: void <init>()> ==> <org.pjsip.pjsua.pjsua_stream_info: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_stream_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_stream_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_stream_info: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_stream_info: void delete()>() in <org.pjsip.pjsua.pjsua_stream_info: void finalize()> ==> <org.pjsip.pjsua.pjsua_stream_info: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_stream_info: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type getType()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type)>($r1) in <org.pjsip.pjsua.pjsua_stream_info: void setType(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_ice_config: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_ice_config: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_ice_config: org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options getIce_opt()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options)>($r1) in <org.pjsip.pjsua.pjsua_ice_config: void setIce_opt(org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.prefs.PrefsLogic: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.PreferencesWrapper: void resetAllDefaultValues()>() in <com.csipsimple.ui.prefs.PrefsLogic: boolean onMainActivityOptionsItemSelected(com.actionbarsherlock.view.MenuItem,android.content.Context,com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void resetAllDefaultValues()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.PreferencesWrapper: void toogleExpertMode()>() in <com.csipsimple.ui.prefs.PrefsLogic: boolean onMainActivityOptionsItemSelected(com.actionbarsherlock.view.MenuItem,android.content.Context,com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void toogleExpertMode()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesWrapper: boolean isAdvancedUser()>() in <com.csipsimple.ui.prefs.PrefsLogic: void onMainActivityPrepareOptionMenu(com.actionbarsherlock.view.Menu,android.content.Context,com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: boolean isAdvancedUser()>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: void fireOnSelected()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView: void access$2(com.actionbarsherlock.internal.widget.IcsAdapterView)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void fireOnSelected()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: int getSelectedItemPosition()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView: void fireOnSelected()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: int getSelectedItemPosition()>
VIRTUAL edge: $z1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: boolean isInFilterMode()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView: void updateEmptyStatus(boolean)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: boolean isInFilterMode()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: void onLayout(boolean,int,int,int,int)>(0, $i0, $i1, $i2, $i3) in <com.actionbarsherlock.internal.widget.IcsAdapterView: void updateEmptyStatus(boolean)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void onLayout(boolean,int,int,int,int)>
VIRTUAL edge: z1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: boolean isInFilterMode()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView: void checkFocus()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: boolean isInFilterMode()>
SPECIAL edge: specialinvoke r0.<android.view.ViewGroup: void setFocusableInTouchMode(boolean)>($z2) in <com.actionbarsherlock.internal.widget.IcsAdapterView: void checkFocus()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void setFocusableInTouchMode(boolean)>
SPECIAL edge: specialinvoke r0.<android.view.ViewGroup: void setFocusable(boolean)>(z1) in <com.actionbarsherlock.internal.widget.IcsAdapterView: void checkFocus()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void setFocusable(boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: void updateEmptyStatus(boolean)>($z0) in <com.actionbarsherlock.internal.widget.IcsAdapterView: void checkFocus()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void updateEmptyStatus(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: void selectionChanged()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView: void checkSelectionChanged()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void selectionChanged()>
VIRTUAL edge: $z0 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r0) in <com.actionbarsherlock.internal.widget.IcsAdapterView: int getPositionForView(android.view.View)> ==> <java.lang.Object: boolean equals(java.lang.Object)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: int getSelectedItemPosition()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView: java.lang.Object getSelectedItem()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: int getSelectedItemPosition()>
VIRTUAL edge: $i1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: int findSyncPosition()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView: void handleDataChanged()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: int findSyncPosition()>
VIRTUAL edge: $i2 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: int lookForSelectablePosition(int,boolean)>($i1, 1) in <com.actionbarsherlock.internal.widget.IcsAdapterView: void handleDataChanged()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: int lookForSelectablePosition(int,boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: void setNextSelectedPositionInt(int)>($i1) in <com.actionbarsherlock.internal.widget.IcsAdapterView: void handleDataChanged()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void setNextSelectedPositionInt(int)>
VIRTUAL edge: $i2 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: int getSelectedItemPosition()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView: void handleDataChanged()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: int getSelectedItemPosition()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: void checkSelectionChanged()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView: void handleDataChanged()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void checkSelectionChanged()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier: void <init>(com.actionbarsherlock.internal.widget.IcsAdapterView,com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier)>(r0, null) in <com.actionbarsherlock.internal.widget.IcsAdapterView: void selectionChanged()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier: void <init>(com.actionbarsherlock.internal.widget.IcsAdapterView,com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: void fireOnSelected()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView: void selectionChanged()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void fireOnSelected()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: void updateEmptyStatus(boolean)>($z0) in <com.actionbarsherlock.internal.widget.IcsAdapterView: void setEmptyView(android.view.View)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void updateEmptyStatus(boolean)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: boolean isInFilterMode()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView: void setFocusable(boolean)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: boolean isInFilterMode()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: boolean isInFilterMode()>() in <com.actionbarsherlock.internal.widget.IcsAdapterView: void setFocusableInTouchMode(boolean)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: boolean isInFilterMode()>
VIRTUAL edge: $l1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: long getItemIdAtPosition(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsAdapterView: void setNextSelectedPositionInt(int)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: long getItemIdAtPosition(int)>
SPECIAL edge: specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Don\'t call setOnClickListener for an AdapterView. You probably want setOnItemClickListener instead") in <com.actionbarsherlock.internal.widget.IcsAdapterView: void setOnClickListener(android.view.View$OnClickListener)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $l1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: long getItemIdAtPosition(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsAdapterView: void setSelectedPositionInt(int)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: long getItemIdAtPosition(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe[])>(r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe[])>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet clone()>
VIRTUAL edge: $i0 = virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: int getIntValue()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: int getIntValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: int getIntValue()>
VIRTUAL edge: $f1 = virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: float getFraction()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: int getIntValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: float getFraction()>
VIRTUAL edge: $r4 = virtualinvoke r9.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: android.view.animation.Interpolator getInterpolator()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: int getIntValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: android.view.animation.Interpolator getInterpolator()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: int getIntValue(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: java.lang.Object getValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: int getIntValue(float)>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: java.lang.Object getValue(float)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()>() in <com.csipsimple.wizards.BasePrefsWizard$2: void onClick(android.view.View)> ==> <com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsip_event_id_e$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.api.SipProfile: void <init>(android.os.Parcel,com.csipsimple.api.SipProfile)>($r1, null) in <com.csipsimple.api.SipProfile$1: com.csipsimple.api.SipProfile createFromParcel(android.os.Parcel)> ==> <com.csipsimple.api.SipProfile: void <init>(android.os.Parcel,com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.api.SipProfile$1: com.csipsimple.api.SipProfile createFromParcel(android.os.Parcel)>($r1) in <com.csipsimple.api.SipProfile$1: java.lang.Object createFromParcel(android.os.Parcel)> ==> <com.csipsimple.api.SipProfile$1: com.csipsimple.api.SipProfile createFromParcel(android.os.Parcel)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.api.SipProfile$1: com.csipsimple.api.SipProfile[] newArray(int)>($i0) in <com.csipsimple.api.SipProfile$1: java.lang.Object[] newArray(int)> ==> <com.csipsimple.api.SipProfile$1: com.csipsimple.api.SipProfile[] newArray(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Cryptel: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.wizards.impl.Cryptel$1: void <init>(com.csipsimple.wizards.impl.Cryptel)>(r0) in <com.csipsimple.wizards.impl.Cryptel: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Cryptel$1: void <init>(com.csipsimple.wizards.impl.Cryptel)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>($r4) in <com.csipsimple.wizards.impl.Cryptel: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Cryptel$1: void onClick(android.view.View)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Cryptel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) in <com.csipsimple.wizards.impl.Cryptel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Cryptel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>($r4, "http://50.28.50.63/index.php", r0) in <com.csipsimple.wizards.impl.Cryptel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>($r4, "http://50.28.50.63/index.php", r0) in <com.csipsimple.wizards.impl.Cryptel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Cryptel: void onAccountCreationDone(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>($r4, "http://50.28.50.63/index.php", r0) in <com.csipsimple.wizards.impl.Cryptel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Cryptel: boolean saveAndQuit()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Cryptel: void updateAccountInfos(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Cryptel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Cryptel: void updateAccountInfos(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Cryptel: void setUsername(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Cryptel: void onAccountCreationDone(java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void setUsername(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Cryptel: void setPassword(java.lang.String)>($r2) in <com.csipsimple.wizards.impl.Cryptel: void onAccountCreationDone(java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void setPassword(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Cryptel: boolean canSave()>() in <com.csipsimple.wizards.impl.Cryptel: boolean saveAndQuit()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()>() in <com.csipsimple.wizards.impl.Cryptel: boolean saveAndQuit()> ==> <com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Cryptel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("PCMU/8000/1", "wb", "0") in <com.csipsimple.wizards.impl.Cryptel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_tls", 1) in <com.csipsimple.wizards.impl.Cryptel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipCallSession$StatusCode: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Netelip: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Netelip: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $f0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: float getFraction()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: float getFraction()>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: void <init>(float,int)>($f0, $i0) in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: void <init>(float,int)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: android.view.animation.Interpolator getInterpolator()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: android.view.animation.Interpolator getInterpolator()>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: void setInterpolator(android.view.animation.Interpolator)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void setInterpolator(android.view.animation.Interpolator)>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe clone()>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: java.lang.Object getValue()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: void setValue(java.lang.Object)> ==> <java.lang.Object: java.lang.Class getClass()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void <init>(com.actionbarsherlock.widget.ActivityChooserView)>($r1) in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void <init>(com.actionbarsherlock.widget.ActivityChooserView,com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void <init>(com.actionbarsherlock.widget.ActivityChooserView)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserModel: int getActivityCount()>() in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getActivityCount()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: int getActivityCount()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserModel: int getActivityCount()>() in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getCount()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: int getActivityCount()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.pm.ResolveInfo getDefaultActivity()>() in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getCount()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: android.content.pm.ResolveInfo getDefaultActivity()>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.pm.ResolveInfo getDefaultActivity()>() in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: android.content.pm.ResolveInfo getDefaultActivity()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: android.content.pm.ResolveInfo getDefaultActivity()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserModel: int getHistorySize()>() in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getHistorySize()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: int getHistorySize()>
VIRTUAL edge: $i1 = virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getItemViewType(int)>($i0) in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: java.lang.Object getItem(int)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getItemViewType(int)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.pm.ResolveInfo getDefaultActivity()>() in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: java.lang.Object getItem(int)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: android.content.pm.ResolveInfo getDefaultActivity()>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.pm.ResolveInfo getActivity(int)>($i0) in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: java.lang.Object getItem(int)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: android.content.pm.ResolveInfo getActivity(int)>
VIRTUAL edge: $i1 = virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getCount()>() in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getItemViewType(int)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getCount()>
VIRTUAL edge: $i1 = virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getItemViewType(int)>($i0) in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getItemViewType(int)>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: android.content.Context access$4(com.actionbarsherlock.widget.ActivityChooserView)>($r4) in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.widget.ActivityChooserView: android.content.Context access$4(com.actionbarsherlock.widget.ActivityChooserView)>
VIRTUAL edge: $r12 = virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: java.lang.Object getItem(int)>($i0) in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: java.lang.Object getItem(int)>
STATIC edge: $z0 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: boolean access$11()>() in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.widget.ActivityChooserView: boolean access$11()>
STATIC edge: staticinvoke <com.actionbarsherlock.widget.ActivityChooserView$SetActivated: void invoke(android.view.View,boolean)>(r2, 1) in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.widget.ActivityChooserView$SetActivated: void invoke(android.view.View,boolean)>
VIRTUAL edge: $i4 = virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getCount()>() in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int measureContentWidth()> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getCount()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>(i5, r1, null) in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int measureContentWidth()> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView)>($r2) in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void setDataModel(com.actionbarsherlock.widget.ActivityChooserModel)> ==> <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>() in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void setDataModel(com.actionbarsherlock.widget.ActivityChooserModel)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: android.database.DataSetObserver access$10(com.actionbarsherlock.widget.ActivityChooserView)>($r2) in <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void setDataModel(com.actionbarsherlock.widget.ActivityChooserModel)> ==> <com.actionbarsherlock.widget.ActivityChooserView: android.database.DataSetObserver access$10(com.actionbarsherlock.widget.ActivityChooserView)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.widgets.contactbadge.ContactBadgeContract: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Sonetel: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Sonetel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.Sonetel: java.lang.String getText(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Sonetel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.Sonetel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("@") in <com.csipsimple.wizards.impl.Sonetel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.Sonetel: java.lang.String getDomain()>() in <com.csipsimple.wizards.impl.Sonetel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Sonetel: java.lang.String getDomain()>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>() in <com.csipsimple.wizards.impl.Sonetel: boolean canSave()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.wizards.impl.Sonetel: java.lang.String getText(android.preference.EditTextPreference)>($r1) in <com.csipsimple.wizards.impl.Sonetel: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("@") in <com.csipsimple.wizards.impl.Sonetel: boolean canSave()> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke r0.<com.csipsimple.wizards.impl.Sonetel: boolean checkField(android.preference.Preference,boolean)>($r1, $z1) in <com.csipsimple.wizards.impl.Sonetel: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Sonetel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getSipDomain()>() in <com.csipsimple.wizards.impl.Sonetel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: java.lang.String getSipDomain()>
STATIC edge: $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) in <com.csipsimple.wizards.impl.Sonetel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Sonetel: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Sonetel: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.Sonetel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("PCMU/8000/1", "wb", "245") in <com.csipsimple.wizards.impl.Sonetel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.contacts.ContactsWrapper$ContactInfo: void <init>(com.csipsimple.utils.contacts.ContactsWrapper)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.models.CallerInfo: void <init>()>() in <com.csipsimple.utils.contacts.ContactsWrapper$ContactInfo: void <init>(com.csipsimple.utils.contacts.ContactsWrapper)> ==> <com.csipsimple.models.CallerInfo: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipConfigManager: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Float getPreferenceFloatValue(android.content.Context,java.lang.String,java.lang.Float)>($r0, $r1, null) in <com.csipsimple.api.SipConfigManager: java.lang.Float getPreferenceFloatValue(android.content.Context,java.lang.String)> ==> <com.csipsimple.api.SipConfigManager: java.lang.Float getPreferenceFloatValue(android.content.Context,java.lang.String,java.lang.Float)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>($r1) in <com.csipsimple.api.SipConfigManager: java.lang.Float getPreferenceFloatValue(android.content.Context,java.lang.String,java.lang.Float)> ==> <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>() in <com.csipsimple.api.SipConfigManager: java.lang.Float getPreferenceFloatValue(android.content.Context,java.lang.String,java.lang.Float)> ==> <java.lang.Class: java.lang.String getName()>
STATIC edge: $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.csipsimple.api.SipConfigManager: java.lang.Float getPreferenceFloatValue(android.content.Context,java.lang.String,java.lang.Float)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>($r1) in <com.csipsimple.api.SipConfigManager: void setPreferenceFloatValue(android.content.Context,java.lang.String,java.lang.Float)> ==> <com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>() in <com.csipsimple.api.SipConfigManager: void setPreferenceFloatValue(android.content.Context,java.lang.String,java.lang.Float)> ==> <java.lang.Class: java.lang.String getName()>
VIRTUAL edge: $i0 = virtualinvoke $r9.<java.lang.String: int length()>() in <com.csipsimple.utils.contacts.ContactsUtils14: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)> ==> <java.lang.String: int length()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Innotel: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Innotel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Innotel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Innotel: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Innotel: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.AbcVoip: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.AbcVoip: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.AbcVoip: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Nymgo: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Nymgo: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Nymgo: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Nymgo: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>("stun.nymgo.com:80") in <com.csipsimple.wizards.impl.Nymgo: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int)>("PJRPID_ACTIVITY_UNKNOWN", 0) in <org.pjsip.pjsua.pjrpid_activity: void <clinit>()> ==> <org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjrpid_activity$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjrpid_activity$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjrpid_activity$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjrpid_activity$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjrpid_activity$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjrpid_activity$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int,org.pjsip.pjsua.pjrpid_activity)> ==> <org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int,org.pjsip.pjsua.pjrpid_activity)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjrpid_activity$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int,org.pjsip.pjsua.pjrpid_activity)> ==> <org.pjsip.pjsua.pjrpid_activity$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjrpid_activity: org.pjsip.pjsua.pjrpid_activity swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.MediaManager$1: void <init>(com.csipsimple.service.MediaManager,float,float,boolean)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.MediaManager: com.csipsimple.service.SipService access$0(com.csipsimple.service.MediaManager)>($r1) in <com.csipsimple.service.MediaManager$1: void doRun()> ==> <com.csipsimple.service.MediaManager: com.csipsimple.service.SipService access$0(com.csipsimple.service.MediaManager)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.SipService: void confAdjustTxLevel(float)>($f0) in <com.csipsimple.service.MediaManager$1: void doRun()> ==> <com.csipsimple.service.SipService: void confAdjustTxLevel(float)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.SipService: void confAdjustRxLevel(float)>($f0) in <com.csipsimple.service.MediaManager$1: void doRun()> ==> <com.csipsimple.service.SipService: void confAdjustRxLevel(float)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.service.MediaManager: android.media.AudioManager access$1(com.csipsimple.service.MediaManager)>($r1) in <com.csipsimple.service.MediaManager$1: void doRun()> ==> <com.csipsimple.service.MediaManager: android.media.AudioManager access$1(com.csipsimple.service.MediaManager)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.MiTelefono: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.MiTelefono: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.MiTelefono: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.MiTelefono: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.MiTelefono: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.MiTelefono: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("G722/16000/1", "wb", "0") in <com.csipsimple.wizards.impl.MiTelefono: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.SipMe: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.SipMe: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>() in <com.csipsimple.wizards.impl.SipMe: boolean canSave()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.SipMe: boolean canSave()> ==> <java.lang.String: java.lang.String trim()>
VIRTUAL edge: $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("078555") in <com.csipsimple.wizards.impl.SipMe: boolean canSave()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke r0.<com.csipsimple.wizards.impl.SipMe: boolean checkField(android.preference.Preference,boolean)>($r1, $z1) in <com.csipsimple.wizards.impl.SipMe: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.SipMe: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.SipMe: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.SipMe: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.ZonPt: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.ZonPt: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) in <com.csipsimple.wizards.impl.ZonPt: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.wizards.impl.ZonPt: java.lang.String getText(android.preference.EditTextPreference)>($r4) in <com.csipsimple.wizards.impl.ZonPt: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.wizards.impl.ZonPt: java.lang.String getDomain()>() in <com.csipsimple.wizards.impl.ZonPt: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.ZonPt: java.lang.String getDomain()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.ZonPt: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.ZonPt: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.ZonPt: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.ZonPt: java.lang.String getText(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.ZonPt: java.lang.String getDomain()> ==> <com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.ZonPt: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("PCMU/8000/1", "wb", "0") in <com.csipsimple.wizards.impl.ZonPt: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("user_agent", "ZON ZON Phone 1.0.0 (1); ANDROIDv2.3.6; i9000") in <com.csipsimple.wizards.impl.ZonPt: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2) in <com.actionbarsherlock.internal.widget.IcsLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void supportSetDividerDrawable(android.graphics.drawable.Drawable)>($r5) in <com.actionbarsherlock.internal.widget.IcsLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.widget.IcsLinearLayout: void supportSetDividerDrawable(android.graphics.drawable.Drawable)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: boolean hasDividerBeforeChildAt(int)>($i1) in <com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawDividersHorizontal(android.graphics.Canvas)> ==> <com.actionbarsherlock.internal.widget.IcsLinearLayout: boolean hasDividerBeforeChildAt(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawVerticalDivider(android.graphics.Canvas,int)>($r1, $i1) in <com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawDividersHorizontal(android.graphics.Canvas)> ==> <com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawVerticalDivider(android.graphics.Canvas,int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: boolean hasDividerBeforeChildAt(int)>($i1) in <com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawDividersVertical(android.graphics.Canvas)> ==> <com.actionbarsherlock.internal.widget.IcsLinearLayout: boolean hasDividerBeforeChildAt(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawHorizontalDivider(android.graphics.Canvas,int)>($r1, $i1) in <com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawDividersVertical(android.graphics.Canvas)> ==> <com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawHorizontalDivider(android.graphics.Canvas,int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: boolean hasDividerBeforeChildAt(int)>($i4) in <com.actionbarsherlock.internal.widget.IcsLinearLayout: void measureChildWithMargins(android.view.View,int,int,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsLinearLayout: boolean hasDividerBeforeChildAt(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawDividersVertical(android.graphics.Canvas)>($r1) in <com.actionbarsherlock.internal.widget.IcsLinearLayout: void onDraw(android.graphics.Canvas)> ==> <com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawDividersVertical(android.graphics.Canvas)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawDividersHorizontal(android.graphics.Canvas)>($r1) in <com.actionbarsherlock.internal.widget.IcsLinearLayout: void onDraw(android.graphics.Canvas)> ==> <com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawDividersHorizontal(android.graphics.Canvas)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void supportSetDividerDrawable(android.graphics.drawable.Drawable)>($r1) in <com.actionbarsherlock.internal.widget.IcsLinearLayout: void setDividerDrawable(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.IcsLinearLayout: void supportSetDividerDrawable(android.graphics.drawable.Drawable)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setCallCountAndDate(com.csipsimple.ui.calllog.PhoneCallDetailsViews,java.lang.Integer,java.lang.CharSequence)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setCurrentTimeForTest(long)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.calllog.CallTypeIconsView: void clear()>() in <com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setPhoneCallDetails(com.csipsimple.ui.calllog.PhoneCallDetailsViews,com.csipsimple.ui.calllog.PhoneCallDetails)> ==> <com.csipsimple.ui.calllog.CallTypeIconsView: void clear()>
STATIC edge: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) in <com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setPhoneCallDetails(com.csipsimple.ui.calllog.PhoneCallDetailsViews,com.csipsimple.ui.calllog.PhoneCallDetails)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: $l3 = specialinvoke r0.<com.csipsimple.ui.calllog.PhoneCallDetailsHelper: long getCurrentTimeMillis()>() in <com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setPhoneCallDetails(com.csipsimple.ui.calllog.PhoneCallDetailsViews,com.csipsimple.ui.calllog.PhoneCallDetails)> ==> <com.csipsimple.ui.calllog.PhoneCallDetailsHelper: long getCurrentTimeMillis()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setCallCountAndDate(com.csipsimple.ui.calllog.PhoneCallDetailsViews,java.lang.Integer,java.lang.CharSequence)>($r1, $r6, $r7) in <com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setPhoneCallDetails(com.csipsimple.ui.calllog.PhoneCallDetailsViews,com.csipsimple.ui.calllog.PhoneCallDetails)> ==> <com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setCallCountAndDate(com.csipsimple.ui.calllog.PhoneCallDetailsViews,java.lang.Integer,java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.calllog.CallTypeIconsView: void add(int)>($i4) in <com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setPhoneCallDetails(com.csipsimple.ui.calllog.PhoneCallDetailsViews,com.csipsimple.ui.calllog.PhoneCallDetails)> ==> <com.csipsimple.ui.calllog.CallTypeIconsView: void add(int)>
STATIC edge: r8 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)>($r10) in <com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setPhoneCallDetails(com.csipsimple.ui.calllog.PhoneCallDetailsViews,com.csipsimple.ui.calllog.PhoneCallDetails)> ==> <com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("BT8", ">>> BT SCO state changed !!! ") in <com.csipsimple.utils.bluetooth.BluetoothUtils8$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3) in <com.csipsimple.utils.bluetooth.BluetoothUtils8$1: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.bluetooth.BluetoothUtils8: boolean access$0(com.csipsimple.utils.bluetooth.BluetoothUtils8)>($r6) in <com.csipsimple.utils.bluetooth.BluetoothUtils8$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.bluetooth.BluetoothUtils8: boolean access$0(com.csipsimple.utils.bluetooth.BluetoothUtils8)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.utils.bluetooth.BluetoothUtils8: android.media.AudioManager access$1(com.csipsimple.utils.bluetooth.BluetoothUtils8)>($r6) in <com.csipsimple.utils.bluetooth.BluetoothUtils8$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.bluetooth.BluetoothUtils8: android.media.AudioManager access$1(com.csipsimple.utils.bluetooth.BluetoothUtils8)>
STATIC edge: staticinvoke <com.csipsimple.utils.bluetooth.BluetoothUtils8: void access$2(com.csipsimple.utils.bluetooth.BluetoothUtils8,boolean)>($r6, 1) in <com.csipsimple.utils.bluetooth.BluetoothUtils8$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.bluetooth.BluetoothUtils8: void access$2(com.csipsimple.utils.bluetooth.BluetoothUtils8,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.widgets.HorizontalQuickActionWindow$1: void <init>(com.csipsimple.widgets.HorizontalQuickActionWindow)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pj_qos_type$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pj_qos_type$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int,org.pjsip.pjsua.pj_qos_type)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int,org.pjsip.pjsua.pj_qos_type)> ==> <org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pj_qos_type$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int,org.pjsip.pjsua.pj_qos_type)> ==> <org.pjsip.pjsua.pj_qos_type$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pj_qos_type: org.pjsip.pjsua.pj_qos_type swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.contactbadge.OverlayedImageView: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>($r1, null, 0, null) in <com.csipsimple.widgets.contactbadge.OverlayedImageView: void <init>(android.content.Context)> ==> <com.csipsimple.widgets.contactbadge.OverlayedImageView: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.contactbadge.OverlayedImageView: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>($r1, $r2, 0, null) in <com.csipsimple.widgets.contactbadge.OverlayedImageView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.contactbadge.OverlayedImageView: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>
SPECIAL edge: specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0) in <com.csipsimple.widgets.contactbadge.OverlayedImageView: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)> ==> <com.csipsimple.widgets.contactbadge.OverlayedImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.widgets.contactbadge.QuickContactBadge: void overlay(android.graphics.Canvas,android.widget.ImageView)>($r1, r0) in <com.csipsimple.widgets.contactbadge.OverlayedImageView: void onDraw(android.graphics.Canvas)> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge: void overlay(android.graphics.Canvas,android.widget.ImageView)>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjmedia_snd_dev_info: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjmedia_snd_dev_info: void <init>()> ==> <org.pjsip.pjsua.pjmedia_snd_dev_info: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjmedia_snd_dev_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjmedia_snd_dev_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjmedia_snd_dev_info: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjmedia_snd_dev_info: void delete()>() in <org.pjsip.pjsua.pjmedia_snd_dev_info: void finalize()> ==> <org.pjsip.pjsua.pjmedia_snd_dev_info: void delete()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver: void <init>(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>($r1) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver: void <init>(com.actionbarsherlock.internal.view.menu.MenuPopupHelper,com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver: void <init>(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter access$3(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver: void onChanged()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter access$3(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: void findExpandedIndex()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver: void onChanged()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: void findExpandedIndex()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: void <init>(com.actionbarsherlock.internal.ActionBarSherlockNative,com.actionbarsherlock.view.ActionMode$Callback)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$1(com.actionbarsherlock.internal.ActionBarSherlockNative)>($r4) in <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$1(com.actionbarsherlock.internal.ActionBarSherlockNative)>
VIRTUAL edge: $r7 = virtualinvoke $r6.<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu()>() in <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu()>
VIRTUAL edge: $r8 = virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem)>($r2) in <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem)>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: void <init>(com.actionbarsherlock.internal.ActionBarSherlockNative,android.view.ActionMode)>($r5, $r1) in <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: void <init>(com.actionbarsherlock.internal.ActionBarSherlockNative,android.view.ActionMode)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.ActionBarSherlockNative: void access$0(com.actionbarsherlock.internal.ActionBarSherlockNative,com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper)>($r3, $r4) in <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative: void access$0(com.actionbarsherlock.internal.ActionBarSherlockNative,com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$1(com.actionbarsherlock.internal.ActionBarSherlockNative)>($r3) in <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$1(com.actionbarsherlock.internal.ActionBarSherlockNative)>
VIRTUAL edge: $r8 = virtualinvoke $r7.<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu()>() in <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$1(com.actionbarsherlock.internal.ActionBarSherlockNative)>($r4) in <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: void onDestroyActionMode(android.view.ActionMode)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$1(com.actionbarsherlock.internal.ActionBarSherlockNative)>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$1(com.actionbarsherlock.internal.ActionBarSherlockNative)>($r4) in <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$1(com.actionbarsherlock.internal.ActionBarSherlockNative)>
VIRTUAL edge: $r7 = virtualinvoke $r6.<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu()>() in <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Optimus: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Optimus: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Optimus: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Optimus: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Optimus: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Optimus: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Optimus: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("user_agent", "Optimus-SoftPhone/7.0.1.4124") in <com.csipsimple.wizards.impl.Optimus: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>($r1) in <com.csipsimple.service.SipService$SyncStopRunnable: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService: boolean stopSipStack()>() in <com.csipsimple.service.SipService$SyncStopRunnable: java.lang.Object runWithReturn()> ==> <com.csipsimple.service.SipService: boolean stopSipStack()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block: void <init>()>
STATIC edge: $r1 = staticinvoke <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType: org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType[] values()>() in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: int[] $SWITCH_TABLE$org$webrtc$videoengine$VideoCaptureDeviceInfoAndroid$FrontFacingCameraType()> ==> <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType: org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType[] values()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void <init>(int,android.content.Context)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <org.webrtc.videoengine.camera.CameraUtilsWrapper: org.webrtc.videoengine.camera.CameraUtilsWrapper getInstance()>() in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void <init>(int,android.content.Context)> ==> <org.webrtc.videoengine.camera.CameraUtilsWrapper: org.webrtc.videoengine.camera.CameraUtilsWrapper getInstance()>
VIRTUAL edge: $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("GT-I9000") in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void AddDeviceSpecificCapability(org.webrtc.videoengine.CaptureCapabilityAndroid)> ==> <java.lang.String: boolean equals(java.lang.Object)>
STATIC edge: r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r5) in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera AllocateEVOFrontFacingCamera()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
SPECIAL edge: specialinvoke r1.<dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>($r7, r5, null, $r9) in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera AllocateEVOFrontFacingCamera()> ==> <dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>
VIRTUAL edge: $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getFrontFacingCamera", null) in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera AllocateEVOFrontFacingCamera()> ==> <java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
SPECIAL edge: specialinvoke r4.<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void <init>(int,android.content.Context)>($i0, $r0) in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid CreateVideoCaptureDeviceInfoAndroid(int,android.content.Context)> ==> <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void <init>(int,android.content.Context)>
SPECIAL edge: $i0 = specialinvoke r4.<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: int Init()>() in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid CreateVideoCaptureDeviceInfoAndroid(int,android.content.Context)> ==> <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: int Init()>
SPECIAL edge: specialinvoke r0.<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void VerifyCapabilities()>() in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: int Init()> ==> <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void VerifyCapabilities()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("GT-I9000") in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void VerifyCapabilities()> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r1.<org.webrtc.videoengine.CaptureCapabilityAndroid: void <init>()>() in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void VerifyCapabilities()> ==> <org.webrtc.videoengine.CaptureCapabilityAndroid: void <init>()>
SPECIAL edge: specialinvoke r0.<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void AddDeviceSpecificCapability(org.webrtc.videoengine.CaptureCapabilityAndroid)>(r1) in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void VerifyCapabilities()> ==> <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void AddDeviceSpecificCapability(org.webrtc.videoengine.CaptureCapabilityAndroid)>
SPECIAL edge: specialinvoke $r9.<org.webrtc.videoengine.CaptureCapabilityAndroid: void <init>()>() in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void AddDeviceInfo(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice,android.hardware.Camera$Parameters)> ==> <org.webrtc.videoengine.CaptureCapabilityAndroid: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1) in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: org.webrtc.videoengine.VideoCaptureAndroid AllocateCamera(int,long,java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
STATIC edge: $r11 = staticinvoke <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: int[] $SWITCH_TABLE$org$webrtc$videoengine$VideoCaptureDeviceInfoAndroid$FrontFacingCameraType()>() in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: org.webrtc.videoengine.VideoCaptureAndroid AllocateCamera(int,long,java.lang.String)> ==> <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: int[] $SWITCH_TABLE$org$webrtc$videoengine$VideoCaptureDeviceInfoAndroid$FrontFacingCameraType()>
SPECIAL edge: r5 = specialinvoke r0.<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera AllocateGalaxySFrontCamera()>() in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: org.webrtc.videoengine.VideoCaptureAndroid AllocateCamera(int,long,java.lang.String)> ==> <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera AllocateGalaxySFrontCamera()>
SPECIAL edge: r5 = specialinvoke r0.<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera AllocateEVOFrontFacingCamera()>() in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: org.webrtc.videoengine.VideoCaptureAndroid AllocateCamera(int,long,java.lang.String)> ==> <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera AllocateEVOFrontFacingCamera()>
SPECIAL edge: specialinvoke $r14.<org.webrtc.videoengine.VideoCaptureAndroid: void <init>(int,long,android.hardware.Camera,org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice)>($i0, $l1, r5, r6) in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: org.webrtc.videoengine.VideoCaptureAndroid AllocateCamera(int,long,java.lang.String)> ==> <org.webrtc.videoengine.VideoCaptureAndroid: void <init>(int,long,android.hardware.Camera,org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r1) in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: org.webrtc.videoengine.CaptureCapabilityAndroid[] GetCapabilityArray(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r1) in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: int GetOrientation(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("1") in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera$Parameters SearchOldFrontFacingCameras(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r3 = specialinvoke r0.<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera AllocateEVOFrontFacingCamera()>() in <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera$Parameters SearchOldFrontFacingCameras(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice)> ==> <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera AllocateEVOFrontFacingCamera()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Voocall: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Voocall: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Voocall: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("G722/16000/1", "wb", "220") in <com.csipsimple.wizards.impl.Voocall: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int)>("PJSUA_BUDDY_STATUS_UNKNOWN", 0) in <org.pjsip.pjsua.pjsua_buddy_status: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_buddy_status$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_buddy_status$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_buddy_status$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_buddy_status$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_buddy_status$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_buddy_status$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_buddy_status)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_buddy_status)> ==> <org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_buddy_status$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_buddy_status)> ==> <org.pjsip.pjsua.pjsua_buddy_status$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsua_buddy_status: org.pjsip.pjsua.pjsua_buddy_status swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pj_qos_params: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pj_qos_params: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pj_qos_params: org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio getWmm_prio()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio)>($r1) in <org.pjsip.pjsua.pj_qos_params: void setWmm_prio(org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.FringTalkTw: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.FringTalkTw: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.FringTalkTw: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.FringTalkTw: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.FringTalkTw: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_ice", 1) in <com.csipsimple.wizards.impl.FringTalkTw: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("snd_clock_rate", "44100") in <com.csipsimple.wizards.impl.FringTalkTw: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("PCMU/8000/1", "wb", "0") in <com.csipsimple.wizards.impl.FringTalkTw: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r1.<java.lang.StringBuffer: void <init>()>() in <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String getContactAddress()> ==> <java.lang.StringBuffer: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r2) in <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String getContactAddress()> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String getContactAddress()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2) in <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String getContactAddress()> ==> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>() in <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String getContactAddress()> ==> <java.lang.StringBuffer: java.lang.String toString()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("AudioFocus 8", "Focus changed") in <com.csipsimple.utils.audio.AudioFocus8$1: void onAudioFocusChange(int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningPrivilegedIntent: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0) in <com.csipsimple.ui.warnings.WarningPrivilegedIntent: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.warnings.WarningPrivilegedIntent: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pj_stun_nat_detect_result: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pj_stun_nat_detect_result: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pj_stun_nat_detect_result: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pj_stun_nat_detect_result: void delete()>() in <org.pjsip.pjsua.pj_stun_nat_detect_result: void finalize()> ==> <org.pjsip.pjsua.pj_stun_nat_detect_result: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pj_stun_nat_detect_result: org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type getNat_type()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type)>($r1) in <org.pjsip.pjsua.pj_stun_nat_detect_result: void setNat_type(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.MultifonRu: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.MultifonRu: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.MultifonRu: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.MultifonRu: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.MultifonRu: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_dns_srv", 1) in <com.csipsimple.wizards.impl.MultifonRu: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: $z1 = virtualinvoke r8.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean animationFrame(long)>($l1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void handleMessage(android.os.Message)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean animationFrame(long)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.messages.ConversationsListFragment: void confirmDeleteThread(java.lang.String)>($r1) in <com.csipsimple.ui.messages.ConversationsListFragment: void access$1(com.csipsimple.ui.messages.ConversationsListFragment,java.lang.String)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void confirmDeleteThread(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.messages.ConverstationsAdapter: void <init>(android.content.Context,android.database.Cursor)>($r1, null) in <com.csipsimple.ui.messages.ConversationsListFragment: void attachAdapter()> ==> <com.csipsimple.ui.messages.ConverstationsAdapter: void <init>(android.content.Context,android.database.Cursor)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.ListView: void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)>(r0) in <com.csipsimple.ui.messages.ConversationsListFragment: void onActivityCreated(android.os.Bundle)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void onVisibilityChanged(boolean)>
VIRTUAL edge: $r7 = virtualinvoke r6.<com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews: java.lang.String getRemoteNumber()>() in <com.csipsimple.ui.messages.ConversationsListFragment: boolean onContextItemSelected(android.view.MenuItem)> ==> <com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews: java.lang.String getRemoteNumber()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>($r1, $r2) in <com.csipsimple.ui.messages.ConversationsListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.ui.messages.ConversationsListFragment$2: void <init>(com.csipsimple.ui.messages.ConversationsListFragment)>(r0) in <com.csipsimple.ui.messages.ConversationsListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.messages.ConversationsListFragment$2: void <init>(com.csipsimple.ui.messages.ConversationsListFragment)>
INTERFACE edge: interfaceinvoke $r3.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)>($r5) in <com.csipsimple.ui.messages.ConversationsListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.messages.ConversationsListFragment$2: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: specialinvoke $r7.<com.csipsimple.ui.messages.ConversationsListFragment$3: void <init>(com.csipsimple.ui.messages.ConversationsListFragment)>(r0) in <com.csipsimple.ui.messages.ConversationsListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.messages.ConversationsListFragment$3: void <init>(com.csipsimple.ui.messages.ConversationsListFragment)>
INTERFACE edge: interfaceinvoke $r3.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)>($r7) in <com.csipsimple.ui.messages.ConversationsListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.messages.ConversationsListFragment$3: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.messages.ConversationsListFragment: void attachAdapter()>() in <com.csipsimple.ui.messages.ConversationsListFragment: void onVisibilityChanged(boolean)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void attachAdapter()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.ui.messages.ConversationsListFragment$5: void <init>(com.csipsimple.ui.messages.ConversationsListFragment,int)>(r0, $i0) in <com.csipsimple.ui.messages.ConversationsListFragment: void onVisibilityChanged(boolean)> ==> <com.csipsimple.ui.messages.ConversationsListFragment$5: void <init>(com.csipsimple.ui.messages.ConversationsListFragment,int)>
VIRTUAL edge: virtualinvoke r1.<java.lang.Thread: void start()>() in <com.csipsimple.ui.messages.ConversationsListFragment: void onVisibilityChanged(boolean)> ==> <com.csipsimple.ui.messages.ConversationsListFragment$5: void run()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews: java.lang.String getRemoteNumber()>() in <com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)> ==> <com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews: java.lang.String getRemoteNumber()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.ActionBar: void <init>()>() in <com.actionbarsherlock.internal.app.ActionBarWrapper: void <init>(android.app.Activity)> ==> <com.actionbarsherlock.app.ActionBar: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<android.app.ActionBar: void addOnMenuVisibilityListener(android.app.ActionBar$OnMenuVisibilityListener)>(r0) in <com.actionbarsherlock.internal.app.ActionBarWrapper: void <init>(android.app.Activity)> ==> <com.actionbarsherlock.internal.app.ActionBarWrapper: void onMenuVisibilityChanged(boolean)>
VIRTUAL edge: virtualinvoke $r2.<android.app.ActionBar: void addOnMenuVisibilityListener(android.app.ActionBar$OnMenuVisibilityListener)>(r0) in <com.actionbarsherlock.internal.app.ActionBarWrapper: void <init>(android.app.Activity)> ==> <com.actionbarsherlock.internal.app.ActionBarWrapper: boolean onNavigationItemSelected(int,long)>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void <init>(com.actionbarsherlock.internal.app.ActionBarWrapper,android.app.ActionBar$Tab)>(r0, $r2) in <com.actionbarsherlock.internal.app.ActionBarWrapper: com.actionbarsherlock.app.ActionBar$Tab newTab()> ==> <com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void <init>(com.actionbarsherlock.internal.app.ActionBarWrapper,android.app.ActionBar$Tab)>
STATIC edge: $i1 = staticinvoke <com.csipsimple.utils.Compatibility: int getHomeMenuId()>() in <com.csipsimple.ui.account.AccountsEditList: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.utils.Compatibility: int getHomeMenuId()>
VIRTUAL edge: $r2 = virtualinvoke $r4.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.pjsip.PjSipService$1: void run()> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.pjsip.PjSipService$1$1: void <init>(com.csipsimple.pjsip.PjSipService$1,int)>(r0, $i0) in <com.csipsimple.pjsip.PjSipService$1: void run()> ==> <com.csipsimple.pjsip.PjSipService$1$1: void <init>(com.csipsimple.pjsip.PjSipService$1,int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r1) in <com.csipsimple.pjsip.PjSipService$1: void run()> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_media_transport: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_media_transport: void <init>()> ==> <org.pjsip.pjsua.pjsua_media_transport: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_media_transport: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_media_transport: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_media_transport: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_media_transport: void delete()>() in <org.pjsip.pjsua.pjsua_media_transport: void finalize()> ==> <org.pjsip.pjsua.pjsua_media_transport: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_media_transport: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info getSkinfo()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_media_transport: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport getTransport()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info)>($r1) in <org.pjsip.pjsua.pjsua_media_transport: void setSkinfo(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport)>($r1) in <org.pjsip.pjsua.pjsua_media_transport: void setTransport(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R$id: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.Manifest$permission: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,com.csipsimple.api.SipProfile,boolean)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)>($r3, $l0) in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,com.csipsimple.api.SipProfile,boolean)> ==> <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.api.SipProfile: void <init>()>() in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)> ==> <com.csipsimple.api.SipProfile: void <init>()>
STATIC edge: $r8 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>($r7, $r2) in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)> ==> <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.utils.CallHandlerPlugin: void <init>(android.content.Context)>($r7) in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)> ==> <com.csipsimple.utils.CallHandlerPlugin: void <init>(android.content.Context)>
STATIC edge: $r9 = staticinvoke <com.csipsimple.ui.account.AccountsLoader: java.lang.String access$3(com.csipsimple.ui.account.AccountsLoader)>($r1) in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)> ==> <com.csipsimple.ui.account.AccountsLoader: java.lang.String access$3(com.csipsimple.ui.account.AccountsLoader)>
STATIC edge: $z1 = staticinvoke <com.csipsimple.ui.account.AccountsLoader: boolean access$4(com.csipsimple.ui.account.AccountsLoader)>($r1) in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)> ==> <com.csipsimple.ui.account.AccountsLoader: boolean access$4(com.csipsimple.ui.account.AccountsLoader)>
STATIC edge: $r9 = staticinvoke <com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)>($r7, $l0, $r9) in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)> ==> <com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)>
STATIC edge: $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
SPECIAL edge: specialinvoke $r10.<com.csipsimple.ui.account.AccountsLoader$FilteredProfile$1: void <init>(com.csipsimple.ui.account.AccountsLoader$FilteredProfile,java.util.concurrent.Semaphore)>(r0, r5) in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)> ==> <com.csipsimple.ui.account.AccountsLoader$FilteredProfile$1: void <init>(com.csipsimple.ui.account.AccountsLoader$FilteredProfile,java.util.concurrent.Semaphore)>
VIRTUAL edge: virtualinvoke r3.<com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.Long,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)>($r8, $r9, $r10) in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)> ==> <com.csipsimple.ui.account.AccountsLoader$FilteredProfile$1: void onLoad(com.csipsimple.utils.CallHandlerPlugin)>
VIRTUAL edge: virtualinvoke r3.<com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.Long,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)>($r8, $r9, $r10) in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)> ==> <com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.Long,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("OutgoingAccountsLoader", $r2) in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r3.<com.csipsimple.utils.CallHandlerPlugin: java.lang.String getLabel()>() in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)> ==> <com.csipsimple.utils.CallHandlerPlugin: java.lang.String getLabel()>
VIRTUAL edge: $r13 = virtualinvoke r3.<com.csipsimple.utils.CallHandlerPlugin: android.graphics.Bitmap getIcon()>() in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)> ==> <com.csipsimple.utils.CallHandlerPlugin: android.graphics.Bitmap getIcon()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.ui.account.AccountsLoader: boolean access$4(com.csipsimple.ui.account.AccountsLoader)>($r2) in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: java.lang.String rewriteNumber(java.lang.String)> ==> <com.csipsimple.ui.account.AccountsLoader: boolean access$4(com.csipsimple.ui.account.AccountsLoader)>
STATIC edge: r1 = staticinvoke <com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)>($r3, $l0, r1) in <com.csipsimple.ui.account.AccountsLoader$FilteredProfile: java.lang.String rewriteNumber(java.lang.String)> ==> <com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.warnings.WarningUtils: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.ui.warnings.WarningUtils: com.csipsimple.ui.warnings.WarningUtils$WarningBlockView getViewForWarning(android.content.Context,java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Cellip: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Cellip: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Cellip: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Cellip: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Cellip: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Cellip: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Cellip: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.Cellip: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>("stun.mysecretary.net") in <com.csipsimple.wizards.impl.Cellip: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.ui.calllog.CallLogListFragment: void access$0(com.csipsimple.ui.calllog.CallLogListFragment)>($r3) in <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void access$0(com.csipsimple.ui.calllog.CallLogListFragment)>
STATIC edge: staticinvoke <com.csipsimple.ui.calllog.CallLogListFragment: void access$1(com.csipsimple.ui.calllog.CallLogListFragment)>($r3) in <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void access$1(com.csipsimple.ui.calllog.CallLogListFragment)>
STATIC edge: staticinvoke <com.csipsimple.ui.calllog.CallLogListFragment: void access$2(com.csipsimple.ui.calllog.CallLogListFragment)>($r3) in <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void access$2(com.csipsimple.ui.calllog.CallLogListFragment)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallLogFragment", "onCreateActionMode") in <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.ui.calllog.CallLogListFragment: com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity()>() in <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockListFragment: com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity()>
VIRTUAL edge: $r5 = virtualinvoke $r4.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>() in <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.view.MenuInflater: void inflate(int,com.actionbarsherlock.view.Menu)>(2131623936, $r2) in <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.view.MenuInflater: void inflate(int,com.actionbarsherlock.view.Menu)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallLogFragment", "onDestroyActionMode") in <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: void onDestroyActionMode(com.actionbarsherlock.view.ActionMode)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.ui.calllog.CallLogListFragment: void access$3(com.csipsimple.ui.calllog.CallLogListFragment,com.actionbarsherlock.view.ActionMode)>($r2, null) in <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: void onDestroyActionMode(com.actionbarsherlock.view.ActionMode)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void access$3(com.csipsimple.ui.calllog.CallLogListFragment,com.actionbarsherlock.view.ActionMode)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallLogFragment", "onPrepareActionMode") in <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjsua_callback: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pjsua_callback getCb()> ==> <org.pjsip.pjsua.pjsua_callback: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjsip_cred_info: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pjsip_cred_info getCred_info()> ==> <org.pjsip.pjsua.pjsip_cred_info: void <init>(long,boolean)>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.pj_str_t: org.pjsip.pjsua.pj_str_t[] cArrayWrap(long[],boolean)>($r1, 0) in <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pj_str_t[] getNameserver()> ==> <org.pjsip.pjsua.pj_str_t: org.pjsip.pjsua.pj_str_t[] cArrayWrap(long[],boolean)>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.pj_str_t: org.pjsip.pjsua.pj_str_t[] cArrayWrap(long[],boolean)>($r1, 0) in <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pj_str_t[] getOutbound_proxy()> ==> <org.pjsip.pjsua.pj_str_t: org.pjsip.pjsua.pj_str_t[] cArrayWrap(long[],boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsua_100rel_use: org.pjsip.pjsua.pjsua_100rel_use swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pjsua_100rel_use getRequire_100rel()> ==> <org.pjsip.pjsua.pjsua_100rel_use: org.pjsip.pjsua.pjsua_100rel_use swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pj_str_t getStun_domain()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pj_str_t getStun_host()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjmedia_srtp_use: org.pjsip.pjsua.pjmedia_srtp_use swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pjmedia_srtp_use getUse_srtp()> ==> <org.pjsip.pjsua.pjmedia_srtp_use: org.pjsip.pjsua.pjmedia_srtp_use swigToEnum(int)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsua_sip_timer_use: org.pjsip.pjsua.pjsua_sip_timer_use swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pjsua_sip_timer_use getUse_timer()> ==> <org.pjsip.pjsua.pjsua_sip_timer_use: org.pjsip.pjsua.pjsua_sip_timer_use swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pj_str_t getUser_agent()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsip_cred_info: long getCPtr(org.pjsip.pjsua.pjsip_cred_info)>($r1) in <org.pjsip.pjsua.pjsua_config: void setCred_info(org.pjsip.pjsua.pjsip_cred_info)> ==> <org.pjsip.pjsua.pjsip_cred_info: long getCPtr(org.pjsip.pjsua.pjsip_cred_info)>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long[] cArrayUnwrap(org.pjsip.pjsua.pj_str_t[])>($r1) in <org.pjsip.pjsua.pjsua_config: void setOutbound_proxy(org.pjsip.pjsua.pj_str_t[])> ==> <org.pjsip.pjsua.pj_str_t: long[] cArrayUnwrap(org.pjsip.pjsua.pj_str_t[])>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_100rel_use: int swigValue()>() in <org.pjsip.pjsua.pjsua_config: void setRequire_100rel(org.pjsip.pjsua.pjsua_100rel_use)> ==> <org.pjsip.pjsua.pjsua_100rel_use: int swigValue()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_config: void setStun_domain(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_config: void setStun_host(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_sip_timer_use: int swigValue()>() in <org.pjsip.pjsua.pjsua_config: void setUse_timer(org.pjsip.pjsua.pjsua_sip_timer_use)> ==> <org.pjsip.pjsua.pjsua_sip_timer_use: int swigValue()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.RewriterPlugin: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("RewriterPlugin", $r11) in <com.csipsimple.utils.RewriterPlugin: java.util.Map getAvailableRewriters(android.content.Context)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r4.<com.csipsimple.utils.RewriterPlugin$OnRewriteReceiver: void <init>(java.lang.String)>($r2) in <com.csipsimple.utils.RewriterPlugin: java.lang.String rewriteNumber(android.content.Context,java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.RewriterPlugin$OnRewriteReceiver: void <init>(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke r4.<com.csipsimple.utils.RewriterPlugin$OnRewriteReceiver: java.lang.String getResult()>() in <com.csipsimple.utils.RewriterPlugin: java.lang.String rewriteNumber(android.content.Context,java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.RewriterPlugin$OnRewriteReceiver: java.lang.String getResult()>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_call_info: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_call_info: void <init>()> ==> <org.pjsip.pjsua.pjsua_call_info: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_call_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_call_info: void delete()>() in <org.pjsip.pjsua.pjsua_call_info: void finalize()> ==> <org.pjsip.pjsua.pjsua_call_info: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getCall_id()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_time_val: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_time_val getConnect_duration()> ==> <org.pjsip.pjsua.pj_time_val: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsip_status_code: org.pjsip.pjsua.pjsip_status_code swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsip_status_code getLast_status()> ==> <org.pjsip.pjsua.pjsip_status_code: org.pjsip.pjsua.pjsip_status_code swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getLast_status_text()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getLocal_contact()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getLocal_info()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjsua_call_media_info: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsua_call_media_info getMedia()> ==> <org.pjsip.pjsua.pjsua_call_media_info: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjmedia_dir: org.pjsip.pjsua.pjmedia_dir swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjmedia_dir getMedia_dir()> ==> <org.pjsip.pjsua.pjmedia_dir: org.pjsip.pjsua.pjmedia_dir swigToEnum(int)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsua_call_media_status: org.pjsip.pjsua.pjsua_call_media_status swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsua_call_media_status getMedia_status()> ==> <org.pjsip.pjsua.pjsua_call_media_status: org.pjsip.pjsua.pjsua_call_media_status swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjsua_call_media_info: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsua_call_media_info getProv_media()> ==> <org.pjsip.pjsua.pjsua_call_media_info: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getRemote_contact()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getRemote_info()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e getRole()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjsua_call_setting: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsua_call_setting getSetting()> ==> <org.pjsip.pjsua.pjsua_call_setting: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsip_inv_state: org.pjsip.pjsua.pjsip_inv_state swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsip_inv_state getState()> ==> <org.pjsip.pjsua.pjsip_inv_state: org.pjsip.pjsua.pjsip_inv_state swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getState_text()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_time_val: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_time_val getTotal_duration()> ==> <org.pjsip.pjsua.pj_time_val: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_call_info: void setCall_id(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_time_val: long getCPtr(org.pjsip.pjsua.pj_time_val)>($r1) in <org.pjsip.pjsua.pjsua_call_info: void setConnect_duration(org.pjsip.pjsua.pj_time_val)> ==> <org.pjsip.pjsua.pj_time_val: long getCPtr(org.pjsip.pjsua.pj_time_val)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsip_status_code: int swigValue()>() in <org.pjsip.pjsua.pjsua_call_info: void setLast_status(org.pjsip.pjsua.pjsip_status_code)> ==> <org.pjsip.pjsua.pjsip_status_code: int swigValue()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_call_info: void setLast_status_text(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_call_info: void setLocal_contact(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_call_info: void setLocal_info(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_call_media_info: long getCPtr(org.pjsip.pjsua.pjsua_call_media_info)>($r1) in <org.pjsip.pjsua.pjsua_call_info: void setMedia(org.pjsip.pjsua.pjsua_call_media_info)> ==> <org.pjsip.pjsua.pjsua_call_media_info: long getCPtr(org.pjsip.pjsua.pjsua_call_media_info)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjmedia_dir: int swigValue()>() in <org.pjsip.pjsua.pjsua_call_info: void setMedia_dir(org.pjsip.pjsua.pjmedia_dir)> ==> <org.pjsip.pjsua.pjmedia_dir: int swigValue()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_call_media_status: int swigValue()>() in <org.pjsip.pjsua.pjsua_call_info: void setMedia_status(org.pjsip.pjsua.pjsua_call_media_status)> ==> <org.pjsip.pjsua.pjsua_call_media_status: int swigValue()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_call_media_info: long getCPtr(org.pjsip.pjsua.pjsua_call_media_info)>($r1) in <org.pjsip.pjsua.pjsua_call_info: void setProv_media(org.pjsip.pjsua.pjsua_call_media_info)> ==> <org.pjsip.pjsua.pjsua_call_media_info: long getCPtr(org.pjsip.pjsua.pjsua_call_media_info)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_call_info: void setRemote_contact(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_call_info: void setRemote_info(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e)>($r1) in <org.pjsip.pjsua.pjsua_call_info: void setRole(org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_call_setting: long getCPtr(org.pjsip.pjsua.pjsua_call_setting)>($r1) in <org.pjsip.pjsua.pjsua_call_info: void setSetting(org.pjsip.pjsua.pjsua_call_setting)> ==> <org.pjsip.pjsua.pjsua_call_setting: long getCPtr(org.pjsip.pjsua.pjsua_call_setting)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsip_inv_state: int swigValue()>() in <org.pjsip.pjsua.pjsua_call_info: void setState(org.pjsip.pjsua.pjsip_inv_state)> ==> <org.pjsip.pjsua.pjsip_inv_state: int swigValue()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_call_info: void setState_text(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_time_val: long getCPtr(org.pjsip.pjsua.pj_time_val)>($r1) in <org.pjsip.pjsua.pjsua_call_info: void setTotal_duration(org.pjsip.pjsua.pj_time_val)> ==> <org.pjsip.pjsua.pj_time_val: long getCPtr(org.pjsip.pjsua.pj_time_val)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3) in <com.csipsimple.ui.messages.MessageAdapter: java.lang.CharSequence formatMessage(java.lang.String,java.lang.String,java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.utils.SmileyParser: com.csipsimple.utils.SmileyParser getInstance()>() in <com.csipsimple.ui.messages.MessageAdapter: java.lang.CharSequence formatMessage(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.SmileyParser: com.csipsimple.utils.SmileyParser getInstance()>
VIRTUAL edge: $r8 = virtualinvoke $r7.<com.csipsimple.utils.SmileyParser: java.lang.CharSequence addSmileySpans(java.lang.CharSequence)>($r2) in <com.csipsimple.ui.messages.MessageAdapter: java.lang.CharSequence formatMessage(java.lang.String,java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.SmileyParser: java.lang.CharSequence addSmileySpans(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.widgets.contactbadge.QuickContactBadge: void setPosition(com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition)>($r2) in <com.csipsimple.ui.messages.MessageAdapter: void setPhotoSide(com.csipsimple.ui.messages.MessageAdapter$MessageListItemViews,com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition)> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge: void setPosition(com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition)>
SPECIAL edge: specialinvoke r4.<com.csipsimple.api.SipMessage: void <init>(android.database.Cursor)>($r3) in <com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.api.SipMessage: void <init>(android.database.Cursor)>
VIRTUAL edge: $r7 = virtualinvoke r4.<com.csipsimple.api.SipMessage: java.lang.String getRemoteNumber()>() in <com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.api.SipMessage: java.lang.String getRemoteNumber()>
VIRTUAL edge: $l0 = virtualinvoke r4.<com.csipsimple.api.SipMessage: long getDate()>() in <com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.api.SipMessage: long getDate()>
VIRTUAL edge: $r8 = virtualinvoke r4.<com.csipsimple.api.SipMessage: java.lang.String getBodyContent()>() in <com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.api.SipMessage: java.lang.String getBodyContent()>
VIRTUAL edge: $r9 = virtualinvoke r4.<com.csipsimple.api.SipMessage: java.lang.String getErrorContent()>() in <com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.api.SipMessage: java.lang.String getErrorContent()>
VIRTUAL edge: $r10 = virtualinvoke r4.<com.csipsimple.api.SipMessage: java.lang.String getMimeType()>() in <com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.api.SipMessage: java.lang.String getMimeType()>
VIRTUAL edge: $i1 = virtualinvoke r4.<com.csipsimple.api.SipMessage: int getType()>() in <com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.api.SipMessage: int getType()>
SPECIAL edge: $r11 = specialinvoke r0.<com.csipsimple.ui.messages.MessageAdapter: java.lang.CharSequence formatMessage(java.lang.String,java.lang.String,java.lang.String)>($r7, $r8, $r10) in <com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.messages.MessageAdapter: java.lang.CharSequence formatMessage(java.lang.String,java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r4.<com.csipsimple.api.SipMessage: boolean isOutgoing()>() in <com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.api.SipMessage: boolean isOutgoing()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.messages.MessageAdapter: void setPhotoSide(com.csipsimple.ui.messages.MessageAdapter$MessageListItemViews,com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition)>(r6, $r15) in <com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.messages.MessageAdapter: void setPhotoSide(com.csipsimple.ui.messages.MessageAdapter$MessageListItemViews,com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition)>
VIRTUAL edge: virtualinvoke $r16.<com.csipsimple.widgets.contactbadge.QuickContactBadge: void assignContactUri(android.net.Uri)>($r18) in <com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge: void assignContactUri(android.net.Uri)>
VIRTUAL edge: $r14 = virtualinvoke $r16.<com.csipsimple.widgets.contactbadge.QuickContactBadge: android.widget.ImageView getImageView()>() in <com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge: android.widget.ImageView getImageView()>
STATIC edge: staticinvoke <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>($r2, $r14, $r17, 2130837667) in <com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>
VIRTUAL edge: $r7 = virtualinvoke r4.<com.csipsimple.api.SipMessage: java.lang.String getFullFrom()>() in <com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.api.SipMessage: java.lang.String getFullFrom()>
STATIC edge: $r17 = staticinvoke <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>($r2, $r7) in <com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>
SPECIAL edge: specialinvoke r4.<com.csipsimple.ui.messages.MessageAdapter$MessageListItemViews: void <init>()>() in <com.csipsimple.ui.messages.MessageAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)> ==> <com.csipsimple.ui.messages.MessageAdapter$MessageListItemViews: void <init>()>
VIRTUAL edge: virtualinvoke $r4.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r0) in <com.csipsimple.ui.SipHome$TabsAdapter: void <init>(com.csipsimple.ui.SipHome,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)> ==> <com.csipsimple.ui.SipHome$TabsAdapter: void onTabSelected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>
VIRTUAL edge: virtualinvoke $r4.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r0) in <com.csipsimple.ui.SipHome$TabsAdapter: void <init>(com.csipsimple.ui.SipHome,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)> ==> <com.csipsimple.ui.SipHome$TabsAdapter: void onPageScrolled(int,float,int)>
VIRTUAL edge: virtualinvoke $r4.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r0) in <com.csipsimple.ui.SipHome$TabsAdapter: void <init>(com.csipsimple.ui.SipHome,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)> ==> <com.csipsimple.ui.SipHome$TabsAdapter: void onTabUnselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>
VIRTUAL edge: virtualinvoke $r4.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r0) in <com.csipsimple.ui.SipHome$TabsAdapter: void <init>(com.csipsimple.ui.SipHome,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)> ==> <com.csipsimple.ui.SipHome$TabsAdapter: void onTabReselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.ui.SipHome: boolean access$2(com.csipsimple.ui.SipHome)>($r2) in <com.csipsimple.ui.SipHome$TabsAdapter: void clearDetails()> ==> <com.csipsimple.ui.SipHome: boolean access$2(com.csipsimple.ui.SipHome)>
STATIC edge: staticinvoke <com.csipsimple.ui.SipHome: void access$1(com.csipsimple.ui.SipHome,int,boolean)>($r1, $i0, 0) in <com.csipsimple.ui.SipHome$TabsAdapter: void onPageScrollStateChanged(int)> ==> <com.csipsimple.ui.SipHome: void access$1(com.csipsimple.ui.SipHome,int,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.ui.SipHome: void invalidateOptionsMenu()>() in <com.csipsimple.ui.SipHome$TabsAdapter: void onPageScrollStateChanged(int)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void invalidateOptionsMenu()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.SipHome$TabsAdapter: void clearDetails()>() in <com.csipsimple.ui.SipHome$TabsAdapter: void onPageScrollStateChanged(int)> ==> <com.csipsimple.ui.SipHome$TabsAdapter: void clearDetails()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("SIP_HOME", $r3) in <com.csipsimple.ui.SipHome$TabsAdapter: void onPageSelected(int)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.SipHome$TabsAdapter: void clearDetails()>() in <com.csipsimple.ui.SipHome$TabsAdapter: void onTabSelected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)> ==> <com.csipsimple.ui.SipHome$TabsAdapter: void clearDetails()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.view.ActionProvider: void <init>(android.content.Context)>($r1) in <com.actionbarsherlock.widget.ShareActionProvider: void <init>(android.content.Context)> ==> <com.actionbarsherlock.view.ActionProvider: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: void <init>(com.actionbarsherlock.widget.ShareActionProvider,com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener)>(r0, null) in <com.actionbarsherlock.widget.ShareActionProvider: void <init>(android.content.Context)> ==> <com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: void <init>(com.actionbarsherlock.widget.ShareActionProvider,com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener)>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy: void <init>(com.actionbarsherlock.widget.ShareActionProvider,com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy)>(r0, null) in <com.actionbarsherlock.widget.ShareActionProvider: void setActivityChooserPolicyIfNeeded()> ==> <com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy: void <init>(com.actionbarsherlock.widget.ShareActionProvider,com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy)>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String)>($r5, $r6) in <com.actionbarsherlock.widget.ShareActionProvider: void setActivityChooserPolicyIfNeeded()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserModel: void setOnChooseActivityListener(com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener)>($r3) in <com.actionbarsherlock.widget.ShareActionProvider: void setActivityChooserPolicyIfNeeded()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void setOnChooseActivityListener(com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener)>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String)>($r3, $r4) in <com.actionbarsherlock.widget.ShareActionProvider: android.view.View onCreateActionView()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String)>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context)>($r3) in <com.actionbarsherlock.widget.ShareActionProvider: android.view.View onCreateActionView()> ==> <com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.widget.ActivityChooserView: void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel)>($r5) in <com.actionbarsherlock.widget.ShareActionProvider: android.view.View onCreateActionView()> ==> <com.actionbarsherlock.widget.ActivityChooserView: void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.widget.ActivityChooserView: void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)>($r8) in <com.actionbarsherlock.widget.ShareActionProvider: android.view.View onCreateActionView()> ==> <com.actionbarsherlock.widget.ActivityChooserView: void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.widget.ActivityChooserView: void setProvider(com.actionbarsherlock.view.ActionProvider)>(r0) in <com.actionbarsherlock.widget.ShareActionProvider: android.view.View onCreateActionView()> ==> <com.actionbarsherlock.widget.ActivityChooserView: void setProvider(com.actionbarsherlock.view.ActionProvider)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.widget.ActivityChooserView: void setDefaultActionButtonContentDescription(int)>($i0) in <com.actionbarsherlock.widget.ShareActionProvider: android.view.View onCreateActionView()> ==> <com.actionbarsherlock.widget.ActivityChooserView: void setDefaultActionButtonContentDescription(int)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.widget.ActivityChooserView: void setExpandActivityOverflowButtonContentDescription(int)>($i0) in <com.actionbarsherlock.widget.ShareActionProvider: android.view.View onCreateActionView()> ==> <com.actionbarsherlock.widget.ActivityChooserView: void setExpandActivityOverflowButtonContentDescription(int)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String)>($r2, $r3) in <com.actionbarsherlock.widget.ShareActionProvider: void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r4.<com.actionbarsherlock.widget.ActivityChooserModel: int getActivityCount()>() in <com.actionbarsherlock.widget.ShareActionProvider: void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: int getActivityCount()>
VIRTUAL edge: $r6 = virtualinvoke $r4.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.pm.ResolveInfo getActivity(int)>(i2) in <com.actionbarsherlock.widget.ShareActionProvider: void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: android.content.pm.ResolveInfo getActivity(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ShareActionProvider: void setActivityChooserPolicyIfNeeded()>() in <com.actionbarsherlock.widget.ShareActionProvider: void setOnShareTargetSelectedListener(com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener)> ==> <com.actionbarsherlock.widget.ShareActionProvider: void setActivityChooserPolicyIfNeeded()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ShareActionProvider: void setActivityChooserPolicyIfNeeded()>() in <com.actionbarsherlock.widget.ShareActionProvider: void setShareHistoryFileName(java.lang.String)> ==> <com.actionbarsherlock.widget.ShareActionProvider: void setActivityChooserPolicyIfNeeded()>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String)>($r2, $r3) in <com.actionbarsherlock.widget.ShareActionProvider: void setShareIntent(android.content.Intent)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.widget.ActivityChooserModel: void setIntent(android.content.Intent)>($r1) in <com.actionbarsherlock.widget.ShareActionProvider: void setShareIntent(android.content.Intent)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void setIntent(android.content.Intent)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView$SavedState: void <init>(android.os.Parcel,com.actionbarsherlock.internal.widget.ActionBarView$SavedState)>($r1, null) in <com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1: com.actionbarsherlock.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$SavedState: void <init>(android.os.Parcel,com.actionbarsherlock.internal.widget.ActionBarView$SavedState)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1: com.actionbarsherlock.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel)>($r1) in <com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1: com.actionbarsherlock.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1: com.actionbarsherlock.internal.widget.ActionBarView$SavedState[] newArray(int)>($i0) in <com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1: java.lang.Object[] newArray(int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1: com.actionbarsherlock.internal.widget.ActionBarView$SavedState[] newArray(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R$styleable: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.InCallActivity$ShowZRTPInfoRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,int,java.lang.String)> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", "ZRTP confirmed") in <com.csipsimple.ui.incall.InCallActivity$ShowZRTPInfoRunnable: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.ISipService access$0(com.csipsimple.ui.incall.InCallActivity)>($r3) in <com.csipsimple.ui.incall.InCallActivity$ShowZRTPInfoRunnable: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.ISipService access$0(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("InCallActivity", "Error while calling service", r2) in <com.csipsimple.ui.incall.InCallActivity$ShowZRTPInfoRunnable: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
VIRTUAL edge: virtualinvoke r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>($r5, r0) in <com.csipsimple.ui.incall.InCallActivity$ShowZRTPInfoRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallActivity$ShowZRTPInfoRunnable: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_med_tp_st$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CodecsFragment", "Entiere line is binded ") in <com.csipsimple.ui.prefs.CodecsFragment$2: boolean setViewValue(android.view.View,java.lang.Object,java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131099859) in <com.csipsimple.widgets.RegistrationNotification: void <clinit>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.RegistrationNotification: void <init>(java.lang.String)>($r2) in <com.csipsimple.widgets.RegistrationNotification: void <init>(android.content.Context)> ==> <com.csipsimple.widgets.RegistrationNotification: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.RegistrationNotification: void <init>(java.lang.String)>($r3) in <com.csipsimple.widgets.RegistrationNotification: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.RegistrationNotification: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.RegistrationNotification: void <init>(java.lang.String)>($r3) in <com.csipsimple.widgets.RegistrationNotification: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.widgets.RegistrationNotification: void <init>(java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke r5.<com.csipsimple.api.SipProfileState: java.lang.String getWizard()>() in <com.csipsimple.widgets.RegistrationNotification: void addAccountInfos(android.content.Context,java.util.ArrayList)> ==> <com.csipsimple.api.SipProfileState: java.lang.String getWizard()>
STATIC edge: $r9 = staticinvoke <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)>($r8) in <com.csipsimple.widgets.RegistrationNotification: void addAccountInfos(android.content.Context,java.util.ArrayList)> ==> <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke r5.<com.csipsimple.api.SipProfileState: java.lang.CharSequence getDisplayName()>() in <com.csipsimple.widgets.RegistrationNotification: void addAccountInfos(android.content.Context,java.util.ArrayList)> ==> <com.csipsimple.api.SipProfileState: java.lang.CharSequence getDisplayName()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.ui.prefs.CodecsFragment$1: int compare(java.util.Map,java.util.Map)>($r3, $r4) in <com.csipsimple.ui.prefs.CodecsFragment$1: int compare(java.lang.Object,java.lang.Object)> ==> <com.csipsimple.ui.prefs.CodecsFragment$1: int compare(java.util.Map,java.util.Map)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AccountBalanceHelper: void <init>()>() in <com.csipsimple.wizards.impl.Betamax$AccountBalance: void <init>(com.csipsimple.wizards.impl.Betamax)> ==> <com.csipsimple.wizards.impl.AccountBalanceHelper: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.wizards.impl.Betamax: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Betamax)>(r3) in <com.csipsimple.wizards.impl.Betamax$AccountBalance: void applyResultError()> ==> <com.csipsimple.wizards.impl.Betamax: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Betamax)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.wizards.impl.Betamax: android.widget.TextView access$1(com.csipsimple.wizards.impl.Betamax)>(r4) in <com.csipsimple.wizards.impl.Betamax$AccountBalance: void applyResultSuccess(java.lang.String)> ==> <com.csipsimple.wizards.impl.Betamax: android.widget.TextView access$1(com.csipsimple.wizards.impl.Betamax)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.wizards.impl.Betamax: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Betamax)>(r4) in <com.csipsimple.wizards.impl.Betamax$AccountBalance: void applyResultSuccess(java.lang.String)> ==> <com.csipsimple.wizards.impl.Betamax: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Betamax)>
STATIC edge: $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("https://") in <com.csipsimple.wizards.impl.Betamax$AccountBalance: org.apache.http.client.methods.HttpRequestBase getRequest(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.Betamax$AccountBalance: java.lang.String parseResponseLine(java.lang.String)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("BetamaxW", "Can\'t get value for line") in <com.csipsimple.wizards.impl.Betamax$AccountBalance: java.lang.String parseResponseLine(java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R$menu: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CodecsFragment", $r6) in <com.csipsimple.ui.prefs.CodecsFragment$3: void drop(int,int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r8 = staticinvoke <com.csipsimple.ui.prefs.CodecsFragment: java.util.List access$0(com.csipsimple.ui.prefs.CodecsFragment)>($r1) in <com.csipsimple.ui.prefs.CodecsFragment$3: void drop(int,int)> ==> <com.csipsimple.ui.prefs.CodecsFragment: java.util.List access$0(com.csipsimple.ui.prefs.CodecsFragment)>
STATIC edge: $r10 = staticinvoke <com.csipsimple.ui.prefs.CodecsFragment: android.widget.SimpleAdapter access$2(com.csipsimple.ui.prefs.CodecsFragment)>($r1) in <com.csipsimple.ui.prefs.CodecsFragment$3: void drop(int,int)> ==> <com.csipsimple.ui.prefs.CodecsFragment: android.widget.SimpleAdapter access$2(com.csipsimple.ui.prefs.CodecsFragment)>
STATIC edge: staticinvoke <com.csipsimple.ui.prefs.CodecsFragment: void access$1(com.csipsimple.ui.prefs.CodecsFragment,java.lang.String,short)>($r1, $r6, $s2) in <com.csipsimple.ui.prefs.CodecsFragment$3: void drop(int,int)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void access$1(com.csipsimple.ui.prefs.CodecsFragment,java.lang.String,short)>
STATIC edge: $r7 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s2) in <com.csipsimple.ui.prefs.CodecsFragment$3: void drop(int,int)> ==> <java.lang.Short: java.lang.Short valueOf(short)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R$integer: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.impl.MondotalkCreate$AccountCreationResult: void <init>(com.csipsimple.wizards.impl.MondotalkCreate,java.lang.String,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.CallTypeIconsView$Resources: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.Theme: com.csipsimple.utils.Theme getCurrentTheme(android.content.Context)>($r1) in <com.csipsimple.ui.calllog.CallTypeIconsView$Resources: void <init>(android.content.Context)> ==> <com.csipsimple.utils.Theme: com.csipsimple.utils.Theme getCurrentTheme(android.content.Context)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>("ic_call_incoming") in <com.csipsimple.ui.calllog.CallTypeIconsView$Resources: void <init>(android.content.Context)> ==> <com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r3.<com.csipsimple.utils.Theme: java.lang.Integer getDimension(java.lang.String)>("call_log_icon_margin") in <com.csipsimple.ui.calllog.CallTypeIconsView$Resources: void <init>(android.content.Context)> ==> <com.csipsimple.utils.Theme: java.lang.Integer getDimension(java.lang.String)>
STATIC edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.ui.calllog.CallTypeIconsView$Resources: void <init>(android.content.Context)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.ui.calllog.GroupingListAdapter: void onContentChanged()>() in <com.csipsimple.ui.calllog.GroupingListAdapter$1: void onChange(boolean)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: void onContentChanged()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void <init>()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: boolean isStarted()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void cancel()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: boolean isStarted()>
VIRTUAL edge: $z0 = virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean isRunning()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void cancel()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean isRunning()>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void cancel()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void cancel()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void cancel()>
VIRTUAL edge: virtualinvoke $r8.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void cancel()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void cancel()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void cancel()>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone()>
SPECIAL edge: $r3 = specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()>
SPECIAL edge: $r3 = specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()>
VIRTUAL edge: $r9 = virtualinvoke r8.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone()>
VIRTUAL edge: $r5 = virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: java.util.ArrayList getListeners()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: java.util.ArrayList getListeners()>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node,int)>($r9, $i0) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node,int)>
VIRTUAL edge: virtualinvoke r8.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency)>(r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: boolean isStarted()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void end()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: boolean isStarted()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void sortNodes()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void end()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void sortNodes()>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void cancel()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void end()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void cancel()>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>(r0, r0) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void end()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void end()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void end()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void end()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void end()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>(r0, $r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void playSequentially(java.util.List)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void playSequentially(java.util.List)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void playSequentially(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void playSequentially(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: r2 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>(r5) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void playTogether(java.util.Collection)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>(r5) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void playTogether(java.util.Collection)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void playTogether(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void playTogether(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet setDuration(long)>($l0) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet setDuration(long)>
VIRTUAL edge: virtualinvoke r7.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setTarget(java.lang.Object)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void setTarget(java.lang.Object)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setTarget(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void setupEndValues()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void setupEndValues()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void setupEndValues()>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void setupStartValues()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void setupStartValues()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void setupStartValues()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void sortNodes()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void sortNodes()>
VIRTUAL edge: $r6 = virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: java.util.ArrayList getListeners()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: java.util.ArrayList getListeners()>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>(r7) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>
SPECIAL edge: specialinvoke $r8.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>(r0, r0) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r8) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>
SPECIAL edge: specialinvoke $r11.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node,int)>(r0, r4, $i6) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node,int)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r11) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r11) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r11) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r11) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void start()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void start()>
STATIC edge: $r13 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[])>($r12) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[])>
VIRTUAL edge: virtualinvoke $r13.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long)>($l2) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long)>
SPECIAL edge: specialinvoke $r14.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,java.util.ArrayList)>(r0, r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,java.util.ArrayList)>
VIRTUAL edge: virtualinvoke $r13.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_call_media_status$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data: void <init>()>
SPECIAL edge: specialinvoke r0.<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0) in <com.csipsimple.widgets.contactbadge.OverlayedQuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)> ==> <com.csipsimple.widgets.contactbadge.OverlayedQuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.widgets.contactbadge.QuickContactBadge: void overlay(android.graphics.Canvas,android.widget.ImageView)>($r1, r0) in <com.csipsimple.widgets.contactbadge.OverlayedQuickContactBadge: void onDraw(android.graphics.Canvas)> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge: void overlay(android.graphics.Canvas,android.widget.ImageView)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.csipsimple_acc_config: org.pjsip.pjsua.pj_str_t getP_preferred_identity()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.csipsimple_acc_config: void setP_preferred_identity(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Odorik: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Odorik: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Odorik: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Odorik: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Odorik: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.GroupingListAdapter: void <init>(android.content.Context)>($r1) in <com.csipsimple.ui.calllog.CallLogAdapter: void <init>(android.content.Context,com.csipsimple.ui.calllog.CallLogAdapter$CallFetcher)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.ui.calllog.CallLogAdapter$1: void <init>(com.csipsimple.ui.calllog.CallLogAdapter)>(r0) in <com.csipsimple.ui.calllog.CallLogAdapter: void <init>(android.content.Context,com.csipsimple.ui.calllog.CallLogAdapter$CallFetcher)> ==> <com.csipsimple.ui.calllog.CallLogAdapter$1: void <init>(com.csipsimple.ui.calllog.CallLogAdapter)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.calllog.CallLogAdapter$2: void <init>(com.csipsimple.ui.calllog.CallLogAdapter)>(r0) in <com.csipsimple.ui.calllog.CallLogAdapter: void <init>(android.content.Context,com.csipsimple.ui.calllog.CallLogAdapter$CallFetcher)> ==> <com.csipsimple.ui.calllog.CallLogAdapter$2: void <init>(com.csipsimple.ui.calllog.CallLogAdapter)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void <init>(android.content.res.Resources)>($r4) in <com.csipsimple.ui.calllog.CallLogAdapter: void <init>(android.content.Context,com.csipsimple.ui.calllog.CallLogAdapter$CallFetcher)> ==> <com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void <init>(android.content.res.Resources)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.ui.calllog.CallLogListItemHelper: void <init>(com.csipsimple.ui.calllog.PhoneCallDetailsHelper,android.content.Context)>(r3, $r1) in <com.csipsimple.ui.calllog.CallLogAdapter: void <init>(android.content.Context,com.csipsimple.ui.calllog.CallLogAdapter$CallFetcher)> ==> <com.csipsimple.ui.calllog.CallLogListItemHelper: void <init>(com.csipsimple.ui.calllog.PhoneCallDetailsHelper,android.content.Context)>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.ui.calllog.CallLogGroupBuilder: void <init>(com.csipsimple.ui.calllog.CallLogGroupBuilder$GroupCreator)>(r0) in <com.csipsimple.ui.calllog.CallLogAdapter: void <init>(android.content.Context,com.csipsimple.ui.calllog.CallLogAdapter$CallFetcher)> ==> <com.csipsimple.ui.calllog.CallLogGroupBuilder: void <init>(com.csipsimple.ui.calllog.CallLogGroupBuilder$GroupCreator)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.ui.calllog.CallLogAdapter: boolean isLastOfSection(android.database.Cursor)>($r2) in <com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)> ==> <com.csipsimple.ui.calllog.CallLogAdapter: boolean isLastOfSection(android.database.Cursor)>
STATIC edge: $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9) in <com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
SPECIAL edge: specialinvoke r6.<com.csipsimple.ui.calllog.CallLogAdapter$CallRowInfos: void <init>(com.csipsimple.ui.calllog.CallLogAdapter,com.csipsimple.ui.calllog.CallLogAdapter$CallRowInfos)>(r0, null) in <com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)> ==> <com.csipsimple.ui.calllog.CallLogAdapter$CallRowInfos: void <init>(com.csipsimple.ui.calllog.CallLogAdapter,com.csipsimple.ui.calllog.CallLogAdapter$CallRowInfos)>
SPECIAL edge: $r12 = specialinvoke r0.<com.csipsimple.ui.calllog.CallLogAdapter: long[] getCallIds(android.database.Cursor,int)>($r2, $i1) in <com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)> ==> <com.csipsimple.ui.calllog.CallLogAdapter: long[] getCallIds(android.database.Cursor,int)>
VIRTUAL edge: $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r10) in <com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)> ==> <java.lang.String: boolean equals(java.lang.Object)>
STATIC edge: $r15 = staticinvoke <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>($r14, $r10) in <com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)> ==> <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>
STATIC edge: $r16 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>($r10, 0) in <com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)> ==> <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>
SPECIAL edge: $r17 = specialinvoke r0.<com.csipsimple.ui.calllog.CallLogAdapter: int[] getCallTypes(android.database.Cursor,int)>($r2, $i1) in <com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)> ==> <com.csipsimple.ui.calllog.CallLogAdapter: int[] getCallTypes(android.database.Cursor,int)>
SPECIAL edge: specialinvoke r18.<com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long)>($r10, $r16, $r17, $l7, $l8) in <com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)> ==> <com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long)>
VIRTUAL edge: virtualinvoke $r19.<com.csipsimple.ui.calllog.CallLogListItemHelper: void setPhoneCallDetails(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.ui.calllog.PhoneCallDetails)>(r8, r18) in <com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)> ==> <com.csipsimple.ui.calllog.CallLogListItemHelper: void setPhoneCallDetails(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.ui.calllog.PhoneCallDetails)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogAdapter: void setPhoto(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.models.CallerInfo)>(r8, $r15) in <com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)> ==> <com.csipsimple.ui.calllog.CallLogAdapter: void setPhoto(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.models.CallerInfo)>
SPECIAL edge: specialinvoke r18.<com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long,java.lang.CharSequence,int,java.lang.CharSequence,android.net.Uri,android.net.Uri)>($r10, $r16, $r17, $l7, $l8, r3, $i0, r4, r5, null) in <com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)> ==> <com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long,java.lang.CharSequence,int,java.lang.CharSequence,android.net.Uri,android.net.Uri)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.ui.calllog.CallLogListItemViews: com.csipsimple.ui.calllog.CallLogListItemViews fromView(android.view.View)>($r1) in <com.csipsimple.ui.calllog.CallLogAdapter: void findAndCacheViews(android.view.View)> ==> <com.csipsimple.ui.calllog.CallLogListItemViews: com.csipsimple.ui.calllog.CallLogListItemViews fromView(android.view.View)>
VIRTUAL edge: virtualinvoke $r3.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r4) in <com.csipsimple.ui.calllog.CallLogAdapter: void findAndCacheViews(android.view.View)> ==> <com.csipsimple.ui.calllog.CallLogAdapter: void addGroup(int,int,boolean)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.widgets.contactbadge.QuickContactBadge: void assignContactUri(android.net.Uri)>($r5) in <com.csipsimple.ui.calllog.CallLogAdapter: void setPhoto(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.models.CallerInfo)> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge: void assignContactUri(android.net.Uri)>
VIRTUAL edge: $r3 = virtualinvoke $r4.<com.csipsimple.widgets.contactbadge.QuickContactBadge: android.widget.ImageView getImageView()>() in <com.csipsimple.ui.calllog.CallLogAdapter: void setPhoto(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.models.CallerInfo)> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge: android.widget.ImageView getImageView()>
STATIC edge: staticinvoke <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>($r6, $r3, $r2, 2130837667) in <com.csipsimple.ui.calllog.CallLogAdapter: void setPhoto(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.models.CallerInfo)> ==> <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.GroupingListAdapter: void addGroup(int,int,boolean)>($i0, $i1, $z0) in <com.csipsimple.ui.calllog.CallLogAdapter: void addGroup(int,int,boolean)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: void addGroup(int,int,boolean)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.calllog.CallLogGroupBuilder: void addGroups(android.database.Cursor)>($r1) in <com.csipsimple.ui.calllog.CallLogAdapter: void addGroups(android.database.Cursor)> ==> <com.csipsimple.ui.calllog.CallLogGroupBuilder: void addGroups(android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)>($i0, $r1, $r3, 1) in <com.csipsimple.ui.calllog.CallLogAdapter: void bindChildView(int,android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)>($i0, $r1, $r3, $i1) in <com.csipsimple.ui.calllog.CallLogAdapter: void bindGroupView(int,android.view.View,android.content.Context,android.database.Cursor,int,boolean)> ==> <com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)>($i0, $r1, $r3, 1) in <com.csipsimple.ui.calllog.CallLogAdapter: void bindStandAloneView(int,android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.ui.calllog.CallLogAdapter: java.lang.Object getItem(int)>($i0) in <com.csipsimple.ui.calllog.CallLogAdapter: long[] getCallIdsAtPosition(int)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: java.lang.Object getItem(int)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.ui.calllog.CallLogAdapter: int getGroupSize(int)>($i0) in <com.csipsimple.ui.calllog.CallLogAdapter: long[] getCallIdsAtPosition(int)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: int getGroupSize(int)>
SPECIAL edge: $r3 = specialinvoke r0.<com.csipsimple.ui.calllog.CallLogAdapter: long[] getCallIds(android.database.Cursor,int)>(r2, $i0) in <com.csipsimple.ui.calllog.CallLogAdapter: long[] getCallIdsAtPosition(int)> ==> <com.csipsimple.ui.calllog.CallLogAdapter: long[] getCallIds(android.database.Cursor,int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.ui.calllog.CallLogAdapter: java.lang.Object getItem(int)>($i0) in <com.csipsimple.ui.calllog.CallLogAdapter: java.lang.String getCallRemoteAtPostion(int)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: java.lang.Object getItem(int)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>($r3, 0) in <com.csipsimple.ui.calllog.CallLogAdapter: java.lang.String getCallRemoteAtPostion(int)> ==> <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogAdapter: void findAndCacheViews(android.view.View)>($r5) in <com.csipsimple.ui.calllog.CallLogAdapter: android.view.View newChildView(android.content.Context,android.view.ViewGroup)> ==> <com.csipsimple.ui.calllog.CallLogAdapter: void findAndCacheViews(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogAdapter: void findAndCacheViews(android.view.View)>($r5) in <com.csipsimple.ui.calllog.CallLogAdapter: android.view.View newGroupView(android.content.Context,android.view.ViewGroup)> ==> <com.csipsimple.ui.calllog.CallLogAdapter: void findAndCacheViews(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogAdapter: void findAndCacheViews(android.view.View)>($r5) in <com.csipsimple.ui.calllog.CallLogAdapter: android.view.View newStandAloneView(android.content.Context,android.view.ViewGroup)> ==> <com.csipsimple.ui.calllog.CallLogAdapter: void findAndCacheViews(android.view.View)>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_buddy_info: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_buddy_info: void <init>()> ==> <org.pjsip.pjsua.pjsua_buddy_info: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_buddy_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_buddy_info: void delete()>() in <org.pjsip.pjsua.pjsua_buddy_info: void finalize()> ==> <org.pjsip.pjsua.pjsua_buddy_info: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pj_str_t getContact()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status getPres_status()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjrpid_element: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pjrpid_element getRpid()> ==> <org.pjsip.pjsua.pjrpid_element: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsua_buddy_status: org.pjsip.pjsua.pjsua_buddy_status swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pjsua_buddy_status getStatus()> ==> <org.pjsip.pjsua.pjsua_buddy_status: org.pjsip.pjsua.pjsua_buddy_status swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pj_str_t getStatus_text()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state getSub_state()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pj_str_t getSub_term_reason()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pj_str_t getUri()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_buddy_info: void setContact(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status)>($r1) in <org.pjsip.pjsua.pjsua_buddy_info: void setPres_status(org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjrpid_element: long getCPtr(org.pjsip.pjsua.pjrpid_element)>($r1) in <org.pjsip.pjsua.pjsua_buddy_info: void setRpid(org.pjsip.pjsua.pjrpid_element)> ==> <org.pjsip.pjsua.pjrpid_element: long getCPtr(org.pjsip.pjsua.pjrpid_element)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_buddy_status: int swigValue()>() in <org.pjsip.pjsua.pjsua_buddy_info: void setStatus(org.pjsip.pjsua.pjsua_buddy_status)> ==> <org.pjsip.pjsua.pjsua_buddy_status: int swigValue()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_buddy_info: void setStatus_text(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state)>($r1) in <org.pjsip.pjsua.pjsua_buddy_info: void setSub_state(org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_buddy_info: void setSub_term_reason(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua_buddy_info: void setUri(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.A1: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.A1: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.A1: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Messagenet: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Messagenet: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_100rel_use$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.CallLogListItemHelper: void <init>(com.csipsimple.ui.calllog.PhoneCallDetailsHelper,android.content.Context)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.Theme: com.csipsimple.utils.Theme getCurrentTheme(android.content.Context)>($r2) in <com.csipsimple.ui.calllog.CallLogListItemHelper: void <init>(com.csipsimple.ui.calllog.PhoneCallDetailsHelper,android.content.Context)> ==> <com.csipsimple.utils.Theme: com.csipsimple.utils.Theme getCurrentTheme(android.content.Context)>
VIRTUAL edge: r4 = virtualinvoke $r5.<com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>("badge_action_call") in <com.csipsimple.ui.calllog.CallLogListItemHelper: void configureCallSecondaryAction(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.ui.calllog.PhoneCallDetails)> ==> <com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>
SPECIAL edge: $r6 = specialinvoke r0.<com.csipsimple.ui.calllog.CallLogListItemHelper: java.lang.CharSequence getCallActionDescription(com.csipsimple.ui.calllog.PhoneCallDetails)>($r2) in <com.csipsimple.ui.calllog.CallLogListItemHelper: void configureCallSecondaryAction(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.ui.calllog.PhoneCallDetails)> ==> <com.csipsimple.ui.calllog.CallLogListItemHelper: java.lang.CharSequence getCallActionDescription(com.csipsimple.ui.calllog.PhoneCallDetails)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setPhoneCallDetails(com.csipsimple.ui.calllog.PhoneCallDetailsViews,com.csipsimple.ui.calllog.PhoneCallDetails)>($r4, $r2) in <com.csipsimple.ui.calllog.CallLogListItemHelper: void setPhoneCallDetails(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.ui.calllog.PhoneCallDetails)> ==> <com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setPhoneCallDetails(com.csipsimple.ui.calllog.PhoneCallDetailsViews,com.csipsimple.ui.calllog.PhoneCallDetails)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogListItemHelper: void configureCallSecondaryAction(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.ui.calllog.PhoneCallDetails)>($r1, $r2) in <com.csipsimple.ui.calllog.CallLogListItemHelper: void setPhoneCallDetails(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.ui.calllog.PhoneCallDetails)> ==> <com.csipsimple.ui.calllog.CallLogListItemHelper: void configureCallSecondaryAction(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.ui.calllog.PhoneCallDetails)>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.utils.Theme: void applyBackgroundDrawable(android.view.View,java.lang.String)>($r5, "ic_vertical_divider") in <com.csipsimple.ui.calllog.CallLogListItemHelper: void setPhoneCallDetails(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.ui.calllog.PhoneCallDetails)> ==> <com.csipsimple.utils.Theme: void applyBackgroundDrawable(android.view.View,java.lang.String)>
SPECIAL edge: $i0 = specialinvoke $r0.<com.csipsimple.utils.TimerWrapper: int doCancel(int)>($i1) in <com.csipsimple.utils.TimerWrapper: int cancel(int,int)> ==> <com.csipsimple.utils.TimerWrapper: int doCancel(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("Timer wrap", $r2) in <com.csipsimple.utils.TimerWrapper: int doCancel(int)> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
SPECIAL edge: $r4 = specialinvoke r0.<com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)>($i0) in <com.csipsimple.utils.TimerWrapper: int doCancel(int)> ==> <com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)>
STATIC edge: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.utils.TimerWrapper: int doCancel(int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)>($i0) in <com.csipsimple.utils.TimerWrapper: int doSchedule(int,int)> ==> <com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)>
STATIC edge: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.utils.TimerWrapper: int doSchedule(int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("Timer wrap", $r6) in <com.csipsimple.utils.TimerWrapper: int doSchedule(int,int)> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Timer wrap", "Timer NOT initialized") in <com.csipsimple.utils.TimerWrapper: int schedule(int,int,int)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
SPECIAL edge: $i0 = specialinvoke $r0.<com.csipsimple.utils.TimerWrapper: int doSchedule(int,int)>($i1, $i2) in <com.csipsimple.utils.TimerWrapper: int schedule(int,int,int)> ==> <com.csipsimple.utils.TimerWrapper: int doSchedule(int,int)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4) in <com.csipsimple.utils.TimerWrapper: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("Timer wrap", "FIRE Received...") in <com.csipsimple.utils.TimerWrapper: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("Timer wrap", "Not found singleton") in <com.csipsimple.utils.TimerWrapper: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Timer wrap", $r3) in <com.csipsimple.utils.TimerWrapper: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.TimerWrapper: void treatAlarm(int)>($i0) in <com.csipsimple.utils.TimerWrapper: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.TimerWrapper: void treatAlarm(int)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.utils.TimerWrapper$TimerJob: void <init>(com.csipsimple.utils.TimerWrapper,int)>(r0, $i0) in <com.csipsimple.utils.TimerWrapper: void treatAlarm(int)> ==> <com.csipsimple.utils.TimerWrapper$TimerJob: void <init>(com.csipsimple.utils.TimerWrapper,int)>
VIRTUAL edge: virtualinvoke r1.<com.csipsimple.utils.TimerWrapper$TimerJob: void start()>() in <com.csipsimple.utils.TimerWrapper: void treatAlarm(int)> ==> <com.csipsimple.utils.TimerWrapper$TimerJob: void run()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.utils.ContactsAsyncHelper$1: int sizeOf(android.net.Uri,android.graphics.Bitmap)>($r3, $r4) in <com.csipsimple.utils.ContactsAsyncHelper$1: int sizeOf(java.lang.Object,java.lang.Object)> ==> <com.csipsimple.utils.ContactsAsyncHelper$1: int sizeOf(android.net.Uri,android.graphics.Bitmap)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.BelCentrale: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.BelCentrale: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.BelCentrale: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.wizards.impl.BelCentrale: android.preference.Preference findPreference(java.lang.String)>(r2) in <com.csipsimple.wizards.impl.BelCentrale: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.BelCentrale: void addPreference(android.preference.Preference)>($r6) in <com.csipsimple.wizards.impl.BelCentrale: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void addPreference(android.preference.Preference)>
VIRTUAL edge: z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>($r11) in <com.csipsimple.wizards.impl.BelCentrale: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean startsWith(java.lang.String)>
STATIC edge: r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1) in <com.csipsimple.wizards.impl.BelCentrale: java.lang.String getDomain()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void updateDescriptions()>() in <com.csipsimple.wizards.impl.BelCentrale: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void updateDescriptions()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.BelCentrale: void setStringFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.BelCentrale: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void closeOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchCloseOptionsMenu()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void closeOptionsMenu()> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchCloseOptionsMenu()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchKeyEvent(android.view.KeyEvent)>($r1) in <com.actionbarsherlock.app.SherlockFragmentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchKeyEvent(android.view.KeyEvent)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.view.MenuInflater getMenuInflater()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()> ==> <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.view.MenuInflater getMenuInflater()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void invalidateOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchConfigurationChanged(android.content.res.Configuration)>($r1) in <com.actionbarsherlock.app.SherlockFragmentActivity: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchConfigurationChanged(android.content.res.Configuration)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchDestroy()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchDestroy()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: boolean onMenuOpened(int,android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchMenuOpened(int,android.view.Menu)>($i0, $r1) in <com.actionbarsherlock.app.SherlockFragmentActivity: boolean onMenuOpened(int,android.view.Menu)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchMenuOpened(int,android.view.Menu)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void onPanelClosed(int,android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchPanelClosed(int,android.view.Menu)>($i0, $r1) in <com.actionbarsherlock.app.SherlockFragmentActivity: void onPanelClosed(int,android.view.Menu)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPanelClosed(int,android.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchPause()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPause()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchPostCreate(android.os.Bundle)>($r1) in <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPostCreate(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchPostResume()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchPostResume()>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: void dispatchStop()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchStop()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void onTitleChanged(java.lang.CharSequence,int)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void dispatchTitleChanged(java.lang.CharSequence,int)>($r1, $i0) in <com.actionbarsherlock.app.SherlockFragmentActivity: void onTitleChanged(java.lang.CharSequence,int)> ==> <com.actionbarsherlock.ActionBarSherlock: void dispatchTitleChanged(java.lang.CharSequence,int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void openOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.ActionBarSherlock: boolean dispatchOpenOptionsMenu()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void openOptionsMenu()> ==> <com.actionbarsherlock.ActionBarSherlock: boolean dispatchOpenOptionsMenu()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void requestWindowFeature(long)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(android.view.View)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.ActionBarSherlock: void setContentView(android.view.View)>($r1) in <com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(android.view.View)> ==> <com.actionbarsherlock.ActionBarSherlock: void setContentView(android.view.View)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void setSupportProgress(int)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void setSupportProgressBarIndeterminate(boolean)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void setSupportProgressBarIndeterminateVisibility(boolean)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void setSupportProgressBarVisibility(boolean)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void setSupportSecondaryProgress(int)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void invalidateOptionsMenu()>() in <com.actionbarsherlock.app.SherlockFragmentActivity: void supportInvalidateOptionsMenu()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void invalidateOptionsMenu()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.impl.BaseImplementation: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.BaseImplementation: void markFieldValid(android.preference.Preference)>($r1) in <com.csipsimple.wizards.impl.BaseImplementation: void addPreference(android.preference.Preference)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void markFieldValid(android.preference.Preference)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.BaseImplementation: void markFieldInvalid(android.preference.Preference)>($r1) in <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void markFieldInvalid(android.preference.Preference)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.BaseImplementation: void markFieldValid(android.preference.Preference)>($r1) in <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void markFieldValid(android.preference.Preference)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Generic prefs", $r1) in <com.csipsimple.wizards.impl.BaseImplementation: void hidePreference(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("") in <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.wizards.BasePrefsWizard: void setListFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.BaseImplementation: void setListFieldSummary(java.lang.String)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void setListFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.wizards.BasePrefsWizard: void setPasswordFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.BaseImplementation: void setPasswordFieldSummary(java.lang.String)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void setPasswordFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.wizards.BasePrefsWizard: void setStringFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void setStringFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.impl.Mondotalk$1: void <init>(com.csipsimple.wizards.impl.Mondotalk)> ==> <java.lang.Object: void <init>()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.wizards.impl.Mondotalk: int access$0(com.csipsimple.wizards.impl.Mondotalk)>($r3) in <com.csipsimple.wizards.impl.Mondotalk$1: void onClick(android.view.View)> ==> <com.csipsimple.wizards.impl.Mondotalk: int access$0(com.csipsimple.wizards.impl.Mondotalk)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.CallLogListFragment$2$1: void <init>(com.csipsimple.ui.calllog.CallLogListFragment$2,int,long[])> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.ui.calllog.CallLogListFragment$2: com.csipsimple.ui.calllog.CallLogListFragment access$0(com.csipsimple.ui.calllog.CallLogListFragment$2)>($r3) in <com.csipsimple.ui.calllog.CallLogListFragment$2$1: void run()> ==> <com.csipsimple.ui.calllog.CallLogListFragment$2: com.csipsimple.ui.calllog.CallLogListFragment access$0(com.csipsimple.ui.calllog.CallLogListFragment$2)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.calllog.CallLogListFragment: void viewDetails(int,long[])>($i0, $r1) in <com.csipsimple.ui.calllog.CallLogListFragment$2$1: void run()> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void viewDetails(int,long[])>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.ISipConfiguration$Stub$Proxy: void <init>(android.os.IBinder)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Fayn: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Fayn: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("PCMA/8000/1", "wb", "245") in <com.csipsimple.wizards.impl.Fayn: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.ResourcesCompat: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void <init>(com.actionbarsherlock.widget.ActivityChooserView)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void <init>(com.actionbarsherlock.widget.ActivityChooserView)>($r1) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void <init>(com.actionbarsherlock.widget.ActivityChooserView,com.actionbarsherlock.widget.ActivityChooserView$Callbacks)> ==> <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void <init>(com.actionbarsherlock.widget.ActivityChooserView)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: android.widget.PopupWindow$OnDismissListener access$9(com.actionbarsherlock.widget.ActivityChooserView)>($r1) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void notifyOnDismissListener()> ==> <com.actionbarsherlock.widget.ActivityChooserView: android.widget.PopupWindow$OnDismissListener access$9(com.actionbarsherlock.widget.ActivityChooserView)>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: android.widget.FrameLayout access$5(com.actionbarsherlock.widget.ActivityChooserView)>($r2) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView: android.widget.FrameLayout access$5(com.actionbarsherlock.widget.ActivityChooserView)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.widget.ActivityChooserView: boolean dismissPopup()>() in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView: boolean dismissPopup()>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView)>($r2) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView)>
VIRTUAL edge: $r5 = virtualinvoke $r4.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: android.content.pm.ResolveInfo getDefaultActivity()>() in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: android.content.pm.ResolveInfo getDefaultActivity()>
VIRTUAL edge: $r6 = virtualinvoke $r4.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>() in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>
VIRTUAL edge: $i0 = virtualinvoke $r6.<com.actionbarsherlock.widget.ActivityChooserModel: int getActivityIndex(android.content.pm.ResolveInfo)>($r5) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: int getActivityIndex(android.content.pm.ResolveInfo)>
VIRTUAL edge: $r7 = virtualinvoke $r6.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)>($i0) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)>
STATIC edge: $r8 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: android.content.Context access$4(com.actionbarsherlock.widget.ActivityChooserView)>($r2) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView: android.content.Context access$4(com.actionbarsherlock.widget.ActivityChooserView)>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: android.widget.FrameLayout access$6(com.actionbarsherlock.widget.ActivityChooserView)>($r2) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView: android.widget.FrameLayout access$6(com.actionbarsherlock.widget.ActivityChooserView)>
STATIC edge: staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: void access$7(com.actionbarsherlock.widget.ActivityChooserView,boolean)>($r2, 0) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView: void access$7(com.actionbarsherlock.widget.ActivityChooserView,boolean)>
STATIC edge: $i0 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: int access$8(com.actionbarsherlock.widget.ActivityChooserView)>($r9) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView: int access$8(com.actionbarsherlock.widget.ActivityChooserView)>
STATIC edge: staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: void access$2(com.actionbarsherlock.widget.ActivityChooserView,int)>($r2, $i0) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView: void access$2(com.actionbarsherlock.widget.ActivityChooserView,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void notifyOnDismissListener()>() in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onDismiss()> ==> <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void notifyOnDismissListener()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.view.ActionProvider: void subUiVisibilityChanged(boolean)>(0) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onDismiss()> ==> <com.actionbarsherlock.view.ActionProvider: void subUiVisibilityChanged(boolean)>
VIRTUAL edge: $i2 = virtualinvoke r4.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getItemViewType(int)>($i1) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getItemViewType(int)>
STATIC edge: staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: void access$2(com.actionbarsherlock.widget.ActivityChooserView,int)>($r6, 2147483647) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.widget.ActivityChooserView: void access$2(com.actionbarsherlock.widget.ActivityChooserView,int)>
VIRTUAL edge: virtualinvoke $r6.<com.actionbarsherlock.widget.ActivityChooserView: boolean dismissPopup()>() in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.widget.ActivityChooserView: boolean dismissPopup()>
STATIC edge: $z0 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: boolean access$3(com.actionbarsherlock.widget.ActivityChooserView)>($r6) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.widget.ActivityChooserView: boolean access$3(com.actionbarsherlock.widget.ActivityChooserView)>
STATIC edge: r4 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView)>($r6) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView)>
VIRTUAL edge: $r7 = virtualinvoke r4.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>() in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.widget.ActivityChooserModel: void setDefaultActivity(int)>($i1) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void setDefaultActivity(int)>
VIRTUAL edge: $z0 = virtualinvoke r4.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: boolean getShowDefaultActivity()>() in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: boolean getShowDefaultActivity()>
VIRTUAL edge: $r8 = virtualinvoke $r7.<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)>($i1) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)>
STATIC edge: $r9 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: android.content.Context access$4(com.actionbarsherlock.widget.ActivityChooserView)>($r6) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.widget.ActivityChooserView: android.content.Context access$4(com.actionbarsherlock.widget.ActivityChooserView)>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: android.widget.FrameLayout access$5(com.actionbarsherlock.widget.ActivityChooserView)>($r2) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: boolean onLongClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView: android.widget.FrameLayout access$5(com.actionbarsherlock.widget.ActivityChooserView)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView)>($r2) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: boolean onLongClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView)>
VIRTUAL edge: $i0 = virtualinvoke $r4.<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getCount()>() in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: boolean onLongClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getCount()>
STATIC edge: staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: void access$7(com.actionbarsherlock.widget.ActivityChooserView,boolean)>($r2, 1) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: boolean onLongClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView: void access$7(com.actionbarsherlock.widget.ActivityChooserView,boolean)>
STATIC edge: $i0 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: int access$8(com.actionbarsherlock.widget.ActivityChooserView)>($r5) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: boolean onLongClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView: int access$8(com.actionbarsherlock.widget.ActivityChooserView)>
STATIC edge: staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: void access$2(com.actionbarsherlock.widget.ActivityChooserView,int)>($r2, $i0) in <com.actionbarsherlock.widget.ActivityChooserView$Callbacks: boolean onLongClick(android.view.View)> ==> <com.actionbarsherlock.widget.ActivityChooserView: void access$2(com.actionbarsherlock.widget.ActivityChooserView,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.favorites.PresenceStatusSpinner$1: void <init>(com.csipsimple.ui.favorites.PresenceStatusSpinner)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)>($r2) in <com.csipsimple.ui.favorites.PresenceStatusSpinner$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)>
STATIC edge: staticinvoke <com.csipsimple.ui.favorites.PresenceStatusSpinner: void access$0(com.csipsimple.ui.favorites.PresenceStatusSpinner,com.csipsimple.api.ISipService)>($r3, $r4) in <com.csipsimple.ui.favorites.PresenceStatusSpinner$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner: void access$0(com.csipsimple.ui.favorites.PresenceStatusSpinner,com.csipsimple.api.ISipService)>
STATIC edge: staticinvoke <com.csipsimple.ui.favorites.PresenceStatusSpinner: void access$0(com.csipsimple.ui.favorites.PresenceStatusSpinner,com.csipsimple.api.ISipService)>($r2, null) in <com.csipsimple.ui.favorites.PresenceStatusSpinner$1: void onServiceDisconnected(android.content.ComponentName)> ==> <com.csipsimple.ui.favorites.PresenceStatusSpinner: void access$0(com.csipsimple.ui.favorites.PresenceStatusSpinner,com.csipsimple.api.ISipService)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>(r0) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void loadStaticMethods()>() in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void loadStaticMethods()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>(r0) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void loadStaticMethods()>() in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void loadStaticMethods()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>(r0) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void loadStaticMethods()>() in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void loadStaticMethods()>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class "Lcom/actionbarsherlock/internal/nineoldandroids/view/NineViewGroup;", "getAlpha", $r2) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void loadStaticMethods()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
VIRTUAL edge: $f0 = virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getAlpha()>() in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: float getSupportAlpha()> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getAlpha()>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r2, r0, $r3) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: float getSupportAlpha()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
VIRTUAL edge: $f0 = virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getTranslationX()>() in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: float getSupportTranslationX()> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getTranslationX()>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r2, r0, $r3) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: float getSupportTranslationX()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
VIRTUAL edge: $f0 = virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getTranslationY()>() in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: float getSupportTranslationY()> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getTranslationY()>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r2, r0, $r3) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: float getSupportTranslationY()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setAlpha(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setSupportAlpha(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setAlpha(float)>
STATIC edge: $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setSupportAlpha(float)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r3, r0, $r4) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setSupportAlpha(float)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setTranslationX(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setSupportTranslationX(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setTranslationX(float)>
STATIC edge: $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setSupportTranslationX(float)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r3, r0, $r4) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setSupportTranslationX(float)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setTranslationY(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setSupportTranslationY(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setTranslationY(float)>
STATIC edge: $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setSupportTranslationY(float)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r3, r0, $r4) in <com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setSupportTranslationY(float)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
SPECIAL edge: $r1 = specialinvoke $r0.<com.csipsimple.utils.NightlyUpdater: java.io.File getCachedFile()>() in <com.csipsimple.utils.NightlyUpdater: java.io.File access$1(com.csipsimple.utils.NightlyUpdater)> ==> <com.csipsimple.utils.NightlyUpdater: java.io.File getCachedFile()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.widgets.AccountWidgetConfigure: java.lang.String getPrefsKey(int)>($i1) in <com.csipsimple.widgets.AccountWidgetConfigure: void onAccountClicked(long)> ==> <com.csipsimple.widgets.AccountWidgetConfigure: java.lang.String getPrefsKey(int)>
STATIC edge: staticinvoke <com.csipsimple.widgets.AccountWidgetProvider: void updateWidget(android.content.Context)>(r0) in <com.csipsimple.widgets.AccountWidgetConfigure: void onAccountClicked(long)> ==> <com.csipsimple.widgets.AccountWidgetProvider: void updateWidget(android.content.Context)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("Widget config", "Invalid widget ID here...") in <com.csipsimple.widgets.AccountWidgetConfigure: void onAccountClicked(long)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void update()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void bindTab(com.actionbarsherlock.app.ActionBar$Tab)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void update()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void update()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void init(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void update()>
SPECIAL edge: specialinvoke r3.<com.actionbarsherlock.internal.widget.CapitalizingTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r9, null, $i0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void update()> ==> <com.actionbarsherlock.internal.widget.CapitalizingTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.internal.widget.CapitalizingTextView: void setTextCompat(java.lang.CharSequence)>($r8) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void update()> ==> <com.actionbarsherlock.internal.widget.CapitalizingTextView: void setTextCompat(java.lang.CharSequence)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: void <init>(android.content.Context)>($r1) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void <init>(com.actionbarsherlock.internal.widget.IcsAbsSpinner)>(r0) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void <init>(com.actionbarsherlock.internal.widget.IcsAbsSpinner)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void initAbsSpinner()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void initAbsSpinner()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsAdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, $i0) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void <init>(com.actionbarsherlock.internal.widget.IcsAbsSpinner)>(r0) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void <init>(com.actionbarsherlock.internal.widget.IcsAbsSpinner)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void initAbsSpinner()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void initAbsSpinner()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setFocusable(boolean)>(1) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void initAbsSpinner()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void setFocusable(boolean)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.widget.SpinnerAdapter getAdapter()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.widget.Adapter getAdapter()> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.widget.SpinnerAdapter getAdapter()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void handleDataChanged()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void handleDataChanged()>
VIRTUAL edge: $i7 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: int getSelectedItemPosition()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: int getSelectedItemPosition()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: android.view.View get(int)>($i7) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: android.view.View get(int)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void put(int,android.view.View)>($i7, r5) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void put(int,android.view.View)>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
VIRTUAL edge: $i9 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: int getChildHeight(android.view.View)>(r5) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: int getChildHeight(android.view.View)>
VIRTUAL edge: i10 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: int getChildWidth(android.view.View)>(r5) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: int getChildWidth(android.view.View)>
STATIC edge: $r7 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void requestLayout()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void onRestoreInstanceState(android.os.Parcelable)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void requestLayout()>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState: void <init>(android.os.Parcelable)>($r2) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.os.Parcelable onSaveInstanceState()> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState: void <init>(android.os.Parcelable)>
VIRTUAL edge: $l0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: long getSelectedItemId()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.os.Parcelable onSaveInstanceState()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: long getSelectedItemId()>
VIRTUAL edge: $i2 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: int getSelectedItemPosition()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.os.Parcelable onSaveInstanceState()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: int getSelectedItemPosition()>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void put(int,android.view.View)>(i0, $r2) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void recycleAllViews()> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void put(int,android.view.View)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelectedPositionInt(int)>(-1) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void resetList()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void setSelectedPositionInt(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setNextSelectedPositionInt(int)>(-1) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void resetList()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void setNextSelectedPositionInt(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setAdapter(android.widget.SpinnerAdapter)>($r2) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setAdapter(android.widget.Adapter)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setAdapter(android.widget.SpinnerAdapter)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void resetList()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setAdapter(android.widget.SpinnerAdapter)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void resetList()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void checkFocus()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setAdapter(android.widget.SpinnerAdapter)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void checkFocus()>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver: void <init>(com.actionbarsherlock.internal.widget.IcsAdapterView)>(r0) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setAdapter(android.widget.SpinnerAdapter)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver: void <init>(com.actionbarsherlock.internal.widget.IcsAdapterView)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelectedPositionInt(int)>(b1) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setAdapter(android.widget.SpinnerAdapter)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void setSelectedPositionInt(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setNextSelectedPositionInt(int)>(b1) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setAdapter(android.widget.SpinnerAdapter)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void setNextSelectedPositionInt(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void checkSelectionChanged()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setAdapter(android.widget.SpinnerAdapter)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void checkSelectionChanged()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void requestLayout()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setAdapter(android.widget.SpinnerAdapter)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void requestLayout()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setNextSelectedPositionInt(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelection(int)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void setNextSelectedPositionInt(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void requestLayout()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelection(int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void requestLayout()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelectionInt(int,boolean)>($i0, $z0) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelection(int,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelectionInt(int,boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setNextSelectedPositionInt(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelectionInt(int,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void setNextSelectedPositionInt(int)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>(r0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void loadStaticMethods()>() in <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void loadStaticMethods()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class "Lcom/actionbarsherlock/internal/nineoldandroids/widget/NineHorizontalScrollView;", "getAlpha", $r3) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void loadStaticMethods()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
VIRTUAL edge: $f0 = virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getAlpha()>() in <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: float getSupportAlpha()> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getAlpha()>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r2, r0, $r3) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: float getSupportAlpha()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setAlpha(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void setSupportAlpha(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setAlpha(float)>
STATIC edge: $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void setSupportAlpha(float)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r3, r0, $r4) in <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void setSupportAlpha(float)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.VoipPlanet: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.VoipPlanet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.VoipPlanet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("stun_server", "stun.voipplanet.nl:3478") in <com.csipsimple.wizards.impl.VoipPlanet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Rapidvox: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r1) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isShowing()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver: void onChanged()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isShowing()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver: void onChanged()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void dismiss()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver: void onInvalidated()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void dismiss()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)>($r2, $r3, 0, $i0) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void <init>(com.actionbarsherlock.internal.widget.IcsSpinner,android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void setAnchorView(android.view.View)>($r1) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void <init>(com.actionbarsherlock.internal.widget.IcsSpinner,android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setAnchorView(android.view.View)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void setModal(boolean)>(1) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void <init>(com.actionbarsherlock.internal.widget.IcsSpinner,android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setModal(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void setPromptPosition(int)>(0) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void <init>(com.actionbarsherlock.internal.widget.IcsSpinner,android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setPromptPosition(int)>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1: void <init>(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup)>(r0) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void <init>(com.actionbarsherlock.internal.widget.IcsSpinner,android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1: void <init>(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>($r4) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void <init>(com.actionbarsherlock.internal.widget.IcsSpinner,android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>($r4) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void <init>(com.actionbarsherlock.internal.widget.IcsSpinner,android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setAdapter(android.widget.ListAdapter)>($r1) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void setAdapter(android.widget.ListAdapter)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setAdapter(android.widget.ListAdapter)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsSpinner: int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)>($r3, $r5) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void show()> ==> <com.actionbarsherlock.internal.widget.IcsSpinner: int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void setContentWidth(int)>($i1) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void show()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setContentWidth(int)>
STATIC edge: $r6 = staticinvoke <com.actionbarsherlock.internal.widget.IcsSpinner: android.graphics.Rect access$0(com.actionbarsherlock.internal.widget.IcsSpinner)>($r1) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void show()> ==> <com.actionbarsherlock.internal.widget.IcsSpinner: android.graphics.Rect access$0(com.actionbarsherlock.internal.widget.IcsSpinner)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void setHorizontalOffset(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void show()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setHorizontalOffset(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void setInputMethodMode(int)>(2) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void show()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setInputMethodMode(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()>() in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void show()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()>
VIRTUAL edge: $r7 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: android.widget.ListView getListView()>() in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void show()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.widget.ListView getListView()>
VIRTUAL edge: $i0 = virtualinvoke $r4.<com.actionbarsherlock.internal.widget.IcsSpinner: int getSelectedItemPosition()>() in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void show()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: int getSelectedItemPosition()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsSpinner: void setSelection(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void show()> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelection(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$StopRunnable: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService: boolean stopSipStack()>() in <com.csipsimple.service.SipService$StopRunnable: void doRun()> ==> <com.csipsimple.service.SipService: boolean stopSipStack()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void <init>(com.actionbarsherlock.internal.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void actionFormatChanged()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean collapseActionView()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean expandActionView()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.res.Resources getResources()>() in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.res.Resources getResources()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isQwertyMode()>() in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getShortcut()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isQwertyMode()>
VIRTUAL edge: $c0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getShortcut()>() in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.String getShortcutLabel()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getShortcut()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()>() in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>() in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>
VIRTUAL edge: $r4 = virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu()>() in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean invoke()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>($r4, r0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean invoke()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: $r7 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.Context getContext()>() in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean invoke()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.Context getContext()>
VIRTUAL edge: $z0 = virtualinvoke $r8.<com.actionbarsherlock.view.ActionProvider: boolean onPerformDefaultAction()>() in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean invoke()> ==> <com.actionbarsherlock.view.ActionProvider: boolean onPerformDefaultAction()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.Context getContext()>() in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setActionView(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.Context getContext()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setActionView(android.view.View)>($r5) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setActionView(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setActionView(android.view.View)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setActionView(android.view.View)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setActionViewExpanded(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setCheckable(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setChecked(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setCheckedInt(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setChecked(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setCheckedInt(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setCheckedInt(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setEnabled(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setIcon(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setNumericShortcut(char)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setShortcut(char,char)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setShowAsAction(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setShowAsAction(int)>($i0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setShowAsAction(int)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>() in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.Context getContext()>() in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setTitle(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.Context getContext()>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence)>($r3) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setTitle(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean setVisibleInt(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setVisible(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean setVisibleInt(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemVisibleChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setVisible(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemVisibleChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean getOptionalIconsVisible()>() in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean shouldShowIcon()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean getOptionalIconsVisible()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isShortcutsVisible()>() in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean shouldShowShortcut()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isShortcutsVisible()>
VIRTUAL edge: $c0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getShortcut()>() in <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean shouldShowShortcut()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getShortcut()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable: void <init>(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean)> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.widget.IcsProgressBar: void access$0(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean,boolean)>($r1, $i0, $i1, $z0, 1) in <com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable: void run()> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void access$0(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean,boolean)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.widget.IcsProgressBar: void access$1(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable)>($r1, r0) in <com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable: void run()> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void access$1(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.impl.Local$1: void <init>()>() in <com.csipsimple.wizards.impl.Local: void <clinit>()> ==> <com.csipsimple.wizards.impl.Local$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.BaseImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Local: void <init>()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.wizards.impl.Local: android.preference.Preference findPreference(java.lang.String)>("display_name") in <com.csipsimple.wizards.impl.Local: void bindFields()> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Local: void hidePreference(java.lang.String,java.lang.String)>(null, "caller_id") in <com.csipsimple.wizards.impl.Local: void bindFields()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void hidePreference(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Local: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Local: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Local: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.Local: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Local: void bindFields()>() in <com.csipsimple.wizards.impl.Local: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Local: void bindFields()>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.Local: java.lang.String getLocalIpAddresses()>() in <com.csipsimple.wizards.impl.Local: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Local: java.lang.String getLocalIpAddresses()>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toString()>() in <com.csipsimple.wizards.impl.Local: java.lang.String getLocalIpAddresses()> ==> <java.lang.String: java.lang.String toString()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Local W", "Impossible to get ip address", r2) in <com.csipsimple.wizards.impl.Local: java.lang.String getLocalIpAddresses()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Local: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("network_udp_transport_port", "5060") in <com.csipsimple.wizards.impl.Local: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Local: void setStringFieldSummary(java.lang.String)>("display_name") in <com.csipsimple.wizards.impl.Local: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Sapo: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.Sapo: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) in <com.csipsimple.wizards.impl.Sapo: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.Sapo: java.lang.String getText(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Sapo: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Sapo: boolean canTcp()>() in <com.csipsimple.wizards.impl.Sapo: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: boolean canTcp()>
STATIC edge: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b0) in <com.csipsimple.wizards.impl.Sapo: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Sapo: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Sapo: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Sapo: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.incall.InCallMediaControl: void updateUIFromMedia()>() in <com.csipsimple.ui.incall.InCallMediaControl: void access$2(com.csipsimple.ui.incall.InCallMediaControl)> ==> <com.csipsimple.ui.incall.InCallMediaControl: void updateUIFromMedia()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Float getPreferenceFloatValue(android.content.Context,java.lang.String)>(r0, $r4) in <com.csipsimple.ui.incall.InCallMediaControl: void updateUIFromMedia()> ==> <com.csipsimple.api.SipConfigManager: java.lang.Float getPreferenceFloatValue(android.content.Context,java.lang.String)>
STATIC edge: $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.csipsimple.ui.incall.InCallMediaControl: void updateUIFromMedia()> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: $r8 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>(r0, "echo_cancellation") in <com.csipsimple.ui.incall.InCallMediaControl: void updateUIFromMedia()> ==> <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("inCallMediaCtrl", "Sip service not avail for request ", r1) in <com.csipsimple.ui.incall.InCallMediaControl: void updateUIFromMedia()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>(r0, "echo_cancellation", $z0) in <com.csipsimple.ui.incall.InCallMediaControl: void onCheckedChanged(android.widget.CompoundButton,boolean)> ==> <com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.InCallMediaControl: void delayedQuit(int)>(3000) in <com.csipsimple.ui.incall.InCallMediaControl: void onCheckedChanged(android.widget.CompoundButton,boolean)> ==> <com.csipsimple.ui.incall.InCallMediaControl: void delayedQuit(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("inCallMediaCtrl", "Impossible to set mic/speaker level", r2) in <com.csipsimple.ui.incall.InCallMediaControl: void onCheckedChanged(android.widget.CompoundButton,boolean)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("inCallMediaCtrl", "Progress has changed") in <com.csipsimple.ui.incall.InCallMediaControl: void onProgressChanged(android.widget.SeekBar,int,boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.csipsimple.ui.incall.InCallMediaControl: void onProgressChanged(android.widget.SeekBar,int,boolean)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: staticinvoke <com.csipsimple.api.SipConfigManager: void setPreferenceFloatValue(android.content.Context,java.lang.String,java.lang.Float)>(r0, r6, $r4) in <com.csipsimple.ui.incall.InCallMediaControl: void onProgressChanged(android.widget.SeekBar,int,boolean)> ==> <com.csipsimple.api.SipConfigManager: void setPreferenceFloatValue(android.content.Context,java.lang.String,java.lang.Float)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.InCallMediaControl: void delayedQuit(int)>(3000) in <com.csipsimple.ui.incall.InCallMediaControl: void onProgressChanged(android.widget.SeekBar,int,boolean)> ==> <com.csipsimple.ui.incall.InCallMediaControl: void delayedQuit(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("inCallMediaCtrl", "Impossible to set mic/speaker level", r2) in <com.csipsimple.ui.incall.InCallMediaControl: void onProgressChanged(android.widget.SeekBar,int,boolean)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r10 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>($r9, $r1) in <com.csipsimple.utils.CallHandlerPlugin: void fillWith(java.lang.String,android.os.Bundle)> ==> <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.api.SipProfile: void <init>()>() in <com.csipsimple.utils.CallHandlerPlugin: com.csipsimple.api.SipProfile getFakeProfile()> ==> <com.csipsimple.api.SipProfile: void <init>()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131427920) in <com.csipsimple.wizards.impl.SimpleImplementation$1: void <init>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R$style: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Sip2Sip: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Sip2Sip: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Sip2Sip: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipMessage: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,java.lang.String)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.api.SipMessage: android.content.ContentValues getContentValues()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.api.SipMessage: android.content.ContentValues getContentValues()> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.api.SipMessage: android.content.ContentValues getContentValues()> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
VIRTUAL edge: $i1 = virtualinvoke $r2.<java.lang.String: int length()>() in <com.csipsimple.api.SipMessage: java.lang.String getErrorContent()> ==> <java.lang.String: int length()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1) in <com.csipsimple.api.SipMessage: java.lang.String getRemoteNumber()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1) in <com.csipsimple.api.SipMessage: boolean isOutgoing()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void: void <init>()>
VIRTUAL edge: $r23 = virtualinvoke $r11.<java.lang.String: java.lang.String[] split(java.lang.String)>("  ") in <com.csipsimple.service.Downloader: void onHandleIntent(android.content.Intent)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.CallLogListItemViews: void <init>(com.csipsimple.widgets.contactbadge.QuickContactBadge,android.view.View,android.widget.ImageView,android.view.View,com.csipsimple.ui.calllog.PhoneCallDetailsViews,android.view.View)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r6 = staticinvoke <com.csipsimple.ui.calllog.PhoneCallDetailsViews: com.csipsimple.ui.calllog.PhoneCallDetailsViews fromView(android.view.View)>($r0) in <com.csipsimple.ui.calllog.CallLogListItemViews: com.csipsimple.ui.calllog.CallLogListItemViews fromView(android.view.View)> ==> <com.csipsimple.ui.calllog.PhoneCallDetailsViews: com.csipsimple.ui.calllog.PhoneCallDetailsViews fromView(android.view.View)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.ui.calllog.CallLogListItemViews: void <init>(com.csipsimple.widgets.contactbadge.QuickContactBadge,android.view.View,android.widget.ImageView,android.view.View,com.csipsimple.ui.calllog.PhoneCallDetailsViews,android.view.View)>($r3, $r2, $r5, $r4, $r6, $r0) in <com.csipsimple.ui.calllog.CallLogListItemViews: com.csipsimple.ui.calllog.CallLogListItemViews fromView(android.view.View)> ==> <com.csipsimple.ui.calllog.CallLogListItemViews: void <init>(com.csipsimple.widgets.contactbadge.QuickContactBadge,android.view.View,android.widget.ImageView,android.view.View,com.csipsimple.ui.calllog.PhoneCallDetailsViews,android.view.View)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsView: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()>() in <com.csipsimple.wizards.impl.MundoR: void <init>()> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.MundoR: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.MundoR: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.MundoR: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r4 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getSipDomain()>() in <com.csipsimple.wizards.impl.MundoR: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: java.lang.String getSipDomain()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.MundoR: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.MundoR: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.MundoR: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.MundoR: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Haloo: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Haloo: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Phonzo: void <init>()> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Phonzo: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Phonzo: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Phonzo: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.Phonzo: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Phonzo: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Phonzo: void hidePreference(java.lang.String,java.lang.String)>(null, $r2) in <com.csipsimple.wizards.impl.Phonzo: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void hidePreference(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Phonzo: void setStringFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Phonzo: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Phonzo: void setPasswordFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Phonzo: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setPasswordFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1: void <init>(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: com.actionbarsherlock.internal.widget.IcsSpinner access$0(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup)>($r4) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: com.actionbarsherlock.internal.widget.IcsSpinner access$0(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.IcsSpinner: void setSelection(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelection(int)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void dismiss()>() in <com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void dismiss()>
STATIC edge: $r6 = staticinvoke <com.csipsimple.widgets.ShortcutWidgetConfigure: java.lang.String getPrefsKey(int)>($i0) in <com.csipsimple.widgets.ShortcutWidgetConfigure: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <com.csipsimple.widgets.ShortcutWidgetConfigure: java.lang.String getPrefsKey(int)>
STATIC edge: staticinvoke <com.csipsimple.widgets.ShortcutWidgetProvider: void updateWidget(android.content.Context)>(r0) in <com.csipsimple.widgets.ShortcutWidgetConfigure: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <com.csipsimple.widgets.ShortcutWidgetProvider: void updateWidget(android.content.Context)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("ShortcutWidgetConfigure", "Invalid widget ID here...") in <com.csipsimple.widgets.ShortcutWidgetConfigure: void onListItemClick(android.widget.ListView,android.view.View,int,long)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.widgets.ScreenLocker$ShowHideHandler: void <init>(com.csipsimple.widgets.ScreenLocker)>(r0) in <com.csipsimple.widgets.ScreenLocker: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.ScreenLocker$ShowHideHandler: void <init>(com.csipsimple.widgets.ScreenLocker)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.ScreenLocker: void setOnTouchListener(android.view.View$OnTouchListener)>(r0) in <com.csipsimple.widgets.ScreenLocker: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.ScreenLocker: boolean onTouch(android.view.View,android.view.MotionEvent)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.widgets.SlidingTab: void resetView()>() in <com.csipsimple.widgets.ScreenLocker: void reset()> ==> <com.csipsimple.widgets.SlidingTab: void resetView()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.widgets.ScreenLocker$LockTimerTask: void <init>(com.csipsimple.widgets.ScreenLocker,com.csipsimple.widgets.ScreenLocker$LockTimerTask)>(r0, null) in <com.csipsimple.widgets.ScreenLocker: void delayedLock(int)> ==> <com.csipsimple.widgets.ScreenLocker$LockTimerTask: void <init>(com.csipsimple.widgets.ScreenLocker,com.csipsimple.widgets.ScreenLocker$LockTimerTask)>
VIRTUAL edge: virtualinvoke $r1.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r2, $l1) in <com.csipsimple.widgets.ScreenLocker: void delayedLock(int)> ==> <java.util.Timer: void schedule(java.util.TimerTask,long)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.ScreenLocker: void setVisibility(int)>(8) in <com.csipsimple.widgets.ScreenLocker: void hide()> ==> <com.csipsimple.widgets.ScreenLocker: void setVisibility(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.ScreenLocker: void clearLockTasks()>() in <com.csipsimple.widgets.ScreenLocker: void hide()> ==> <com.csipsimple.widgets.ScreenLocker: void clearLockTasks()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.ScreenLocker: void reset()>() in <com.csipsimple.widgets.ScreenLocker: void hide()> ==> <com.csipsimple.widgets.ScreenLocker: void reset()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.ScreenLocker: void updateTabLayout(int,int,int,int)>($i0, $i1, $i2, $i3) in <com.csipsimple.widgets.ScreenLocker: void onLayout(boolean,int,int,int,int)> ==> <com.csipsimple.widgets.ScreenLocker: void updateTabLayout(int,int,int,int)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.widgets.SlidingTab: void <init>(android.content.Context)>($r3) in <com.csipsimple.widgets.ScreenLocker: void setVisibility(int)> ==> <com.csipsimple.widgets.SlidingTab: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.widgets.SlidingTab: void setLeftHintText(int)>(2131427400) in <com.csipsimple.widgets.ScreenLocker: void setVisibility(int)> ==> <com.csipsimple.widgets.SlidingTab: void setLeftHintText(int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.widgets.SlidingTab: void setLeftTabResources(int,int,int,int)>(2130837684, 2130837855, 2130837839, 2130837847) in <com.csipsimple.widgets.ScreenLocker: void setVisibility(int)> ==> <com.csipsimple.widgets.SlidingTab: void setLeftTabResources(int,int,int,int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.widgets.SlidingTab: void setRightHintText(int)>(2131427386) in <com.csipsimple.widgets.ScreenLocker: void setVisibility(int)> ==> <com.csipsimple.widgets.SlidingTab: void setRightHintText(int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.widgets.SlidingTab: void setOnLeftRightListener(com.csipsimple.widgets.IOnLeftRightChoice)>($r4) in <com.csipsimple.widgets.ScreenLocker: void setVisibility(int)> ==> <com.csipsimple.widgets.SlidingTab: void setOnLeftRightListener(com.csipsimple.widgets.IOnLeftRightChoice)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.ScreenLocker: void updateTabLayout(int,int,int,int)>($i0, $i1, $i2, $i3) in <com.csipsimple.widgets.ScreenLocker: void setVisibility(int)> ==> <com.csipsimple.widgets.ScreenLocker: void updateTabLayout(int,int,int,int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.ScreenLocker: void setVisibility(int)>(0) in <com.csipsimple.widgets.ScreenLocker: void show()> ==> <com.csipsimple.widgets.ScreenLocker: void setVisibility(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.ScreenLocker: void clearLockTasks()>() in <com.csipsimple.widgets.ScreenLocker: void show()> ==> <com.csipsimple.widgets.ScreenLocker: void clearLockTasks()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.ScreenLocker: void clearLockTasks()>() in <com.csipsimple.widgets.ScreenLocker: void tearDown()> ==> <com.csipsimple.widgets.ScreenLocker: void clearLockTasks()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R$dimen: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.incall.AccelerometerListener: void onSensorEvent(double,double,double)>($d0, $d1, $d2) in <com.csipsimple.ui.incall.AccelerometerListener: void access$0(com.csipsimple.ui.incall.AccelerometerListener,double,double,double)> ==> <com.csipsimple.ui.incall.AccelerometerListener: void onSensorEvent(double,double,double)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.AccelerometerListener: void setOrientation(int)>($b0) in <com.csipsimple.ui.incall.AccelerometerListener: void onSensorEvent(double,double,double)> ==> <com.csipsimple.ui.incall.AccelerometerListener: void setOrientation(int)>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131427920) in <com.csipsimple.wizards.impl.Expert$1: void <init>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.csipsimple.ui.incall.InCallCard$2: void <init>(com.csipsimple.ui.incall.InCallCard)> ==> <java.lang.Thread: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.ui.incall.InCallCard: java.lang.String access$7(com.csipsimple.ui.incall.InCallCard)>($r2) in <com.csipsimple.ui.incall.InCallCard$2: void run()> ==> <com.csipsimple.ui.incall.InCallCard: java.lang.String access$7(com.csipsimple.ui.incall.InCallCard)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>($r3, $r4) in <com.csipsimple.ui.incall.InCallCard$2: void run()> ==> <com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.ui.incall.InCallCard$LoadCallerInfoMessage: void <init>(com.csipsimple.ui.incall.InCallCard,com.csipsimple.ui.incall.InCallCard,com.csipsimple.models.CallerInfo)>($r2, $r6, $r5) in <com.csipsimple.ui.incall.InCallCard$2: void run()> ==> <com.csipsimple.ui.incall.InCallCard$LoadCallerInfoMessage: void <init>(com.csipsimple.ui.incall.InCallCard,com.csipsimple.ui.incall.InCallCard,com.csipsimple.models.CallerInfo)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.ui.incall.InCallCard: android.os.Handler access$8()>() in <com.csipsimple.ui.incall.InCallCard$2: void run()> ==> <com.csipsimple.ui.incall.InCallCard: android.os.Handler access$8()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Tecobu: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Tecobu: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.webrtc.videoengine.camera.CameraUtilsWrapper: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(9) in <org.webrtc.videoengine.camera.CameraUtilsWrapper: org.webrtc.videoengine.camera.CameraUtilsWrapper getInstance()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("org.webrtc.videoengine.camera.CameraUtils") in <org.webrtc.videoengine.camera.CameraUtilsWrapper: org.webrtc.videoengine.camera.CameraUtilsWrapper getInstance()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3) in <org.webrtc.videoengine.camera.CameraUtilsWrapper: org.webrtc.videoengine.camera.CameraUtilsWrapper getInstance()> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.incall.InCallCard$1: void <init>(com.csipsimple.ui.incall.InCallCard)> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallCard", $r3) in <com.csipsimple.ui.incall.InCallCard$1: void run()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $f4 = staticinvoke <com.csipsimple.ui.incall.InCallCard: float access$0()>() in <com.csipsimple.ui.incall.InCallCard$1: void run()> ==> <com.csipsimple.ui.incall.InCallCard: float access$0()>
STATIC edge: f2 = staticinvoke <com.csipsimple.ui.incall.InCallCard: float access$2()>() in <com.csipsimple.ui.incall.InCallCard$1: void run()> ==> <com.csipsimple.ui.incall.InCallCard: float access$2()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.ui.incall.InCallCard: boolean access$3(com.csipsimple.ui.incall.InCallCard)>($r1) in <com.csipsimple.ui.incall.InCallCard$1: void run()> ==> <com.csipsimple.ui.incall.InCallCard: boolean access$3(com.csipsimple.ui.incall.InCallCard)>
STATIC edge: staticinvoke <com.csipsimple.ui.incall.InCallCard: void access$4(com.csipsimple.ui.incall.InCallCard)>($r1) in <com.csipsimple.ui.incall.InCallCard$1: void run()> ==> <com.csipsimple.ui.incall.InCallCard: void access$4(com.csipsimple.ui.incall.InCallCard)>
STATIC edge: $f4 = staticinvoke <com.csipsimple.ui.incall.InCallCard: float access$1()>() in <com.csipsimple.ui.incall.InCallCard$1: void run()> ==> <com.csipsimple.ui.incall.InCallCard: float access$1()>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int,int)>("PJSUA_DESTROY_NO_RX_MSG", 0, $i0) in <org.pjsip.pjsua.pjsua_destroy_flag: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_destroy_flag$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_destroy_flag$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_destroy_flag$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_destroy_flag$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_destroy_flag$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_destroy_flag$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_destroy_flag)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_destroy_flag)> ==> <org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_destroy_flag$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_destroy_flag)> ==> <org.pjsip.pjsua.pjsua_destroy_flag$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsua_destroy_flag: org.pjsip.pjsua.pjsua_destroy_flag swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_stun_use$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: void access$12(com.actionbarsherlock.widget.ActivityChooserView)>($r1) in <com.actionbarsherlock.widget.ActivityChooserView$3: void onChanged()> ==> <com.actionbarsherlock.widget.ActivityChooserView: void access$12(com.actionbarsherlock.widget.ActivityChooserView)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.ActionBarSherlock: void <init>(android.app.Activity,int)>($r1, $i0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void <init>(android.app.Activity,int)> ==> <com.actionbarsherlock.ActionBarSherlock: void <init>(android.app.Activity,int)>
STATIC edge: $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: java.lang.String cleanActivityName(java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean requestFeature(int)>(1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: android.view.ViewGroup generateLayout()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean requestFeature(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean hasFeature(int)>(1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: android.view.ViewGroup generateLayout()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean hasFeature(int)>
SPECIAL edge: specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>("Couldn\'t find content container view") in <com.actionbarsherlock.internal.ActionBarSherlockCompat: android.view.ViewGroup generateLayout()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r13.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setIndeterminate(boolean)>(1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: android.view.ViewGroup generateLayout()> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setIndeterminate(boolean)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setVisibility(int)>(4) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.internal.widget.IcsProgressBar getCircularProgressBar(boolean)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setVisibility(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.internal.widget.IcsProgressBar getHorizontalProgressBar(boolean)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setVisibility(int)>(4) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.internal.widget.IcsProgressBar getHorizontalProgressBar(boolean)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setVisibility(int)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setVisibility(int)>(4) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void hideProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setVisibility(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean hasFeature(int)>(8) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean hasFeature(int)>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.app.ActionBarImpl: void <init>(android.app.Activity,int)>($r3, $i0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void <init>(android.app.Activity,int)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.ActionBarView: void setWindowTitle(java.lang.CharSequence)>($r5) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setWindowTitle(java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r8.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>($r9) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean initializePanelMenu()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean initializePanelMenu()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean initializePanelMenu()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean initializePanelMenu()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean initializePanelMenu()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean initializePanelMenu()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean onMenuItemClick(android.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean initializePanelMenu()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean initializePanelMenu()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: android.view.ViewGroup generateLayout()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: android.view.ViewGroup generateLayout()>
VIRTUAL edge: z0 = virtualinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean hasFeature(int)>(1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean hasFeature(int)>
VIRTUAL edge: virtualinvoke $r11.<com.actionbarsherlock.internal.widget.ActionBarView: void setWindowCallback(com.actionbarsherlock.view.Window$Callback)>(r0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setWindowCallback(com.actionbarsherlock.view.Window$Callback)>
VIRTUAL edge: $r10 = virtualinvoke $r11.<com.actionbarsherlock.internal.widget.ActionBarView: java.lang.CharSequence getTitle()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: java.lang.CharSequence getTitle()>
VIRTUAL edge: virtualinvoke $r11.<com.actionbarsherlock.internal.widget.ActionBarView: void setWindowTitle(java.lang.CharSequence)>($r10) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setWindowTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r11.<com.actionbarsherlock.internal.widget.ActionBarView: void initProgress()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void initProgress()>
VIRTUAL edge: virtualinvoke $r11.<com.actionbarsherlock.internal.widget.ActionBarView: void initIndeterminateProgress()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void initIndeterminateProgress()>
STATIC edge: $i0 = staticinvoke <com.actionbarsherlock.internal.ActionBarSherlockCompat: int loadUiOptionsFromManifest(android.app.Activity)>($r2) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: int loadUiOptionsFromManifest(android.app.Activity)>
STATIC edge: $z1 = staticinvoke <com.actionbarsherlock.internal.ResourcesCompat: boolean getResources_getBoolean(android.content.Context,int)>($r2, $i0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()> ==> <com.actionbarsherlock.internal.ResourcesCompat: boolean getResources_getBoolean(android.content.Context,int)>
VIRTUAL edge: virtualinvoke $r11.<com.actionbarsherlock.internal.widget.ActionBarView: void setSplitView(com.actionbarsherlock.internal.widget.ActionBarContainer)>(r12) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void setSplitView(com.actionbarsherlock.internal.widget.ActionBarContainer)>
VIRTUAL edge: virtualinvoke $r11.<com.actionbarsherlock.internal.widget.ActionBarView: void setSplitActionBar(boolean)>($z1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setSplitActionBar(boolean)>
VIRTUAL edge: virtualinvoke $r11.<com.actionbarsherlock.internal.widget.ActionBarView: void setSplitWhenNarrow(boolean)>(z0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void setSplitWhenNarrow(boolean)>
VIRTUAL edge: virtualinvoke $r13.<com.actionbarsherlock.internal.widget.ActionBarContextView: void setSplitActionBar(boolean)>($z1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void setSplitActionBar(boolean)>
SPECIAL edge: specialinvoke $r14.<com.actionbarsherlock.internal.ActionBarSherlockCompat$1: void <init>(com.actionbarsherlock.internal.ActionBarSherlockCompat)>(r0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat$1: void <init>(com.actionbarsherlock.internal.ActionBarSherlockCompat)>
STATIC edge: $z0 = staticinvoke <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean reserveOverflow(android.content.Context)>($r1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean isReservingOverflow()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean reserveOverflow(android.content.Context)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: int loadUiOptionsFromManifest(android.app.Activity)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: int loadUiOptionsFromManifest(android.app.Activity)> ==> <java.lang.Class: java.lang.String getName()>
VIRTUAL edge: $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: int loadUiOptionsFromManifest(android.app.Activity)> ==> <java.lang.String: boolean equals(java.lang.Object)>
STATIC edge: r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: int loadUiOptionsFromManifest(android.app.Activity)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r10 = staticinvoke <com.actionbarsherlock.internal.ActionBarSherlockCompat: java.lang.String cleanActivityName(java.lang.String,java.lang.String)>(r2, $r9) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: int loadUiOptionsFromManifest(android.app.Activity)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: java.lang.String cleanActivityName(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateProgressBars(int)>($i1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void onIntChanged(int,int)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateProgressBars(int)>
SPECIAL edge: $z1 = specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean initializePanelMenu()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean initializePanelMenu()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>($r1, r0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
VIRTUAL edge: $z1 = virtualinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu)>($r1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()> ==> <com.actionbarsherlock.ActionBarSherlock: boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)>($r3) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)>
VIRTUAL edge: $z1 = virtualinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>($r1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()> ==> <com.actionbarsherlock.ActionBarSherlock: boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setQwertyMode(boolean)>($z0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setQwertyMode(boolean)>
VIRTUAL edge: $z1 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: boolean isOverflowReserved()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void reopenMenu(boolean)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean isOverflowReserved()>
VIRTUAL edge: $z1 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: boolean isOverflowMenuShowing()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void reopenMenu(boolean)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean isOverflowMenuShowing()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>($r2) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void reopenMenu(boolean)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: boolean showOverflowMenu()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void reopenMenu(boolean)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean showOverflowMenu()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: boolean hideOverflowMenu()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void reopenMenu(boolean)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean hideOverflowMenu()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateInt(int,int,boolean)>($i0, $i1, 0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setFeatureInt(int,int)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateInt(int,int,boolean)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setVisibility(int)>(0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void showProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setVisibility(int)>
VIRTUAL edge: i0 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsProgressBar: int getProgress()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void showProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: int getProgress()>
SPECIAL edge: $i3 = specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: int getFeatures()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateInt(int,int,boolean)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: int getFeatures()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void onIntChanged(int,int)>($i0, $i1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateInt(int,int,boolean)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void onIntChanged(int,int)>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.internal.widget.IcsProgressBar getCircularProgressBar(boolean)>(1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateProgressBars(int)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.internal.widget.IcsProgressBar getCircularProgressBar(boolean)>
SPECIAL edge: $r2 = specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.internal.widget.IcsProgressBar getHorizontalProgressBar(boolean)>(1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateProgressBars(int)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.internal.widget.IcsProgressBar getHorizontalProgressBar(boolean)>
VIRTUAL edge: $i0 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsProgressBar: int getProgress()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateProgressBars(int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: int getProgress()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsProgressBar: boolean isIndeterminate()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateProgressBars(int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: boolean isIndeterminate()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setVisibility(int)>(b2) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateProgressBars(int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setVisibility(int)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setIndeterminate(boolean)>(1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateProgressBars(int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setIndeterminate(boolean)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgress(int)>(i1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateProgressBars(int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgress(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void showProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar)>($r2, $r1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateProgressBars(int)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void showProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void hideProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar)>($r2, $r1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateProgressBars(int)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void hideProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setSecondaryProgress(int)>($i0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateProgressBars(int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setSecondaryProgress(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView: void dismissPopupMenus()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void checkCloseActionMenu(com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void dismissPopupMenus()>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean isReservingOverflow()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchCloseOptionsMenu()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean isReservingOverflow()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: boolean hideOverflowMenu()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchCloseOptionsMenu()> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean hideOverflowMenu()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.app.ActionBarImpl: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void onConfigurationChanged(android.content.res.Configuration)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)>(r2) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchInvalidateOptionsMenu()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchInvalidateOptionsMenu()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void clear()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchInvalidateOptionsMenu()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void clear()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchInvalidateOptionsMenu()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarView: boolean hasExpandedActionView()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: boolean hasExpandedActionView()>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarView: void collapseActionView()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void collapseActionView()>
SPECIAL edge: $z1 = specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean isReservingOverflow()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean isReservingOverflow()>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarView: boolean isOverflowMenuShowing()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean isOverflowMenuShowing()>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarView: boolean hideOverflowMenu()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean hideOverflowMenu()>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarView: boolean showOverflowMenu()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchKeyEvent(android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean showOverflowMenu()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.app.ActionBarImpl: void dispatchMenuVisibilityChanged(boolean)>(1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchMenuOpened(int,android.view.Menu)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void dispatchMenuVisibilityChanged(boolean)>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean isReservingOverflow()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchOpenOptionsMenu()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean isReservingOverflow()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: boolean showOverflowMenu()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchOpenOptionsMenu()> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean showOverflowMenu()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.app.ActionBarImpl: void dispatchMenuVisibilityChanged(boolean)>(0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchPanelClosed(int,android.view.Menu)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void dispatchMenuVisibilityChanged(boolean)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: boolean isOverflowMenuShowing()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchPause()> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean isOverflowMenuShowing()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView: boolean hideOverflowMenu()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchPause()> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean hideOverflowMenu()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchPostCreate(android.os.Bundle)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.app.ActionBarImpl: void setShowHideAnimationEnabled(boolean)>(1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchPostResume()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void setShowHideAnimationEnabled(boolean)>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchPrepareOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean isReservingOverflow()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchPrepareOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean isReservingOverflow()>
VIRTUAL edge: $z0 = virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)>($r1, r0, $r2) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchPrepareOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.app.ActionBarImpl: void setShowHideAnimationEnabled(boolean)>(0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchStop()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void setShowHideAnimationEnabled(boolean)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarView: void setWindowTitle(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchTitleChanged(java.lang.CharSequence,int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setWindowTitle(java.lang.CharSequence)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.app.ActionBar getActionBar()> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context getThemedContext()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: android.content.Context getThemedContext()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context getThemedContext()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void checkCloseActionMenu(com.actionbarsherlock.view.Menu)>($r1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void checkCloseActionMenu(com.actionbarsherlock.view.Menu)>
VIRTUAL edge: virtualinvoke r4.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean invoke()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean onMenuItemClick(android.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean invoke()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r2) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void reopenMenu(boolean)>(1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void reopenMenu(boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setContentView(int)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setContentView(int)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setFeatureInt(int,int)>(2, $i0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setProgress(int)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setFeatureInt(int,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setFeatureInt(int,int)>(2, $b0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setProgressBarIndeterminate(boolean)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setFeatureInt(int,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setFeatureInt(int,int)>(5, $b0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setProgressBarIndeterminateVisibility(boolean)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setFeatureInt(int,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setFeatureInt(int,int)>(2, $b0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setProgressBarVisibility(boolean)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setFeatureInt(int,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setFeatureInt(int,int)>(2, $i0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setSecondaryProgress(int)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setFeatureInt(int,int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchTitleChanged(java.lang.CharSequence,int)>($r1, 0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: void setTitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchTitleChanged(java.lang.CharSequence,int)>
SPECIAL edge: specialinvoke r2.<com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: void <init>(com.actionbarsherlock.internal.ActionBarSherlockCompat,com.actionbarsherlock.view.ActionMode$Callback)>(r0, $r1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: void <init>(com.actionbarsherlock.internal.ActionBarSherlockCompat,com.actionbarsherlock.view.ActionMode$Callback)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()>
VIRTUAL edge: $r3 = virtualinvoke $r4.<com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>(r2) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>
VIRTUAL edge: $r3 = virtualinvoke $r4.<com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>(r2) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu)>
VIRTUAL edge: $r3 = virtualinvoke $r4.<com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>(r2) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu)>
VIRTUAL edge: $r3 = virtualinvoke $r4.<com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>(r2) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: void onDestroyActionMode(com.actionbarsherlock.view.ActionMode)>
VIRTUAL edge: $r3 = virtualinvoke $r4.<com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>(r2) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.widget.ActionBarContextView: void killMode()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void killMode()>
SPECIAL edge: specialinvoke r11.<com.actionbarsherlock.internal.view.StandaloneActionMode: void <init>(android.content.Context,com.actionbarsherlock.internal.widget.ActionBarContextView,com.actionbarsherlock.view.ActionMode$Callback,boolean)>($r5, $r7, r2, 1) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.view.StandaloneActionMode: void <init>(android.content.Context,com.actionbarsherlock.internal.widget.ActionBarContextView,com.actionbarsherlock.view.ActionMode$Callback,boolean)>
VIRTUAL edge: $r12 = virtualinvoke r11.<com.actionbarsherlock.view.ActionMode: com.actionbarsherlock.view.Menu getMenu()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.view.StandaloneActionMode: com.actionbarsherlock.view.Menu getMenu()>
VIRTUAL edge: virtualinvoke r11.<com.actionbarsherlock.view.ActionMode: void invalidate()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.view.StandaloneActionMode: void invalidate()>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.widget.ActionBarContextView: void initForMode(com.actionbarsherlock.view.ActionMode)>(r11) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void initForMode(com.actionbarsherlock.view.ActionMode)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.widget.ActionBarContextView: void setVisibility(int)>(0) in <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void setVisibility(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.widget.ActivityChooserView$2: void <init>(com.actionbarsherlock.widget.ActivityChooserView)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserView: boolean isShowingPopup()>() in <com.actionbarsherlock.widget.ActivityChooserView$2: void onGlobalLayout()> ==> <com.actionbarsherlock.widget.ActivityChooserView: boolean isShowingPopup()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow access$1(com.actionbarsherlock.widget.ActivityChooserView)>($r1) in <com.actionbarsherlock.widget.ActivityChooserView$2: void onGlobalLayout()> ==> <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow access$1(com.actionbarsherlock.widget.ActivityChooserView)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void dismiss()>() in <com.actionbarsherlock.widget.ActivityChooserView$2: void onGlobalLayout()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void dismiss()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()>() in <com.actionbarsherlock.widget.ActivityChooserView$2: void onGlobalLayout()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.view.ActionProvider: void subUiVisibilityChanged(boolean)>(1) in <com.actionbarsherlock.widget.ActivityChooserView$2: void onGlobalLayout()> ==> <com.actionbarsherlock.view.ActionProvider: void subUiVisibilityChanged(boolean)>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView)>($r2) in <com.actionbarsherlock.widget.ActivityChooserView$1: void onChanged()> ==> <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView)>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView)>($r2) in <com.actionbarsherlock.widget.ActivityChooserView$1: void onInvalidated()> ==> <com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsip_tls_setting: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsip_tls_setting: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.pj_str_t getCa_list_file()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.pj_str_t getCert_file()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher getCiphers()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.pj_str_t getPassword()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.pj_str_t getPrivkey_file()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_qos_params: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.pj_qos_params getQos_params()> ==> <org.pjsip.pjsua.pj_qos_params: void <init>(long,boolean)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pj_qos_type: org.pjsip.pjsua.pj_qos_type swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.pj_qos_type getQos_type()> ==> <org.pjsip.pjsua.pj_qos_type: org.pjsip.pjsua.pj_qos_type swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_time_val: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.pj_time_val getTimeout()> ==> <org.pjsip.pjsua.pj_time_val: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher)>($r1) in <org.pjsip.pjsua.pjsip_tls_setting: void setCiphers(org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_qos_params: long getCPtr(org.pjsip.pjsua.pj_qos_params)>($r1) in <org.pjsip.pjsua.pjsip_tls_setting: void setQos_params(org.pjsip.pjsua.pj_qos_params)> ==> <org.pjsip.pjsua.pj_qos_params: long getCPtr(org.pjsip.pjsua.pj_qos_params)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pj_qos_type: int swigValue()>() in <org.pjsip.pjsua.pjsip_tls_setting: void setQos_type(org.pjsip.pjsua.pj_qos_type)> ==> <org.pjsip.pjsua.pj_qos_type: int swigValue()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_time_val: long getCPtr(org.pjsip.pjsua.pj_time_val)>($r1) in <org.pjsip.pjsua.pjsip_tls_setting: void setTimeout(org.pjsip.pjsua.pj_time_val)> ==> <org.pjsip.pjsua.pj_time_val: long getCPtr(org.pjsip.pjsua.pj_time_val)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.ScreenLocker$LockTimerTask: void <init>(com.csipsimple.widgets.ScreenLocker)>($r1) in <com.csipsimple.widgets.ScreenLocker$LockTimerTask: void <init>(com.csipsimple.widgets.ScreenLocker,com.csipsimple.widgets.ScreenLocker$LockTimerTask)> ==> <com.csipsimple.widgets.ScreenLocker$LockTimerTask: void <init>(com.csipsimple.widgets.ScreenLocker)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.widgets.ScreenLocker: android.os.Handler access$0(com.csipsimple.widgets.ScreenLocker)>($r1) in <com.csipsimple.widgets.ScreenLocker$LockTimerTask: void run()> ==> <com.csipsimple.widgets.ScreenLocker: android.os.Handler access$0(com.csipsimple.widgets.ScreenLocker)>
SPECIAL edge: specialinvoke r0.<org.webrtc.videoengine.camera.CameraUtilsWrapper: void <init>()>() in <org.webrtc.videoengine.camera.CameraUtils5: void <init>()> ==> <org.webrtc.videoengine.camera.CameraUtilsWrapper: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <org.webrtc.videoengine.camera.CameraUtils5: void Init(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid,java.util.List)> ==> <java.lang.Object: java.lang.Class getClass()>
SPECIAL edge: specialinvoke r3.<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice: void <init>(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid)>($r1) in <org.webrtc.videoengine.camera.CameraUtils5: void Init(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid,java.util.List)> ==> <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice: void <init>(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid)>
VIRTUAL edge: virtualinvoke $r1.<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void AddDeviceInfo(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice,android.hardware.Camera$Parameters)>(r3, $r5) in <org.webrtc.videoengine.camera.CameraUtils5: void Init(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid,java.util.List)> ==> <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void AddDeviceInfo(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice,android.hardware.Camera$Parameters)>
VIRTUAL edge: $r5 = virtualinvoke $r1.<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera$Parameters SearchOldFrontFacingCameras(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice)>(r3) in <org.webrtc.videoengine.camera.CameraUtils5: void Init(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid,java.util.List)> ==> <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera$Parameters SearchOldFrontFacingCameras(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int)>("PJSIP_INV_STATE_NULL", 0) in <org.pjsip.pjsua.pjsip_inv_state: void <clinit>()> ==> <org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsip_inv_state$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsip_inv_state$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_inv_state$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsip_inv_state$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_inv_state$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsip_inv_state$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_inv_state)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_inv_state)> ==> <org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_inv_state$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_inv_state)> ==> <org.pjsip.pjsua.pjsip_inv_state$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsip_inv_state: org.pjsip.pjsua.pjsip_inv_state swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipManager: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_call_hold_type$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<org.webrtc.videoengine.camera.CameraUtils5: void <init>()>() in <org.webrtc.videoengine.camera.CameraUtils8: void <init>()> ==> <org.webrtc.videoengine.camera.CameraUtils5: void <init>()>
SPECIAL edge: specialinvoke r0.<org.webrtc.videoengine.camera.CameraUtils8: void <init>()>() in <org.webrtc.videoengine.camera.CameraUtils9: void <init>()> ==> <org.webrtc.videoengine.camera.CameraUtils8: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <org.webrtc.videoengine.camera.CameraUtils9: void Init(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid,java.util.List)> ==> <java.lang.Object: java.lang.Class getClass()>
SPECIAL edge: specialinvoke r4.<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice: void <init>(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid)>($r1) in <org.webrtc.videoengine.camera.CameraUtils9: void Init(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid,java.util.List)> ==> <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice: void <init>(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid)>
VIRTUAL edge: virtualinvoke $r1.<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void AddDeviceInfo(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice,android.hardware.Camera$Parameters)>(r4, $r8) in <org.webrtc.videoengine.camera.CameraUtils9: void Init(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid,java.util.List)> ==> <org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void AddDeviceInfo(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice,android.hardware.Camera$Parameters)>
VIRTUAL edge: $r5 = virtualinvoke r4.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: com.csipsimple.api.ISipService getConnectedService()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: com.csipsimple.api.ISipService getConnectedService()>
VIRTUAL edge: virtualinvoke r4.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void finishServiceIfNeeded(boolean)>(1) in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void finishServiceIfNeeded(boolean)>
VIRTUAL edge: $r9 = virtualinvoke $r8.<com.csipsimple.ui.account.AccountsLoader: com.csipsimple.utils.CallHandlerPlugin getCallHandlerWithAccountId(long)>($l1) in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)> ==> <com.csipsimple.ui.account.AccountsLoader: com.csipsimple.utils.CallHandlerPlugin getCallHandlerWithAccountId(long)>
VIRTUAL edge: $r6 = virtualinvoke $r9.<com.csipsimple.utils.CallHandlerPlugin: java.lang.String getNextExcludeTelNumber()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)> ==> <com.csipsimple.utils.CallHandlerPlugin: java.lang.String getNextExcludeTelNumber()>
VIRTUAL edge: $r10 = virtualinvoke $r9.<com.csipsimple.utils.CallHandlerPlugin: android.app.PendingIntent getIntent()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)> ==> <com.csipsimple.utils.CallHandlerPlugin: android.app.PendingIntent getIntent()>
VIRTUAL edge: $l0 = virtualinvoke r3.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: long getAccountToCallTo()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void changeCursor(android.database.Cursor)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: long getAccountToCallTo()>
STATIC edge: $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void changeCursor(android.database.Cursor)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)>($r1) in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void changeCursor(android.database.Cursor)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)>
VIRTUAL edge: $r5 = virtualinvoke r3.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: java.lang.String getPhoneNumber()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: java.lang.String getPhoneNumber()>
VIRTUAL edge: $z0 = virtualinvoke r3.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: boolean shouldIgnoreRewritingRules()>() in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: boolean shouldIgnoreRewritingRules()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.ui.account.AccountsLoader: void <init>(android.content.Context,java.lang.String,boolean)>($r2, $r5, $z0) in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)> ==> <com.csipsimple.ui.account.AccountsLoader: void <init>(android.content.Context,java.lang.String,boolean)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.utils.contacts.ContactsSearchAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.utils.contacts.ContactsSearchAdapter: java.lang.CharSequence convertToString(android.database.Cursor)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)>($r3, $l0, $r5) in <com.csipsimple.utils.contacts.ContactsSearchAdapter: java.lang.CharSequence convertToString(android.database.Cursor)> ==> <com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.utils.contacts.ContactsSearchAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131099770) in <com.csipsimple.widgets.Dialpad: void <clinit>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.widgets.Dialpad: void dispatchDialKeyEvent(int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>($r3, "Theming in progress") in <com.csipsimple.widgets.Dialpad: void applyTheme(com.csipsimple.utils.Theme)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.Theme: void applyBackgroundStateListDrawable(android.view.View,java.lang.String)>(r10, "btn_dial") in <com.csipsimple.widgets.Dialpad: void applyTheme(com.csipsimple.utils.Theme)> ==> <com.csipsimple.utils.Theme: void applyBackgroundStateListDrawable(android.view.View,java.lang.String)>
VIRTUAL edge: $r12 = virtualinvoke $r1.<com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>($r3) in <com.csipsimple.widgets.Dialpad: void applyTheme(com.csipsimple.utils.Theme)> ==> <com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.Theme: void applyLayoutMargin(android.view.View,java.lang.String)>(r10, "dialpad_btn_margin") in <com.csipsimple.widgets.Dialpad: void applyTheme(com.csipsimple.utils.Theme)> ==> <com.csipsimple.utils.Theme: void applyLayoutMargin(android.view.View,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.Dialpad: void dispatchDialKeyEvent(int)>($i0) in <com.csipsimple.widgets.Dialpad: void onClick(android.view.View)> ==> <com.csipsimple.widgets.Dialpad: void dispatchDialKeyEvent(int)>
VIRTUAL edge: virtualinvoke r7.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.csipsimple.widgets.Dialpad: void onFinishInflate()> ==> <com.csipsimple.widgets.Dialpad: void onClick(android.view.View)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int,int)>("PJSIP_SSL_UNSPECIFIED_METHOD", 0, $i0) in <org.pjsip.pjsua.pjsip_ssl_method: void <clinit>()> ==> <org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsip_ssl_method$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsip_ssl_method$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_ssl_method$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsip_ssl_method$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_ssl_method$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsip_ssl_method$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_ssl_method)> ==> <org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_ssl_method)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_ssl_method$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_ssl_method)> ==> <org.pjsip.pjsua.pjsip_ssl_method$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsip_ssl_method: org.pjsip.pjsua.pjsip_ssl_method swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void <init>(android.content.Context,int,int)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)>($r3) in <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void flagActionItems()>() in <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void flagActionItems()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>() in <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)>(r2, i0) in <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>(i0, r6) in <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
VIRTUAL edge: $r10 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>(r6, $r7, r2) in <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>
STATIC edge: $r11 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void addItemView(android.view.View,int)>($r10, i0) in <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void addItemView(android.view.View,int)>
VIRTUAL edge: virtualinvoke r4.<com.csipsimple.widgets.ScreenLocker: void show()>() in <com.csipsimple.widgets.ScreenLocker$ShowHideHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.widgets.ScreenLocker: void show()>
VIRTUAL edge: virtualinvoke r4.<com.csipsimple.widgets.ScreenLocker: void hide()>() in <com.csipsimple.widgets.ScreenLocker$ShowHideHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.widgets.ScreenLocker: void hide()>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pj_stun_resolve_result: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pj_stun_resolve_result: void <init>()> ==> <org.pjsip.pjsua.pj_stun_resolve_result: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pj_stun_resolve_result: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pj_stun_resolve_result: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pj_stun_resolve_result: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pj_stun_resolve_result: void delete()>() in <org.pjsip.pjsua.pj_stun_resolve_result: void finalize()> ==> <org.pjsip.pjsua.pj_stun_resolve_result: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pj_stun_resolve_result: org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr getAddr()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pj_stun_resolve_result: org.pjsip.pjsua.pj_str_t getName()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr)>($r1) in <org.pjsip.pjsua.pj_stun_resolve_result: void setAddr(org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pj_stun_resolve_result: void setName(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.DvcNg: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.models.Filter: void <init>()>() in <com.csipsimple.wizards.impl.DvcNg: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.models.Filter: void <init>()>
STATIC edge: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.wizards.impl.DvcNg: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.DvcNg: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.DvcNg: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.dialpad.DialerFragment: void placePluginCall(com.csipsimple.utils.CallHandlerPlugin)>($r1) in <com.csipsimple.ui.dialpad.DialerFragment: void access$3(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.utils.CallHandlerPlugin)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void placePluginCall(com.csipsimple.utils.CallHandlerPlugin)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.widgets.Dialpad: void applyTheme(com.csipsimple.utils.Theme)>($r3) in <com.csipsimple.ui.dialpad.DialerFragment: void applyTheme(android.view.View)> ==> <com.csipsimple.widgets.Dialpad: void applyTheme(com.csipsimple.utils.Theme)>
VIRTUAL edge: virtualinvoke r2.<android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void deleteAll()>
VIRTUAL edge: virtualinvoke r2.<android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void deleteChar()>
VIRTUAL edge: virtualinvoke r2.<android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void placeCall()>
VIRTUAL edge: virtualinvoke r2.<android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void onTrigger(int,int)>
VIRTUAL edge: virtualinvoke r2.<android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void placeVideoCall()>
VIRTUAL edge: virtualinvoke r2.<android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
VIRTUAL edge: virtualinvoke r2.<android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void onVisibilityChanged(boolean)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.ui.dialpad.DialerLayout: boolean canShowList()>() in <com.csipsimple.ui.dialpad.DialerFragment: boolean hasAutocompleteList()> ==> <com.csipsimple.ui.dialpad.DialerLayout: boolean canShowList()>
VIRTUAL edge: $r7 = virtualinvoke $r6.<com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>() in <com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)> ==> <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.Long,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)>($r5, $r10, $r12) in <com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)> ==> <com.csipsimple.ui.dialpad.DialerFragment$5: void onLoad(com.csipsimple.utils.CallHandlerPlugin)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.utils.CallHandlerPlugin: java.lang.String getNextExcludeTelNumber()>() in <com.csipsimple.ui.dialpad.DialerFragment: void placePluginCall(com.csipsimple.utils.CallHandlerPlugin)> ==> <com.csipsimple.utils.CallHandlerPlugin: java.lang.String getNextExcludeTelNumber()>
VIRTUAL edge: $r4 = virtualinvoke $r1.<com.csipsimple.utils.CallHandlerPlugin: android.app.PendingIntent getIntent()>() in <com.csipsimple.ui.dialpad.DialerFragment: void placePluginCall(com.csipsimple.utils.CallHandlerPlugin)> ==> <com.csipsimple.utils.CallHandlerPlugin: android.app.PendingIntent getIntent()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("DialerFragment", "Impossible to ignore next outgoing call", r5) in <com.csipsimple.ui.dialpad.DialerFragment: void placePluginCall(com.csipsimple.utils.CallHandlerPlugin)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.widgets.DialerCallBar: void setEnabled(boolean)>(z0) in <com.csipsimple.ui.dialpad.DialerFragment: void afterTextChanged(android.text.Editable)> ==> <com.csipsimple.widgets.DialerCallBar: void setEnabled(boolean)>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void filter(java.lang.CharSequence)>($r6) in <com.csipsimple.ui.dialpad.DialerFragment: void afterTextChanged(android.text.Editable)> ==> <com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void filter(java.lang.CharSequence)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: void keyPressed(int)>(67) in <com.csipsimple.ui.dialpad.DialerFragment: void deleteChar()> ==> <com.csipsimple.ui.dialpad.DialerFragment: void keyPressed(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>($r1, $r2) in <com.csipsimple.ui.dialpad.DialerFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.actionbarsherlock.app.SherlockFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.dialpad.DialerFragment$4: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.dialpad.DialerFragment$4: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
INTERFACE edge: interfaceinvoke $r4.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)>($r6) in <com.csipsimple.ui.dialpad.DialerFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.dialpad.DialerFragment$4: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r11.<com.csipsimple.ui.dialpad.DialerLayout: void setForceNoList(boolean)>($z0) in <com.csipsimple.ui.dialpad.DialerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.dialpad.DialerLayout: void setForceNoList(boolean)>
VIRTUAL edge: virtualinvoke $r10.<com.csipsimple.widgets.AccountChooserButton: void setShowExternals(boolean)>(1) in <com.csipsimple.ui.dialpad.DialerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.widgets.AccountChooserButton: void setShowExternals(boolean)>
VIRTUAL edge: virtualinvoke $r10.<com.csipsimple.widgets.AccountChooserButton: void setOnAccountChangeListener(com.csipsimple.widgets.AccountChooserButton$OnAccountChangeListener)>($r13) in <com.csipsimple.ui.dialpad.DialerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.widgets.AccountChooserButton: void setOnAccountChangeListener(com.csipsimple.widgets.AccountChooserButton$OnAccountChangeListener)>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.widgets.Dialpad: void setOnDialKeyListener(com.csipsimple.widgets.Dialpad$OnDialKeyListener)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.widgets.Dialpad: void setOnDialKeyListener(com.csipsimple.widgets.Dialpad$OnDialKeyListener)>
VIRTUAL edge: virtualinvoke $r8.<com.csipsimple.widgets.DialerCallBar: void setOnDialActionListener(com.csipsimple.widgets.DialerCallBar$OnDialActionListener)>(r0) in <com.csipsimple.ui.dialpad.DialerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.widgets.DialerCallBar: void setOnDialActionListener(com.csipsimple.widgets.DialerCallBar$OnDialActionListener)>
VIRTUAL edge: virtualinvoke $r8.<com.csipsimple.widgets.DialerCallBar: void setVideoEnabled(boolean)>($z0) in <com.csipsimple.ui.dialpad.DialerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.widgets.DialerCallBar: void setVideoEnabled(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.widgets.DialerCallBar: void setVideoEnabled(boolean)>($z0) in <com.csipsimple.ui.dialpad.DialerFragment: void onResume()> ==> <com.csipsimple.widgets.DialerCallBar: void setVideoEnabled(boolean)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.widgets.AccountChooserButton: void setChangeable(boolean)>($z0) in <com.csipsimple.ui.dialpad.DialerFragment: void onTextChanged(java.lang.CharSequence,int,int,int)> ==> <com.csipsimple.widgets.AccountChooserButton: void setChangeable(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.DialingFeedback: void giveFeedback(int)>($i1) in <com.csipsimple.ui.dialpad.DialerFragment: void onTrigger(int,int)> ==> <com.csipsimple.utils.DialingFeedback: void giveFeedback(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: void keyPressed(int)>($i0) in <com.csipsimple.ui.dialpad.DialerFragment: void onTrigger(int,int)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void keyPressed(int)>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void <init>()>() in <com.csipsimple.ui.dialpad.DialerFragment: void onVisibilityChanged(boolean)> ==> <com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void <init>()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>() in <com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()> ==> <com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)>(r1) in <com.csipsimple.ui.dialpad.DialerFragment: void placeVideoCall()> ==> <com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("DialerFragment", $r2) in <com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean,boolean)>($z0, 0) in <com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.ui.dialpad.DigitsEditText: void setIsDigit(boolean,boolean)>($z0, 1) in <com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean,boolean)> ==> <com.csipsimple.ui.dialpad.DigitsEditText: void setIsDigit(boolean,boolean)>
VIRTUAL edge: virtualinvoke $r6.<com.actionbarsherlock.app.SherlockFragmentActivity: void invalidateOptionsMenu()>() in <com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean,boolean)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void invalidateOptionsMenu()>
STATIC edge: $i1 = staticinvoke <com.csipsimple.utils.Compatibility: int getHomeMenuId()>() in <com.csipsimple.ui.messages.MessageActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.utils.Compatibility: int getHomeMenuId()>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r1) in <com.csipsimple.ui.messages.MessageActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void <init>(android.content.Context)>($r1) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>(r0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setContentHeight(int)>($i0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setContentHeight(int)>
SPECIAL edge: $r7 = specialinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsLinearLayout createTabLayout()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsLinearLayout createTabLayout()>
SPECIAL edge: $r2 = specialinvoke $r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean)>($r1, $z0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView access$1(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean)>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.widget.IcsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>($r2, null, $i0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsSpinner createSpinner()> ==> <com.actionbarsherlock.internal.widget.IcsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.widget.IcsSpinner: void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener)>(r0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsSpinner createSpinner()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.widget.IcsSpinner: void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener)>(r0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsSpinner createSpinner()> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long)>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.widget.IcsSpinner: void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener)>(r0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsSpinner createSpinner()> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView)>
VIRTUAL edge: virtualinvoke r4.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void init(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean)>(r0, $r1, $z0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void init(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean)>
SPECIAL edge: specialinvoke $r6.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener)>(r0, null) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener)>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: boolean isCollapsed()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void performCollapse()> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: boolean isCollapsed()>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsSpinner createSpinner()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void performCollapse()> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsSpinner createSpinner()>
VIRTUAL edge: $r4 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsSpinner: android.widget.SpinnerAdapter getAdapter()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void performCollapse()> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.widget.SpinnerAdapter getAdapter()>
SPECIAL edge: specialinvoke $r5.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter)>(r0, null) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void performCollapse()> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsSpinner: void setAdapter(android.widget.SpinnerAdapter)>($r5) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void performCollapse()> ==> <com.actionbarsherlock.internal.widget.IcsSpinner: void setAdapter(android.widget.SpinnerAdapter)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsSpinner: void setSelection(int)>($i0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void performCollapse()> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelection(int)>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: boolean isCollapsed()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: boolean performExpand()> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: boolean isCollapsed()>
VIRTUAL edge: $i0 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsSpinner: int getSelectedItemPosition()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: boolean performExpand()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: int getSelectedItemPosition()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setTabSelected(int)>($i0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: boolean performExpand()> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setTabSelected(int)>
SPECIAL edge: $r3 = specialinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean)>($r1, 0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<com.actionbarsherlock.internal.widget.IcsSpinner: android.widget.SpinnerAdapter getAdapter()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.widget.SpinnerAdapter getAdapter()>
SPECIAL edge: $r3 = specialinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean)>($r1, 0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<com.actionbarsherlock.internal.widget.IcsSpinner: android.widget.SpinnerAdapter getAdapter()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.widget.SpinnerAdapter getAdapter()>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,android.view.View)>(r0, $r1) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToTab(int)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,android.view.View)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void cancel()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void cancel()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setSupportAlpha(float)>(0.0F) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void setSupportAlpha(float)>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r0, "supportAlpha", $r2) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long)>(200L) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setInterpolator(android.view.animation.Interpolator)>($r4) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setInterpolator(android.view.animation.Interpolator)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(int)>($i0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(int)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r5) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r5) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r5) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r5) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>($r5) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void start()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void start()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void onConfigurationChanged(android.content.res.Configuration)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setContentHeight(int)>($i0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setContentHeight(int)>
VIRTUAL edge: $r3 = virtualinvoke r4.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: com.actionbarsherlock.app.ActionBar$Tab getTab()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: com.actionbarsherlock.app.ActionBar$Tab getTab()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void performCollapse()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void performCollapse()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setTabSelected(int)>($i0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setTabSelected(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: boolean performExpand()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: boolean performExpand()>
VIRTUAL edge: $r1 = virtualinvoke $r3.<com.actionbarsherlock.internal.widget.IcsSpinner: android.widget.SpinnerAdapter getAdapter()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void removeAllTabs()> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.widget.SpinnerAdapter getAdapter()>
VIRTUAL edge: $r1 = virtualinvoke $r3.<com.actionbarsherlock.internal.widget.IcsSpinner: android.widget.SpinnerAdapter getAdapter()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void removeTabAt(int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.widget.SpinnerAdapter getAdapter()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToTab(int)>($i0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setTabSelected(int)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToTab(int)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void update()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void updateTab(int)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void update()>
VIRTUAL edge: $r5 = virtualinvoke $r4.<com.actionbarsherlock.internal.widget.IcsSpinner: android.widget.SpinnerAdapter getAdapter()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void updateTab(int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.widget.SpinnerAdapter getAdapter()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.SipSorcery: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.SipSorcery: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.impl.Ajtel$1: void <init>()>() in <com.csipsimple.wizards.impl.Ajtel: void <clinit>()> ==> <com.csipsimple.wizards.impl.Ajtel$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Ajtel: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Ajtel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.wizards.impl.Ajtel: android.preference.Preference findPreference(java.lang.String)>("provider_list") in <com.csipsimple.wizards.impl.Ajtel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Ajtel: void addPreference(android.preference.Preference)>($r7) in <com.csipsimple.wizards.impl.Ajtel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void addPreference(android.preference.Preference)>
VIRTUAL edge: z0 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2) in <com.csipsimple.wizards.impl.Ajtel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Ajtel: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void updateDescriptions()>() in <com.csipsimple.wizards.impl.Ajtel: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void updateDescriptions()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Ajtel: void setStringFieldSummary(java.lang.String)>("provider_list") in <com.csipsimple.wizards.impl.Ajtel: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.ui.account.AccountsEditListFragment: java.lang.String access$0()>() in <com.csipsimple.ui.account.AccountsEditListFragment$AccountStatusContentObserver: void onChange(boolean)> ==> <com.csipsimple.ui.account.AccountsEditListFragment: java.lang.String access$0()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Callcentric: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Callcentric: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Callcentric: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Callcentric: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Callcentric: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5) in <com.csipsimple.wizards.impl.Callcentric: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.models.Filter: void <init>()>() in <com.csipsimple.wizards.impl.Callcentric: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.models.Filter: void <init>()>
STATIC edge: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.wizards.impl.Callcentric: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Callcentric: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_dns_srv", 1) in <com.csipsimple.wizards.impl.Callcentric: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: r3 = specialinvoke r0.<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession getPrioritaryCall(com.csipsimple.api.SipCallSession,com.csipsimple.api.SipCallSession)>(r1, r3) in <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession getActiveCallInfo()> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession getPrioritaryCall(com.csipsimple.api.SipCallSession,com.csipsimple.api.SipCallSession)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isAfterEnded()>() in <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession getPrioritaryCall(com.csipsimple.api.SipCallSession,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: boolean isAfterEnded()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isLocalHeld()>() in <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession getPrioritaryCall(com.csipsimple.api.SipCallSession,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: boolean isLocalHeld()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.ui.incall.DtmfDialogFragment: com.csipsimple.ui.incall.DtmfDialogFragment newInstance(int)>($i0) in <com.csipsimple.ui.incall.InCallActivity: void showDialpad(int)> ==> <com.csipsimple.ui.incall.DtmfDialogFragment: com.csipsimple.ui.incall.DtmfDialogFragment newInstance(int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.incall.CallProximityManager: void restartTimer()>() in <com.csipsimple.ui.incall.InCallActivity: void OnDtmf(int,int,int)> ==> <com.csipsimple.ui.incall.CallProximityManager: void restartTimer()>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.utils.DialingFeedback: void giveFeedback(int)>($i2) in <com.csipsimple.ui.incall.InCallActivity: void OnDtmf(int,int,int)> ==> <com.csipsimple.utils.DialingFeedback: void giveFeedback(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("InCallActivity", "Was not able to send dtmf tone", r1) in <com.csipsimple.ui.incall.InCallActivity: void OnDtmf(int,int,int)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <com.csipsimple.ui.incall.InCallActivity: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", "Configuration changed") in <com.csipsimple.ui.incall.InCallActivity: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable)>(r0, null) in <com.csipsimple.ui.incall.InCallActivity: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.InCallActivity: void runOnUiThread(java.lang.Runnable)>($r3) in <com.csipsimple.ui.incall.InCallActivity: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()>
VIRTUAL edge: virtualinvoke $r13.<com.csipsimple.ui.incall.InCallControls: void setOnTriggerListener(com.csipsimple.ui.incall.IOnCallActionTrigger)>(r0) in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.incall.InCallControls: void setOnTriggerListener(com.csipsimple.ui.incall.IOnCallActionTrigger)>
VIRTUAL edge: virtualinvoke $r14.<com.csipsimple.ui.incall.InCallAnswerControls: void setOnTriggerListener(com.csipsimple.ui.incall.IOnCallActionTrigger)>(r0) in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.incall.InCallAnswerControls: void setOnTriggerListener(com.csipsimple.ui.incall.IOnCallActionTrigger)>
VIRTUAL edge: virtualinvoke $r15.<com.csipsimple.ui.incall.InCallInfoGrid: void setAdapter(android.widget.ListAdapter)>($r16) in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.incall.InCallInfoGrid: void setAdapter(android.widget.ListAdapter)>
VIRTUAL edge: virtualinvoke r17.<com.csipsimple.widgets.ScreenLocker: void setActivity(android.app.Activity)>(r0) in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.widgets.ScreenLocker: void setActivity(android.app.Activity)>
VIRTUAL edge: virtualinvoke r17.<com.csipsimple.widgets.ScreenLocker: void setOnLeftRightListener(com.csipsimple.widgets.IOnLeftRightChoice)>(r0) in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.widgets.ScreenLocker: void setOnLeftRightListener(com.csipsimple.widgets.IOnLeftRightChoice)>
VIRTUAL edge: virtualinvoke $r13.<com.csipsimple.ui.incall.InCallControls: void setCallState(com.csipsimple.api.SipCallSession)>(r4) in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.incall.InCallControls: void setCallState(com.csipsimple.api.SipCallSession)>
VIRTUAL edge: virtualinvoke $r14.<com.csipsimple.ui.incall.InCallAnswerControls: void setCallState(com.csipsimple.api.SipCallSession)>(r4) in <com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)> ==> <com.csipsimple.ui.incall.InCallAnswerControls: void setCallState(com.csipsimple.api.SipCallSession)>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.ui.incall.InCallInfoGrid: void terminate()>() in <com.csipsimple.ui.incall.InCallActivity: void onDestroy()> ==> <com.csipsimple.ui.incall.InCallInfoGrid: void terminate()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", $r4) in <com.csipsimple.ui.incall.InCallActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: $r5 = specialinvoke r0.<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession getActiveCallInfo()>() in <com.csipsimple.ui.incall.InCallActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession getActiveCallInfo()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("InCallActivity", "Can\'t adjust volume", r2) in <com.csipsimple.ui.incall.InCallActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
VIRTUAL edge: $z0 = virtualinvoke $r7.<com.csipsimple.ui.incall.InCallAnswerControls: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <com.csipsimple.ui.incall.InCallActivity: boolean onKeyDown(int,android.view.KeyEvent)> ==> <com.csipsimple.ui.incall.InCallAnswerControls: boolean onKeyDown(int,android.view.KeyEvent)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", $r3) in <com.csipsimple.ui.incall.InCallActivity: boolean onKeyUp(int,android.view.KeyEvent)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r4.<com.csipsimple.ui.incall.InCallAnswerControls: boolean onKeyDown(int,android.view.KeyEvent)>($i0, $r1) in <com.csipsimple.ui.incall.InCallActivity: boolean onKeyUp(int,android.view.KeyEvent)> ==> <com.csipsimple.ui.incall.InCallAnswerControls: boolean onKeyDown(int,android.view.KeyEvent)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", "We unlock") in <com.csipsimple.ui.incall.InCallActivity: void onLeftRightChoice(int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.incall.CallProximityManager: void release(int)>(0) in <com.csipsimple.ui.incall.InCallActivity: void onLeftRightChoice(int)> ==> <com.csipsimple.ui.incall.CallProximityManager: void release(int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.incall.CallProximityManager: void restartTimer()>() in <com.csipsimple.ui.incall.InCallActivity: void onLeftRightChoice(int)> ==> <com.csipsimple.ui.incall.CallProximityManager: void restartTimer()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession getActiveCallInfo()>() in <com.csipsimple.ui.incall.InCallActivity: void onLeftRightChoice(int)> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession getActiveCallInfo()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)>(1, $r1) in <com.csipsimple.ui.incall.InCallActivity: void onLeftRightChoice(int)> ==> <com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", "New intent is launched") in <com.csipsimple.ui.incall.InCallActivity: void onNewIntent(android.content.Intent)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("InCallActivity", "Try to do an action on a null call !!!") in <com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getCallId()>() in <com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: int getCallId()>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.ui.incall.CallProximityManager: void restartTimer()>() in <com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.ui.incall.CallProximityManager: void restartTimer()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("InCallActivity", "Was not able to call service method", r4) in <com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", $r12) in <com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isBeforeConfirmed()>() in <com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: boolean isBeforeConfirmed()>
VIRTUAL edge: $i2 = virtualinvoke r3.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
VIRTUAL edge: z0 = virtualinvoke r3.<com.csipsimple.api.SipCallSession: boolean isLocalHeld()>() in <com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: boolean isLocalHeld()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallActivity: void showDialpad(int)>($i0) in <com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.ui.incall.InCallActivity: void showDialpad(int)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getMediaStatus()>() in <com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: int getMediaStatus()>
SPECIAL edge: specialinvoke $r17.<com.csipsimple.ui.incall.InCallActivity$3: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.SipCallSession,java.util.ArrayList)>(r0, $r1, r6) in <com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.ui.incall.InCallActivity$3: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.SipCallSession,java.util.ArrayList)>
SPECIAL edge: specialinvoke $r18.<com.csipsimple.ui.incall.InCallActivity$4: void <init>(com.csipsimple.ui.incall.InCallActivity)>(r0) in <com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.ui.incall.InCallActivity$4: void <init>(com.csipsimple.ui.incall.InCallActivity)>
VIRTUAL edge: z0 = virtualinvoke r3.<com.csipsimple.api.SipCallSession: boolean isOngoing()>() in <com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: boolean isOngoing()>
VIRTUAL edge: $r12 = virtualinvoke r3.<com.csipsimple.api.SipCallSession: java.lang.String getRemoteContact()>() in <com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: java.lang.String getRemoteContact()>
VIRTUAL edge: $z1 = virtualinvoke r1.<com.csipsimple.api.SipCallSession: boolean isAfterEnded()>() in <com.csipsimple.ui.incall.InCallActivity: boolean shouldActivateProximity()> ==> <com.csipsimple.api.SipCallSession: boolean isAfterEnded()>
VIRTUAL edge: $i3 = virtualinvoke r1.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.ui.incall.InCallActivity: boolean shouldActivateProximity()> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
VIRTUAL edge: $z1 = virtualinvoke r1.<com.csipsimple.api.SipCallSession: boolean isIncoming()>() in <com.csipsimple.ui.incall.InCallActivity: boolean shouldActivateProximity()> ==> <com.csipsimple.api.SipCallSession: boolean isIncoming()>
VIRTUAL edge: $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>() in <com.actionbarsherlock.app.SherlockDialogFragment: void onAttach(android.app.Activity)> ==> <java.lang.Class: java.lang.String getSimpleName()>
VIRTUAL edge: $r4 = virtualinvoke $r5.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>() in <com.actionbarsherlock.app.SherlockDialogFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long,java.lang.CharSequence,int,java.lang.CharSequence,android.net.Uri,android.net.Uri)>($r1, $r2, $r3, $l0, $l1, "", 0, "", null, null) in <com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long)> ==> <com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long,java.lang.CharSequence,int,java.lang.CharSequence,android.net.Uri,android.net.Uri)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long,java.lang.Long,int,java.lang.String,java.lang.CharSequence,int,java.lang.CharSequence,android.net.Uri,android.net.Uri)>($r1, $r2, $r3, $l0, $l1, null, 200, null, $r4, $i2, $r5, $r6, $r7) in <com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long,java.lang.CharSequence,int,java.lang.CharSequence,android.net.Uri,android.net.Uri)> ==> <com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long,java.lang.Long,int,java.lang.String,java.lang.CharSequence,int,java.lang.CharSequence,android.net.Uri,android.net.Uri)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.CollectLogs: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.pjsip.UAStateReceiver: void access$0(com.csipsimple.pjsip.UAStateReceiver)>(r5) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.pjsip.UAStateReceiver: void access$0(com.csipsimple.pjsip.UAStateReceiver)>
STATIC edge: staticinvoke <com.csipsimple.pjsip.UAStateReceiver: void access$8(com.csipsimple.pjsip.UAStateReceiver)>(r5) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.pjsip.UAStateReceiver: void access$8(com.csipsimple.pjsip.UAStateReceiver)>
VIRTUAL edge: $i0 = virtualinvoke r6.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
STATIC edge: staticinvoke <com.csipsimple.pjsip.UAStateReceiver: void access$6(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)>(r5, r6) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.pjsip.UAStateReceiver: void access$6(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.service.SipNotifications access$1(com.csipsimple.pjsip.UAStateReceiver)>(r5) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.service.SipNotifications access$1(com.csipsimple.pjsip.UAStateReceiver)>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.service.SipNotifications: void showNotificationForCall(com.csipsimple.api.SipCallSession)>(r6) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.service.SipNotifications: void showNotificationForCall(com.csipsimple.api.SipCallSession)>
STATIC edge: staticinvoke <com.csipsimple.pjsip.UAStateReceiver: void access$2(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)>(r5, r6) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.pjsip.UAStateReceiver: void access$2(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)>
VIRTUAL edge: $r8 = virtualinvoke r6.<com.csipsimple.api.SipCallSession: java.lang.String getRemoteContact()>() in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.api.SipCallSession: java.lang.String getRemoteContact()>
STATIC edge: staticinvoke <com.csipsimple.pjsip.UAStateReceiver: void access$3(com.csipsimple.pjsip.UAStateReceiver,java.lang.String,java.lang.String)>(r5, "RINGING", $r8) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.pjsip.UAStateReceiver: void access$3(com.csipsimple.pjsip.UAStateReceiver,java.lang.String,java.lang.String)>
STATIC edge: $r9 = staticinvoke <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.pjsip.PjSipService access$4(com.csipsimple.pjsip.UAStateReceiver)>(r5) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.pjsip.PjSipService access$4(com.csipsimple.pjsip.UAStateReceiver)>
VIRTUAL edge: virtualinvoke $r10.<com.csipsimple.service.MediaManager: void stopRing()>() in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.service.MediaManager: void stopRing()>
VIRTUAL edge: $i1 = virtualinvoke r6.<com.csipsimple.api.SipCallSession: int getCallId()>() in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.api.SipCallSession: int getCallId()>
STATIC edge: staticinvoke <com.csipsimple.pjsip.UAStateReceiver: void access$5(com.csipsimple.pjsip.UAStateReceiver,int)>(r5, $i1) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.pjsip.UAStateReceiver: void access$5(com.csipsimple.pjsip.UAStateReceiver,int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP UA Receiver", "Finish call2") in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke r5.<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getActiveCallInProgress()>() in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getActiveCallInProgress()>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.service.SipNotifications: void cancelCalls()>() in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.service.SipNotifications: void cancelCalls()>
VIRTUAL edge: virtualinvoke $r12.<com.csipsimple.service.SipService: void treatDeferUnregistersForOutgoing()>() in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.service.SipService: void treatDeferUnregistersForOutgoing()>
STATIC edge: $r13 = staticinvoke <com.csipsimple.utils.CallLogHelper: android.content.ContentValues logValuesForCall(android.content.Context,com.csipsimple.api.SipCallSession,long)>($r12, r6, $l2) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.utils.CallLogHelper: android.content.ContentValues logValuesForCall(android.content.Context,com.csipsimple.api.SipCallSession,long)>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.service.SipNotifications: void showNotificationForMissedCall(android.content.ContentValues)>($r13) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.service.SipNotifications: void showNotificationForMissedCall(android.content.ContentValues)>
VIRTUAL edge: $i0 = virtualinvoke r6.<com.csipsimple.api.SipCallSession: int getLastStatusCode()>() in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.api.SipCallSession: int getLastStatusCode()>
VIRTUAL edge: $r8 = virtualinvoke r6.<com.csipsimple.api.SipCallSession: java.lang.String getLastStatusComment()>() in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.api.SipCallSession: java.lang.String getLastStatusComment()>
VIRTUAL edge: virtualinvoke $r12.<com.csipsimple.service.SipService: void notifyUserOfMessage(java.lang.String)>($r8) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.service.SipService: void notifyUserOfMessage(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r18.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("integrate_with_native_calllogs") in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
STATIC edge: $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r20 = staticinvoke <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>($r8) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>
STATIC edge: $r8 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getPhoneNumber(com.csipsimple.api.SipUri$ParsedSipContactInfos)>($r20) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.api.SipUri: java.lang.String getPhoneNumber(com.csipsimple.api.SipUri$ParsedSipContactInfos)>
VIRTUAL edge: $l2 = virtualinvoke r6.<com.csipsimple.api.SipCallSession: long getAccId()>() in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.api.SipCallSession: long getAccId()>
VIRTUAL edge: $r21 = virtualinvoke $r12.<com.csipsimple.service.SipService: com.csipsimple.api.SipProfile getAccount(long)>($l2) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.service.SipService: com.csipsimple.api.SipProfile getAccount(long)>
STATIC edge: staticinvoke <com.csipsimple.utils.CallLogHelper: void addCallLog(android.content.Context,android.content.ContentValues,android.content.ContentValues)>($r12, $r13, r2) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.utils.CallLogHelper: void addCallLog(android.content.Context,android.content.ContentValues,android.content.ContentValues)>
VIRTUAL edge: virtualinvoke r6.<com.csipsimple.api.SipCallSession: void setIncoming(boolean)>(0) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.api.SipCallSession: void setIncoming(boolean)>
STATIC edge: $r22 = staticinvoke <com.csipsimple.pjsip.UAStateReceiver: java.util.HashMap access$7(com.csipsimple.pjsip.UAStateReceiver)>(r5) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.pjsip.UAStateReceiver: java.util.HashMap access$7(com.csipsimple.pjsip.UAStateReceiver)>
STATIC edge: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $i0 = virtualinvoke r6.<com.csipsimple.api.SipCallSession: int getMediaStatus()>() in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.api.SipCallSession: int getMediaStatus()>
VIRTUAL edge: virtualinvoke $r11.<com.csipsimple.api.SipCallSession: void setMediaStatus(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.api.SipCallSession: void setMediaStatus(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pj_pool_t: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pj_pool_t: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pj_pool_t: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pj_pool_t: void delete()>() in <org.pjsip.pjsua.pj_pool_t: void finalize()> ==> <org.pjsip.pjsua.pj_pool_t: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pj_pool_t: org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block getBlock_list()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pj_pool_t: org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback getCallback()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pj_pool_t: org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory getFactory()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block)>($r1) in <org.pjsip.pjsua.pj_pool_t: void setBlock_list(org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback)>($r1) in <org.pjsip.pjsua.pj_pool_t: void setCallback(org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory)>($r1) in <org.pjsip.pjsua.pj_pool_t: void setFactory(org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)>($r2) in <com.csipsimple.ui.messages.MessageFragment$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)>
STATIC edge: staticinvoke <com.csipsimple.ui.messages.MessageFragment: void access$1(com.csipsimple.ui.messages.MessageFragment,com.csipsimple.api.ISipService)>($r3, $r4) in <com.csipsimple.ui.messages.MessageFragment$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.messages.MessageFragment: void access$1(com.csipsimple.ui.messages.MessageFragment,com.csipsimple.api.ISipService)>
STATIC edge: staticinvoke <com.csipsimple.ui.messages.MessageFragment: void access$1(com.csipsimple.ui.messages.MessageFragment,com.csipsimple.api.ISipService)>($r2, null) in <com.csipsimple.ui.messages.MessageFragment$1: void onServiceDisconnected(android.content.ComponentName)> ==> <com.csipsimple.ui.messages.MessageFragment: void access$1(com.csipsimple.ui.messages.MessageFragment,com.csipsimple.api.ISipService)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.messages.MessageFragment$2: void <init>(com.csipsimple.ui.messages.MessageFragment)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.ui.messages.MessageFragment$2: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.ui.messages.MessageFragment: java.lang.String access$2(com.csipsimple.ui.messages.MessageFragment)>($r3) in <com.csipsimple.ui.messages.MessageFragment$2: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.messages.MessageFragment: java.lang.String access$2(com.csipsimple.ui.messages.MessageFragment)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>($r1) in <com.csipsimple.service.SipService$SyncStartRunnable: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>
STATIC edge: staticinvoke <com.csipsimple.service.SipService: void access$9(com.csipsimple.service.SipService)>($r1) in <com.csipsimple.service.SipService$SyncStartRunnable: java.lang.Object runWithReturn()> ==> <com.csipsimple.service.SipService: void access$9(com.csipsimple.service.SipService)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)>($r1) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void <init>(com.actionbarsherlock.internal.widget.ActionBarView,com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)>
STATIC edge: $r7 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$3(com.actionbarsherlock.internal.widget.ActionBarView)>($r6) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$3(com.actionbarsherlock.internal.widget.ActionBarView)>
STATIC edge: $i0 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: int access$10(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: int access$10(com.actionbarsherlock.internal.widget.ActionBarView)>
STATIC edge: $r7 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$5(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$5(com.actionbarsherlock.internal.widget.ActionBarView)>
STATIC edge: $r8 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: android.widget.LinearLayout access$6(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: android.widget.LinearLayout access$6(com.actionbarsherlock.internal.widget.ActionBarView)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: void access$11(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void access$11(com.actionbarsherlock.internal.widget.ActionBarView)>
STATIC edge: $r9 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$7(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$7(com.actionbarsherlock.internal.widget.ActionBarView)>
STATIC edge: $i0 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: int access$12(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: int access$12(com.actionbarsherlock.internal.widget.ActionBarView)>
VIRTUAL edge: virtualinvoke $r9.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(0) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void setVisibility(int)>
STATIC edge: $r10 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.IcsSpinner access$8(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.IcsSpinner access$8(com.actionbarsherlock.internal.widget.ActionBarView)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: android.view.View access$9(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: android.view.View access$9(com.actionbarsherlock.internal.widget.ActionBarView)>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setIcon(android.graphics.drawable.Drawable)>(null) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setIcon(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setActionViewExpanded(boolean)>(0) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setActionViewExpanded(boolean)>
VIRTUAL edge: $r4 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.view.View getActionView()>() in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.view.View getActionView()>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$3(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$3(com.actionbarsherlock.internal.widget.ActionBarView)>
STATIC edge: $r6 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: android.graphics.drawable.Drawable access$4(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: android.graphics.drawable.Drawable access$4(com.actionbarsherlock.internal.widget.ActionBarView)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setIcon(android.graphics.drawable.Drawable)>($r6) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setIcon(android.graphics.drawable.Drawable)>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$5(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$5(com.actionbarsherlock.internal.widget.ActionBarView)>
STATIC edge: $r10 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: android.widget.LinearLayout access$6(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: android.widget.LinearLayout access$6(com.actionbarsherlock.internal.widget.ActionBarView)>
STATIC edge: $r11 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$7(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$7(com.actionbarsherlock.internal.widget.ActionBarView)>
VIRTUAL edge: virtualinvoke $r11.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setVisibility(int)>(8) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void setVisibility(int)>
STATIC edge: $r12 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.IcsSpinner access$8(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.IcsSpinner access$8(com.actionbarsherlock.internal.widget.ActionBarView)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.widget.ActionBarView: android.view.View access$9(com.actionbarsherlock.internal.widget.ActionBarView)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: android.view.View access$9(com.actionbarsherlock.internal.widget.ActionBarView)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setActionViewExpanded(boolean)>(1) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setActionViewExpanded(boolean)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
VIRTUAL edge: $i0 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>() in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>($r2, $r1) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem getItem(int)>(i1) in <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem getItem(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Blicnet: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Blicnet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Blicnet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>() in <com.csipsimple.wizards.impl.Blicnet: boolean canSave()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.Blicnet: boolean canSave()> ==> <java.lang.String: java.lang.String trim()>
VIRTUAL edge: $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("200044") in <com.csipsimple.wizards.impl.Blicnet: boolean canSave()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke r0.<com.csipsimple.wizards.impl.Blicnet: boolean checkField(android.preference.Preference,boolean)>($r1, $z1) in <com.csipsimple.wizards.impl.Blicnet: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Blicnet: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.models.Filter: void <init>()>() in <com.csipsimple.wizards.impl.Blicnet: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.models.Filter: void <init>()>
STATIC edge: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.wizards.impl.Blicnet: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Blicnet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(3) in <com.csipsimple.wizards.impl.Blicnet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <java.lang.Integer: java.lang.String toString(int)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("dtmf_mode", $r2) in <com.csipsimple.wizards.impl.Blicnet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("PCMU/8000/1", "wb", "199") in <com.csipsimple.wizards.impl.Blicnet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: void <init>(float,java.lang.Object)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: void <init>(float,java.lang.Object)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $f0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: float getFraction()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: float getFraction()>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: void <init>(float,java.lang.Object)>($f0, $r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: void <init>(float,java.lang.Object)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: android.view.animation.Interpolator getInterpolator()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: android.view.animation.Interpolator getInterpolator()>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: void setInterpolator(android.view.animation.Interpolator)>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void setInterpolator(android.view.animation.Interpolator)>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe clone()>
SPECIAL edge: specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>($r1) in <com.csipsimple.utils.Base64$InputStream: void <init>(java.io.InputStream,int)> ==> <com.csipsimple.utils.Base64$InputStream: void <init>(java.io.InputStream)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.Base64: byte[] access$0(int)>($i0) in <com.csipsimple.utils.Base64$InputStream: void <init>(java.io.InputStream,int)> ==> <com.csipsimple.utils.Base64: byte[] access$0(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Base64: byte[] access$1(byte[],int,int,byte[],int,int)>(r1, 0, $i1, $r2, 0, $i0) in <com.csipsimple.utils.Base64$InputStream: int read()> ==> <com.csipsimple.utils.Base64: byte[] access$1(byte[],int,int,byte[],int,int)>
STATIC edge: $i1 = staticinvoke <com.csipsimple.utils.Base64: int access$2(byte[],int,byte[],int,int)>(r1, 0, $r2, 0, $i1) in <com.csipsimple.utils.Base64$InputStream: int read()> ==> <com.csipsimple.utils.Base64: int access$2(byte[],int,byte[],int,int)>
VIRTUAL edge: $i4 = virtualinvoke r0.<com.csipsimple.utils.Base64$InputStream: int read()>() in <com.csipsimple.utils.Base64$InputStream: int read(byte[],int,int)> ==> <com.csipsimple.utils.Base64$InputStream: int read()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState: void <init>(android.os.Parcel)>($r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1: com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState: void <init>(android.os.Parcel)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1: com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel)>($r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1: com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1: com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int)>($i0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1: java.lang.Object[] newArray(int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1: com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int)>
STATIC edge: $i1 = staticinvoke <com.csipsimple.utils.Compatibility: int getHomeMenuId()>() in <com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.utils.Compatibility: int getHomeMenuId()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipProfileState: void <init>(android.database.Cursor)> ==> <com.csipsimple.api.SipProfileState: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipProfileState: void <init>(android.os.Parcel)> ==> <com.csipsimple.api.SipProfileState: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipProfileState: void <init>(android.os.Parcel)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.api.SipProfileState: void readFromParcel(android.os.Parcel)>($r1) in <com.csipsimple.api.SipProfileState: void <init>(android.os.Parcel)> ==> <com.csipsimple.api.SipProfileState: void readFromParcel(android.os.Parcel)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.api.SipProfileState: java.lang.String getRegUri()>() in <com.csipsimple.api.SipProfileState: boolean isValidForCall()> ==> <com.csipsimple.api.SipProfileState: java.lang.String getRegUri()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.api.SipProfileState: boolean isAddedToStack()>() in <com.csipsimple.api.SipProfileState: boolean isValidForCall()> ==> <com.csipsimple.api.SipProfileState: boolean isAddedToStack()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.api.SipProfileState: int getStatusCode()>() in <com.csipsimple.api.SipProfileState: boolean isValidForCall()> ==> <com.csipsimple.api.SipProfileState: int getStatusCode()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.api.SipProfileState: int getExpires()>() in <com.csipsimple.api.SipProfileState: boolean isValidForCall()> ==> <com.csipsimple.api.SipProfileState: int getExpires()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_call_media_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_call_media_info: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_call_media_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_call_media_info: void delete()>() in <org.pjsip.pjsua.pjsua_call_media_info: void finalize()> ==> <org.pjsip.pjsua.pjsua_call_media_info: void delete()>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjmedia_dir: org.pjsip.pjsua.pjmedia_dir swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_call_media_info: org.pjsip.pjsua.pjmedia_dir getDir()> ==> <org.pjsip.pjsua.pjmedia_dir: org.pjsip.pjsua.pjmedia_dir swigToEnum(int)>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsua_call_media_status: org.pjsip.pjsua.pjsua_call_media_status swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsua_call_media_info: org.pjsip.pjsua.pjsua_call_media_status getStatus()> ==> <org.pjsip.pjsua.pjsua_call_media_status: org.pjsip.pjsua.pjsua_call_media_status swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_call_media_info: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type getType()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type: void <init>(long,boolean)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjmedia_dir: int swigValue()>() in <org.pjsip.pjsua.pjsua_call_media_info: void setDir(org.pjsip.pjsua.pjmedia_dir)> ==> <org.pjsip.pjsua.pjmedia_dir: int swigValue()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsua_call_media_status: int swigValue()>() in <org.pjsip.pjsua.pjsua_call_media_info: void setStatus(org.pjsip.pjsua.pjsua_call_media_status)> ==> <org.pjsip.pjsua.pjsua_call_media_status: int swigValue()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type)>($r1) in <org.pjsip.pjsua.pjsua_call_media_info: void setType(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.api.SipProfileState: void <init>(android.os.Parcel)>($r1) in <com.csipsimple.api.SipProfileState$1: com.csipsimple.api.SipProfileState createFromParcel(android.os.Parcel)> ==> <com.csipsimple.api.SipProfileState: void <init>(android.os.Parcel)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.api.SipProfileState$1: com.csipsimple.api.SipProfileState createFromParcel(android.os.Parcel)>($r1) in <com.csipsimple.api.SipProfileState$1: java.lang.Object createFromParcel(android.os.Parcel)> ==> <com.csipsimple.api.SipProfileState$1: com.csipsimple.api.SipProfileState createFromParcel(android.os.Parcel)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.api.SipProfileState$1: com.csipsimple.api.SipProfileState[] newArray(int)>($i0) in <com.csipsimple.api.SipProfileState$1: java.lang.Object[] newArray(int)> ==> <com.csipsimple.api.SipProfileState$1: com.csipsimple.api.SipProfileState[] newArray(int)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.api.SipProfileState: int getPriority()>() in <com.csipsimple.api.SipProfileState$2: int compare(com.csipsimple.api.SipProfileState,com.csipsimple.api.SipProfileState)> ==> <com.csipsimple.api.SipProfileState: int getPriority()>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.api.SipProfileState$2: int compare(com.csipsimple.api.SipProfileState,com.csipsimple.api.SipProfileState)>($r3, $r4) in <com.csipsimple.api.SipProfileState$2: int compare(java.lang.Object,java.lang.Object)> ==> <com.csipsimple.api.SipProfileState$2: int compare(com.csipsimple.api.SipProfileState,com.csipsimple.api.SipProfileState)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void transformMatrix(android.graphics.Matrix,android.view.View)>(r3, $r2) in <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void computeRect(android.graphics.RectF,android.view.View)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void transformMatrix(android.graphics.Matrix,android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void computeRect(android.graphics.RectF,android.view.View)>(r1, r4) in <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void invalidateAfterUpdate()> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void computeRect(android.graphics.RectF,android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void computeRect(android.graphics.RectF,android.view.View)>($r4, r3) in <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void prepareForUpdate()> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void computeRect(android.graphics.RectF,android.view.View)>
SPECIAL edge: specialinvoke r3.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void <init>(android.view.View)>($r0) in <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void <init>(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void transformMatrix(android.graphics.Matrix,android.view.View)>($r5, r4) in <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void applyTransformation(float,android.view.animation.Transformation)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void transformMatrix(android.graphics.Matrix,android.view.View)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void prepareForUpdate()>() in <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setScaleX(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void prepareForUpdate()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void invalidateAfterUpdate()>() in <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setScaleX(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void invalidateAfterUpdate()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void prepareForUpdate()>() in <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setScaleY(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void prepareForUpdate()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void invalidateAfterUpdate()>() in <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setScaleY(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void invalidateAfterUpdate()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void prepareForUpdate()>() in <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setTranslationX(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void prepareForUpdate()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void invalidateAfterUpdate()>() in <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setTranslationX(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void invalidateAfterUpdate()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void prepareForUpdate()>() in <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setTranslationY(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void prepareForUpdate()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void invalidateAfterUpdate()>() in <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setTranslationY(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void invalidateAfterUpdate()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.SipHome$4: void <init>(com.csipsimple.ui.SipHome)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.ui.SipHome: com.csipsimple.utils.PreferencesProviderWrapper access$5(com.csipsimple.ui.SipHome)>($r3) in <com.csipsimple.ui.SipHome$4: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.ui.SipHome: com.csipsimple.utils.PreferencesProviderWrapper access$5(com.csipsimple.ui.SipHome)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("has_been_quit", 1) in <com.csipsimple.ui.SipHome$4: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
STATIC edge: staticinvoke <com.csipsimple.ui.SipHome: void access$6(com.csipsimple.ui.SipHome,boolean)>($r3, 1) in <com.csipsimple.ui.SipHome$4: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.ui.SipHome: void access$6(com.csipsimple.ui.SipHome,boolean)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int)>("PJSUA_MED_TP_NULL", 0) in <org.pjsip.pjsua.pjsua_med_tp_st: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_med_tp_st$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_med_tp_st$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_med_tp_st$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_med_tp_st$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_med_tp_st$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_med_tp_st$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_med_tp_st)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_med_tp_st)> ==> <org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_med_tp_st$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_med_tp_st)> ==> <org.pjsip.pjsua.pjsua_med_tp_st$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsua_med_tp_st: org.pjsip.pjsua.pjsua_med_tp_st swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.ArrayUtils: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1) in <com.csipsimple.utils.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)> ==> <java.lang.Object: boolean equals(java.lang.Object)>
VIRTUAL edge: $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>() in <com.csipsimple.utils.ArrayUtils: java.lang.Object[] emptyArray(java.lang.Class)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.ArrayUtils: int idealByteArraySize(int)>($i0) in <com.csipsimple.utils.ArrayUtils: int idealBooleanArraySize(int)> ==> <com.csipsimple.utils.ArrayUtils: int idealByteArraySize(int)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.ArrayUtils: int idealByteArraySize(int)>($i0) in <com.csipsimple.utils.ArrayUtils: int idealCharArraySize(int)> ==> <com.csipsimple.utils.ArrayUtils: int idealByteArraySize(int)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.ArrayUtils: int idealByteArraySize(int)>($i0) in <com.csipsimple.utils.ArrayUtils: int idealFloatArraySize(int)> ==> <com.csipsimple.utils.ArrayUtils: int idealByteArraySize(int)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.ArrayUtils: int idealByteArraySize(int)>($i0) in <com.csipsimple.utils.ArrayUtils: int idealIntArraySize(int)> ==> <com.csipsimple.utils.ArrayUtils: int idealByteArraySize(int)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.ArrayUtils: int idealByteArraySize(int)>($i0) in <com.csipsimple.utils.ArrayUtils: int idealLongArraySize(int)> ==> <com.csipsimple.utils.ArrayUtils: int idealByteArraySize(int)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.ArrayUtils: int idealByteArraySize(int)>($i0) in <com.csipsimple.utils.ArrayUtils: int idealObjectArraySize(int)> ==> <com.csipsimple.utils.ArrayUtils: int idealByteArraySize(int)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.ArrayUtils: int idealByteArraySize(int)>($i0) in <com.csipsimple.utils.ArrayUtils: int idealShortArraySize(int)> ==> <com.csipsimple.utils.ArrayUtils: int idealByteArraySize(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_p_void__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_p_void__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_p_void__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_p_void__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_turn_config_use)> ==> <org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_turn_config_use)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_turn_config_use)> ==> <org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsua_turn_config_use: org.pjsip.pjsua.pjsua_turn_config_use swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
VIRTUAL edge: virtualinvoke $r4.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r0) in <com.csipsimple.ui.prefs.Codecs$TabsAdapter: void <init>(com.csipsimple.ui.prefs.Codecs,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)> ==> <com.csipsimple.ui.prefs.Codecs$TabsAdapter: void onTabUnselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>
VIRTUAL edge: virtualinvoke $r4.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r0) in <com.csipsimple.ui.prefs.Codecs$TabsAdapter: void <init>(com.csipsimple.ui.prefs.Codecs,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)> ==> <com.csipsimple.ui.prefs.Codecs$TabsAdapter: void onPageScrolled(int,float,int)>
VIRTUAL edge: virtualinvoke $r4.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r0) in <com.csipsimple.ui.prefs.Codecs$TabsAdapter: void <init>(com.csipsimple.ui.prefs.Codecs,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)> ==> <com.csipsimple.ui.prefs.Codecs$TabsAdapter: void onTabReselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>
VIRTUAL edge: virtualinvoke $r4.<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r0) in <com.csipsimple.ui.prefs.Codecs$TabsAdapter: void <init>(com.csipsimple.ui.prefs.Codecs,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)> ==> <com.csipsimple.ui.prefs.Codecs$TabsAdapter: void onTabSelected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.ui.prefs.Codecs: boolean access$0(com.csipsimple.ui.prefs.Codecs)>($r2) in <com.csipsimple.ui.prefs.Codecs$TabsAdapter: android.support.v4.app.Fragment getItem(int)> ==> <com.csipsimple.ui.prefs.Codecs: boolean access$0(com.csipsimple.ui.prefs.Codecs)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.ui.prefs.Codecs: void invalidateOptionsMenu()>() in <com.csipsimple.ui.prefs.Codecs$TabsAdapter: void onPageScrollStateChanged(int)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void invalidateOptionsMenu()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("Codecs", $r3) in <com.csipsimple.ui.prefs.Codecs$TabsAdapter: void onPageSelected(int)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int)>("PJSUA_SIP_TIMER_INACTIVE", 0) in <org.pjsip.pjsua.pjsua_sip_timer_use: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_sip_timer_use$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_sip_timer_use$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_sip_timer_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_sip_timer_use$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_sip_timer_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_sip_timer_use$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_sip_timer_use)> ==> <org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_sip_timer_use)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_sip_timer_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_sip_timer_use)> ==> <org.pjsip.pjsua.pjsua_sip_timer_use$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsua_sip_timer_use: org.pjsip.pjsua.pjsua_sip_timer_use swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_turn_config: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_turn_config: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_turn_config: org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type getTurn_conn_type()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_turn_config: org.pjsip.pjsua.pj_str_t getTurn_server()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)>($r1) in <org.pjsip.pjsua.pjsua_turn_config: void setTurn_auth_cred(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type)>($r1) in <org.pjsip.pjsua.pjsua_turn_config: void setTurn_conn_type(org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjmedia_port_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjmedia_port_info: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjmedia_port_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjmedia_port_info: void delete()>() in <org.pjsip.pjsua.pjmedia_port_info: void finalize()> ==> <org.pjsip.pjsua.pjmedia_port_info: void delete()>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjmedia_dir: org.pjsip.pjsua.pjmedia_dir swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjmedia_port_info: org.pjsip.pjsua.pjmedia_dir getDir()> ==> <org.pjsip.pjsua.pjmedia_dir: org.pjsip.pjsua.pjmedia_dir swigToEnum(int)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjmedia_port_info: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format getFmt()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjmedia_port_info: org.pjsip.pjsua.pj_str_t getName()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjmedia_dir: int swigValue()>() in <org.pjsip.pjsua.pjmedia_port_info: void setDir(org.pjsip.pjsua.pjmedia_dir)> ==> <org.pjsip.pjsua.pjmedia_dir: int swigValue()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format)>($r1) in <org.pjsip.pjsua.pjmedia_port_info: void setFmt(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjmedia_port_info: void setName(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Freeconet: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Freeconet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Freeconet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_dns_srv", 1) in <com.csipsimple.wizards.impl.Freeconet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("keep_alive_interval_mobile", "60") in <com.csipsimple.wizards.impl.Freeconet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>($r1) in <com.csipsimple.models.CallerInfo$CallerInfoLruCache: com.csipsimple.models.CallerInfo create(java.lang.String)> ==> <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getPhoneNumber(com.csipsimple.api.SipUri$ParsedSipContactInfos)>($r3) in <com.csipsimple.models.CallerInfo$CallerInfoLruCache: com.csipsimple.models.CallerInfo create(java.lang.String)> ==> <com.csipsimple.api.SipUri: java.lang.String getPhoneNumber(com.csipsimple.api.SipUri$ParsedSipContactInfos)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallerInfo", $r6) in <com.csipsimple.models.CallerInfo$CallerInfoLruCache: com.csipsimple.models.CallerInfo create(java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.models.CallerInfo$CallerInfoLruCache: com.csipsimple.models.CallerInfo create(java.lang.String)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String getContactAddress()>() in <com.csipsimple.models.CallerInfo$CallerInfoLruCache: com.csipsimple.models.CallerInfo create(java.lang.String)> ==> <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String getContactAddress()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.models.CallerInfo: void <init>()>() in <com.csipsimple.models.CallerInfo$CallerInfoLruCache: com.csipsimple.models.CallerInfo create(java.lang.String)> ==> <com.csipsimple.models.CallerInfo: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.models.CallerInfo$CallerInfoLruCache: com.csipsimple.models.CallerInfo create(java.lang.String)>($r3) in <com.csipsimple.models.CallerInfo$CallerInfoLruCache: java.lang.Object create(java.lang.Object)> ==> <com.csipsimple.models.CallerInfo$CallerInfoLruCache: com.csipsimple.models.CallerInfo create(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver: void <init>(com.actionbarsherlock.internal.view.menu.MenuPopupHelper,com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver)>($r1, null) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: void <init>(com.actionbarsherlock.internal.view.menu.MenuPopupHelper,com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver: void <init>(com.actionbarsherlock.internal.view.menu.MenuPopupHelper,com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: void findExpandedIndex()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: void <init>(com.actionbarsherlock.internal.view.menu.MenuPopupHelper,com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: void findExpandedIndex()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: com.actionbarsherlock.internal.view.menu.MenuBuilder access$2(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>($r1) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: void findExpandedIndex()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: com.actionbarsherlock.internal.view.menu.MenuBuilder access$2(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl getExpandedItem()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: void findExpandedIndex()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl getExpandedItem()>
VIRTUAL edge: $r4 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: void findExpandedIndex()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>
STATIC edge: $z0 = staticinvoke <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean access$0(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>($r1) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: int getCount()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean access$0(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: int getCount()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: int getCount()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>
STATIC edge: $z0 = staticinvoke <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean access$0(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>($r1) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean access$0(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int)>($i0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: java.lang.Object getItem(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: android.view.LayoutInflater access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>($r3) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: android.view.LayoutInflater access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>
VIRTUAL edge: virtualinvoke $r6.<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setForceShowIcon(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setForceShowIcon(boolean)>
VIRTUAL edge: $r7 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int)>($i0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>($r1) in <com.csipsimple.service.SipService$SyncRestartRunnable: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.service.SipService: boolean stopSipStack()>() in <com.csipsimple.service.SipService$SyncRestartRunnable: java.lang.Object runWithReturn()> ==> <com.csipsimple.service.SipService: boolean stopSipStack()>
STATIC edge: staticinvoke <com.csipsimple.service.SipService: void access$9(com.csipsimple.service.SipService)>($r1) in <com.csipsimple.service.SipService$SyncRestartRunnable: java.lang.Object runWithReturn()> ==> <com.csipsimple.service.SipService: void access$9(com.csipsimple.service.SipService)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP SRV", "Can\'t stop ... so do not restart ! ") in <com.csipsimple.service.SipService$SyncRestartRunnable: java.lang.Object runWithReturn()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.wizards.impl.AccountBalanceHelper$1: void <init>(com.csipsimple.wizards.impl.AccountBalanceHelper,com.csipsimple.api.SipProfile)>(r0, $r1) in <com.csipsimple.wizards.impl.AccountBalanceHelper: void launchRequest(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AccountBalanceHelper$1: void <init>(com.csipsimple.wizards.impl.AccountBalanceHelper,com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r2.<java.lang.Thread: void start()>() in <com.csipsimple.wizards.impl.AccountBalanceHelper: void launchRequest(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AccountBalanceHelper$1: void run()>
STATIC edge: $r7 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.widgets.EditSipUri$ContactAdapter: void <init>(com.csipsimple.widgets.EditSipUri,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.widgets.EditSipUri$ContactAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.csipsimple.wizards.impl.AccountBalanceHelper$1: void <init>(com.csipsimple.wizards.impl.AccountBalanceHelper,com.csipsimple.api.SipProfile)> ==> <java.lang.Thread: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.ZengCn: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.ZengCn: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.ZengCn: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 0) in <com.csipsimple.wizards.impl.ZengCn: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>($r1) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>($r1) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: int getCount()> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>($r1) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: java.lang.Object getItem(int)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
VIRTUAL edge: $r5 = virtualinvoke $r4.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: com.actionbarsherlock.app.ActionBar$Tab getTab()>() in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: java.lang.Object getItem(int)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: com.actionbarsherlock.app.ActionBar$Tab getTab()>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: java.lang.Object getItem(int)>($i0) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: java.lang.Object getItem(int)>
STATIC edge: $r6 = staticinvoke <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView access$1(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean)>($r3, $r5, 1) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView access$1(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean)>
VIRTUAL edge: virtualinvoke $r6.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void bindTab(com.actionbarsherlock.app.ActionBar$Tab)>($r5) in <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void bindTab(com.actionbarsherlock.app.ActionBar$Tab)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.MediaManager: void stopRing()>() in <com.csipsimple.service.MediaManager: void actualSetAudioInCall()> ==> <com.csipsimple.service.MediaManager: void stopRing()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.MediaManager: void saveAudioState()>() in <com.csipsimple.service.MediaManager: void actualSetAudioInCall()> ==> <com.csipsimple.service.MediaManager: void saveAudioState()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(9) in <com.csipsimple.service.MediaManager: void actualSetAudioInCall()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
VIRTUAL edge: $r11 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>() in <com.csipsimple.service.MediaManager: void actualSetAudioInCall()> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>
VIRTUAL edge: $z0 = virtualinvoke $r11.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("keep_awake_incall") in <com.csipsimple.service.MediaManager: void actualSetAudioInCall()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
SPECIAL edge: $i1 = specialinvoke r0.<com.csipsimple.service.MediaManager: int getAudioTargetMode()>() in <com.csipsimple.service.MediaManager: void actualSetAudioInCall()> ==> <com.csipsimple.service.MediaManager: int getAudioTargetMode()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("MediaManager", $r15) in <com.csipsimple.service.MediaManager: void actualSetAudioInCall()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r11.<com.csipsimple.utils.PreferencesProviderWrapper: boolean generateForSetCall()>() in <com.csipsimple.service.MediaManager: void actualSetAudioInCall()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean generateForSetCall()>
VIRTUAL edge: $z0 = virtualinvoke $r11.<com.csipsimple.utils.PreferencesProviderWrapper: boolean useRoutingApi()>() in <com.csipsimple.service.MediaManager: void actualSetAudioInCall()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean useRoutingApi()>
STATIC edge: $i1 = staticinvoke <com.csipsimple.utils.Compatibility: int getInCallStream()>() in <com.csipsimple.service.MediaManager: void actualSetAudioInCall()> ==> <com.csipsimple.utils.Compatibility: int getInCallStream()>
VIRTUAL edge: $f0 = virtualinvoke $r11.<com.csipsimple.utils.PreferencesProviderWrapper: float getInitialVolumeLevel()>() in <com.csipsimple.service.MediaManager: void actualSetAudioInCall()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: float getInitialVolumeLevel()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)>($i1, $i2, 0) in <com.csipsimple.service.MediaManager: void actualSetAudioInCall()> ==> <com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)>
STATIC edge: $i1 = staticinvoke <com.csipsimple.utils.Compatibility: int getApiLevel()>() in <com.csipsimple.service.MediaManager: void actualSetAudioInCall()> ==> <com.csipsimple.utils.Compatibility: int getApiLevel()>
VIRTUAL edge: $z0 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Samsung") in <com.csipsimple.service.MediaManager: void actualSetAudioInCall()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("MediaManager", "Could not set audio mode for Samsung device") in <com.csipsimple.service.MediaManager: void actualSetAudioInCall()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("MediaManager", "Unset Audio In call") in <com.csipsimple.service.MediaManager: void actualUnsetAudioInCall()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.Compatibility: int getInCallStream()>() in <com.csipsimple.service.MediaManager: void actualUnsetAudioInCall()> ==> <com.csipsimple.utils.Compatibility: int getInCallStream()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.MediaManager: void restoreAudioState()>() in <com.csipsimple.service.MediaManager: void actualUnsetAudioInCall()> ==> <com.csipsimple.service.MediaManager: void restoreAudioState()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.Compatibility: int getInCallStream()>() in <com.csipsimple.service.MediaManager: void saveAudioState()> ==> <com.csipsimple.utils.Compatibility: int getInCallStream()>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.service.MediaManager: int getAudioTargetMode()>() in <com.csipsimple.service.MediaManager: void saveAudioState()> ==> <com.csipsimple.service.MediaManager: int getAudioTargetMode()>
VIRTUAL edge: $r6 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>() in <com.csipsimple.service.MediaManager: void saveAudioState()> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: boolean useRoutingApi()>() in <com.csipsimple.service.MediaManager: void saveAudioState()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean useRoutingApi()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)>($i0, -9999) in <com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)> ==> <com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.Ringer: void updateRingerMode()>() in <com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)> ==> <com.csipsimple.utils.Ringer: void updateRingerMode()>
STATIC edge: $i1 = staticinvoke <com.csipsimple.utils.Compatibility: int getInCallStream()>() in <com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)> ==> <com.csipsimple.utils.Compatibility: int getInCallStream()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>() in <com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceFloatValue(java.lang.String,float)>("snd_stream_level", f0) in <com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceFloatValue(java.lang.String,float)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.api.MediaState: void <init>()>() in <com.csipsimple.service.MediaManager: com.csipsimple.api.MediaState getMediaState()> ==> <com.csipsimple.api.MediaState: void <init>()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.MediaManager: void setSoftwareVolume()>() in <com.csipsimple.service.MediaManager: void onBluetoothStateChanged(int)> ==> <com.csipsimple.service.MediaManager: void setSoftwareVolume()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.MediaManager: void broadcastMediaChanged()>() in <com.csipsimple.service.MediaManager: void onBluetoothStateChanged(int)> ==> <com.csipsimple.service.MediaManager: void broadcastMediaChanged()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>() in <com.csipsimple.service.MediaManager: void resetSettings()> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("auto_connect_bluetooth") in <com.csipsimple.service.MediaManager: void resetSettings()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.MediaManager: void actualSetAudioInCall()>() in <com.csipsimple.service.MediaManager: void setAudioInCall()> ==> <com.csipsimple.service.MediaManager: void actualSetAudioInCall()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("MediaManager", $r2) in <com.csipsimple.service.MediaManager: void setBluetoothOn(boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke $r4.<com.csipsimple.utils.Ringer: boolean isRinging()>() in <com.csipsimple.service.MediaManager: void setBluetoothOn(boolean)> ==> <com.csipsimple.utils.Ringer: boolean isRinging()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService: void setNoSnd()>() in <com.csipsimple.service.MediaManager: void setBluetoothOn(boolean)> ==> <com.csipsimple.service.SipService: void setNoSnd()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService: void setSnd()>() in <com.csipsimple.service.MediaManager: void setBluetoothOn(boolean)> ==> <com.csipsimple.service.SipService: void setSnd()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.MediaManager: void broadcastMediaChanged()>() in <com.csipsimple.service.MediaManager: void setBluetoothOn(boolean)> ==> <com.csipsimple.service.MediaManager: void broadcastMediaChanged()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.MediaManager: void setSoftwareVolume()>() in <com.csipsimple.service.MediaManager: void setMicrophoneMute(boolean)> ==> <com.csipsimple.service.MediaManager: void setSoftwareVolume()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.MediaManager: void broadcastMediaChanged()>() in <com.csipsimple.service.MediaManager: void setMicrophoneMute(boolean)> ==> <com.csipsimple.service.MediaManager: void broadcastMediaChanged()>
VIRTUAL edge: $r6 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>() in <com.csipsimple.service.MediaManager: void setSoftwareVolume()> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>
VIRTUAL edge: $f0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: float getPreferenceFloatValue(java.lang.String)>(r4) in <com.csipsimple.service.MediaManager: void setSoftwareVolume()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: float getPreferenceFloatValue(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.MediaManager: void setSoftwareVolume()> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.service.MediaManager$1: void <init>(com.csipsimple.service.MediaManager,float,float,boolean)>(r0, $f0, f1, $z0) in <com.csipsimple.service.MediaManager: void setSoftwareVolume()> ==> <com.csipsimple.service.MediaManager$1: void <init>(com.csipsimple.service.MediaManager,float,float,boolean)>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r1) in <com.csipsimple.service.MediaManager: void setSoftwareVolume()> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $z1 = virtualinvoke $r2.<com.csipsimple.utils.Ringer: boolean isRinging()>() in <com.csipsimple.service.MediaManager: void setSpeakerphoneOn(boolean)> ==> <com.csipsimple.utils.Ringer: boolean isRinging()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService: void setNoSnd()>() in <com.csipsimple.service.MediaManager: void setSpeakerphoneOn(boolean)> ==> <com.csipsimple.service.SipService: void setNoSnd()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService: void setSnd()>() in <com.csipsimple.service.MediaManager: void setSpeakerphoneOn(boolean)> ==> <com.csipsimple.service.SipService: void setSnd()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.MediaManager: void broadcastMediaChanged()>() in <com.csipsimple.service.MediaManager: void setSpeakerphoneOn(boolean)> ==> <com.csipsimple.service.MediaManager: void broadcastMediaChanged()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.MediaManager: void saveAudioState()>() in <com.csipsimple.service.MediaManager: void startRing(java.lang.String)> ==> <com.csipsimple.service.MediaManager: void saveAudioState()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.csipsimple.utils.Ringer: boolean isRinging()>() in <com.csipsimple.service.MediaManager: void startRing(java.lang.String)> ==> <com.csipsimple.utils.Ringer: boolean isRinging()>
VIRTUAL edge: $r5 = virtualinvoke $r4.<com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>() in <com.csipsimple.service.MediaManager: void startRing(java.lang.String)> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>
VIRTUAL edge: $r6 = virtualinvoke $r5.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getRingtone()>() in <com.csipsimple.service.MediaManager: void startRing(java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getRingtone()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.utils.Ringer: void ring(java.lang.String,java.lang.String)>($r1, $r6) in <com.csipsimple.service.MediaManager: void startRing(java.lang.String)> ==> <com.csipsimple.utils.Ringer: void ring(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("MediaManager", "Already ringing ....") in <com.csipsimple.service.MediaManager: void startRing(java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.bluetooth.BluetoothWrapper: void setBluetoothChangeListener(com.csipsimple.utils.bluetooth.BluetoothWrapper$BluetoothChangeListener)>(r0) in <com.csipsimple.service.MediaManager: void startService()> ==> <com.csipsimple.service.MediaManager: void onBluetoothStateChanged(int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.MediaManager: void setMicrophoneMute(boolean)>($z0) in <com.csipsimple.service.MediaManager: void toggleMute()> ==> <com.csipsimple.service.MediaManager: void setMicrophoneMute(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.MediaManager: void actualUnsetAudioInCall()>() in <com.csipsimple.service.MediaManager: void unsetAudioInCall()> ==> <com.csipsimple.service.MediaManager: void actualUnsetAudioInCall()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.MediaState$1: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.api.MediaState: void <init>(android.os.Parcel,com.csipsimple.api.MediaState)>($r1, null) in <com.csipsimple.api.MediaState$1: com.csipsimple.api.MediaState createFromParcel(android.os.Parcel)> ==> <com.csipsimple.api.MediaState: void <init>(android.os.Parcel,com.csipsimple.api.MediaState)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.api.MediaState$1: com.csipsimple.api.MediaState createFromParcel(android.os.Parcel)>($r1) in <com.csipsimple.api.MediaState$1: java.lang.Object createFromParcel(android.os.Parcel)> ==> <com.csipsimple.api.MediaState$1: com.csipsimple.api.MediaState createFromParcel(android.os.Parcel)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.api.MediaState$1: com.csipsimple.api.MediaState[] newArray(int)>($i0) in <com.csipsimple.api.MediaState$1: java.lang.Object[] newArray(int)> ==> <com.csipsimple.api.MediaState$1: com.csipsimple.api.MediaState[] newArray(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R$color: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuItem: void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: void setShowAsAction(int)>($i0) in <com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: void setShowAsAction(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.dialpad.DialerLayout: void init()>() in <com.csipsimple.ui.dialpad.DialerLayout: void <init>(android.content.Context)> ==> <com.csipsimple.ui.dialpad.DialerLayout: void init()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.dialpad.DialerLayout: void init()>() in <com.csipsimple.ui.dialpad.DialerLayout: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.dialpad.DialerLayout: void init()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("DialerLayout", "We force height to show list") in <com.csipsimple.ui.dialpad.DialerLayout: void onMeasure(int,int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.PickupSipUri: void sendPositiveResult()>() in <com.csipsimple.ui.PickupSipUri: void access$0(com.csipsimple.ui.PickupSipUri)> ==> <com.csipsimple.ui.PickupSipUri: void sendPositiveResult()>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.csipsimple.widgets.EditSipUri: com.csipsimple.widgets.EditSipUri$ToCall getValue()>() in <com.csipsimple.ui.PickupSipUri: void sendPositiveResult()> ==> <com.csipsimple.widgets.EditSipUri: com.csipsimple.widgets.EditSipUri$ToCall getValue()>
VIRTUAL edge: $r6 = virtualinvoke $r3.<com.csipsimple.widgets.EditSipUri$ToCall: java.lang.String getCallee()>() in <com.csipsimple.ui.PickupSipUri: void sendPositiveResult()> ==> <com.csipsimple.widgets.EditSipUri$ToCall: java.lang.String getCallee()>
VIRTUAL edge: $r7 = virtualinvoke $r3.<com.csipsimple.widgets.EditSipUri$ToCall: java.lang.Long getAccountId()>() in <com.csipsimple.ui.PickupSipUri: void sendPositiveResult()> ==> <com.csipsimple.widgets.EditSipUri$ToCall: java.lang.Long getAccountId()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.PickupSipUri: void sendPositiveResult()>() in <com.csipsimple.ui.PickupSipUri: void onClick(android.view.View)> ==> <com.csipsimple.ui.PickupSipUri: void sendPositiveResult()>
VIRTUAL edge: $r5 = virtualinvoke $r4.<com.csipsimple.widgets.EditSipUri: android.widget.EditText getTextField()>() in <com.csipsimple.ui.PickupSipUri: void onCreate(android.os.Bundle)> ==> <com.csipsimple.widgets.EditSipUri: android.widget.EditText getTextField()>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.widgets.EditSipUri: void setShowExternals(boolean)>(0) in <com.csipsimple.ui.PickupSipUri: void onCreate(android.os.Bundle)> ==> <com.csipsimple.widgets.EditSipUri: void setShowExternals(boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.view.ActionProvider: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.LiberTalk: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.LiberTalk: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.LiberTalk: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r3) in <com.csipsimple.wizards.impl.LiberTalk: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
STATIC edge: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) in <com.csipsimple.wizards.impl.LiberTalk: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.wizards.impl.LiberTalk: java.lang.String getDomain()>() in <com.csipsimple.wizards.impl.LiberTalk: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.LiberTalk: java.lang.String getDomain()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.LiberTalk: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.LiberTalk: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.LiberTalk: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.LiberTalk: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("use_compact_form", 1) in <com.csipsimple.wizards.impl.LiberTalk: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.MenuItemMule: void <init>(com.actionbarsherlock.view.MenuItem)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2) in <com.actionbarsherlock.internal.widget.ActionBarView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke $r5.<com.actionbarsherlock.internal.widget.ActionBarView$1: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)>(r0) in <com.actionbarsherlock.internal.widget.ActionBarView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$1: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)>
SPECIAL edge: specialinvoke $r6.<com.actionbarsherlock.internal.widget.ActionBarView$2: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)>(r0) in <com.actionbarsherlock.internal.widget.ActionBarView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$2: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)>
SPECIAL edge: specialinvoke $r7.<com.actionbarsherlock.internal.widget.ActionBarView$3: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)>(r0) in <com.actionbarsherlock.internal.widget.ActionBarView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$3: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)>
STATIC edge: $r13 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.actionbarsherlock.internal.widget.ActionBarView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
VIRTUAL edge: virtualinvoke $r18.<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setUp(boolean)>(1) in <com.actionbarsherlock.internal.widget.ActionBarView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setUp(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: void setDisplayOptions(int)>($i0) in <com.actionbarsherlock.internal.widget.ActionBarView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setDisplayOptions(int)>
SPECIAL edge: specialinvoke $r21.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence)>($r1, 0, 16908332, 0, 0, $r3) in <com.actionbarsherlock.internal.widget.ActionBarView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.internal.widget.ActionBarView: void initTitle()>() in <com.actionbarsherlock.internal.widget.ActionBarView: void access$11(com.actionbarsherlock.internal.widget.ActionBarView)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void initTitle()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>($r2) in <com.actionbarsherlock.internal.widget.ActionBarView: void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>($r4, null) in <com.actionbarsherlock.internal.widget.ActionBarView: void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>($r4, null) in <com.actionbarsherlock.internal.widget.ActionBarView: void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)>(1) in <com.actionbarsherlock.internal.widget.ActionBarView: void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)>(1) in <com.actionbarsherlock.internal.widget.ActionBarView: void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)>
VIRTUAL edge: virtualinvoke $r6.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.widget.ActionBarView: void setTitleImpl(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke r2.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean collapseActionView()>() in <com.actionbarsherlock.internal.widget.ActionBarView: void collapseActionView()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean collapseActionView()>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.app.ActionBar$LayoutParams: void <init>(int)>(19) in <com.actionbarsherlock.internal.widget.ActionBarView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()> ==> <com.actionbarsherlock.app.ActionBar$LayoutParams: void <init>(int)>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.app.ActionBar$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1) in <com.actionbarsherlock.internal.widget.ActionBarView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)> ==> <com.actionbarsherlock.app.ActionBar$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>() in <com.actionbarsherlock.internal.widget.ActionBarView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsSpinner: int getSelectedItemPosition()>() in <com.actionbarsherlock.internal.widget.ActionBarView: int getDropdownSelectedPosition()> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: int getSelectedItemPosition()>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>($r2, null, 0, $i0) in <com.actionbarsherlock.internal.widget.ActionBarView: void initIndeterminateProgress()> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>($r2, null, 0, $i0) in <com.actionbarsherlock.internal.widget.ActionBarView: void initProgress()> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setMax(int)>(10000) in <com.actionbarsherlock.internal.widget.ActionBarView: void initProgress()> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setMax(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <com.actionbarsherlock.internal.widget.ActionBarView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: void initTitle()>() in <com.actionbarsherlock.internal.widget.ActionBarView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void initTitle()>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)>(1) in <com.actionbarsherlock.internal.widget.ActionBarView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>() in <com.actionbarsherlock.internal.widget.ActionBarView: void onDetachedFromWindow()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideSubMenus()>() in <com.actionbarsherlock.internal.widget.ActionBarView: void onDetachedFromWindow()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideSubMenus()>
VIRTUAL edge: $i3 = virtualinvoke r2.<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: int getLeftOffset()>() in <com.actionbarsherlock.internal.widget.ActionBarView: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: int getLeftOffset()>
VIRTUAL edge: i5 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: int positionChild(android.view.View,int,int,int)>(r2, i5, $i6, $i1) in <com.actionbarsherlock.internal.widget.ActionBarView: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: int positionChild(android.view.View,int,int,int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: int positionChildInverse(android.view.View,int,int,int)>($r4, $i2, $i6, $i1) in <com.actionbarsherlock.internal.widget.ActionBarView: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: int positionChildInverse(android.view.View,int,int,int)>
VIRTUAL edge: $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.internal.widget.ActionBarView: void onMeasure(int,int)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>() in <com.actionbarsherlock.internal.widget.ActionBarView: void onMeasure(int,int)> ==> <java.lang.Class: java.lang.String getSimpleName()>
STATIC edge: $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6) in <com.actionbarsherlock.internal.widget.ActionBarView: void onMeasure(int,int)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $i10 = virtualinvoke $r7.<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: int getLeftOffset()>() in <com.actionbarsherlock.internal.widget.ActionBarView: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: int getLeftOffset()>
VIRTUAL edge: i4 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: int measureChildView(android.view.View,int,int,int)>($r2, i4, $i9, 0) in <com.actionbarsherlock.internal.widget.ActionBarView: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: int measureChildView(android.view.View,int,int,int)>
VIRTUAL edge: $r8 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r8) in <com.actionbarsherlock.internal.widget.ActionBarView: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
VIRTUAL edge: virtualinvoke $r14.<com.actionbarsherlock.internal.widget.ActionBarContextView: void setContentHeight(int)>($i1) in <com.actionbarsherlock.internal.widget.ActionBarView: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void setContentHeight(int)>
VIRTUAL edge: $r5 = virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>($i0) in <com.actionbarsherlock.internal.widget.ActionBarView: void onRestoreInstanceState(android.os.Parcelable)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: void postShowOverflowMenu()>() in <com.actionbarsherlock.internal.widget.ActionBarView: void onRestoreInstanceState(android.os.Parcelable)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void postShowOverflowMenu()>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.widget.ActionBarView$SavedState: void <init>(android.os.Parcelable)>($r2) in <com.actionbarsherlock.internal.widget.ActionBarView: android.os.Parcelable onSaveInstanceState()> ==> <com.actionbarsherlock.internal.widget.ActionBarView$SavedState: void <init>(android.os.Parcelable)>
VIRTUAL edge: $i0 = virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>() in <com.actionbarsherlock.internal.widget.ActionBarView: android.os.Parcelable onSaveInstanceState()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: boolean isOverflowMenuShowing()>() in <com.actionbarsherlock.internal.widget.ActionBarView: android.os.Parcelable onSaveInstanceState()> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: boolean isOverflowMenuShowing()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setUp(boolean)>(z2) in <com.actionbarsherlock.internal.widget.ActionBarView: void setDisplayOptions(int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setUp(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: void setHomeButtonEnabled(boolean)>(1) in <com.actionbarsherlock.internal.widget.ActionBarView: void setDisplayOptions(int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setHomeButtonEnabled(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setIcon(android.graphics.drawable.Drawable)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView: void setDisplayOptions(int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setIcon(android.graphics.drawable.Drawable)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: void initTitle()>() in <com.actionbarsherlock.internal.widget.ActionBarView: void setDisplayOptions(int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void initTitle()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsSpinner: void setAdapter(android.widget.SpinnerAdapter)>($r1) in <com.actionbarsherlock.internal.widget.ActionBarView: void setDropdownAdapter(android.widget.SpinnerAdapter)> ==> <com.actionbarsherlock.internal.widget.IcsSpinner: void setAdapter(android.widget.SpinnerAdapter)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsSpinner: void setSelection(int)>($i0) in <com.actionbarsherlock.internal.widget.ActionBarView: void setDropdownSelectedPosition(int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelection(int)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)>(1) in <com.actionbarsherlock.internal.widget.ActionBarView: void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: void setIcon(android.graphics.drawable.Drawable)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView: void setIcon(int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setIcon(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setIcon(android.graphics.drawable.Drawable)>($r1) in <com.actionbarsherlock.internal.widget.ActionBarView: void setIcon(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setIcon(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: void setLogo(android.graphics.drawable.Drawable)>($r3) in <com.actionbarsherlock.internal.widget.ActionBarView: void setLogo(int)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setLogo(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setIcon(android.graphics.drawable.Drawable)>($r1) in <com.actionbarsherlock.internal.widget.ActionBarView: void setLogo(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setIcon(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>($r5) in <com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>
SPECIAL edge: specialinvoke $r5.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void <init>(android.content.Context)>($r10) in <com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>($r2) in <com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setId(int)>($i0) in <com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)> ==> <com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void setId(int)>
SPECIAL edge: specialinvoke $r6.<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void <init>(com.actionbarsherlock.internal.widget.ActionBarView,com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter)>(r0, null) in <com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void <init>(com.actionbarsherlock.internal.widget.ActionBarView,com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter)>
STATIC edge: $z0 = staticinvoke <com.actionbarsherlock.internal.ResourcesCompat: boolean getResources_getBoolean(android.content.Context,int)>($r10, $i0) in <com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)> ==> <com.actionbarsherlock.internal.ResourcesCompat: boolean getResources_getBoolean(android.content.Context,int)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)>($z0) in <com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder)>($r4) in <com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
VIRTUAL edge: $r11 = virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>(r0) in <com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setWidthLimit(int,boolean)>($i0, 1) in <com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setWidthLimit(int,boolean)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setItemLimit(int)>(2147483647) in <com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setItemLimit(int)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: int getAnimatedVisibility()>() in <com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: int getAnimatedVisibility()>
VIRTUAL edge: virtualinvoke $r7.<com.actionbarsherlock.internal.view.menu.ActionMenuView: void setVisibility(int)>($i0) in <com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void setVisibility(int)>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.widget.IcsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>($r5, null, i1) in <com.actionbarsherlock.internal.widget.ActionBarView: void setNavigationMode(int)> ==> <com.actionbarsherlock.internal.widget.IcsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
VIRTUAL edge: $r8 = virtualinvoke $r4.<com.actionbarsherlock.internal.widget.IcsSpinner: android.widget.SpinnerAdapter getAdapter()>() in <com.actionbarsherlock.internal.widget.ActionBarView: void setNavigationMode(int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.widget.SpinnerAdapter getAdapter()>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.IcsSpinner: void setAdapter(android.widget.SpinnerAdapter)>($r8) in <com.actionbarsherlock.internal.widget.ActionBarView: void setNavigationMode(int)> ==> <com.actionbarsherlock.internal.widget.IcsSpinner: void setAdapter(android.widget.SpinnerAdapter)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.IcsSpinner: void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener)>($r10) in <com.actionbarsherlock.internal.widget.ActionBarView: void setNavigationMode(int)> ==> <com.actionbarsherlock.internal.widget.IcsAdapterView: void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.ActionBarContainer: void setVisibility(int)>($b0) in <com.actionbarsherlock.internal.widget.ActionBarView: void setSplitActionBar(boolean)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setVisibility(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.AbsActionBarView: void setSplitActionBar(boolean)>($z0) in <com.actionbarsherlock.internal.widget.ActionBarView: void setSplitActionBar(boolean)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void setSplitActionBar(boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: void setTitleImpl(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.widget.ActionBarView: void setTitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setTitleImpl(java.lang.CharSequence)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView: void setTitleImpl(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.widget.ActionBarView: void setWindowTitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.widget.ActionBarView: void setTitleImpl(java.lang.CharSequence)>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.csipsimple.ui.messages.ConversationsListFragment$5: void <init>(com.csipsimple.ui.messages.ConversationsListFragment,int)> ==> <java.lang.Thread: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.ui.messages.ConversationsListFragment: com.csipsimple.ui.messages.ConverstationsAdapter access$2(com.csipsimple.ui.messages.ConversationsListFragment)>($r1) in <com.csipsimple.ui.messages.ConversationsListFragment$5: void run()> ==> <com.csipsimple.ui.messages.ConversationsListFragment: com.csipsimple.ui.messages.ConverstationsAdapter access$2(com.csipsimple.ui.messages.ConversationsListFragment)>
VIRTUAL edge: $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r6) in <com.csipsimple.ui.messages.ConversationsListFragment$5: void run()> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r12.<com.csipsimple.ui.messages.ConversationsListFragment$5$1: void <init>(com.csipsimple.ui.messages.ConversationsListFragment$5,int,java.lang.String,java.lang.String)>(r0, $i0, r9, $r8) in <com.csipsimple.ui.messages.ConversationsListFragment$5: void run()> ==> <com.csipsimple.ui.messages.ConversationsListFragment$5$1: void <init>(com.csipsimple.ui.messages.ConversationsListFragment$5,int,java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r11.<android.support.v4.app.FragmentActivity: void runOnUiThread(java.lang.Runnable)>($r12) in <com.csipsimple.ui.messages.ConversationsListFragment$5: void run()> ==> <com.csipsimple.ui.messages.ConversationsListFragment$5$1: void run()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void <init>(com.actionbarsherlock.widget.ActivityChooserModel)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void <init>(com.actionbarsherlock.widget.ActivityChooserModel)>($r1) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister)> ==> <com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void <init>(com.actionbarsherlock.widget.ActivityChooserModel)>
STATIC edge: $r7 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object access$2(com.actionbarsherlock.widget.ActivityChooserModel)>($r6) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object access$2(com.actionbarsherlock.widget.ActivityChooserModel)>
STATIC edge: $r8 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: java.util.List access$3(com.actionbarsherlock.widget.ActivityChooserModel)>($r6) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: java.util.List access$3(com.actionbarsherlock.widget.ActivityChooserModel)>
STATIC edge: $r9 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: android.content.Context access$0(com.actionbarsherlock.widget.ActivityChooserModel)>($r6) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: android.content.Context access$0(com.actionbarsherlock.widget.ActivityChooserModel)>
STATIC edge: $r10 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String access$1(com.actionbarsherlock.widget.ActivityChooserModel)>($r6) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String access$1(com.actionbarsherlock.widget.ActivityChooserModel)>
STATIC edge: $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void run()> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r10 = staticinvoke <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String access$8()>() in <com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String access$8()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.messages.ConversationsListFragment$3: void <init>(com.csipsimple.ui.messages.ConversationsListFragment)> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.ui.messages.ConversationsListFragment: void access$1(com.csipsimple.ui.messages.ConversationsListFragment,java.lang.String)>($r2, null) in <com.csipsimple.ui.messages.ConversationsListFragment$3: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void access$1(com.csipsimple.ui.messages.ConversationsListFragment,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.messages.ConversationsListFragment$2: void <init>(com.csipsimple.ui.messages.ConversationsListFragment)> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.ui.messages.ConversationsListFragment: void access$0(com.csipsimple.ui.messages.ConversationsListFragment)>($r2) in <com.csipsimple.ui.messages.ConversationsListFragment$2: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void access$0(com.csipsimple.ui.messages.ConversationsListFragment)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.impl.OnSip$1: void <init>()>() in <com.csipsimple.wizards.impl.OnSip: void <clinit>()> ==> <com.csipsimple.wizards.impl.OnSip$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>() in <com.csipsimple.wizards.impl.OnSip: void <init>()> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.OnSip: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.OnSip: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.OnSip: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("G722/16000/1", "wb", "245") in <com.csipsimple.wizards.impl.OnSip: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.impl.VoipTel$1: void <init>(com.csipsimple.wizards.impl.VoipTel)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.wizards.impl.VoipTel: com.csipsimple.wizards.impl.AccountCreationWebview access$0(com.csipsimple.wizards.impl.VoipTel)>($r3) in <com.csipsimple.wizards.impl.VoipTel$1: void onClick(android.view.View)> ==> <com.csipsimple.wizards.impl.VoipTel: com.csipsimple.wizards.impl.AccountCreationWebview access$0(com.csipsimple.wizards.impl.VoipTel)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.wizards.impl.AccountCreationWebview: void show()>() in <com.csipsimple.wizards.impl.VoipTel$1: void onClick(android.view.View)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: void show()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pj_qos_type$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.actionbarsherlock.internal.view.menu.ActionMenuView: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r1, $r2) in <com.actionbarsherlock.internal.view.menu.ActionMenuView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.widget.IcsLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean hasText()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean hasText()>
VIRTUAL edge: z2 = virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean hasText()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuView: void onMeasureExactFormat(int,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean hasText()>
STATIC edge: $i17 = staticinvoke <com.actionbarsherlock.internal.view.menu.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)>($r1, i3, $i17, $i1, i5) in <com.actionbarsherlock.internal.view.menu.ActionMenuView: void onMeasureExactFormat(int,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuView: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams()>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams: void <init>(int,int)>(-2, -2) in <com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams: void <init>(int,int)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)>($r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuView: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>($r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuView: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, $r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams)>(r3) in <com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)>($r1, 0) in <com.actionbarsherlock.internal.view.menu.ActionMenuView: boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void onConfigurationChanged(android.content.res.Configuration)>($r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void onConfigurationChanged(android.content.res.Configuration)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)>(0) in <com.actionbarsherlock.internal.view.menu.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean isOverflowMenuShowing()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean isOverflowMenuShowing()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean dismissPopupMenus()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuView: void onDetachedFromWindow()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean dismissPopupMenus()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void onDraw(android.graphics.Canvas)>($r1) in <com.actionbarsherlock.internal.view.menu.ActionMenuView: void onDraw(android.graphics.Canvas)> ==> <com.actionbarsherlock.internal.widget.IcsLinearLayout: void onDraw(android.graphics.Canvas)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuView: boolean hasDividerBeforeChildAt(int)>($i9) in <com.actionbarsherlock.internal.view.menu.ActionMenuView: void onLayout(boolean,int,int,int,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: boolean hasDividerBeforeChildAt(int)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.ActionMenuView: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuView: void onMeasureExactFormat(int,int)>($i0, $i1) in <com.actionbarsherlock.internal.view.menu.ActionMenuView: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuView: void onMeasureExactFormat(int,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor$1: void <init>(com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor,java.lang.Runnable)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void scheduleNext()>() in <com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor$1: void run()> ==> <com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void scheduleNext()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.api.SipCallSession: void <init>(android.os.Parcel,com.csipsimple.api.SipCallSession)>($r1, null) in <com.csipsimple.api.SipCallSession$1: com.csipsimple.api.SipCallSession createFromParcel(android.os.Parcel)> ==> <com.csipsimple.api.SipCallSession: void <init>(android.os.Parcel,com.csipsimple.api.SipCallSession)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.api.SipCallSession$1: com.csipsimple.api.SipCallSession createFromParcel(android.os.Parcel)>($r1) in <com.csipsimple.api.SipCallSession$1: java.lang.Object createFromParcel(android.os.Parcel)> ==> <com.csipsimple.api.SipCallSession$1: com.csipsimple.api.SipCallSession createFromParcel(android.os.Parcel)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.api.SipCallSession$1: com.csipsimple.api.SipCallSession[] newArray(int)>($i0) in <com.csipsimple.api.SipCallSession$1: java.lang.Object[] newArray(int)> ==> <com.csipsimple.api.SipCallSession$1: com.csipsimple.api.SipCallSession[] newArray(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.impl.Ippi$1: void <init>(com.csipsimple.wizards.impl.Ippi)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.wizards.impl.Ippi: com.csipsimple.wizards.impl.AccountCreationWebview access$2(com.csipsimple.wizards.impl.Ippi)>($r3) in <com.csipsimple.wizards.impl.Ippi$1: void onClick(android.view.View)> ==> <com.csipsimple.wizards.impl.Ippi: com.csipsimple.wizards.impl.AccountCreationWebview access$2(com.csipsimple.wizards.impl.Ippi)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.wizards.impl.AccountCreationWebview: void show()>() in <com.csipsimple.wizards.impl.Ippi$1: void onClick(android.view.View)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: void show()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Svanto: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.calllog.CallLogListFragment: void actionModeDelete()>() in <com.csipsimple.ui.calllog.CallLogListFragment: void access$0(com.csipsimple.ui.calllog.CallLogListFragment)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void actionModeDelete()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.calllog.CallLogListFragment: void actionModeInvertSelection()>() in <com.csipsimple.ui.calllog.CallLogListFragment: void access$1(com.csipsimple.ui.calllog.CallLogListFragment)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void actionModeInvertSelection()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.calllog.CallLogListFragment: void actionModeDialpad()>() in <com.csipsimple.ui.calllog.CallLogListFragment: void access$2(com.csipsimple.ui.calllog.CallLogListFragment)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void actionModeDialpad()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.calllog.CallLogListFragment: void deleteAllCalls()>() in <com.csipsimple.ui.calllog.CallLogListFragment: void access$7(com.csipsimple.ui.calllog.CallLogListFragment)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void deleteAllCalls()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallLogFragment", $r5) in <com.csipsimple.ui.calllog.CallLogListFragment: void actionModeDelete()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke $r10.<com.csipsimple.ui.calllog.CallLogAdapter: long[] getCallIdsAtPosition(int)>(i1) in <com.csipsimple.ui.calllog.CallLogListFragment: void actionModeDelete()> ==> <com.csipsimple.ui.calllog.CallLogAdapter: long[] getCallIdsAtPosition(int)>
STATIC edge: $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) in <com.csipsimple.ui.calllog.CallLogListFragment: void actionModeDelete()> ==> <java.lang.Long: java.lang.Long valueOf(long)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.calllog.CallLogAdapter: java.lang.Object getItem(int)>(i0) in <com.csipsimple.ui.calllog.CallLogListFragment: void actionModeDialpad()> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: java.lang.Object getItem(int)>
VIRTUAL edge: $r5 = virtualinvoke $r4.<com.csipsimple.ui.calllog.CallLogAdapter: java.lang.String getCallRemoteAtPostion(int)>(i0) in <com.csipsimple.ui.calllog.CallLogListFragment: void actionModeDialpad()> ==> <com.csipsimple.ui.calllog.CallLogAdapter: java.lang.String getCallRemoteAtPostion(int)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.api.SipUri: android.net.Uri forgeSipUri(java.lang.String,java.lang.String)>("sip", $r5) in <com.csipsimple.ui.calllog.CallLogListFragment: void actionModeDialpad()> ==> <com.csipsimple.api.SipUri: android.net.Uri forgeSipUri(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallLogFragment", "Attach call log adapter now") in <com.csipsimple.ui.calllog.CallLogListFragment: void attachAdapter()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.ui.calllog.CallLogAdapter: void <init>(android.content.Context,com.csipsimple.ui.calllog.CallLogAdapter$CallFetcher)>($r3, r0) in <com.csipsimple.ui.calllog.CallLogListFragment: void attachAdapter()> ==> <com.csipsimple.ui.calllog.CallLogAdapter: void <init>(android.content.Context,com.csipsimple.ui.calllog.CallLogAdapter$CallFetcher)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.calllog.CallLogAdapter: void setOnCallLogActionListener(com.csipsimple.ui.calllog.CallLogAdapter$OnCallLogAction)>(r0) in <com.csipsimple.ui.calllog.CallLogListFragment: void attachAdapter()> ==> <com.csipsimple.ui.calllog.CallLogAdapter: void setOnCallLogActionListener(com.csipsimple.ui.calllog.CallLogAdapter$OnCallLogAction)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.calllog.CallLogListFragment$4: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)>(r0) in <com.csipsimple.ui.calllog.CallLogListFragment: void deleteAllCalls()> ==> <com.csipsimple.ui.calllog.CallLogListFragment$4: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)>
VIRTUAL edge: virtualinvoke $r4.<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>(-1, $r5, $r6) in <com.csipsimple.ui.calllog.CallLogListFragment: void deleteAllCalls()> ==> <com.csipsimple.ui.calllog.CallLogListFragment$4: void onClick(android.content.DialogInterface,int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("CallLogFragment", "error while trying to show deletion yes/no dialog") in <com.csipsimple.ui.calllog.CallLogListFragment: void deleteAllCalls()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>($r2) in <com.csipsimple.ui.calllog.CallLogListFragment: void turnOnActionMode()> ==> <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>($r2) in <com.csipsimple.ui.calllog.CallLogListFragment: void turnOnActionMode()> ==> <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>($r2) in <com.csipsimple.ui.calllog.CallLogListFragment: void turnOnActionMode()> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>($r2) in <com.csipsimple.ui.calllog.CallLogListFragment: void turnOnActionMode()> ==> <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>($r2) in <com.csipsimple.ui.calllog.CallLogListFragment: void turnOnActionMode()> ==> <com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: void onDestroyActionMode(com.actionbarsherlock.view.ActionMode)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.calllog.CallLogAdapter: void changeCursor(android.database.Cursor)>($r1) in <com.csipsimple.ui.calllog.CallLogListFragment: void changeCursor(android.database.Cursor)> ==> <com.csipsimple.ui.calllog.GroupingListAdapter: void changeCursor(android.database.Cursor)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogListFragment: void attachAdapter()>() in <com.csipsimple.ui.calllog.CallLogListFragment: void fetchCalls()> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void attachAdapter()>
VIRTUAL edge: virtualinvoke $r1.<android.support.v4.app.LoaderManager: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>(0, null, r0) in <com.csipsimple.ui.calllog.CallLogListFragment: void fetchCalls()> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void onVisibilityChanged(boolean)>
VIRTUAL edge: virtualinvoke $r1.<android.support.v4.app.LoaderManager: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>(0, null, r0) in <com.csipsimple.ui.calllog.CallLogListFragment: void fetchCalls()> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void placeCall(java.lang.String,java.lang.Long)>
VIRTUAL edge: virtualinvoke $r1.<android.support.v4.app.LoaderManager: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>(0, null, r0) in <com.csipsimple.ui.calllog.CallLogListFragment: void fetchCalls()> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void viewDetails(int,long[])>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.CSSListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>($r1, $r2) in <com.csipsimple.ui.calllog.CallLogListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.actionbarsherlock.app.SherlockListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.ui.calllog.CallLogListFragment$3: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)>(r0) in <com.csipsimple.ui.calllog.CallLogListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.calllog.CallLogListFragment$3: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)>
INTERFACE edge: interfaceinvoke $r4.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)>($r6) in <com.csipsimple.ui.calllog.CallLogListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)> ==> <com.csipsimple.ui.calllog.CallLogListFragment$3: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.ui.calllog.CallLogListFragment: com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity()>() in <com.csipsimple.ui.calllog.CallLogListFragment: void onVisibilityChanged(boolean)> ==> <com.actionbarsherlock.app.SherlockListFragment: com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.app.SherlockFragmentActivity: void invalidateOptionsMenu()>() in <com.csipsimple.ui.calllog.CallLogListFragment: void onVisibilityChanged(boolean)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: void invalidateOptionsMenu()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogListFragment: void attachAdapter()>() in <com.csipsimple.ui.calllog.CallLogListFragment: void onVisibilityChanged(boolean)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void attachAdapter()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.ui.calllog.CallLogListFragment$2: void <init>(com.csipsimple.ui.calllog.CallLogListFragment,int)>(r0, $i0) in <com.csipsimple.ui.calllog.CallLogListFragment: void onVisibilityChanged(boolean)> ==> <com.csipsimple.ui.calllog.CallLogListFragment$2: void <init>(com.csipsimple.ui.calllog.CallLogListFragment,int)>
VIRTUAL edge: virtualinvoke r1.<java.lang.Thread: void start()>() in <com.csipsimple.ui.calllog.CallLogListFragment: void onVisibilityChanged(boolean)> ==> <com.csipsimple.ui.calllog.CallLogListFragment$2: void run()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>($r1, 0) in <com.csipsimple.ui.calllog.CallLogListFragment: void placeCall(java.lang.String,java.lang.Long)> ==> <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipUri: android.net.Uri forgeSipUri(java.lang.String,java.lang.String)>("csip", $r1) in <com.csipsimple.ui.calllog.CallLogListFragment: void placeCall(java.lang.String,java.lang.Long)> ==> <com.csipsimple.api.SipUri: android.net.Uri forgeSipUri(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.ui.calllog.CallLogDetailsFragment: void <init>()>() in <com.csipsimple.ui.calllog.CallLogListFragment: void viewDetails(int,long[])> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallCard$ContactLoadedHandler: void <init>()>() in <com.csipsimple.ui.incall.InCallCard$ContactLoadedHandler: void <init>(com.csipsimple.ui.incall.InCallCard$ContactLoadedHandler)> ==> <com.csipsimple.ui.incall.InCallCard$ContactLoadedHandler: void <init>()>
STATIC edge: $r10 = staticinvoke <com.csipsimple.ui.incall.InCallCard: android.widget.ImageView access$5(com.csipsimple.ui.incall.InCallCard)>($r8) in <com.csipsimple.ui.incall.InCallCard$ContactLoadedHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.ui.incall.InCallCard: android.widget.ImageView access$5(com.csipsimple.ui.incall.InCallCard)>
STATIC edge: staticinvoke <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>($r9, $r10, $r4, 2130837666) in <com.csipsimple.ui.incall.InCallCard$ContactLoadedHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>
STATIC edge: $r11 = staticinvoke <com.csipsimple.ui.incall.InCallCard: android.widget.TextView access$6(com.csipsimple.ui.incall.InCallCard)>($r8) in <com.csipsimple.ui.incall.InCallCard$ContactLoadedHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.ui.incall.InCallCard: android.widget.TextView access$6(com.csipsimple.ui.incall.InCallCard)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.ISipService$Stub$Proxy: void <init>(android.os.IBinder)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.api.SipCallSession: void writeToParcel(android.os.Parcel,int)>($r2, 0) in <com.csipsimple.api.ISipService$Stub$Proxy: void adjustVolume(com.csipsimple.api.SipCallSession,int,int)> ==> <com.csipsimple.api.SipCallSession: void writeToParcel(android.os.Parcel,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context)> ==> <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0) in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void bindView()>() in <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void bindView()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState: void <init>(android.os.Parcel,com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState)>($r1, null) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1: com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState createFromParcel(android.os.Parcel)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState: void <init>(android.os.Parcel,com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1: com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState createFromParcel(android.os.Parcel)>($r1) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1: com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState createFromParcel(android.os.Parcel)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1: com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState[] newArray(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1: java.lang.Object[] newArray(int)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1: com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState[] newArray(int)>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState: void <clinit>()> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState: void <init>(android.os.Parcel)>($r1) in <com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState: void <init>(android.os.Parcel,com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState)> ==> <com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState: void <init>(android.os.Parcel)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.receiver.DynamicReceiver4$1: void <init>(com.csipsimple.service.receiver.DynamicReceiver4,android.content.Context,android.content.Intent)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r5.<com.csipsimple.service.receiver.DynamicReceiver4: boolean compatIsInitialStickyBroadcast(android.content.Intent)>($r4) in <com.csipsimple.service.receiver.DynamicReceiver4$1: void doRun()> ==> <com.csipsimple.service.receiver.DynamicReceiver4: boolean compatIsInitialStickyBroadcast(android.content.Intent)>
STATIC edge: staticinvoke <com.csipsimple.service.receiver.DynamicReceiver4: void access$0(com.csipsimple.service.receiver.DynamicReceiver4,android.content.Context,android.content.Intent,boolean)>($r1, $r2, $r3, $z0) in <com.csipsimple.service.receiver.DynamicReceiver4$1: void doRun()> ==> <com.csipsimple.service.receiver.DynamicReceiver4: void access$0(com.csipsimple.service.receiver.DynamicReceiver4,android.content.Context,android.content.Intent,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("TimerJob") in <com.csipsimple.utils.TimerWrapper$TimerJob: void <init>(com.csipsimple.utils.TimerWrapper,int)> ==> <java.lang.Thread: void <init>(java.lang.String)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.TimerWrapper: com.csipsimple.service.SipWakeLock access$0(com.csipsimple.utils.TimerWrapper)>($r1) in <com.csipsimple.utils.TimerWrapper$TimerJob: void <init>(com.csipsimple.utils.TimerWrapper,int)> ==> <com.csipsimple.utils.TimerWrapper: com.csipsimple.service.SipWakeLock access$0(com.csipsimple.utils.TimerWrapper)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.SipWakeLock: void acquire(java.lang.Object)>(r0) in <com.csipsimple.utils.TimerWrapper$TimerJob: void <init>(com.csipsimple.utils.TimerWrapper,int)> ==> <com.csipsimple.service.SipWakeLock: void acquire(java.lang.Object)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("Timer wrap", $r3) in <com.csipsimple.utils.TimerWrapper$TimerJob: void run()> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.utils.TimerWrapper: java.util.List access$1(com.csipsimple.utils.TimerWrapper)>($r5) in <com.csipsimple.utils.TimerWrapper$TimerJob: void run()> ==> <com.csipsimple.utils.TimerWrapper: java.util.List access$1(com.csipsimple.utils.TimerWrapper)>
STATIC edge: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.utils.TimerWrapper$TimerJob: void run()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int pj_timer_fire(int)>($i0) in <com.csipsimple.utils.TimerWrapper$TimerJob: void run()> ==> <org.pjsip.pjsua.pjsua: int pj_timer_fire(int)>
STATIC edge: $r8 = staticinvoke <com.csipsimple.utils.TimerWrapper: com.csipsimple.service.SipWakeLock access$0(com.csipsimple.utils.TimerWrapper)>($r4) in <com.csipsimple.utils.TimerWrapper$TimerJob: void run()> ==> <com.csipsimple.utils.TimerWrapper: com.csipsimple.service.SipWakeLock access$0(com.csipsimple.utils.TimerWrapper)>
VIRTUAL edge: virtualinvoke $r8.<com.csipsimple.service.SipWakeLock: void release(java.lang.Object)>(r0) in <com.csipsimple.utils.TimerWrapper$TimerJob: void run()> ==> <com.csipsimple.service.SipWakeLock: void release(java.lang.Object)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Timer wrap", "Native error ", r1) in <com.csipsimple.utils.TimerWrapper$TimerJob: void run()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("Timer wrap", $r3) in <com.csipsimple.utils.TimerWrapper$TimerJob: void run()> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r2.<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void <init>(android.view.MenuItem)>($r1) in <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void <init>(android.view.MenuItem)>
SPECIAL edge: specialinvoke r2.<com.actionbarsherlock.internal.view.menu.SubMenuWrapper: void <init>(android.view.SubMenu)>($r1) in <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu)> ==> <com.actionbarsherlock.internal.view.menu.SubMenuWrapper: void <init>(android.view.SubMenu)>
INTERFACE edge: $r5 = interfaceinvoke r2.<com.actionbarsherlock.view.SubMenu: com.actionbarsherlock.view.MenuItem getItem()>() in <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu)> ==> <com.actionbarsherlock.internal.view.menu.SubMenuWrapper: com.actionbarsherlock.view.MenuItem getItem()>
SPECIAL edge: $r3 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem add(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem)>
SPECIAL edge: $r3 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem add(int,int,int,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem)>
SPECIAL edge: $r4 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem)>($r3) in <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem)>
SPECIAL edge: $r4 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem)>($r3) in <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem)>
SPECIAL edge: specialinvoke $r7.<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void <init>(android.view.MenuItem)>($r8) in <com.actionbarsherlock.internal.view.menu.MenuWrapper: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[])> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void <init>(android.view.MenuItem)>
SPECIAL edge: $r3 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addSubMenu(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu)>
SPECIAL edge: $r3 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu)>
SPECIAL edge: $r4 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu)>($r3) in <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu)>
SPECIAL edge: $r4 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu)>($r3) in <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem findItem(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem)>
SPECIAL edge: r4 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem)>($r1) in <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem getItem(int)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.FastVoip: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.FastVoip: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.FastVoip: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_stun_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_stun_use$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_stun_use)> ==> <org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_stun_use)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_stun_use$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_stun_use)> ==> <org.pjsip.pjsua.pjsua_stun_use$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsua_stun_use: org.pjsip.pjsua.pjsua_stun_use swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port: void <init>()>
STATIC edge: $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Float gPrefFloatValue(android.content.SharedPreferences,java.lang.String)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getSubFolder(android.content.Context,java.lang.String,boolean)>($r0, "configs", 0) in <com.csipsimple.utils.PreferencesWrapper: java.io.File getConfigFolder(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: java.io.File getSubFolder(android.content.Context,java.lang.String,boolean)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getSubFolder(android.content.Context,java.lang.String,boolean)>($r0, "records", 0) in <com.csipsimple.utils.PreferencesWrapper: java.io.File getRecordsFolder(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: java.io.File getSubFolder(android.content.Context,java.lang.String,boolean)>
VIRTUAL edge: r2 = virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>("stun_server") in <com.csipsimple.utils.PreferencesWrapper: boolean hasStunServer(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") in <com.csipsimple.utils.PreferencesWrapper: boolean hasStunServer(java.lang.String)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1) in <com.csipsimple.utils.PreferencesWrapper: boolean hasStunServer(java.lang.String)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.utils.PreferencesWrapper: boolean hasStunServer(java.lang.String)>($r1) in <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: boolean hasStunServer(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>("stun_server") in <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PreferencesWrapper", $r6) in <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6) in <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("stun_server", $r1) in <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>("gsm_integration_type") in <com.csipsimple.utils.PreferencesWrapper: int getGsmIntegrationType()> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <com.csipsimple.utils.PreferencesWrapper: int getGsmIntegrationType()> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PreferencesWrapper", $r2) in <com.csipsimple.utils.PreferencesWrapper: int getGsmIntegrationType()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.lang.Float gPrefFloatValue(android.content.SharedPreferences,java.lang.String)>($r3, $r1) in <com.csipsimple.utils.PreferencesWrapper: java.lang.Float getPreferenceFloatValue(java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.Float gPrefFloatValue(android.content.SharedPreferences,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)>(r0) in <com.csipsimple.utils.PreferencesWrapper: void resetAllDefaultValues()> ==> <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("has_already_setup_service", 1) in <com.csipsimple.utils.PreferencesWrapper: void resetAllDefaultValues()> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>(r5, $r6) in <com.csipsimple.utils.PreferencesWrapper: void resetAllDefaultValues()> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceFloatValue(java.lang.String,float)>(r5, $f0) in <com.csipsimple.utils.PreferencesWrapper: void resetAllDefaultValues()> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceFloatValue(java.lang.String,float)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: void startEditing()>() in <com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)> ==> <com.csipsimple.utils.PreferencesWrapper: void startEditing()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<org.json.JSONObject: int getInt(java.lang.String)>("last_known_version") in <com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)> ==> <org.json.JSONObject: int getInt(java.lang.String)>
STATIC edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: void endEditing()>() in <com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)> ==> <com.csipsimple.utils.PreferencesWrapper: void endEditing()>
VIRTUAL edge: $r9 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(r8) in <com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)> ==> <org.json.JSONObject: java.lang.String getString(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>(r8, $r9) in <com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PreferencesWrapper", r8) in <com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean getBoolean(java.lang.String)>(r8) in <com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)> ==> <org.json.JSONObject: boolean getBoolean(java.lang.String)>
STATIC edge: $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>(r8, $z0) in <com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: $d0 = virtualinvoke $r1.<org.json.JSONObject: double getDouble(java.lang.String)>(r8) in <com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)> ==> <org.json.JSONObject: double getDouble(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceFloatValue(java.lang.String,float)>(r8, $f0) in <com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceFloatValue(java.lang.String,float)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: java.lang.Float getPreferenceFloatValue(java.lang.String)>(r8) in <com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.Float getPreferenceFloatValue(java.lang.String)>
SPECIAL edge: specialinvoke r1.<org.json.JSONObject: void <init>()>() in <com.csipsimple.utils.PreferencesWrapper: org.json.JSONObject serializeSipSettings()> ==> <org.json.JSONObject: void <init>()>
VIRTUAL edge: virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("last_known_version", $i0) in <com.csipsimple.utils.PreferencesWrapper: org.json.JSONObject serializeSipSettings()> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>
VIRTUAL edge: $r8 = virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>(r7) in <com.csipsimple.utils.PreferencesWrapper: org.json.JSONObject serializeSipSettings()> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(r7, $r8) in <com.csipsimple.utils.PreferencesWrapper: org.json.JSONObject serializeSipSettings()> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PreferencesWrapper", r7) in <com.csipsimple.utils.PreferencesWrapper: org.json.JSONObject serializeSipSettings()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
VIRTUAL edge: $r11 = virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean getPreferenceBooleanValue(java.lang.String)>(r7) in <com.csipsimple.utils.PreferencesWrapper: org.json.JSONObject serializeSipSettings()> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: $r13 = virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: java.lang.Float getPreferenceFloatValue(java.lang.String)>(r7) in <com.csipsimple.utils.PreferencesWrapper: org.json.JSONObject serializeSipSettings()> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.Float getPreferenceFloatValue(java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>(r7, $d0) in <com.csipsimple.utils.PreferencesWrapper: org.json.JSONObject serializeSipSettings()> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("has_been_quit", $z0) in <com.csipsimple.utils.PreferencesWrapper: void setQuit(boolean)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: boolean isAdvancedUser()>() in <com.csipsimple.utils.PreferencesWrapper: void toogleExpertMode()> ==> <com.csipsimple.utils.PreferencesWrapper: boolean isAdvancedUser()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("is_advanced_user", $z0) in <com.csipsimple.utils.PreferencesWrapper: void toogleExpertMode()> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.webrtc.videoengine.VideoCaptureAndroid: void <init>(int,long,android.hardware.Camera,org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r3 = staticinvoke <org.webrtc.videoengine.camera.CameraUtilsWrapper: org.webrtc.videoengine.camera.CameraUtilsWrapper getInstance()>() in <org.webrtc.videoengine.VideoCaptureAndroid: void <init>(int,long,android.hardware.Camera,org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice)> ==> <org.webrtc.videoengine.camera.CameraUtilsWrapper: org.webrtc.videoengine.camera.CameraUtilsWrapper getInstance()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("WEBRTC-JC", "DeleteVideoCaptureAndroid") in <org.webrtc.videoengine.VideoCaptureAndroid: void DeleteVideoCaptureAndroid(org.webrtc.videoengine.VideoCaptureAndroid)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<org.webrtc.videoengine.VideoCaptureAndroid: int StopCapture()>() in <org.webrtc.videoengine.VideoCaptureAndroid: void DeleteVideoCaptureAndroid(org.webrtc.videoengine.VideoCaptureAndroid)> ==> <org.webrtc.videoengine.VideoCaptureAndroid: int StopCapture()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("WEBRTC-JC", $r5) in <org.webrtc.videoengine.VideoCaptureAndroid: int tryStartCapture(int,int,int)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("WEBRTC-JC", $r5) in <org.webrtc.videoengine.VideoCaptureAndroid: int tryStartCapture(int,int,int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r1.<org.webrtc.videoengine.CaptureCapabilityAndroid: void <init>()>() in <org.webrtc.videoengine.VideoCaptureAndroid: int tryStartCapture(int,int,int)> ==> <org.webrtc.videoengine.CaptureCapabilityAndroid: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("WEBRTC-JC", $r2) in <org.webrtc.videoengine.VideoCaptureAndroid: void SetPreviewRotation(int)> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<org.webrtc.videoengine.VideoCaptureAndroid: int StopCapture()>() in <org.webrtc.videoengine.VideoCaptureAndroid: void SetPreviewRotation(int)> ==> <org.webrtc.videoengine.VideoCaptureAndroid: int StopCapture()>
VIRTUAL edge: virtualinvoke r0.<org.webrtc.videoengine.VideoCaptureAndroid: int StartCapture(int,int,int)>(i1, i2, i3) in <org.webrtc.videoengine.VideoCaptureAndroid: void SetPreviewRotation(int)> ==> <org.webrtc.videoengine.VideoCaptureAndroid: int StartCapture(int,int,int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("WEBRTC-JC", $r2) in <org.webrtc.videoengine.VideoCaptureAndroid: int StartCapture(int,int,int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r3 = staticinvoke <org.webrtc.videoengine.ViERenderer: android.view.SurfaceHolder GetLocalRenderer()>() in <org.webrtc.videoengine.VideoCaptureAndroid: int StartCapture(int,int,int)> ==> <org.webrtc.videoengine.ViERenderer: android.view.SurfaceHolder GetLocalRenderer()>
INTERFACE edge: interfaceinvoke $r3.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>(r0) in <org.webrtc.videoengine.VideoCaptureAndroid: int StartCapture(int,int,int)> ==> <org.webrtc.videoengine.VideoCaptureAndroid: void surfaceCreated(android.view.SurfaceHolder)>
INTERFACE edge: interfaceinvoke $r3.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>(r0) in <org.webrtc.videoengine.VideoCaptureAndroid: int StartCapture(int,int,int)> ==> <org.webrtc.videoengine.VideoCaptureAndroid: void onPreviewFrame(byte[],android.hardware.Camera)>
INTERFACE edge: interfaceinvoke $r3.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>(r0) in <org.webrtc.videoengine.VideoCaptureAndroid: int StartCapture(int,int,int)> ==> <org.webrtc.videoengine.VideoCaptureAndroid: void surfaceDestroyed(android.view.SurfaceHolder)>
INTERFACE edge: interfaceinvoke $r3.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>(r0) in <org.webrtc.videoengine.VideoCaptureAndroid: int StartCapture(int,int,int)> ==> <org.webrtc.videoengine.VideoCaptureAndroid: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
SPECIAL edge: $i0 = specialinvoke r0.<org.webrtc.videoengine.VideoCaptureAndroid: int tryStartCapture(int,int,int)>($i0, $i1, $i2) in <org.webrtc.videoengine.VideoCaptureAndroid: int StartCapture(int,int,int)> ==> <org.webrtc.videoengine.VideoCaptureAndroid: int tryStartCapture(int,int,int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("WEBRTC-JC", "StopCapture") in <org.webrtc.videoengine.VideoCaptureAndroid: int StopCapture()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("WEBRTC-JC", "Failed to stop camera") in <org.webrtc.videoengine.VideoCaptureAndroid: int StopCapture()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("WEBRTC-JC", "VideoCaptureAndroid::surfaceChanged") in <org.webrtc.videoengine.VideoCaptureAndroid: void surfaceChanged(android.view.SurfaceHolder,int,int,int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<org.webrtc.videoengine.VideoCaptureAndroid: int tryStartCapture(int,int,int)>($i1, $i2, $i0) in <org.webrtc.videoengine.VideoCaptureAndroid: void surfaceChanged(android.view.SurfaceHolder,int,int,int)> ==> <org.webrtc.videoengine.VideoCaptureAndroid: int tryStartCapture(int,int,int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("WEBRTC-JC", "VideoCaptureAndroid::surfaceCreated") in <org.webrtc.videoengine.VideoCaptureAndroid: void surfaceCreated(android.view.SurfaceHolder)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("WEBRTC-JC", "VideoCaptureAndroid::surfaceDestroyed") in <org.webrtc.videoengine.VideoCaptureAndroid: void surfaceDestroyed(android.view.SurfaceHolder)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<org.webrtc.videoengine.VideoCaptureAndroid: int StopCapture()>() in <org.webrtc.videoengine.VideoCaptureAndroid: void surfaceDestroyed(android.view.SurfaceHolder)> ==> <org.webrtc.videoengine.VideoCaptureAndroid: int StopCapture()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, null, 0) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context)> ==> <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)>
STATIC edge: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)>($r1, "support_multiple_calls", $r6) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)>
SPECIAL edge: specialinvoke r5.<com.csipsimple.ui.incall.InCallControls$1: void <init>(com.csipsimple.ui.incall.InCallControls,android.content.Context)>(r0, $r1) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.incall.InCallControls$1: void <init>(com.csipsimple.ui.incall.InCallControls,android.content.Context)>
VIRTUAL edge: virtualinvoke r5.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setReserveOverflow(boolean)>(1) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setReserveOverflow(boolean)>
VIRTUAL edge: virtualinvoke r5.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setWidthLimit(int,boolean)>($i0, 1) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setWidthLimit(int,boolean)>
VIRTUAL edge: virtualinvoke r5.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setItemLimit(int)>(20) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setItemLimit(int)>
SPECIAL edge: specialinvoke $r9.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>($r1) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r9.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>
VIRTUAL edge: virtualinvoke $r9.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.incall.InCallControls: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
VIRTUAL edge: virtualinvoke $r9.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.ui.incall.InCallControls: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: specialinvoke r3.<com.actionbarsherlock.view.MenuInflater: void <init>(android.content.Context)>($r1) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.view.MenuInflater: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.view.MenuInflater: void inflate(int,com.actionbarsherlock.view.Menu)>(2131623939, $r9) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.view.MenuInflater: void inflate(int,com.actionbarsherlock.view.Menu)>
VIRTUAL edge: virtualinvoke $r9.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>(r5) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>
VIRTUAL edge: $r10 = virtualinvoke r5.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>(r0) in <com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.InCallControls: void setEnabledMediaButtons(boolean)>(0) in <com.csipsimple.ui.incall.InCallControls: void onFinishInflate()> ==> <com.csipsimple.ui.incall.InCallControls: void setEnabledMediaButtons(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.incall.InCallControls: void dispatchTriggerEvent(int)>(6) in <com.csipsimple.ui.incall.InCallControls: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.incall.InCallControls: void dispatchTriggerEvent(int)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.ui.incall.InCallControls: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallControls", $r3) in <com.csipsimple.ui.incall.InCallControls: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isIncoming()>() in <com.csipsimple.ui.incall.InCallControls: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: boolean isIncoming()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.InCallControls: void setEnabledMediaButtons(boolean)>(1) in <com.csipsimple.ui.incall.InCallControls: void setCallState(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.ui.incall.InCallControls: void setEnabledMediaButtons(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.InCallControls: void setMediaState(com.csipsimple.api.MediaState)>($r1) in <com.csipsimple.ui.incall.InCallControls: void setEnabledMediaButtons(boolean)> ==> <com.csipsimple.ui.incall.InCallControls: void setMediaState(com.csipsimple.api.MediaState)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>(2131099929) in <com.csipsimple.ui.incall.InCallControls: void setMediaState(com.csipsimple.api.MediaState)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallControls", $r5) in <com.csipsimple.ui.incall.InCallControls: void setMediaState(com.csipsimple.api.MediaState)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R$menu: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("SIP ACC_DB", $r3) in <com.csipsimple.db.DBAdapter$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP ACC_DB", "Upgrade done") in <com.csipsimple.db.DBAdapter$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.db.DBAdapter: void access$0(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String)>($r1, "accounts", "reg_dbr", "INTEGER DEFAULT -1") in <com.csipsimple.db.DBAdapter$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> ==> <com.csipsimple.db.DBAdapter: void access$0(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.db.DBAdapter$DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>($r1) in <com.csipsimple.db.DBAdapter$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> ==> <com.csipsimple.db.DBAdapter$DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SIP ACC_DB", "Upgrade fail... maybe a crappy rom...", r4) in <com.csipsimple.db.DBAdapter$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.favorites.FavAdapter$ConfigureObj: void <init>(com.csipsimple.ui.favorites.FavAdapter)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L) in <com.csipsimple.ui.favorites.FavAdapter$ConfigureObj: void <init>(com.csipsimple.ui.favorites.FavAdapter)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.favorites.FavAdapter$ConfigureObj: void <init>(com.csipsimple.ui.favorites.FavAdapter)>($r1) in <com.csipsimple.ui.favorites.FavAdapter$ConfigureObj: void <init>(com.csipsimple.ui.favorites.FavAdapter,com.csipsimple.ui.favorites.FavAdapter$ConfigureObj)> ==> <com.csipsimple.ui.favorites.FavAdapter$ConfigureObj: void <init>(com.csipsimple.ui.favorites.FavAdapter)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.ui.incall.AccelerometerListener: void <init>(android.content.Context,com.csipsimple.ui.incall.AccelerometerListener$OrientationListener)>($r1, r0) in <com.csipsimple.ui.incall.CallProximityManager: void <init>(android.content.Context,com.csipsimple.ui.incall.CallProximityManager$ProximityDirector,com.csipsimple.widgets.ScreenLocker)> ==> <com.csipsimple.ui.incall.CallProximityManager: void onAccuracyChanged(android.hardware.Sensor,int)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.ui.incall.AccelerometerListener: void <init>(android.content.Context,com.csipsimple.ui.incall.AccelerometerListener$OrientationListener)>($r1, r0) in <com.csipsimple.ui.incall.CallProximityManager: void <init>(android.content.Context,com.csipsimple.ui.incall.CallProximityManager$ProximityDirector,com.csipsimple.widgets.ScreenLocker)> ==> <com.csipsimple.ui.incall.CallProximityManager: void orientationChanged(int)>
VIRTUAL edge: $r4 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>() in <com.csipsimple.ui.incall.CallProximityManager: void <init>(android.content.Context,com.csipsimple.ui.incall.CallProximityManager$ProximityDirector,com.csipsimple.widgets.ScreenLocker)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.widgets.ScreenLocker: void delayedLock(int)>($i0) in <com.csipsimple.ui.incall.CallProximityManager: void acquire()> ==> <com.csipsimple.widgets.ScreenLocker: void delayedLock(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("CallProximityManager", $r5) in <com.csipsimple.ui.incall.CallProximityManager: void onSensorChanged(android.hardware.SensorEvent)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.widgets.ScreenLocker: void show()>() in <com.csipsimple.ui.incall.CallProximityManager: void onSensorChanged(android.hardware.SensorEvent)> ==> <com.csipsimple.widgets.ScreenLocker: void show()>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.widgets.ScreenLocker: void hide()>() in <com.csipsimple.ui.incall.CallProximityManager: void onSensorChanged(android.hardware.SensorEvent)> ==> <com.csipsimple.widgets.ScreenLocker: void hide()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.incall.CallProximityManager: void updateProximitySensorMode()>() in <com.csipsimple.ui.incall.CallProximityManager: void orientationChanged(int)> ==> <com.csipsimple.ui.incall.CallProximityManager: void updateProximitySensorMode()>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.widgets.ScreenLocker: void hide()>() in <com.csipsimple.ui.incall.CallProximityManager: void release(int)> ==> <com.csipsimple.widgets.ScreenLocker: void hide()>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.ui.incall.CallProximityManager: boolean shouldUseTimeoutOverlay()>() in <com.csipsimple.ui.incall.CallProximityManager: void restartTimer()> ==> <com.csipsimple.ui.incall.CallProximityManager: boolean shouldUseTimeoutOverlay()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.widgets.ScreenLocker: void delayedLock(int)>(10000) in <com.csipsimple.ui.incall.CallProximityManager: void restartTimer()> ==> <com.csipsimple.widgets.ScreenLocker: void delayedLock(int)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.widgets.ScreenLocker: void tearDown()>() in <com.csipsimple.ui.incall.CallProximityManager: void stopTracking()> ==> <com.csipsimple.widgets.ScreenLocker: void tearDown()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.view.ActionProvider: boolean hasSubMenu()>() in <com.actionbarsherlock.internal.view.ActionProviderWrapper: boolean hasSubMenu()> ==> <com.actionbarsherlock.view.ActionProvider: boolean hasSubMenu()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.view.ActionProvider: boolean onPerformDefaultAction()>() in <com.actionbarsherlock.internal.view.ActionProviderWrapper: boolean onPerformDefaultAction()> ==> <com.actionbarsherlock.view.ActionProvider: boolean onPerformDefaultAction()>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.view.menu.SubMenuWrapper: void <init>(android.view.SubMenu)>($r1) in <com.actionbarsherlock.internal.view.ActionProviderWrapper: void onPrepareSubMenu(android.view.SubMenu)> ==> <com.actionbarsherlock.internal.view.menu.SubMenuWrapper: void <init>(android.view.SubMenu)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.view.ActionProvider: void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu)>($r3) in <com.actionbarsherlock.internal.view.ActionProviderWrapper: void onPrepareSubMenu(android.view.SubMenu)> ==> <com.actionbarsherlock.view.ActionProvider: void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.service.SipService: void addAllAccounts()>() in <com.csipsimple.service.SipService: void access$0(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.SipService: void addAllAccounts()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.service.SipService: void unregisterAllAccounts(boolean)>($z0) in <com.csipsimple.service.SipService: void access$1(com.csipsimple.service.SipService,boolean)> ==> <com.csipsimple.service.SipService: void unregisterAllAccounts(boolean)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.service.SipService: void reAddAllAccounts()>() in <com.csipsimple.service.SipService: void access$2(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.SipService: void reAddAllAccounts()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "RE REGISTER ALL ACCOUNTS") in <com.csipsimple.service.SipService: void reAddAllAccounts()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService: void unregisterAllAccounts(boolean)>(0) in <com.csipsimple.service.SipService: void reAddAllAccounts()> ==> <com.csipsimple.service.SipService: void unregisterAllAccounts(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService: void addAllAccounts()>() in <com.csipsimple.service.SipService: void reAddAllAccounts()> ==> <com.csipsimple.service.SipService: void addAllAccounts()>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService: void setPrivateVideoWindow(int,java.lang.Object)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.service.SipService$3: void <init>(com.csipsimple.service.SipService,int,java.lang.Object)>(r0, $i0, $r1) in <com.csipsimple.service.SipService: void setPrivateVideoWindow(int,java.lang.Object)> ==> <com.csipsimple.service.SipService$3: void <init>(com.csipsimple.service.SipService,int,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r2) in <com.csipsimple.service.SipService: void setPrivateVideoWindow(int,java.lang.Object)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.service.SipService: void setPrivateVideoWindow(int,java.lang.Object)>($i0, $r0) in <com.csipsimple.service.SipService: void setVideoWindow(int,java.lang.Object)> ==> <com.csipsimple.service.SipService: void setPrivateVideoWindow(int,java.lang.Object)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService: void releaseResources()>() in <com.csipsimple.service.SipService: void unregisterAllAccounts(boolean)> ==> <com.csipsimple.service.SipService: void releaseResources()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Remove all accounts") in <com.csipsimple.service.SipService: void unregisterAllAccounts(boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>($r6) in <com.csipsimple.service.SipService: void unregisterAllAccounts(boolean)> ==> <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)>(r2, 0, 0) in <com.csipsimple.service.SipService: void unregisterAllAccounts(boolean)> ==> <com.csipsimple.service.SipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.service.SipNotifications: void cancelRegisters()>() in <com.csipsimple.service.SipService: void unregisterAllAccounts(boolean)> ==> <com.csipsimple.service.SipNotifications: void cancelRegisters()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SIP SRV", "Error on looping over sip profiles", r3) in <com.csipsimple.service.SipService: void unregisterAllAccounts(boolean)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", $r4) in <com.csipsimple.service.SipService: int addBuddy(java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: int addBuddy(java.lang.String)>($r1) in <com.csipsimple.service.SipService: int addBuddy(java.lang.String)> ==> <com.csipsimple.pjsip.PjSipService: int addBuddy(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void confAdjustRxLevel(int,float)>(0, $f0) in <com.csipsimple.service.SipService: void confAdjustRxLevel(float)> ==> <com.csipsimple.pjsip.PjSipService: void confAdjustRxLevel(int,float)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void confAdjustTxLevel(int,float)>(0, $f0) in <com.csipsimple.service.SipService: void confAdjustTxLevel(float)> ==> <com.csipsimple.pjsip.PjSipService: void confAdjustTxLevel(int,float)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])>(r0, $l0, $r2) in <com.csipsimple.service.SipService: com.csipsimple.api.SipProfile getAccount(long)> ==> <com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.service.SipService: com.csipsimple.api.SipProfile getAccount(long)>($l1) in <com.csipsimple.service.SipService: com.csipsimple.api.SipProfileState getSipProfileState(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.api.SipProfile getAccount(long)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.service.SipService: com.csipsimple.api.SipProfileState getSipProfileState(int)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: void removeBuddy(java.lang.String)>($r1) in <com.csipsimple.service.SipService: void removeBuddy(java.lang.String)> ==> <com.csipsimple.pjsip.PjSipService: void removeBuddy(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)>($r1, $i0, $z0) in <com.csipsimple.service.SipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)> ==> <com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void setNoSnd()>() in <com.csipsimple.service.SipService: void setNoSnd()> ==> <com.csipsimple.pjsip.PjSipService: void setNoSnd()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void setSnd()>() in <com.csipsimple.service.SipService: void setSnd()> ==> <com.csipsimple.pjsip.PjSipService: void setSnd()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", $r4) in <com.csipsimple.service.SipService: int shouldAutoAnswer(java.lang.String,com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: i0 = staticinvoke <com.csipsimple.models.Filter: int isAutoAnswerNumber(android.content.Context,long,java.lang.String)>(r0, $l1, $r1) in <com.csipsimple.service.SipService: int shouldAutoAnswer(java.lang.String,com.csipsimple.api.SipProfile)> ==> <com.csipsimple.models.Filter: int isAutoAnswerNumber(android.content.Context,long,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.service.SipService: boolean isConnectivityValid()>() in <com.csipsimple.service.SipService: void treatDeferUnregistersForOutgoing()> ==> <com.csipsimple.service.SipService: boolean isConnectivityValid()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipService: void cleanStop()>() in <com.csipsimple.service.SipService: void treatDeferUnregistersForOutgoing()> ==> <com.csipsimple.service.SipService: void cleanStop()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.service.SipService: boolean isConnectivityValid()>() in <com.csipsimple.service.SipService: void unregisterForOutgoing(android.content.ComponentName)> ==> <com.csipsimple.service.SipService: boolean isConnectivityValid()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipService: void cleanStop()>() in <com.csipsimple.service.SipService: void unregisterForOutgoing(android.content.ComponentName)> ==> <com.csipsimple.service.SipService: void cleanStop()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Update registration state") in <com.csipsimple.service.SipService: void updateRegistrationsState()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.api.SipProfileState: void <init>(android.database.Cursor)>($r6) in <com.csipsimple.service.SipService: void updateRegistrationsState()> ==> <com.csipsimple.api.SipProfileState: void <init>(android.database.Cursor)>
VIRTUAL edge: $z0 = virtualinvoke r3.<com.csipsimple.api.SipProfileState: boolean isValidForCall()>() in <com.csipsimple.service.SipService: void updateRegistrationsState()> ==> <com.csipsimple.api.SipProfileState: boolean isValidForCall()>
STATIC edge: $r7 = staticinvoke <com.csipsimple.api.SipProfileState: java.util.Comparator getComparator()>() in <com.csipsimple.service.SipService: void updateRegistrationsState()> ==> <com.csipsimple.api.SipProfileState: java.util.Comparator getComparator()>
VIRTUAL edge: $z0 = virtualinvoke $r8.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("icon_in_status_bar") in <com.csipsimple.service.SipService: void updateRegistrationsState()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.service.SipNotifications: void notifyRegisteredAccounts(java.util.ArrayList,boolean)>(r1, $z0) in <com.csipsimple.service.SipService: void updateRegistrationsState()> ==> <com.csipsimple.service.SipNotifications: void notifyRegisteredAccounts(java.util.ArrayList,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService: void acquireResources()>() in <com.csipsimple.service.SipService: void updateRegistrationsState()> ==> <com.csipsimple.service.SipService: void acquireResources()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SIP SRV", "Error on looping over sip profiles", r2) in <com.csipsimple.service.SipService: void updateRegistrationsState()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.service.SipNotifications: void cancelRegisters()>() in <com.csipsimple.service.SipService: void updateRegistrationsState()> ==> <com.csipsimple.service.SipNotifications: void cancelRegisters()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService: void releaseResources()>() in <com.csipsimple.service.SipService: void updateRegistrationsState()> ==> <com.csipsimple.service.SipService: void releaseResources()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_endpoint: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_endpoint: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_endpoint: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_endpoint: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.CallLogAdapter$CallRowInfos: void <init>(com.csipsimple.ui.calllog.CallLogAdapter)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogAdapter$CallRowInfos: void <init>(com.csipsimple.ui.calllog.CallLogAdapter)>($r1) in <com.csipsimple.ui.calllog.CallLogAdapter$CallRowInfos: void <init>(com.csipsimple.ui.calllog.CallLogAdapter,com.csipsimple.ui.calllog.CallLogAdapter$CallRowInfos)> ==> <com.csipsimple.ui.calllog.CallLogAdapter$CallRowInfos: void <init>(com.csipsimple.ui.calllog.CallLogAdapter)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int)>("PJSIP_REDIRECT_REJECT", 0) in <org.pjsip.pjsua.pjsip_redirect_op: void <clinit>()> ==> <org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsip_redirect_op$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsip_redirect_op$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_redirect_op$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsip_redirect_op$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_redirect_op$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsip_redirect_op$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_redirect_op)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_redirect_op)> ==> <org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_redirect_op$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_redirect_op)> ==> <org.pjsip.pjsua.pjsip_redirect_op$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsip_redirect_op: org.pjsip.pjsua.pjsip_redirect_op swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.contactbadge.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, null, 0) in <com.csipsimple.widgets.contactbadge.QuickContactBadge: void <init>(android.content.Context)> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.contactbadge.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 0) in <com.csipsimple.widgets.contactbadge.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(5) in <com.csipsimple.widgets.contactbadge.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("com.csipsimple.widgets.contactbadge.ContactBadge") in <com.csipsimple.widgets.contactbadge.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r7) in <com.csipsimple.widgets.contactbadge.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
STATIC edge: $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.widgets.contactbadge.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.contactbadge.QuickContactBadge: void setDrawable()>() in <com.csipsimple.widgets.contactbadge.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge: void setDrawable()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("QuickContactBadgeCompat", "Problem when trying to load for compat mode") in <com.csipsimple.widgets.contactbadge.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.contactbadge.QuickContactBadge: void setDrawable()>() in <com.csipsimple.widgets.contactbadge.QuickContactBadge: void setPosition(com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition)> ==> <com.csipsimple.widgets.contactbadge.QuickContactBadge: void setDrawable()>
VIRTUAL edge: $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_buddy_state(int)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_call_media_state(int)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: org.pjsip.pjsua.pjsip_redirect_op on_call_redirected(int,org.pjsip.pjsua.pj_str_t)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.Callback: org.pjsip.pjsua.pjsip_redirect_op on_call_redirected(int,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $r3 = staticinvoke <org.pjsip.pjsua.pjsip_redirect_op: org.pjsip.pjsua.pjsip_redirect_op swigToEnum(int)>($i0) in <org.pjsip.pjsua.Callback: org.pjsip.pjsua.pjsip_redirect_op on_call_redirected(int,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsip_redirect_op: org.pjsip.pjsua.pjsip_redirect_op swigToEnum(int)>
VIRTUAL edge: $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_call_replace_request(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data,org.pjsip.pjsua.SWIGTYPE_p_int,org.pjsip.pjsua.pj_str_t)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>($r1) in <org.pjsip.pjsua.Callback: void on_call_replace_request(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data,org.pjsip.pjsua.SWIGTYPE_p_int,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_int)>($r2) in <org.pjsip.pjsua.Callback: void on_call_replace_request(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data,org.pjsip.pjsua.SWIGTYPE_p_int,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.SWIGTYPE_p_int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_int)>
STATIC edge: $l4 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r3) in <org.pjsip.pjsua.Callback: void on_call_replace_request(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data,org.pjsip.pjsua.SWIGTYPE_p_int,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_call_replaced(int,int)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_call_sdp_created(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session,org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session)>($r1) in <org.pjsip.pjsua.Callback: void on_call_sdp_created(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session,org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session)>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>($r2) in <org.pjsip.pjsua.Callback: void on_call_sdp_created(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session,org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session)> ==> <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
VIRTUAL edge: $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_call_state(int,org.pjsip.pjsua.pjsip_event)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsip_event: long getCPtr(org.pjsip.pjsua.pjsip_event)>($r1) in <org.pjsip.pjsua.Callback: void on_call_state(int,org.pjsip.pjsua.pjsip_event)> ==> <org.pjsip.pjsua.pjsip_event: long getCPtr(org.pjsip.pjsua.pjsip_event)>
VIRTUAL edge: $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_call_transfer_request(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.Callback: void on_call_transfer_request(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code)>($r2) in <org.pjsip.pjsua.Callback: void on_call_transfer_request(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code)>
VIRTUAL edge: $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_call_transfer_status(int,int,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.SWIGTYPE_p_int)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l4 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.Callback: void on_call_transfer_status(int,int,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.SWIGTYPE_p_int)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l5 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_int)>($r2) in <org.pjsip.pjsua.Callback: void on_call_transfer_status(int,int,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.SWIGTYPE_p_int)> ==> <org.pjsip.pjsua.SWIGTYPE_p_int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_int)>
VIRTUAL edge: $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_call_tsx_state(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction,org.pjsip.pjsua.pjsip_event)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction)>($r1) in <org.pjsip.pjsua.Callback: void on_call_tsx_state(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction,org.pjsip.pjsua.pjsip_event)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction)>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.pjsip_event: long getCPtr(org.pjsip.pjsua.pjsip_event)>($r2) in <org.pjsip.pjsua.Callback: void on_call_tsx_state(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction,org.pjsip.pjsua.pjsip_event)> ==> <org.pjsip.pjsua.pjsip_event: long getCPtr(org.pjsip.pjsua.pjsip_event)>
VIRTUAL edge: $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_dtmf_digit(int,int)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>($r1) in <org.pjsip.pjsua.Callback: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
VIRTUAL edge: $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.Callback: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_nat_detect(org.pjsip.pjsua.pj_stun_nat_detect_result)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_stun_nat_detect_result: long getCPtr(org.pjsip.pjsua.pj_stun_nat_detect_result)>($r1) in <org.pjsip.pjsua.Callback: void on_nat_detect(org.pjsip.pjsua.pj_stun_nat_detect_result)> ==> <org.pjsip.pjsua.pj_stun_nat_detect_result: long getCPtr(org.pjsip.pjsua.pj_stun_nat_detect_result)>
VIRTUAL edge: $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.Callback: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_pager2(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.Callback: void on_pager2(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l7 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>($r6) in <org.pjsip.pjsua.Callback: void on_pager2(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
VIRTUAL edge: $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.Callback: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $i4 = virtualinvoke $r3.<org.pjsip.pjsua.pjsip_status_code: int swigValue()>() in <org.pjsip.pjsua.Callback: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsip_status_code: int swigValue()>
VIRTUAL edge: $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_pager_status2(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.Callback: void on_pager_status2(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $i4 = virtualinvoke $r3.<org.pjsip.pjsua.pjsip_status_code: int swigValue()>() in <org.pjsip.pjsua.Callback: void on_pager_status2(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <org.pjsip.pjsua.pjsip_status_code: int swigValue()>
STATIC edge: $l6 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data)>($r5) in <org.pjsip.pjsua.Callback: void on_pager_status2(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data)>
STATIC edge: $l7 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>($r6) in <org.pjsip.pjsua.Callback: void on_pager_status2(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
VIRTUAL edge: $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_reg_state(int)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: int on_set_micro_source()> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_setup_audio()> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_stream_created(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream,long,org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream)>($r1) in <org.pjsip.pjsua.Callback: void on_stream_created(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream,long,org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream)>
STATIC edge: $l4 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)>($r2) in <org.pjsip.pjsua.Callback: void on_stream_created(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream,long,org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)> ==> <org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)>
VIRTUAL edge: $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_stream_destroyed(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream,long)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream)>($r1) in <org.pjsip.pjsua.Callback: void on_stream_destroyed(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream,long)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream)>
VIRTUAL edge: $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_teardown_audio()> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_typing(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,int)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.Callback: void on_typing(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,int)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: int on_validate_audio_clock_rate(int)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_zrtp_show_sas(int,org.pjsip.pjsua.pj_str_t,int)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.Callback: void on_zrtp_show_sas(int,org.pjsip.pjsua.pj_str_t,int)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: void on_zrtp_update_transport(int)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.Callback: void delete()>() in <org.pjsip.pjsua.Callback: void swigDirectorDisconnect()> ==> <org.pjsip.pjsua.Callback: void delete()>
VIRTUAL edge: $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: int timer_cancel(int,int)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() in <org.pjsip.pjsua.Callback: int timer_schedule(int,int,int)> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Columns$Type: com.csipsimple.utils.Columns$Type[] values()>() in <com.csipsimple.utils.Columns: int[] $SWITCH_TABLE$com$csipsimple$utils$Columns$Type()> ==> <com.csipsimple.utils.Columns$Type: com.csipsimple.utils.Columns$Type[] values()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.Columns: void <init>(java.lang.String[],java.lang.Class[])> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean getBoolean(java.lang.String)>($r2) in <com.csipsimple.utils.Columns: void j2cvBoolean(org.json.JSONObject,android.content.ContentValues,java.lang.String)> ==> <org.json.JSONObject: boolean getBoolean(java.lang.String)>
STATIC edge: $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.utils.Columns: void j2cvBoolean(org.json.JSONObject,android.content.ContentValues,java.lang.String)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
VIRTUAL edge: $d0 = virtualinvoke $r0.<org.json.JSONObject: double getDouble(java.lang.String)>($r2) in <com.csipsimple.utils.Columns: void j2cvDouble(org.json.JSONObject,android.content.ContentValues,java.lang.String)> ==> <org.json.JSONObject: double getDouble(java.lang.String)>
VIRTUAL edge: $d0 = virtualinvoke $r0.<org.json.JSONObject: double getDouble(java.lang.String)>($r2) in <com.csipsimple.utils.Columns: void j2cvFloat(org.json.JSONObject,android.content.ContentValues,java.lang.String)> ==> <org.json.JSONObject: double getDouble(java.lang.String)>
STATIC edge: $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0) in <com.csipsimple.utils.Columns: void j2cvFloat(org.json.JSONObject,android.content.ContentValues,java.lang.String)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
VIRTUAL edge: $i0 = virtualinvoke $r0.<org.json.JSONObject: int getInt(java.lang.String)>($r2) in <com.csipsimple.utils.Columns: void j2cvInt(org.json.JSONObject,android.content.ContentValues,java.lang.String)> ==> <org.json.JSONObject: int getInt(java.lang.String)>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.utils.Columns: void j2cvInt(org.json.JSONObject,android.content.ContentValues,java.lang.String)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $l0 = virtualinvoke $r0.<org.json.JSONObject: long getLong(java.lang.String)>($r2) in <com.csipsimple.utils.Columns: void j2cvLong(org.json.JSONObject,android.content.ContentValues,java.lang.String)> ==> <org.json.JSONObject: long getLong(java.lang.String)>
STATIC edge: $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.utils.Columns: void j2cvLong(org.json.JSONObject,android.content.ContentValues,java.lang.String)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
VIRTUAL edge: $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r2) in <com.csipsimple.utils.Columns: void j2cvString(org.json.JSONObject,android.content.ContentValues,java.lang.String)> ==> <org.json.JSONObject: java.lang.String getString(java.lang.String)>
SPECIAL edge: specialinvoke r3.<org.json.JSONObject: void <init>()>() in <com.csipsimple.utils.Columns: org.json.JSONObject contentValueToJSON(android.content.ContentValues)> ==> <org.json.JSONObject: void <init>()>
STATIC edge: $r6 = staticinvoke <com.csipsimple.utils.Columns: int[] $SWITCH_TABLE$com$csipsimple$utils$Columns$Type()>() in <com.csipsimple.utils.Columns: org.json.JSONObject contentValueToJSON(android.content.ContentValues)> ==> <com.csipsimple.utils.Columns: int[] $SWITCH_TABLE$com$csipsimple$utils$Columns$Type()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("Col", $r5) in <com.csipsimple.utils.Columns: org.json.JSONObject contentValueToJSON(android.content.ContentValues)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Col", "Invalid type, can\'t unserialize ", r2) in <com.csipsimple.utils.Columns: org.json.JSONObject contentValueToJSON(android.content.ContentValues)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
VIRTUAL edge: virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r5, $r10) in <com.csipsimple.utils.Columns: org.json.JSONObject contentValueToJSON(android.content.ContentValues)> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.Columns: int[] $SWITCH_TABLE$com$csipsimple$utils$Columns$Type()>() in <com.csipsimple.utils.Columns: android.content.ContentValues jsonToContentValues(org.json.JSONObject)> ==> <com.csipsimple.utils.Columns: int[] $SWITCH_TABLE$com$csipsimple$utils$Columns$Type()>
STATIC edge: staticinvoke <com.csipsimple.utils.Columns: void j2cvString(org.json.JSONObject,android.content.ContentValues,java.lang.String)>($r1, r2, $r7) in <com.csipsimple.utils.Columns: android.content.ContentValues jsonToContentValues(org.json.JSONObject)> ==> <com.csipsimple.utils.Columns: void j2cvString(org.json.JSONObject,android.content.ContentValues,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Columns: void j2cvInt(org.json.JSONObject,android.content.ContentValues,java.lang.String)>($r1, r2, $r7) in <com.csipsimple.utils.Columns: android.content.ContentValues jsonToContentValues(org.json.JSONObject)> ==> <com.csipsimple.utils.Columns: void j2cvInt(org.json.JSONObject,android.content.ContentValues,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Columns: void j2cvLong(org.json.JSONObject,android.content.ContentValues,java.lang.String)>($r1, r2, $r7) in <com.csipsimple.utils.Columns: android.content.ContentValues jsonToContentValues(org.json.JSONObject)> ==> <com.csipsimple.utils.Columns: void j2cvLong(org.json.JSONObject,android.content.ContentValues,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Columns: void j2cvFloat(org.json.JSONObject,android.content.ContentValues,java.lang.String)>($r1, r2, $r7) in <com.csipsimple.utils.Columns: android.content.ContentValues jsonToContentValues(org.json.JSONObject)> ==> <com.csipsimple.utils.Columns: void j2cvFloat(org.json.JSONObject,android.content.ContentValues,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Columns: void j2cvDouble(org.json.JSONObject,android.content.ContentValues,java.lang.String)>($r1, r2, $r7) in <com.csipsimple.utils.Columns: android.content.ContentValues jsonToContentValues(org.json.JSONObject)> ==> <com.csipsimple.utils.Columns: void j2cvDouble(org.json.JSONObject,android.content.ContentValues,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Columns: void j2cvBoolean(org.json.JSONObject,android.content.ContentValues,java.lang.String)>($r1, r2, $r7) in <com.csipsimple.utils.Columns: android.content.ContentValues jsonToContentValues(org.json.JSONObject)> ==> <com.csipsimple.utils.Columns: void j2cvBoolean(org.json.JSONObject,android.content.ContentValues,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.impl.Tanstagi$1: void <init>(com.csipsimple.wizards.impl.Tanstagi)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: void <init>(com.actionbarsherlock.internal.ActionBarSherlockCompat,com.actionbarsherlock.view.ActionMode$Callback)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.internal.widget.ActionBarContextView access$0(com.actionbarsherlock.internal.ActionBarSherlockCompat)>($r3) in <com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: void onDestroyActionMode(com.actionbarsherlock.view.ActionMode)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.internal.widget.ActionBarContextView access$0(com.actionbarsherlock.internal.ActionBarSherlockCompat)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.ActionBarContextView: void setVisibility(int)>(8) in <com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: void onDestroyActionMode(com.actionbarsherlock.view.ActionMode)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void setVisibility(int)>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.internal.ActionBarSherlockCompat: android.app.Activity access$1(com.actionbarsherlock.internal.ActionBarSherlockCompat)>($r3) in <com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: void onDestroyActionMode(com.actionbarsherlock.view.ActionMode)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: android.app.Activity access$1(com.actionbarsherlock.internal.ActionBarSherlockCompat)>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode access$2(com.actionbarsherlock.internal.ActionBarSherlockCompat)>($r3) in <com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: void onDestroyActionMode(com.actionbarsherlock.view.ActionMode)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode access$2(com.actionbarsherlock.internal.ActionBarSherlockCompat)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.ActionBarSherlockCompat: void access$3(com.actionbarsherlock.internal.ActionBarSherlockCompat,com.actionbarsherlock.view.ActionMode)>($r3, null) in <com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: void onDestroyActionMode(com.actionbarsherlock.view.ActionMode)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: void access$3(com.actionbarsherlock.internal.ActionBarSherlockCompat,com.actionbarsherlock.view.ActionMode)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.pjsip.UAStateReceiver$1: void <init>(com.csipsimple.pjsip.UAStateReceiver,int)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP UA Receiver", $r2) in <com.csipsimple.pjsip.UAStateReceiver$1: void doRun()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.pjsip.PjSipService access$4(com.csipsimple.pjsip.UAStateReceiver)>($r3) in <com.csipsimple.pjsip.UAStateReceiver$1: void doRun()> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.pjsip.PjSipService access$4(com.csipsimple.pjsip.UAStateReceiver)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.pjsip.PjSipService: void updateProfileStateFromService(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver$1: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: void updateProfileStateFromService(int)>
VIRTUAL edge: $r5 = virtualinvoke $r4.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfile getAccountForPjsipId(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver$1: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfile getAccountForPjsipId(int)>
VIRTUAL edge: $r6 = virtualinvoke $r4.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)>($r5) in <com.csipsimple.pjsip.UAStateReceiver$1: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $i0 = virtualinvoke $r6.<com.csipsimple.api.SipProfileState: int getStatusCode()>() in <com.csipsimple.pjsip.UAStateReceiver$1: void doRun()> ==> <com.csipsimple.api.SipProfileState: int getStatusCode()>
STATIC edge: $r7 = staticinvoke <com.csipsimple.pjsip.UAStateReceiver: java.util.List access$11(com.csipsimple.pjsip.UAStateReceiver)>($r3) in <com.csipsimple.pjsip.UAStateReceiver$1: void doRun()> ==> <com.csipsimple.pjsip.UAStateReceiver: java.util.List access$11(com.csipsimple.pjsip.UAStateReceiver)>
STATIC edge: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver$1: void doRun()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $i0 = virtualinvoke $r6.<com.csipsimple.api.SipProfileState: int getExpires()>() in <com.csipsimple.pjsip.UAStateReceiver$1: void doRun()> ==> <com.csipsimple.api.SipProfileState: int getExpires()>
VIRTUAL edge: $r2 = virtualinvoke $r6.<com.csipsimple.api.SipProfileState: java.lang.String getStatusText()>() in <com.csipsimple.pjsip.UAStateReceiver$1: void doRun()> ==> <com.csipsimple.api.SipProfileState: java.lang.String getStatusText()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("SIP UA Receiver", $r2) in <com.csipsimple.pjsip.UAStateReceiver$1: void doRun()> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int acc_clean_all_registrations(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver$1: void doRun()> ==> <org.pjsip.pjsua.pjsua: int acc_clean_all_registrations(int)>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int acc_set_registration(int,int)>($i0, 1) in <com.csipsimple.pjsip.UAStateReceiver$1: void doRun()> ==> <org.pjsip.pjsua.pjsua: int acc_set_registration(int,int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP UA Receiver", $r2) in <com.csipsimple.pjsip.UAStateReceiver$1: void doRun()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Fritzbox: void <init>()> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Fritzbox: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.Fritzbox: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r4) in <com.csipsimple.wizards.impl.Fritzbox: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Fritzbox: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Fritzbox: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Fritzbox: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.pjsip.UAStateReceiver$4: void <init>(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.pjsip.PjSipService access$4(com.csipsimple.pjsip.UAStateReceiver)>($r1) in <com.csipsimple.pjsip.UAStateReceiver$4: void doRun()> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.pjsip.PjSipService access$4(com.csipsimple.pjsip.UAStateReceiver)>
VIRTUAL edge: $i0 = virtualinvoke $r3.<com.csipsimple.utils.PreferencesProviderWrapper: int getHeadsetAction()>() in <com.csipsimple.pjsip.UAStateReceiver$4: void doRun()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getHeadsetAction()>
VIRTUAL edge: $i0 = virtualinvoke $r4.<com.csipsimple.api.SipCallSession: int getCallId()>() in <com.csipsimple.pjsip.UAStateReceiver$4: void doRun()> ==> <com.csipsimple.api.SipCallSession: int getCallId()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: int callHangup(int,int)>($i0, 0) in <com.csipsimple.pjsip.UAStateReceiver$4: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: int callHangup(int,int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: int callHold(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver$4: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: int callHold(int)>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.service.MediaManager: void toggleMute()>() in <com.csipsimple.pjsip.UAStateReceiver$4: void doRun()> ==> <com.csipsimple.service.MediaManager: void toggleMute()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Vanbergsystems: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Vanbergsystems: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Vanbergsystems: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_dns_srv", 1) in <com.csipsimple.wizards.impl.Vanbergsystems: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("keep_alive_interval_mobile", "60") in <com.csipsimple.wizards.impl.Vanbergsystems: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.pjsip.UAStateReceiver$5: void <init>(com.csipsimple.pjsip.UAStateReceiver,int)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.pjsip.PjSipService access$4(com.csipsimple.pjsip.UAStateReceiver)>($r2) in <com.csipsimple.pjsip.UAStateReceiver$5: void doRun()> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.pjsip.PjSipService access$4(com.csipsimple.pjsip.UAStateReceiver)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void sendPendingDtmf(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver$5: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: void sendPendingDtmf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_method: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_method: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_method: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_method: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.pjsip.UAStateReceiver$2: void <init>(com.csipsimple.pjsip.UAStateReceiver,int)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver$2: void doRun()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession access$12(com.csipsimple.pjsip.UAStateReceiver,java.lang.Integer,org.pjsip.pjsua.pjsip_event)>($r1, $r2, null) in <com.csipsimple.pjsip.UAStateReceiver$2: void doRun()> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession access$12(com.csipsimple.pjsip.UAStateReceiver,java.lang.Integer,org.pjsip.pjsua.pjsip_event)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.pjsip.UAStateReceiver$WorkerHandler access$13(com.csipsimple.pjsip.UAStateReceiver)>($r1) in <com.csipsimple.pjsip.UAStateReceiver$2: void doRun()> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.pjsip.UAStateReceiver$WorkerHandler access$13(com.csipsimple.pjsip.UAStateReceiver)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.pjsip.UAStateReceiver$3: void <init>(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.pjsip.PjSipService access$4(com.csipsimple.pjsip.UAStateReceiver)>($r1) in <com.csipsimple.pjsip.UAStateReceiver$3: void doRun()> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.pjsip.PjSipService access$4(com.csipsimple.pjsip.UAStateReceiver)>
VIRTUAL edge: $i0 = virtualinvoke $r3.<com.csipsimple.api.SipCallSession: int getCallId()>() in <com.csipsimple.pjsip.UAStateReceiver$3: void doRun()> ==> <com.csipsimple.api.SipCallSession: int getCallId()>
VIRTUAL edge: $i1 = virtualinvoke $r4.<org.pjsip.pjsua.pjsip_status_code: int swigValue()>() in <com.csipsimple.pjsip.UAStateReceiver$3: void doRun()> ==> <org.pjsip.pjsua.pjsip_status_code: int swigValue()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: int callAnswer(int,int)>($i0, $i1) in <com.csipsimple.pjsip.UAStateReceiver$3: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: int callAnswer(int,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>($r1, null) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, $r2, 16842871) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class "Lcom/actionbarsherlock/internal/widget/IcsProgressBar;", "onVisibilityChanged", $r3) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void initProgressBar()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void initProgressBar()>
SPECIAL edge: $r9 = specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean)>($r9, 0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)>($r9) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setInterpolator(android.content.Context,int)>($r1, $i0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setInterpolator(android.content.Context,int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setMax(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setMax(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgress(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgress(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setSecondaryProgress(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setSecondaryProgress(int)>
SPECIAL edge: $r9 = specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable)>($r9) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>($r9) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setIndeterminate(boolean)>($z0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setIndeterminate(boolean)>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void doRefreshProgress(int,int,boolean,boolean)>($i0, $i1, $z0, $z1) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void access$0(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void doRefreshProgress(int,int,boolean,boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void onProgressRefresh(float,boolean)>($f0, $z0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void doRefreshProgress(int,int,boolean,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void onProgressRefresh(float,boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void doRefreshProgress(int,int,boolean,boolean)>($i0, $i1, $z0, 1) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void refreshProgress(int,int,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void doRefreshProgress(int,int,boolean,boolean)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable: void setup(int,int,boolean)>($i0, $i1, $z0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void refreshProgress(int,int,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable: void setup(int,int,boolean)>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable: void <init>(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean)>(r0, $i0, $i1, $z0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void refreshProgress(int,int,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable: void <init>(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean)>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender: void <init>(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender)>(r0, null) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void scheduleAccessibilityEventSender()> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender: void <init>(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender)>
VIRTUAL edge: $r9 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.shapes.Shape getDrawableShape()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.shapes.Shape getDrawableShape()>
SPECIAL edge: $r2 = specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean)>($r2, 1) in <com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void updateDrawableState()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void drawableStateChanged()> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void updateDrawableState()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgress(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void incrementProgressBy(int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgress(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setSecondaryProgress(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void incrementSecondaryProgressBy(int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setSecondaryProgress(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>($r1) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void invalidateDrawable(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void jumpDrawablesToCurrentState()> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void startAnimation()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void onAttachedToWindow()> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void startAnimation()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void stopAnimation()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void onDetachedFromWindow()> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void stopAnimation()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void updateDrawableState()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void updateDrawableState()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void onMeasure(int,int)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void scheduleAccessibilityEventSender()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void onProgressRefresh(float,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void scheduleAccessibilityEventSender()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgress(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void onRestoreInstanceState(android.os.Parcelable)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgress(int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setSecondaryProgress(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void onRestoreInstanceState(android.os.Parcelable)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setSecondaryProgress(int)>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState: void <init>(android.os.Parcelable)>($r2) in <com.actionbarsherlock.internal.widget.IcsProgressBar: android.os.Parcelable onSaveInstanceState()> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState: void <init>(android.os.Parcelable)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void updateDrawableBounds(int,int)>($i0, $i1) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void onSizeChanged(int,int,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void updateDrawableBounds(int,int)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void onVisibilityChanged(android.view.View,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>($r3, r0, $r4) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void onVisibilityChanged(android.view.View,int)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void stopAnimation()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void onVisibilityChanged(android.view.View,int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void stopAnimation()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void startAnimation()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void onVisibilityChanged(android.view.View,int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void startAnimation()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void startAnimation()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void setIndeterminate(boolean)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void startAnimation()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void stopAnimation()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void setIndeterminate(boolean)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void stopAnimation()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void postInvalidate()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void postInvalidate()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setInterpolator(android.view.animation.Interpolator)>($r2) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void setInterpolator(android.content.Context,int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setInterpolator(android.view.animation.Interpolator)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void postInvalidate()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void setMax(int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void postInvalidate()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void refreshProgress(int,int,boolean)>(16908301, $i0, 0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void setMax(int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void refreshProgress(int,int,boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgress(int,boolean)>($i0, 0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgress(int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgress(int,boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void refreshProgress(int,int,boolean)>(16908301, $i0, $z0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgress(int,boolean)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void refreshProgress(int,int,boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void postInvalidate()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void postInvalidate()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void updateDrawableBounds(int,int)>($i0, $i1) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void updateDrawableBounds(int,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void updateDrawableState()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void updateDrawableState()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void doRefreshProgress(int,int,boolean,boolean)>(16908301, $i0, 0, 0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void doRefreshProgress(int,int,boolean,boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void refreshProgress(int,int,boolean)>(16908303, $i0, 0) in <com.actionbarsherlock.internal.widget.IcsProgressBar: void setSecondaryProgress(int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void refreshProgress(int,int,boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void stopAnimation()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void setVisibility(int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void stopAnimation()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void startAnimation()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void setVisibility(int)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void startAnimation()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void postInvalidate()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void startAnimation()> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void postInvalidate()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar: void postInvalidate()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar: void stopAnimation()> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar: void postInvalidate()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.ActionBar$LayoutParams: void <init>(int,int,int)>(-2, -1, $i0) in <com.actionbarsherlock.app.ActionBar$LayoutParams: void <init>(int)> ==> <com.actionbarsherlock.app.ActionBar$LayoutParams: void <init>(int,int,int)>
SPECIAL edge: specialinvoke r0.<android.view.ViewGroup$MarginLayoutParams: void <init>(int,int)>($i0, $i1) in <com.actionbarsherlock.app.ActionBar$LayoutParams: void <init>(int,int,int)> ==> <com.actionbarsherlock.app.ActionBar$LayoutParams: void <init>(int,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.favorites.FavAdapter$5: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.database.Cursor)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.favorites.FavAdapter$6: void <init>(com.csipsimple.ui.favorites.FavAdapter,java.lang.String,java.lang.String,java.lang.Long)> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.ui.favorites.FavAdapter: void access$3(com.csipsimple.ui.favorites.FavAdapter,java.lang.String,int,java.lang.String,long)>($r2, $r3, $i0, $r4, $l1) in <com.csipsimple.ui.favorites.FavAdapter$6: void onClick(android.content.DialogInterface,int)> ==> <com.csipsimple.ui.favorites.FavAdapter: void access$3(com.csipsimple.ui.favorites.FavAdapter,java.lang.String,int,java.lang.String,long)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.app.ActionBar$Tab: void <init>()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)> ==> <com.actionbarsherlock.app.ActionBar$Tab: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>(r0) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: void select()> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)>($r4) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$8(com.actionbarsherlock.internal.app.ActionBarImpl)>($r3) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$8(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void updateTab(int)>($i0) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void updateTab(int)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context getThemedContext()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setCustomView(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context getThemedContext()>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View)>($r4) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setCustomView(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$8(com.actionbarsherlock.internal.app.ActionBarImpl)>($r3) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$8(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void updateTab(int)>($i0) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void updateTab(int)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setIcon(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)>($r4) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setIcon(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$8(com.actionbarsherlock.internal.app.ActionBarImpl)>($r3) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$8(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void updateTab(int)>($i0) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void updateTab(int)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl)>($r1) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setText(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence)>($r4) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setText(int)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$8(com.actionbarsherlock.internal.app.ActionBarImpl)>($r3) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$8(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void updateTab(int)>($i0) in <com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void updateTab(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.favorites.FavAdapter$3: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.database.Cursor,android.content.Context,java.lang.Long)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.favorites.FavAdapter$4: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.database.Cursor)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.favorites.FavAdapter$1: void <init>(com.csipsimple.ui.favorites.FavAdapter)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.ui.favorites.FavAdapter$1: void onClick(android.view.View)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
STATIC edge: $r8 = staticinvoke <com.csipsimple.ui.favorites.FavAdapter: android.content.Context access$0(com.csipsimple.ui.favorites.FavAdapter)>($r7) in <com.csipsimple.ui.favorites.FavAdapter$1: void onClick(android.view.View)> ==> <com.csipsimple.ui.favorites.FavAdapter: android.content.Context access$0(com.csipsimple.ui.favorites.FavAdapter)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.favorites.FavAdapter$2: void <init>(com.csipsimple.ui.favorites.FavAdapter)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.ui.favorites.FavAdapter$2: void onClick(android.view.View)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
STATIC edge: $r7 = staticinvoke <com.csipsimple.ui.favorites.FavAdapter: android.content.Context access$0(com.csipsimple.ui.favorites.FavAdapter)>($r6) in <com.csipsimple.ui.favorites.FavAdapter$2: void onClick(android.view.View)> ==> <com.csipsimple.ui.favorites.FavAdapter: android.content.Context access$0(com.csipsimple.ui.favorites.FavAdapter)>
STATIC edge: $r14 = staticinvoke <com.csipsimple.api.SipUri: android.net.Uri forgeSipUri(java.lang.String,java.lang.String)>($r13, r10) in <com.csipsimple.ui.favorites.FavAdapter$2: void onClick(android.view.View)> ==> <com.csipsimple.api.SipUri: android.net.Uri forgeSipUri(java.lang.String,java.lang.String)>
VIRTUAL edge: r10 = virtualinvoke $r15.<com.csipsimple.utils.contacts.ContactsWrapper$Phone: java.lang.String getNumber()>() in <com.csipsimple.ui.favorites.FavAdapter$2: void onClick(android.view.View)> ==> <com.csipsimple.utils.contacts.ContactsWrapper$Phone: java.lang.String getNumber()>
STATIC edge: $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.ui.favorites.FavAdapter$2: void onClick(android.view.View)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.ui.incall.DtmfDialogFragment: void <init>()>() in <com.csipsimple.ui.incall.DtmfDialogFragment: com.csipsimple.ui.incall.DtmfDialogFragment newInstance(int)> ==> <com.csipsimple.ui.incall.DtmfDialogFragment: void <init>()>
VIRTUAL edge: virtualinvoke r6.<com.csipsimple.widgets.Dialpad: void setForceWidth(boolean)>(1) in <com.csipsimple.ui.incall.DtmfDialogFragment: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.widgets.Dialpad: void setForceWidth(boolean)>
VIRTUAL edge: virtualinvoke r6.<com.csipsimple.widgets.Dialpad: void setOnDialKeyListener(com.csipsimple.widgets.Dialpad$OnDialKeyListener)>(r0) in <com.csipsimple.ui.incall.DtmfDialogFragment: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.incall.DtmfDialogFragment: void onTrigger(int,int)>
VIRTUAL edge: virtualinvoke r6.<com.csipsimple.widgets.Dialpad: void setOnDialKeyListener(com.csipsimple.widgets.Dialpad$OnDialKeyListener)>(r0) in <com.csipsimple.ui.incall.DtmfDialogFragment: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.widgets.Dialpad: void setOnDialKeyListener(com.csipsimple.widgets.Dialpad$OnDialKeyListener)>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.ui.incall.DtmfDialogFragment: com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity()>() in <com.csipsimple.ui.incall.DtmfDialogFragment: void onTrigger(int,int)> ==> <com.actionbarsherlock.app.SherlockDialogFragment: com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity()>
STATIC edge: $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) in <com.csipsimple.ui.incall.DtmfDialogFragment: void onTrigger(int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("DtmfDialogFragment", "Impossible to find the call associated to this view") in <com.csipsimple.ui.incall.DtmfDialogFragment: void onTrigger(int,int)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.prefs.CodecsFragment: void setCodecPriority(java.lang.String,short)>($r1, $s0) in <com.csipsimple.ui.prefs.CodecsFragment: void access$1(com.csipsimple.ui.prefs.CodecsFragment,java.lang.String,short)> ==> <com.csipsimple.ui.prefs.CodecsFragment: void setCodecPriority(java.lang.String,short)>
VIRTUAL edge: $r13 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("/") in <com.csipsimple.ui.prefs.CodecsFragment: void initDatas()> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
VIRTUAL edge: $i3 = virtualinvoke $r14.<java.lang.String: int length()>() in <com.csipsimple.ui.prefs.CodecsFragment: void initDatas()> ==> <java.lang.String: int length()>
VIRTUAL edge: $z1 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7) in <com.csipsimple.ui.prefs.CodecsFragment: void onCheckedChanged(android.widget.CompoundButton,boolean)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: virtualinvoke r6.<com.csipsimple.widgets.DragnDropListView: void setOnDropListener(com.csipsimple.widgets.DragnDropListView$DropListener)>($r7) in <com.csipsimple.ui.prefs.CodecsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.ui.prefs.CodecsFragment$3: void drop(int,int)>
VIRTUAL edge: virtualinvoke r6.<com.csipsimple.widgets.DragnDropListView: void setOnDropListener(com.csipsimple.widgets.DragnDropListView$DropListener)>($r7) in <com.csipsimple.ui.prefs.CodecsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ==> <com.csipsimple.widgets.DragnDropListView: void setOnDropListener(com.csipsimple.widgets.DragnDropListView$DropListener)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.impl.SimpleImplementation$1: void <init>()>() in <com.csipsimple.wizards.impl.SimpleImplementation: void <clinit>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.BaseImplementation: void <init>()>() in <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: android.preference.Preference findPreference(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.SimpleImplementation: void bindFields()> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r3) in <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getText(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: boolean canTcp()>() in <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: boolean canTcp()>
STATIC edge: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b0) in <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void bindFields()>() in <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void bindFields()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>(r2) in <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: boolean canTcp()>() in <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: boolean canTcp()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void hidePreference(java.lang.String,java.lang.String)>(null, r2) in <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void hidePreference(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setStringFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.SimpleImplementation: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setPasswordFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.SimpleImplementation: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setPasswordFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.api.MediaState$1: void <init>()>() in <com.csipsimple.api.MediaState: void <clinit>()> ==> <com.csipsimple.api.MediaState$1: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.MediaState: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.MediaState: void <init>(android.os.Parcel)> ==> <com.csipsimple.api.MediaState: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.MediaState: void <init>(android.os.Parcel)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.api.MediaState: void <init>(android.os.Parcel)>($r1) in <com.csipsimple.api.MediaState: void <init>(android.os.Parcel,com.csipsimple.api.MediaState)> ==> <com.csipsimple.api.MediaState: void <init>(android.os.Parcel)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <com.csipsimple.api.MediaState: boolean equals(java.lang.Object)> ==> <java.lang.Object: java.lang.Class getClass()>
SPECIAL edge: $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1) in <com.csipsimple.api.MediaState: boolean equals(java.lang.Object)> ==> <java.lang.Object: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Globtelecom: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node,int)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void start()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void start()>
STATIC edge: $r5 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>(r0) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)>($r1, $r2, null, 0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)>($r1, $r2, $r3, 0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean isShowing()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void dismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean isShowing()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void dismiss()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void dismiss()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void dismiss()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isShowing()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean isShowing()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isShowing()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void dismiss()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void dismiss()>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void close()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void close()>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onViewAttachedToWindow(android.view.View)>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: int getId()>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: android.os.Parcelable onSaveInstanceState()>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onViewDetachedFromWindow(android.view.View)>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean onKey(android.view.View,int,android.view.KeyEvent)>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean flagActionItems()>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void updateMenuView(boolean)>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onGlobalLayout()>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onRestoreInstanceState(android.os.Parcelable)>
VIRTUAL edge: virtualinvoke $r2.<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean isShowing()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onGlobalLayout()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean isShowing()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void dismiss()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onGlobalLayout()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void dismiss()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onGlobalLayout()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: com.actionbarsherlock.internal.view.menu.MenuBuilder access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter)>(r3) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: com.actionbarsherlock.internal.view.menu.MenuBuilder access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter)>
VIRTUAL edge: $r5 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int)>($i0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)>($r5, 0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void dismiss()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean onKey(android.view.View,int,android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void dismiss()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: boolean hasVisibleItems()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean hasVisibleItems()>
SPECIAL edge: specialinvoke r2.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)>($r4, $r1, $r3, 0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)>
VIRTUAL edge: virtualinvoke r2.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>($r5) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: int size()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>
VIRTUAL edge: virtualinvoke r2.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void setForceShowIcon(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void setForceShowIcon(boolean)>
VIRTUAL edge: $z0 = virtualinvoke r2.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()>
VIRTUAL edge: $r6 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.MenuItem getItem(int)>(i1) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem getItem(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void show()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>($r3, null, $i0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>(r0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: void <init>(com.actionbarsherlock.internal.view.menu.MenuPopupHelper,com.actionbarsherlock.internal.view.menu.MenuBuilder)>(r0, $r5) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: void <init>(com.actionbarsherlock.internal.view.menu.MenuPopupHelper,com.actionbarsherlock.internal.view.menu.MenuBuilder)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setAdapter(android.widget.ListAdapter)>($r4) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setAdapter(android.widget.ListAdapter)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setModal(boolean)>(1) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setModal(boolean)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setAnchorView(android.view.View)>(r1) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setAnchorView(android.view.View)>
SPECIAL edge: $i0 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: int measureContentWidth(android.widget.ListAdapter)>($r4) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: int measureContentWidth(android.widget.ListAdapter)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setContentWidth(int)>($i0) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setContentWidth(int)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setInputMethodMode(int)>(2) in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setInputMethodMode(int)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()>
VIRTUAL edge: $r8 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.widget.ListView getListView()>() in <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.widget.ListView getListView()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void <init>(com.actionbarsherlock.internal.widget.AbsActionBarView)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.AbsActionBarView: void setVisibility(int)>($i0) in <com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void setVisibility(int)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.ActionMenuView: void setVisibility(int)>($i0) in <com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void setVisibility(int)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.AbsActionBarView: void setVisibility(int)>(0) in <com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.widget.AbsActionBarView: void setVisibility(int)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void addAllAccounts()> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.SipService$1$1: void <init>(com.csipsimple.service.SipService$1)>(r0) in <com.csipsimple.service.SipService$1: void addAllAccounts()> ==> <com.csipsimple.service.SipService$1$1: void <init>(com.csipsimple.service.SipService$1)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r3) in <com.csipsimple.service.SipService$1: void addAllAccounts()> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1: void adjustVolume(com.csipsimple.api.SipCallSession,int,int)> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isIncoming()>() in <com.csipsimple.service.SipService$1: void adjustVolume(com.csipsimple.api.SipCallSession,int,int)> ==> <com.csipsimple.api.SipCallSession: boolean isIncoming()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isBeforeConfirmed()>() in <com.csipsimple.service.SipService$1: void adjustVolume(com.csipsimple.api.SipCallSession,int,int)> ==> <com.csipsimple.api.SipCallSession: boolean isBeforeConfirmed()>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.pjsip.PjSipService: void silenceRinger()>() in <com.csipsimple.service.SipService$1: void adjustVolume(com.csipsimple.api.SipCallSession,int,int)> ==> <com.csipsimple.pjsip.PjSipService: void silenceRinger()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper access$4(com.csipsimple.service.SipService)>($r3) in <com.csipsimple.service.SipService$1: void adjustVolume(com.csipsimple.api.SipCallSession,int,int)> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper access$4(com.csipsimple.service.SipService)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("use_soft_volume") in <com.csipsimple.service.SipService$1: void adjustVolume(com.csipsimple.api.SipCallSession,int,int)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
STATIC edge: $i2 = staticinvoke <com.csipsimple.utils.Compatibility: int getInCallStream()>() in <com.csipsimple.service.SipService$1: void adjustVolume(com.csipsimple.api.SipCallSession,int,int)> ==> <com.csipsimple.utils.Compatibility: int getInCallStream()>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.pjsip.PjSipService: void adjustStreamVolume(int,int,int)>($i2, $i0, $i1) in <com.csipsimple.service.SipService$1: void adjustVolume(com.csipsimple.api.SipCallSession,int,int)> ==> <com.csipsimple.pjsip.PjSipService: void adjustStreamVolume(int,int,int)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.service.SipService$1$7: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int)>(r0, $r3, $i0, $i1) in <com.csipsimple.service.SipService$1: int answer(int,int)> ==> <com.csipsimple.service.SipService$1$7: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int)>
VIRTUAL edge: $r2 = virtualinvoke $r3.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: int answer(int,int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>(r1) in <com.csipsimple.service.SipService$1: int answer(int,int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Restart required from third part app/serv") in <com.csipsimple.service.SipService$1: void askThreadedRestart()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void askThreadedRestart()> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.SipService$RestartRunnable: void <init>(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$1: void askThreadedRestart()> ==> <com.csipsimple.service.SipService$RestartRunnable: void <init>(com.csipsimple.service.SipService)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r3) in <com.csipsimple.service.SipService$1: void askThreadedRestart()> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1: boolean canRecord(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: boolean canRecord(int)>($i0) in <com.csipsimple.service.SipService$1: boolean canRecord(int)> ==> <com.csipsimple.pjsip.PjSipService: boolean canRecord(int)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void confAdjustRxLevel(int,float)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.SipService$1$18: void <init>(com.csipsimple.service.SipService$1,int,float)>(r0, $i0, $f0) in <com.csipsimple.service.SipService$1: void confAdjustRxLevel(int,float)> ==> <com.csipsimple.service.SipService$1$18: void <init>(com.csipsimple.service.SipService$1,int,float)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r3) in <com.csipsimple.service.SipService$1: void confAdjustRxLevel(int,float)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void confAdjustTxLevel(int,float)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.SipService$1$17: void <init>(com.csipsimple.service.SipService$1,int,float)>(r0, $i0, $f0) in <com.csipsimple.service.SipService$1: void confAdjustTxLevel(int,float)> ==> <com.csipsimple.service.SipService$1$17: void <init>(com.csipsimple.service.SipService$1,int,float)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r3) in <com.csipsimple.service.SipService$1: void confAdjustTxLevel(int,float)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.service.SipService$1$28: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int)>(r0, $r2, $i0) in <com.csipsimple.service.SipService$1: long confGetRxTxLevel(int)> ==> <com.csipsimple.service.SipService$1$28: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: long confGetRxTxLevel(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>(r1) in <com.csipsimple.service.SipService$1: long confGetRxTxLevel(int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r4 = virtualinvoke r1.<com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()>() in <com.csipsimple.service.SipService$1: long confGetRxTxLevel(int)> ==> <com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Try to force service stop") in <com.csipsimple.service.SipService$1: void forceStopService()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService: void cleanStop()>() in <com.csipsimple.service.SipService$1: void forceStopService()> ==> <com.csipsimple.service.SipService: void cleanStop()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1: com.csipsimple.api.SipCallSession getCallInfo(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)>($i0) in <com.csipsimple.service.SipService$1: com.csipsimple.api.SipCallSession getCallInfo(int)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1: com.csipsimple.api.SipCallSession[] getCalls()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession[] getCalls()>() in <com.csipsimple.service.SipService$1: com.csipsimple.api.SipCallSession[] getCalls()> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession[] getCalls()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.api.MediaState: void <init>()>() in <com.csipsimple.service.SipService$1: com.csipsimple.api.MediaState getCurrentMediaState()> ==> <com.csipsimple.api.MediaState: void <init>()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1: com.csipsimple.api.MediaState getCurrentMediaState()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: r2 = virtualinvoke $r4.<com.csipsimple.service.MediaManager: com.csipsimple.api.MediaState getMediaState()>() in <com.csipsimple.service.SipService$1: com.csipsimple.api.MediaState getCurrentMediaState()> ==> <com.csipsimple.service.MediaManager: com.csipsimple.api.MediaState getMediaState()>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.api.SipProfileState getSipProfileState(int)>($i0) in <com.csipsimple.service.SipService$1: com.csipsimple.api.SipProfileState getSipProfileState(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.api.SipProfileState getSipProfileState(int)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.service.SipService$1$8: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int)>(r0, $r3, $i0, $i1) in <com.csipsimple.service.SipService$1: int hangup(int,int)> ==> <com.csipsimple.service.SipService$1$8: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int)>
VIRTUAL edge: $r2 = virtualinvoke $r3.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: int hangup(int,int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>(r1) in <com.csipsimple.service.SipService$1: int hangup(int,int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "HOLDING") in <com.csipsimple.service.SipService$1: int hold(int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.service.SipService$1$12: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int)>(r0, $r2, $i0) in <com.csipsimple.service.SipService$1: int hold(int)> ==> <com.csipsimple.service.SipService$1$12: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: int hold(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>(r1) in <com.csipsimple.service.SipService$1: int hold(int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r4 = virtualinvoke r1.<com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()>() in <com.csipsimple.service.SipService$1: int hold(int)> ==> <com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1: boolean isRecording(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)>($i0) in <com.csipsimple.service.SipService$1: boolean isRecording(int)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.csipsimple.api.SipCallSession: boolean isRecording()>() in <com.csipsimple.service.SipService$1: boolean isRecording(int)> ==> <com.csipsimple.api.SipCallSession: boolean isRecording()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.service.SipService$1: void makeCallWithOptions(java.lang.String,int,android.os.Bundle)>($r1, $i0, null) in <com.csipsimple.service.SipService$1: void makeCall(java.lang.String,int)> ==> <com.csipsimple.service.SipService$1: void makeCallWithOptions(java.lang.String,int,android.os.Bundle)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1: void makeCallWithOptions(java.lang.String,int,android.os.Bundle)> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP SRV", "Can\'t place call if service not started") in <com.csipsimple.service.SipService$1: void makeCallWithOptions(java.lang.String,int,android.os.Bundle)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r6.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getActiveCallInProgress()>() in <com.csipsimple.service.SipService$1: void makeCallWithOptions(java.lang.String,int,android.os.Bundle)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getActiveCallInProgress()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.CustomDistribution: boolean forceNoMultipleCalls()>() in <com.csipsimple.service.SipService$1: void makeCallWithOptions(java.lang.String,int,android.os.Bundle)> ==> <com.csipsimple.utils.CustomDistribution: boolean forceNoMultipleCalls()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService: void notifyUserOfMessage(int)>(2131427839) in <com.csipsimple.service.SipService$1: void makeCallWithOptions(java.lang.String,int,android.os.Bundle)> ==> <com.csipsimple.service.SipService: void notifyUserOfMessage(int)>
VIRTUAL edge: $r8 = virtualinvoke $r3.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void makeCallWithOptions(java.lang.String,int,android.os.Bundle)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.service.SipService$1$5: void <init>(com.csipsimple.service.SipService$1,java.lang.String,int,android.os.Bundle)>(r0, $r1, $i0, $r2) in <com.csipsimple.service.SipService$1: void makeCallWithOptions(java.lang.String,int,android.os.Bundle)> ==> <com.csipsimple.service.SipService$1$5: void <init>(com.csipsimple.service.SipService$1,java.lang.String,int,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r8.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r9) in <com.csipsimple.service.SipService$1: void makeCallWithOptions(java.lang.String,int,android.os.Bundle)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1: void playWaveFile(java.lang.String,int,int)> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $r4 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void playWaveFile(java.lang.String,int,int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.service.SipService$1$22: void <init>(com.csipsimple.service.SipService$1,java.lang.String,int,int)>(r0, $r1, $i0, $i1) in <com.csipsimple.service.SipService$1: void playWaveFile(java.lang.String,int,int)> ==> <com.csipsimple.service.SipService$1$22: void <init>(com.csipsimple.service.SipService$1,java.lang.String,int,int)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r5) in <com.csipsimple.service.SipService$1: void playWaveFile(java.lang.String,int,int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void reAddAllAccounts()> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.SipService$1$3: void <init>(com.csipsimple.service.SipService$1)>(r0) in <com.csipsimple.service.SipService$1: void reAddAllAccounts()> ==> <com.csipsimple.service.SipService$1$3: void <init>(com.csipsimple.service.SipService$1)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r3) in <com.csipsimple.service.SipService$1: void reAddAllAccounts()> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "REINVITING") in <com.csipsimple.service.SipService$1: int reinvite(int,boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.service.SipService$1$13: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,boolean)>(r0, $r2, $i0, $z0) in <com.csipsimple.service.SipService$1: int reinvite(int,boolean)> ==> <com.csipsimple.service.SipService$1$13: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,boolean)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: int reinvite(int,boolean)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>(r1) in <com.csipsimple.service.SipService$1: int reinvite(int,boolean)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r4 = virtualinvoke r1.<com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()>() in <com.csipsimple.service.SipService$1: int reinvite(int,boolean)> ==> <com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void removeAllAccounts()> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.SipService$1$2: void <init>(com.csipsimple.service.SipService$1)>(r0) in <com.csipsimple.service.SipService$1: void removeAllAccounts()> ==> <com.csipsimple.service.SipService$1$2: void <init>(com.csipsimple.service.SipService$1)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r3) in <com.csipsimple.service.SipService$1: void removeAllAccounts()> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.service.SipService$1$11: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int)>(r0, $r2, $i0, $i1) in <com.csipsimple.service.SipService$1: int sendDtmf(int,int)> ==> <com.csipsimple.service.SipService$1$11: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: int sendDtmf(int,int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>(r1) in <com.csipsimple.service.SipService$1: int sendDtmf(int,int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r4 = virtualinvoke r1.<com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()>() in <com.csipsimple.service.SipService$1: int sendDtmf(int,int)> ==> <com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()>
VIRTUAL edge: $r3 = virtualinvoke $r4.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void sendMessage(java.lang.String,java.lang.String,long)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r7.<com.csipsimple.service.SipService$1$6: void <init>(com.csipsimple.service.SipService$1,java.lang.String,java.lang.String,long)>(r0, $r2, $r1, $l0) in <com.csipsimple.service.SipService$1: void sendMessage(java.lang.String,java.lang.String,long)> ==> <com.csipsimple.service.SipService$1$6: void <init>(com.csipsimple.service.SipService$1,java.lang.String,java.lang.String,long)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r7) in <com.csipsimple.service.SipService$1: void sendMessage(java.lang.String,java.lang.String,long)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.service.SipService: com.csipsimple.api.SipProfile getAccount(long)>($l2) in <com.csipsimple.service.SipService$1: void setAccountRegistration(int,int)> ==> <com.csipsimple.service.SipService: com.csipsimple.api.SipProfile getAccount(long)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void setAccountRegistration(int,int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.service.SipService$1$4: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.api.SipProfile,int)>(r0, $r2, $i1) in <com.csipsimple.service.SipService$1: void setAccountRegistration(int,int)> ==> <com.csipsimple.service.SipService$1$4: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.api.SipProfile,int)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r4) in <com.csipsimple.service.SipService$1: void setAccountRegistration(int,int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void setBluetoothOn(boolean)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.SipService$1$14: void <init>(com.csipsimple.service.SipService$1,boolean)>(r0, $z0) in <com.csipsimple.service.SipService$1: void setBluetoothOn(boolean)> ==> <com.csipsimple.service.SipService$1$14: void <init>(com.csipsimple.service.SipService$1,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r3) in <com.csipsimple.service.SipService$1: void setBluetoothOn(boolean)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1: void setEchoCancellation(boolean)> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void setEchoCancellation(boolean)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.service.SipService$1$19: void <init>(com.csipsimple.service.SipService$1,boolean)>(r0, $z0) in <com.csipsimple.service.SipService$1: void setEchoCancellation(boolean)> ==> <com.csipsimple.service.SipService$1$19: void <init>(com.csipsimple.service.SipService$1,boolean)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r4) in <com.csipsimple.service.SipService$1: void setEchoCancellation(boolean)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void setMicrophoneMute(boolean)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.SipService$1$15: void <init>(com.csipsimple.service.SipService$1,boolean)>(r0, $z0) in <com.csipsimple.service.SipService$1: void setMicrophoneMute(boolean)> ==> <com.csipsimple.service.SipService$1$15: void <init>(com.csipsimple.service.SipService$1,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r3) in <com.csipsimple.service.SipService$1: void setMicrophoneMute(boolean)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1: void setPresence(int,java.lang.String,long)> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $r4 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void setPresence(int,java.lang.String,long)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.service.SipService$1$23: void <init>(com.csipsimple.service.SipService$1,int,java.lang.String,long)>(r0, $i0, $r1, $l1) in <com.csipsimple.service.SipService$1: void setPresence(int,java.lang.String,long)> ==> <com.csipsimple.service.SipService$1$23: void <init>(com.csipsimple.service.SipService$1,int,java.lang.String,long)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r5) in <com.csipsimple.service.SipService$1: void setPresence(int,java.lang.String,long)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void setSpeakerphoneOn(boolean)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.SipService$1$16: void <init>(com.csipsimple.service.SipService$1,boolean)>(r0, $z0) in <com.csipsimple.service.SipService$1: void setSpeakerphoneOn(boolean)> ==> <com.csipsimple.service.SipService$1$16: void <init>(com.csipsimple.service.SipService$1,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r3) in <com.csipsimple.service.SipService$1: void setSpeakerphoneOn(boolean)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.service.SipService$1$25: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int)>(r0, $r2, $i0) in <com.csipsimple.service.SipService$1: java.lang.String showCallInfosDialog(int)> ==> <com.csipsimple.service.SipService$1$25: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: java.lang.String showCallInfosDialog(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>(r1) in <com.csipsimple.service.SipService$1: java.lang.String showCallInfosDialog(int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r4 = virtualinvoke r1.<com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()>() in <com.csipsimple.service.SipService$1: java.lang.String showCallInfosDialog(int)> ==> <com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Start required from third party app/serv") in <com.csipsimple.service.SipService$1: void sipStart()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void sipStart()> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.SipService$StartRunnable: void <init>(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$1: void sipStart()> ==> <com.csipsimple.service.SipService$StartRunnable: void <init>(com.csipsimple.service.SipService)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r3) in <com.csipsimple.service.SipService$1: void sipStart()> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void sipStop()> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.SipService$StopRunnable: void <init>(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$1: void sipStop()> ==> <com.csipsimple.service.SipService$StopRunnable: void <init>(com.csipsimple.service.SipService)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r3) in <com.csipsimple.service.SipService$1: void sipStop()> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1: int startLoopbackTest()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.service.SipService$1$26: void <init>(com.csipsimple.service.SipService$1)>(r0) in <com.csipsimple.service.SipService$1: int startLoopbackTest()> ==> <com.csipsimple.service.SipService$1$26: void <init>(com.csipsimple.service.SipService$1)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: int startLoopbackTest()> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>(r1) in <com.csipsimple.service.SipService$1: int startLoopbackTest()> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1: void startRecording(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void startRecording(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.service.SipService$1$20: void <init>(com.csipsimple.service.SipService$1,int)>(r0, $i0) in <com.csipsimple.service.SipService$1: void startRecording(int)> ==> <com.csipsimple.service.SipService$1$20: void <init>(com.csipsimple.service.SipService$1,int)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r4) in <com.csipsimple.service.SipService$1: void startRecording(int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1: int stopLoopbackTest()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.service.SipService$1$27: void <init>(com.csipsimple.service.SipService$1)>(r0) in <com.csipsimple.service.SipService$1: int stopLoopbackTest()> ==> <com.csipsimple.service.SipService$1$27: void <init>(com.csipsimple.service.SipService$1)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: int stopLoopbackTest()> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>(r1) in <com.csipsimple.service.SipService$1: int stopLoopbackTest()> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1: void stopRecording(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void stopRecording(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.service.SipService$1$21: void <init>(com.csipsimple.service.SipService$1,int)>(r0, $i0) in <com.csipsimple.service.SipService$1: void stopRecording(int)> ==> <com.csipsimple.service.SipService$1$21: void <init>(com.csipsimple.service.SipService$1,int)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r4) in <com.csipsimple.service.SipService$1: void stopRecording(int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "Switch to auto answer") in <com.csipsimple.service.SipService$1: void switchToAutoAnswer()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService: void setAutoAnswerNext(boolean)>(1) in <com.csipsimple.service.SipService$1: void switchToAutoAnswer()> ==> <com.csipsimple.service.SipService: void setAutoAnswerNext(boolean)>
VIRTUAL edge: $r3 = virtualinvoke $r4.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void updateCallOptions(int,android.os.Bundle)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r2.<com.csipsimple.service.SipService$1$29: void <init>(com.csipsimple.service.SipService$1,int,android.os.Bundle)>(r0, $i0, $r1) in <com.csipsimple.service.SipService$1: void updateCallOptions(int,android.os.Bundle)> ==> <com.csipsimple.service.SipService$1$29: void <init>(com.csipsimple.service.SipService$1,int,android.os.Bundle)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r2) in <com.csipsimple.service.SipService$1: void updateCallOptions(int,android.os.Bundle)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "XFER") in <com.csipsimple.service.SipService$1: int xfer(int,java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.service.SipService$1$9: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,java.lang.String)>(r0, $r3, $i0, $r1) in <com.csipsimple.service.SipService$1: int xfer(int,java.lang.String)> ==> <com.csipsimple.service.SipService$1$9: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: int xfer(int,java.lang.String)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>(r2) in <com.csipsimple.service.SipService$1: int xfer(int,java.lang.String)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r5 = virtualinvoke r2.<com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()>() in <com.csipsimple.service.SipService$1: int xfer(int,java.lang.String)> ==> <com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", "XFER-replace") in <com.csipsimple.service.SipService$1: int xferReplace(int,int,int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.service.SipService$1$10: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int,int)>(r0, $r2, $i0, $i1, $i2) in <com.csipsimple.service.SipService$1: int xferReplace(int,int,int)> ==> <com.csipsimple.service.SipService$1$10: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int,int)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: int xferReplace(int,int,int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>(r1) in <com.csipsimple.service.SipService$1: int xferReplace(int,int,int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r4 = virtualinvoke r1.<com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()>() in <com.csipsimple.service.SipService$1: int xferReplace(int,int,int)> ==> <com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.SipService$1: void zrtpSASVerified(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.SipService$1$24: void <init>(com.csipsimple.service.SipService$1,int)>(r0, $i0) in <com.csipsimple.service.SipService$1: void zrtpSASVerified(int)> ==> <com.csipsimple.service.SipService$1$24: void <init>(com.csipsimple.service.SipService$1,int)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r3) in <com.csipsimple.service.SipService$1: void zrtpSASVerified(int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper access$4(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$2: boolean getPreferenceBoolean(java.lang.String)> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper access$4(com.csipsimple.service.SipService)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>($r1) in <com.csipsimple.service.SipService$2: boolean getPreferenceBoolean(java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper access$4(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$2: float getPreferenceFloat(java.lang.String)> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper access$4(com.csipsimple.service.SipService)>
VIRTUAL edge: $f0 = virtualinvoke $r3.<com.csipsimple.utils.PreferencesProviderWrapper: float getPreferenceFloatValue(java.lang.String)>($r1) in <com.csipsimple.service.SipService$2: float getPreferenceFloat(java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: float getPreferenceFloatValue(java.lang.String)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper access$4(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$2: java.lang.String getPreferenceString(java.lang.String)> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper access$4(com.csipsimple.service.SipService)>
VIRTUAL edge: $r1 = virtualinvoke $r3.<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>($r1) in <com.csipsimple.service.SipService$2: java.lang.String getPreferenceString(java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper access$4(com.csipsimple.service.SipService)>($r3) in <com.csipsimple.service.SipService$2: void setPreferenceBoolean(java.lang.String,boolean)> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper access$4(com.csipsimple.service.SipService)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>($r1, $z0) in <com.csipsimple.service.SipService$2: void setPreferenceBoolean(java.lang.String,boolean)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper access$4(com.csipsimple.service.SipService)>($r3) in <com.csipsimple.service.SipService$2: void setPreferenceFloat(java.lang.String,float)> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper access$4(com.csipsimple.service.SipService)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceFloatValue(java.lang.String,float)>($r1, $f0) in <com.csipsimple.service.SipService$2: void setPreferenceFloat(java.lang.String,float)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceFloatValue(java.lang.String,float)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper access$4(com.csipsimple.service.SipService)>($r4) in <com.csipsimple.service.SipService$2: void setPreferenceString(java.lang.String,java.lang.String)> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper access$4(com.csipsimple.service.SipService)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>($r1, $r2) in <com.csipsimple.service.SipService$2: void setPreferenceString(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$3: void <init>(com.csipsimple.service.SipService,int,java.lang.Object)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int vid_set_android_window(int,java.lang.Object)>($i0, $r1) in <com.csipsimple.service.SipService$3: void doRun()> ==> <org.pjsip.pjsua.pjsua: int vid_set_android_window(int,java.lang.Object)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.impl.Advanced$1: void <init>()>() in <com.csipsimple.wizards.impl.Advanced: void <clinit>()> ==> <com.csipsimple.wizards.impl.Advanced$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.BaseImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Advanced: void <init>()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.wizards.impl.Advanced: android.preference.Preference findPreference(java.lang.String)>("display_name") in <com.csipsimple.wizards.impl.Advanced: void bindFields()> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Advanced W", "begin of save ....") in <com.csipsimple.wizards.impl.Advanced: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.Advanced: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(":") in <com.csipsimple.wizards.impl.Advanced: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
STATIC edge: $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) in <com.csipsimple.wizards.impl.Advanced: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r3) in <com.csipsimple.wizards.impl.Advanced: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.Advanced: java.lang.String getText(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Advanced: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
STATIC edge: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b0) in <com.csipsimple.wizards.impl.Advanced: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Advanced: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Advanced: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Advanced: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Advanced: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Advanced: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.Advanced: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Advanced: void bindFields()>() in <com.csipsimple.wizards.impl.Advanced: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Advanced: void bindFields()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>($r3) in <com.csipsimple.wizards.impl.Advanced: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5) in <com.csipsimple.wizards.impl.Advanced: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Advanced: void setStringFieldSummary(java.lang.String)>("display_name") in <com.csipsimple.wizards.impl.Advanced: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Advanced: void setPasswordFieldSummary(java.lang.String)>("password") in <com.csipsimple.wizards.impl.Advanced: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setPasswordFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R$xml: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>($r1) in <com.actionbarsherlock.internal.view.menu.SubMenuWrapper: void <init>(android.view.SubMenu)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void <init>(android.view.MenuItem)>($r1) in <com.actionbarsherlock.internal.view.menu.SubMenuWrapper: com.actionbarsherlock.view.MenuItem getItem()> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void <init>(android.view.MenuItem)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.help.Help$HelpArrayAdapter: void bindView(android.view.View,com.csipsimple.ui.help.Help$HelpEntry)>($r1, $r4) in <com.csipsimple.ui.help.Help$HelpArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.ui.help.Help$HelpArrayAdapter: void bindView(android.view.View,com.csipsimple.ui.help.Help$HelpEntry)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.Base64: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $r0 = staticinvoke <com.csipsimple.utils.Base64: byte[] getDecodabet(int)>($i0) in <com.csipsimple.utils.Base64: byte[] access$0(int)> ==> <com.csipsimple.utils.Base64: byte[] getDecodabet(int)>
STATIC edge: $r0 = staticinvoke <com.csipsimple.utils.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>($r0, $i0, $i1, $r1, $i2, $i3) in <com.csipsimple.utils.Base64: byte[] access$1(byte[],int,int,byte[],int,int)> ==> <com.csipsimple.utils.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.Base64: int decode4to3(byte[],int,byte[],int,int)>($r0, $i0, $r1, $i1, $i2) in <com.csipsimple.utils.Base64: int access$2(byte[],int,byte[],int,int)> ==> <com.csipsimple.utils.Base64: int decode4to3(byte[],int,byte[],int,int)>
STATIC edge: $r0 = staticinvoke <com.csipsimple.utils.Base64: byte[] encode3to4(byte[],byte[],int,int)>($r0, $r1, $i0, $i1) in <com.csipsimple.utils.Base64: byte[] access$3(byte[],byte[],int,int)> ==> <com.csipsimple.utils.Base64: byte[] encode3to4(byte[],byte[],int,int)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Base64: byte[] decode(java.lang.String,int)>($r0, 0) in <com.csipsimple.utils.Base64: byte[] decode(java.lang.String)> ==> <com.csipsimple.utils.Base64: byte[] decode(java.lang.String,int)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.utils.Base64: byte[] decode(byte[],int,int,int)>($r6, 0, $i1, $i0) in <com.csipsimple.utils.Base64: byte[] decode(java.lang.String,int)> ==> <com.csipsimple.utils.Base64: byte[] decode(byte[],int,int,int)>
STATIC edge: $r0 = staticinvoke <com.csipsimple.utils.Base64: byte[] decode(byte[],int,int,int)>($r0, 0, $i0, 0) in <com.csipsimple.utils.Base64: byte[] decode(byte[])> ==> <com.csipsimple.utils.Base64: byte[] decode(byte[],int,int,int)>
STATIC edge: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) in <com.csipsimple.utils.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Source array with length %d cannot have offset of %d and process %d bytes.", $r5) in <com.csipsimple.utils.Base64: byte[] decode(byte[],int,int,int)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r9 = staticinvoke <com.csipsimple.utils.Base64: byte[] getDecodabet(int)>($i2) in <com.csipsimple.utils.Base64: byte[] decode(byte[],int,int,int)> ==> <com.csipsimple.utils.Base64: byte[] getDecodabet(int)>
STATIC edge: i5 = staticinvoke <com.csipsimple.utils.Base64: int decode4to3(byte[],int,byte[],int,int)>(r1, 0, r2, $i4, $i2) in <com.csipsimple.utils.Base64: byte[] decode(byte[],int,int,int)> ==> <com.csipsimple.utils.Base64: int decode4to3(byte[],int,byte[],int,int)>
STATIC edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.utils.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Source array with length %d cannot have offset of %d and still process four bytes.", $r4) in <com.csipsimple.utils.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
STATIC edge: $r7 = staticinvoke <com.csipsimple.utils.Base64: byte[] getDecodabet(int)>($i2) in <com.csipsimple.utils.Base64: int decode4to3(byte[],int,byte[],int,int)> ==> <com.csipsimple.utils.Base64: byte[] getDecodabet(int)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.Base64: byte[] decodeFromFile(java.lang.String)>($r0) in <com.csipsimple.utils.Base64: void decodeFileToFile(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Base64: byte[] decodeFromFile(java.lang.String)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.utils.Base64$InputStream: void <init>(java.io.InputStream,int)>($r9, 0) in <com.csipsimple.utils.Base64: byte[] decodeFromFile(java.lang.String)> ==> <com.csipsimple.utils.Base64$InputStream: void <init>(java.io.InputStream,int)>
VIRTUAL edge: $i3 = virtualinvoke r1.<com.csipsimple.utils.Base64$InputStream: int read(byte[],int,int)>(r8, i0, 4096) in <com.csipsimple.utils.Base64: byte[] decodeFromFile(java.lang.String)> ==> <com.csipsimple.utils.Base64$InputStream: int read(byte[],int,int)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.utils.Base64$OutputStream: void <init>(java.io.OutputStream,int)>($r5, 0) in <com.csipsimple.utils.Base64: void decodeToFile(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Base64$OutputStream: void <init>(java.io.OutputStream,int)>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.utils.Base64$OutputStream: void close()>() in <com.csipsimple.utils.Base64: void decodeToFile(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Base64$OutputStream: void close()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Base64: java.lang.Object decodeToObject(java.lang.String,int,java.lang.ClassLoader)>($r0, 0, null) in <com.csipsimple.utils.Base64: java.lang.Object decodeToObject(java.lang.String)> ==> <com.csipsimple.utils.Base64: java.lang.Object decodeToObject(java.lang.String,int,java.lang.ClassLoader)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.Base64: byte[] decode(java.lang.String,int)>($r0, $i0) in <com.csipsimple.utils.Base64: java.lang.Object decodeToObject(java.lang.String,int,java.lang.ClassLoader)> ==> <com.csipsimple.utils.Base64: byte[] decode(java.lang.String,int)>
SPECIAL edge: specialinvoke $r17.<com.csipsimple.utils.Base64$1: void <init>(java.io.InputStream,java.lang.ClassLoader)>(r2, $r1) in <com.csipsimple.utils.Base64: java.lang.Object decodeToObject(java.lang.String,int,java.lang.ClassLoader)> ==> <com.csipsimple.utils.Base64$1: void <init>(java.io.InputStream,java.lang.ClassLoader)>
STATIC edge: staticinvoke <com.csipsimple.utils.Base64: byte[] encode3to4(byte[],byte[],int,int)>(r2, r3, $i0, 0) in <com.csipsimple.utils.Base64: void encode(java.nio.ByteBuffer,java.nio.ByteBuffer)> ==> <com.csipsimple.utils.Base64: byte[] encode3to4(byte[],byte[],int,int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Base64: byte[] encode3to4(byte[],byte[],int,int)>(r2, r3, $i0, 0) in <com.csipsimple.utils.Base64: void encode(java.nio.ByteBuffer,java.nio.CharBuffer)> ==> <com.csipsimple.utils.Base64: byte[] encode3to4(byte[],byte[],int,int)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.Base64: byte[] getAlphabet(int)>($i3) in <com.csipsimple.utils.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)> ==> <com.csipsimple.utils.Base64: byte[] getAlphabet(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>($r1, 0, $i0, $r0, 0, $i1) in <com.csipsimple.utils.Base64: byte[] encode3to4(byte[],byte[],int,int)> ==> <com.csipsimple.utils.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[],int,int,int)>($r0, 0, $i0, 0) in <com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[])> ==> <com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[],int,int,int)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[],int,int,int)>($r0, 0, $i1, $i0) in <com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[],int)> ==> <com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[],int,int,int)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[],int,int,int)>($r0, $i0, $i1, 0) in <com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[],int,int)> ==> <com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[],int,int,int)>
STATIC edge: $r0 = staticinvoke <com.csipsimple.utils.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)>($r0, $i0, $i1, $i2) in <com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[],int,int,int)> ==> <com.csipsimple.utils.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)>
STATIC edge: $r0 = staticinvoke <com.csipsimple.utils.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)>($r0, 0, $i0, 0) in <com.csipsimple.utils.Base64: byte[] encodeBytesToBytes(byte[])> ==> <com.csipsimple.utils.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)>
STATIC edge: $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.utils.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot have offset of %d and length of %d with array of length %d", $r9) in <com.csipsimple.utils.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
SPECIAL edge: specialinvoke r2.<com.csipsimple.utils.Base64$OutputStream: void <init>(java.io.OutputStream,int)>(r3, $i2) in <com.csipsimple.utils.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)> ==> <com.csipsimple.utils.Base64$OutputStream: void <init>(java.io.OutputStream,int)>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.utils.Base64$OutputStream: void close()>() in <com.csipsimple.utils.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)> ==> <com.csipsimple.utils.Base64$OutputStream: void close()>
STATIC edge: staticinvoke <com.csipsimple.utils.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>($r0, $i0, $i1, r1, $i4, $i2) in <com.csipsimple.utils.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)> ==> <com.csipsimple.utils.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>
STATIC edge: $r0 = staticinvoke <com.csipsimple.utils.Base64: java.lang.String encodeFromFile(java.lang.String)>($r0) in <com.csipsimple.utils.Base64: void encodeFileToFile(java.lang.String,java.lang.String)> ==> <com.csipsimple.utils.Base64: java.lang.String encodeFromFile(java.lang.String)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.utils.Base64$InputStream: void <init>(java.io.InputStream,int)>($r5, 1) in <com.csipsimple.utils.Base64: java.lang.String encodeFromFile(java.lang.String)> ==> <com.csipsimple.utils.Base64$InputStream: void <init>(java.io.InputStream,int)>
VIRTUAL edge: $i2 = virtualinvoke r1.<com.csipsimple.utils.Base64$InputStream: int read(byte[],int,int)>(r2, $i1, 4096) in <com.csipsimple.utils.Base64: java.lang.String encodeFromFile(java.lang.String)> ==> <com.csipsimple.utils.Base64$InputStream: int read(byte[],int,int)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Base64: java.lang.String encodeObject(java.io.Serializable,int)>($r0, 0) in <com.csipsimple.utils.Base64: java.lang.String encodeObject(java.io.Serializable)> ==> <com.csipsimple.utils.Base64: java.lang.String encodeObject(java.io.Serializable,int)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.utils.Base64$OutputStream: void <init>(java.io.OutputStream,int)>(r2, $i1) in <com.csipsimple.utils.Base64: java.lang.String encodeObject(java.io.Serializable,int)> ==> <com.csipsimple.utils.Base64$OutputStream: void <init>(java.io.OutputStream,int)>
VIRTUAL edge: virtualinvoke r1.<java.io.OutputStream: void close()>() in <com.csipsimple.utils.Base64: java.lang.String encodeObject(java.io.Serializable,int)> ==> <com.csipsimple.utils.Base64$OutputStream: void close()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Base64", "IO Exception", r13) in <com.csipsimple.utils.Base64: java.lang.String encodeObject(java.io.Serializable,int)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.utils.Base64$OutputStream: void <init>(java.io.OutputStream,int)>($r5, 1) in <com.csipsimple.utils.Base64: void encodeToFile(byte[],java.lang.String)> ==> <com.csipsimple.utils.Base64$OutputStream: void <init>(java.io.OutputStream,int)>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.utils.Base64$OutputStream: void close()>() in <com.csipsimple.utils.Base64: void encodeToFile(byte[],java.lang.String)> ==> <com.csipsimple.utils.Base64$OutputStream: void close()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.PlanetPhone: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.PlanetPhone: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.PlanetPhone: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_vad", 1) in <com.csipsimple.wizards.impl.PlanetPhone: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("BT8", $r6) in <com.csipsimple.utils.bluetooth.BluetoothUtils8: boolean canBluetooth()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.utils.bluetooth.BluetoothUtils8: boolean canBluetooth()>() in <com.csipsimple.utils.bluetooth.BluetoothUtils8: boolean isBTHeadsetConnected()> ==> <com.csipsimple.utils.bluetooth.BluetoothUtils8: boolean canBluetooth()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("BT8", $r3) in <com.csipsimple.utils.bluetooth.BluetoothUtils8: void setBluetoothOn(boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.IpTel: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.IpTel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r3.<com.csipsimple.api.ISipConfiguration$Stub$Proxy: void <init>(android.os.IBinder)>($r0) in <com.csipsimple.api.ISipConfiguration$Stub: com.csipsimple.api.ISipConfiguration asInterface(android.os.IBinder)> ==> <com.csipsimple.api.ISipConfiguration$Stub$Proxy: void <init>(android.os.IBinder)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131427920) in <com.csipsimple.wizards.impl.OnSip$1: void <init>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r1) in <com.csipsimple.utils.Base64$OutputStream: void <init>(java.io.OutputStream,int)> ==> <com.csipsimple.utils.Base64$OutputStream: void <init>(java.io.OutputStream)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.Base64: byte[] access$0(int)>($i0) in <com.csipsimple.utils.Base64$OutputStream: void <init>(java.io.OutputStream,int)> ==> <com.csipsimple.utils.Base64: byte[] access$0(int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.Base64$OutputStream: void flushBase64()>() in <com.csipsimple.utils.Base64$OutputStream: void close()> ==> <com.csipsimple.utils.Base64$OutputStream: void flushBase64()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Base64: byte[] access$3(byte[],byte[],int,int)>($r3, $r1, $i0, $i1) in <com.csipsimple.utils.Base64$OutputStream: void flushBase64()> ==> <com.csipsimple.utils.Base64: byte[] access$3(byte[],byte[],int,int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.Base64$OutputStream: void flushBase64()>() in <com.csipsimple.utils.Base64$OutputStream: void suspendEncoding()> ==> <com.csipsimple.utils.Base64$OutputStream: void flushBase64()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.Base64: byte[] access$3(byte[],byte[],int,int)>($r2, $r3, $i0, $i1) in <com.csipsimple.utils.Base64$OutputStream: void write(int)> ==> <com.csipsimple.utils.Base64: byte[] access$3(byte[],byte[],int,int)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.Base64: int access$2(byte[],int,byte[],int,int)>($r2, 0, $r3, 0, $i0) in <com.csipsimple.utils.Base64$OutputStream: void write(int)> ==> <com.csipsimple.utils.Base64: int access$2(byte[],int,byte[],int,int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.Base64$OutputStream: void write(int)>($b4) in <com.csipsimple.utils.Base64$OutputStream: void write(byte[],int,int)> ==> <com.csipsimple.utils.Base64$OutputStream: void write(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.SipProfileJson: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r3.<java.lang.StringBuffer: void <init>()>() in <com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)> ==> <java.lang.StringBuffer: void <init>()>
VIRTUAL edge: $r6 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>() in <com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)> ==> <java.lang.StringBuffer: java.lang.String toString()>
SPECIAL edge: specialinvoke r5.<org.json.JSONObject: void <init>(java.lang.String)>($r6) in <com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)> ==> <org.json.JSONObject: void <init>(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke r5.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("accounts") in <com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)> ==> <org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
VIRTUAL edge: r5 = virtualinvoke r5.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("settings") in <com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)> ==> <org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r7.<org.json.JSONArray: int length()>() in <com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)> ==> <org.json.JSONArray: int length()>
STATIC edge: staticinvoke <com.csipsimple.utils.SipProfileJson: void restoreSipSettings(android.content.Context,org.json.JSONObject)>($r0, r8) in <com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)> ==> <com.csipsimple.utils.SipProfileJson: void restoreSipSettings(android.content.Context,org.json.JSONObject)>
VIRTUAL edge: virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6) in <com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)> ==> <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SipProfileJson", "Error while restoring", r12) in <com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
VIRTUAL edge: r5 = virtualinvoke r7.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0) in <com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)> ==> <org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.SipProfileJson: boolean restoreSipProfile(org.json.JSONObject,android.content.ContentResolver)>(r5, $r10) in <com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)> ==> <com.csipsimple.utils.SipProfileJson: boolean restoreSipProfile(org.json.JSONObject,android.content.ContentResolver)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.utils.Columns: void <init>(java.lang.String[],java.lang.Class[])>($r4, $r5) in <com.csipsimple.utils.SipProfileJson: boolean restoreSipProfile(org.json.JSONObject,android.content.ContentResolver)> ==> <com.csipsimple.utils.Columns: void <init>(java.lang.String[],java.lang.Class[])>
VIRTUAL edge: $r6 = virtualinvoke r3.<com.csipsimple.utils.Columns: android.content.ContentValues jsonToContentValues(org.json.JSONObject)>($r0) in <com.csipsimple.utils.SipProfileJson: boolean restoreSipProfile(org.json.JSONObject,android.content.ContentResolver)> ==> <com.csipsimple.utils.Columns: android.content.ContentValues jsonToContentValues(org.json.JSONObject)>
VIRTUAL edge: $r9 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("filters") in <com.csipsimple.utils.SipProfileJson: boolean restoreSipProfile(org.json.JSONObject,android.content.ContentResolver)> ==> <org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
VIRTUAL edge: $i3 = virtualinvoke $r9.<org.json.JSONArray: int length()>() in <com.csipsimple.utils.SipProfileJson: boolean restoreSipProfile(org.json.JSONObject,android.content.ContentResolver)> ==> <org.json.JSONArray: int length()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SipProfileJson", $r11) in <com.csipsimple.utils.SipProfileJson: boolean restoreSipProfile(org.json.JSONObject,android.content.ContentResolver)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r0 = virtualinvoke $r9.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i3) in <com.csipsimple.utils.SipProfileJson: boolean restoreSipProfile(org.json.JSONObject,android.content.ContentResolver)> ==> <org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
STATIC edge: $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1) in <com.csipsimple.utils.SipProfileJson: boolean restoreSipProfile(org.json.JSONObject,android.content.ContentResolver)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SipProfileJson", "Error while restoring filters", r2) in <com.csipsimple.utils.SipProfileJson: boolean restoreSipProfile(org.json.JSONObject,android.content.ContentResolver)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>($r0) in <com.csipsimple.utils.SipProfileJson: void restoreSipSettings(android.content.Context,org.json.JSONObject)> ==> <com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)>($r1) in <com.csipsimple.utils.SipProfileJson: void restoreSipSettings(android.content.Context,org.json.JSONObject)> ==> <com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.utils.PreferencesWrapper: java.io.File getConfigFolder(android.content.Context)>($r0) in <com.csipsimple.utils.SipProfileJson: boolean saveSipConfiguration(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: java.io.File getConfigFolder(android.content.Context)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SipProfileJson", $r8) in <com.csipsimple.utils.SipProfileJson: boolean saveSipConfiguration(android.content.Context)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r1.<org.json.JSONObject: void <init>()>() in <com.csipsimple.utils.SipProfileJson: boolean saveSipConfiguration(android.content.Context)> ==> <org.json.JSONObject: void <init>()>
STATIC edge: $r10 = staticinvoke <com.csipsimple.utils.SipProfileJson: org.json.JSONArray serializeSipProfiles(android.content.Context)>($r0) in <com.csipsimple.utils.SipProfileJson: boolean saveSipConfiguration(android.content.Context)> ==> <com.csipsimple.utils.SipProfileJson: org.json.JSONArray serializeSipProfiles(android.content.Context)>
VIRTUAL edge: virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("accounts", $r10) in <com.csipsimple.utils.SipProfileJson: boolean saveSipConfiguration(android.content.Context)> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
STATIC edge: $r11 = staticinvoke <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipSettings(android.content.Context)>($r0) in <com.csipsimple.utils.SipProfileJson: boolean saveSipConfiguration(android.content.Context)> ==> <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipSettings(android.content.Context)>
VIRTUAL edge: $r8 = virtualinvoke r1.<org.json.JSONObject: java.lang.String toString(int)>(2) in <com.csipsimple.utils.SipProfileJson: boolean saveSipConfiguration(android.content.Context)> ==> <org.json.JSONObject: java.lang.String toString(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SipProfileJson", "Impossible to add profiles", r12) in <com.csipsimple.utils.SipProfileJson: boolean saveSipConfiguration(android.content.Context)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<com.csipsimple.models.Filter: android.content.ContentValues getDbContentValues()>() in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeBaseFilter(com.csipsimple.models.Filter)> ==> <com.csipsimple.models.Filter: android.content.ContentValues getDbContentValues()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.utils.Columns: void <init>(java.lang.String[],java.lang.Class[])>($r4, $r2) in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeBaseFilter(com.csipsimple.models.Filter)> ==> <com.csipsimple.utils.Columns: void <init>(java.lang.String[],java.lang.Class[])>
VIRTUAL edge: $r5 = virtualinvoke r1.<com.csipsimple.utils.Columns: org.json.JSONObject contentValueToJSON(android.content.ContentValues)>($r3) in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeBaseFilter(com.csipsimple.models.Filter)> ==> <com.csipsimple.utils.Columns: org.json.JSONObject contentValueToJSON(android.content.ContentValues)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<com.csipsimple.api.SipProfile: android.content.ContentValues getDbContentValues()>() in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeBaseSipProfile(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: android.content.ContentValues getDbContentValues()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.utils.Columns: void <init>(java.lang.String[],java.lang.Class[])>($r4, $r2) in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeBaseSipProfile(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Columns: void <init>(java.lang.String[],java.lang.Class[])>
VIRTUAL edge: $r5 = virtualinvoke r1.<com.csipsimple.utils.Columns: org.json.JSONObject contentValueToJSON(android.content.ContentValues)>($r3) in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeBaseSipProfile(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Columns: org.json.JSONObject contentValueToJSON(android.content.ContentValues)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeBaseSipProfile(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipProfile(android.content.Context,com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeBaseSipProfile(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r3.<org.json.JSONArray: void <init>()>() in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipProfile(android.content.Context,com.csipsimple.api.SipProfile)> ==> <org.json.JSONArray: void <init>()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.models.Filter: android.database.Cursor getFiltersCursorForAccount(android.content.Context,long)>($r0, $l0) in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipProfile(android.content.Context,com.csipsimple.api.SipProfile)> ==> <com.csipsimple.models.Filter: android.database.Cursor getFiltersCursorForAccount(android.content.Context,long)>
VIRTUAL edge: virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("filters", r3) in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipProfile(android.content.Context,com.csipsimple.api.SipProfile)> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.models.Filter: void <init>(android.database.Cursor)>($r5) in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipProfile(android.content.Context,com.csipsimple.api.SipProfile)> ==> <com.csipsimple.models.Filter: void <init>(android.database.Cursor)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeBaseFilter(com.csipsimple.models.Filter)>(r2) in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipProfile(android.content.Context,com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeBaseFilter(com.csipsimple.models.Filter)>
VIRTUAL edge: virtualinvoke r3.<org.json.JSONArray: org.json.JSONArray put(int,java.lang.Object)>(i2, $r6) in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipProfile(android.content.Context,com.csipsimple.api.SipProfile)> ==> <org.json.JSONArray: org.json.JSONArray put(int,java.lang.Object)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SipProfileJson", "Impossible to add fitler", r7) in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipProfile(android.content.Context,com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r2.<org.json.JSONArray: void <init>()>() in <com.csipsimple.utils.SipProfileJson: org.json.JSONArray serializeSipProfiles(android.content.Context)> ==> <org.json.JSONArray: void <init>()>
STATIC edge: $r7 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)>($r0) in <com.csipsimple.utils.SipProfileJson: org.json.JSONArray serializeSipProfiles(android.content.Context)> ==> <com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>($r6) in <com.csipsimple.utils.SipProfileJson: org.json.JSONArray serializeSipProfiles(android.content.Context)> ==> <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>
STATIC edge: $r10 = staticinvoke <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipProfile(android.content.Context,com.csipsimple.api.SipProfile)>($r0, r1) in <com.csipsimple.utils.SipProfileJson: org.json.JSONArray serializeSipProfiles(android.content.Context)> ==> <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipProfile(android.content.Context,com.csipsimple.api.SipProfile)>
VIRTUAL edge: $i0 = virtualinvoke r2.<org.json.JSONArray: int length()>() in <com.csipsimple.utils.SipProfileJson: org.json.JSONArray serializeSipProfiles(android.content.Context)> ==> <org.json.JSONArray: int length()>
VIRTUAL edge: virtualinvoke r2.<org.json.JSONArray: org.json.JSONArray put(int,java.lang.Object)>($i0, $r10) in <com.csipsimple.utils.SipProfileJson: org.json.JSONArray serializeSipProfiles(android.content.Context)> ==> <org.json.JSONArray: org.json.JSONArray put(int,java.lang.Object)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SipProfileJson", "Impossible to add profile", r11) in <com.csipsimple.utils.SipProfileJson: org.json.JSONArray serializeSipProfiles(android.content.Context)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r16 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>($r0, r15) in <com.csipsimple.utils.SipProfileJson: org.json.JSONArray serializeSipProfiles(android.content.Context)> ==> <com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>
SPECIAL edge: specialinvoke r1.<com.csipsimple.api.SipProfile: void <init>()>() in <com.csipsimple.utils.SipProfileJson: org.json.JSONArray serializeSipProfiles(android.content.Context)> ==> <com.csipsimple.api.SipProfile: void <init>()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>($r0) in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipSettings(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>
VIRTUAL edge: $r2 = virtualinvoke r1.<com.csipsimple.utils.PreferencesWrapper: org.json.JSONObject serializeSipSettings()>() in <com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipSettings(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: org.json.JSONObject serializeSipSettings()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Blueface: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjmedia_dir$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.impl.Ecs$1: void <init>()>() in <com.csipsimple.wizards.impl.Ecs: void <clinit>()> ==> <com.csipsimple.wizards.impl.Ecs$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.BaseImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Ecs: void <init>()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.wizards.impl.Ecs: android.preference.Preference findPreference(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Ecs: void bindFields()> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.Ecs: java.lang.String getText(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Ecs: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Ecs: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Ecs: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Ecs: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.Ecs: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Ecs: void bindFields()>() in <com.csipsimple.wizards.impl.Ecs: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Ecs: void bindFields()>
VIRTUAL edge: $z0 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4) in <com.csipsimple.wizards.impl.Ecs: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Ecs: void setStringFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Ecs: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Ecs: void setPasswordFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Ecs: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setPasswordFieldSummary(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r0.<com.csipsimple.wizards.WizardUtils$WizardPrioComparator: int compare(java.util.Map,java.util.Map)>($r3, $r4) in <com.csipsimple.wizards.WizardUtils$WizardPrioComparator: int compare(java.lang.Object,java.lang.Object)> ==> <com.csipsimple.wizards.WizardUtils$WizardPrioComparator: int compare(java.util.Map,java.util.Map)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.impl.Basic$1: void <init>()>() in <com.csipsimple.wizards.impl.Basic: void <clinit>()> ==> <com.csipsimple.wizards.impl.Basic$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.BaseImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Basic: void <init>()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.wizards.impl.Basic: android.preference.Preference findPreference(java.lang.String)>("display_name") in <com.csipsimple.wizards.impl.Basic: void bindFields()> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Basic W", "begin of save ....") in <com.csipsimple.wizards.impl.Basic: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.Basic: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(":") in <com.csipsimple.wizards.impl.Basic: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r3) in <com.csipsimple.wizards.impl.Basic: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.Basic: java.lang.String getText(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Basic: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
STATIC edge: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Basic: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Basic: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Basic: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Basic: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.Basic: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Basic: void bindFields()>() in <com.csipsimple.wizards.impl.Basic: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Basic: void bindFields()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>($r4) in <com.csipsimple.wizards.impl.Basic: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Basic: void setStringFieldSummary(java.lang.String)>("display_name") in <com.csipsimple.wizards.impl.Basic: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Basic: void setPasswordFieldSummary(java.lang.String)>("password") in <com.csipsimple.wizards.impl.Basic: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setPasswordFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.ActionMenu: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $i3 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: int getItemId()>() in <com.actionbarsherlock.internal.view.menu.ActionMenu: int findItemIndex(int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: int getItemId()>
VIRTUAL edge: $c3 = virtualinvoke r4.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: char getAlphabeticShortcut()>() in <com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.internal.view.menu.ActionMenuItem findItemWithShortcut(int,android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: char getAlphabeticShortcut()>
VIRTUAL edge: $c3 = virtualinvoke r4.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: char getNumericShortcut()>() in <com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.internal.view.menu.ActionMenuItem findItemWithShortcut(int,android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: char getNumericShortcut()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(int,int,int,int)>(0, 0, 0, $i0) in <com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(int,int,int,int)>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)>($i0, $i1, $i2, $r3) in <com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(int,int,int,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenu: android.content.Context getContext()>() in <com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenu: android.content.Context getContext()>
SPECIAL edge: specialinvoke r2.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence)>($r3, $i0, $i1, 0, $i2, $r1) in <com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)>(0, 0, 0, $r1) in <com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenu: void removeGroup(int)>($i0) in <com.actionbarsherlock.internal.view.menu.ActionMenu: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[])> ==> <com.actionbarsherlock.internal.view.menu.ActionMenu: void removeGroup(int)>
VIRTUAL edge: $r17 = virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)>($i0, $i1, $i2, $r16) in <com.actionbarsherlock.internal.view.menu.ActionMenu: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[])> ==> <com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)>
SPECIAL edge: $i0 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenu: int findItemIndex(int)>($i0) in <com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem findItem(int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenu: int findItemIndex(int)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean isVisible()>() in <com.actionbarsherlock.internal.view.menu.ActionMenu: boolean hasVisibleItems()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean isVisible()>
SPECIAL edge: $r2 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.internal.view.menu.ActionMenuItem findItemWithShortcut(int,android.view.KeyEvent)>($i0, $r1) in <com.actionbarsherlock.internal.view.menu.ActionMenu: boolean isShortcutKey(int,android.view.KeyEvent)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.internal.view.menu.ActionMenuItem findItemWithShortcut(int,android.view.KeyEvent)>
SPECIAL edge: $i0 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenu: int findItemIndex(int)>($i0) in <com.actionbarsherlock.internal.view.menu.ActionMenu: boolean performIdentifierAction(int,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenu: int findItemIndex(int)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean invoke()>() in <com.actionbarsherlock.internal.view.menu.ActionMenu: boolean performIdentifierAction(int,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean invoke()>
SPECIAL edge: $r2 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.internal.view.menu.ActionMenuItem findItemWithShortcut(int,android.view.KeyEvent)>($i0, $r1) in <com.actionbarsherlock.internal.view.menu.ActionMenu: boolean performShortcut(int,android.view.KeyEvent,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.internal.view.menu.ActionMenuItem findItemWithShortcut(int,android.view.KeyEvent)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean invoke()>() in <com.actionbarsherlock.internal.view.menu.ActionMenu: boolean performShortcut(int,android.view.KeyEvent,int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean invoke()>
VIRTUAL edge: $i3 = virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: int getGroupId()>() in <com.actionbarsherlock.internal.view.menu.ActionMenu: void removeGroup(int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: int getGroupId()>
SPECIAL edge: $i0 = specialinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenu: int findItemIndex(int)>($i0) in <com.actionbarsherlock.internal.view.menu.ActionMenu: void removeItem(int)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenu: int findItemIndex(int)>
VIRTUAL edge: $i3 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: int getGroupId()>() in <com.actionbarsherlock.internal.view.menu.ActionMenu: void setGroupCheckable(int,boolean,boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: int getGroupId()>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setCheckable(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.ActionMenu: void setGroupCheckable(int,boolean,boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setCheckable(boolean)>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.internal.view.menu.ActionMenuItem setExclusiveCheckable(boolean)>($z1) in <com.actionbarsherlock.internal.view.menu.ActionMenu: void setGroupCheckable(int,boolean,boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.internal.view.menu.ActionMenuItem setExclusiveCheckable(boolean)>
VIRTUAL edge: $i3 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: int getGroupId()>() in <com.actionbarsherlock.internal.view.menu.ActionMenu: void setGroupEnabled(int,boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: int getGroupId()>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setEnabled(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.ActionMenu: void setGroupEnabled(int,boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setEnabled(boolean)>
VIRTUAL edge: $i3 = virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: int getGroupId()>() in <com.actionbarsherlock.internal.view.menu.ActionMenu: void setGroupVisible(int,boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: int getGroupId()>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setVisible(boolean)>($z0) in <com.actionbarsherlock.internal.view.menu.ActionMenu: void setGroupVisible(int,boolean)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setVisible(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Freephonie: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Freephonie: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Freephonie: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Freephonie: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Freephonie: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Freephonie: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Freephonie: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("use_compact_form", 1) in <com.csipsimple.wizards.impl.Freephonie: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.VoipTel: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.csipsimple.wizards.impl.VoipTel$1: void <init>(com.csipsimple.wizards.impl.VoipTel)>(r0) in <com.csipsimple.wizards.impl.VoipTel: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.VoipTel$1: void <init>(com.csipsimple.wizards.impl.VoipTel)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>($r4) in <com.csipsimple.wizards.impl.VoipTel: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.VoipTel$1: void onClick(android.view.View)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.VoipTel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>($r4, "http://212.4.110.135:8080/subscriber/newSubscriberFree/alta?execution=e2s1", r0) in <com.csipsimple.wizards.impl.VoipTel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>($r4, "http://212.4.110.135:8080/subscriber/newSubscriberFree/alta?execution=e2s1", r0) in <com.csipsimple.wizards.impl.VoipTel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.VoipTel: void onAccountCreationDone(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>($r4, "http://212.4.110.135:8080/subscriber/newSubscriberFree/alta?execution=e2s1", r0) in <com.csipsimple.wizards.impl.VoipTel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.VoipTel: boolean saveAndQuit()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.VoipTel: void updateAccountInfos(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.VoipTel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.VoipTel: void updateAccountInfos(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.VoipTel: void setUsername(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.VoipTel: void onAccountCreationDone(java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void setUsername(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.VoipTel: void setPassword(java.lang.String)>($r2) in <com.csipsimple.wizards.impl.VoipTel: void onAccountCreationDone(java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void setPassword(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.VoipTel: boolean canSave()>() in <com.csipsimple.wizards.impl.VoipTel: boolean saveAndQuit()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()>() in <com.csipsimple.wizards.impl.VoipTel: boolean saveAndQuit()> ==> <com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.VoipTel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("g729/8000/1", "nb", "240") in <com.csipsimple.wizards.impl.VoipTel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter: void <init>()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$2: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter: void <init>()>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: void access$4(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r3, null) in <com.actionbarsherlock.internal.app.ActionBarImpl$2: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void access$4(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContainer access$1(com.actionbarsherlock.internal.app.ActionBarImpl)>($r3) in <com.actionbarsherlock.internal.app.ActionBarImpl$2: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContainer access$1(com.actionbarsherlock.internal.app.ActionBarImpl)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter: void <init>()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$1: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter: void <init>()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout access$0(com.actionbarsherlock.internal.app.ActionBarImpl)>($r2) in <com.actionbarsherlock.internal.app.ActionBarImpl$1: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout access$0(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setSupportTranslationY(float)>(0.0F) in <com.actionbarsherlock.internal.app.ActionBarImpl$1: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setSupportTranslationY(float)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContainer access$1(com.actionbarsherlock.internal.app.ActionBarImpl)>($r2) in <com.actionbarsherlock.internal.app.ActionBarImpl$1: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContainer access$1(com.actionbarsherlock.internal.app.ActionBarImpl)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContainer access$2(com.actionbarsherlock.internal.app.ActionBarImpl)>($r2) in <com.actionbarsherlock.internal.app.ActionBarImpl$1: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContainer access$2(com.actionbarsherlock.internal.app.ActionBarImpl)>
STATIC edge: $i0 = staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: int access$3(com.actionbarsherlock.internal.app.ActionBarImpl)>($r2) in <com.actionbarsherlock.internal.app.ActionBarImpl$1: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: int access$3(com.actionbarsherlock.internal.app.ActionBarImpl)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.ActionBarContainer: void setVisibility(int)>(8) in <com.actionbarsherlock.internal.app.ActionBarImpl$1: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setVisibility(int)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.ActionBarContainer: void setTransitioning(boolean)>(0) in <com.actionbarsherlock.internal.app.ActionBarImpl$1: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.widget.ActionBarContainer: void setTransitioning(boolean)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.app.ActionBarImpl: void access$4(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r2, null) in <com.actionbarsherlock.internal.app.ActionBarImpl$1: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void access$4(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.app.ActionBarImpl: void completeDeferredDestroyActionMode()>() in <com.actionbarsherlock.internal.app.ActionBarImpl$1: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.app.ActionBarImpl: void completeDeferredDestroyActionMode()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Flowroute: void <init>()> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Flowroute: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Flowroute: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Flowroute: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Flowroute: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Flowroute: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.Flowroute: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Flowroute: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Flowroute: void hidePreference(java.lang.String,java.lang.String)>(null, $r4) in <com.csipsimple.wizards.impl.Flowroute: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void hidePreference(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Flowroute: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Flowroute: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,float[])>($r0, $r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,float[])>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofKeyframe(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofKeyframe(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>
SPECIAL edge: specialinvoke r3.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet)>($r0, r4) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet)>
SPECIAL edge: specialinvoke r5.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet)>($r0, r6) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet)>
SPECIAL edge: specialinvoke r7.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String)>($r0) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r8.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: java.lang.Class getType()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: java.lang.Class getType()>
SPECIAL edge: specialinvoke r3.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String)>($r0) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>
VIRTUAL edge: virtualinvoke r3.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)>
VIRTUAL edge: $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupValue(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe)> ==> <java.lang.Object: java.lang.Class getClass()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupGetter(java.lang.Class)>($r4) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupValue(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupGetter(java.lang.Class)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: java.lang.Object getValue(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void calculateValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: java.lang.Object getValue(float)>
SPECIAL edge: $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.Object clone()>
VIRTUAL edge: $r5 = virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone()>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.Object clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setAnimatedValue(java.lang.Object)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofFloat(float[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setFloatValues(float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofFloat(float[])>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: java.lang.Class getType()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setKeyframes(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: java.lang.Class getType()>
SPECIAL edge: specialinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>(r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setKeyframes(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])> ==> <java.lang.Object: java.lang.Class getClass()>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[])>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupValue(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe)>($r1, $r6) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupEndValue(java.lang.Object)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupValue(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetterAndGetter(java.lang.Object)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetterAndGetter(java.lang.Object)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)>
VIRTUAL edge: $z0 = virtualinvoke r8.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: boolean hasValue()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetterAndGetter(java.lang.Object)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: boolean hasValue()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupValue(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe)>($r1, $r5) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupStartValue(java.lang.Object)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupValue(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe)>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String toString()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $r2 = virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: java.lang.String toString()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String toString()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: java.lang.String toString()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
SPECIAL edge: specialinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
STATIC edge: $r6 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[])>($r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(long)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[])>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long)>($l0) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(long)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(long)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
SPECIAL edge: specialinvoke r6.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
STATIC edge: $r7 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
SPECIAL edge: specialinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node,int)>(r6, 1) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node,int)>
VIRTUAL edge: virtualinvoke r6.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency)>(r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
SPECIAL edge: specialinvoke r6.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
STATIC edge: $r7 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
SPECIAL edge: specialinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node,int)>($r8, 1) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node,int)>
VIRTUAL edge: virtualinvoke r6.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency)>(r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
SPECIAL edge: specialinvoke r6.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
STATIC edge: $r7 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
SPECIAL edge: specialinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node,int)>($r8, 0) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node,int)>
VIRTUAL edge: virtualinvoke r6.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency)>(r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int)>("PJSUA_CALL_MEDIA_NONE", 0) in <org.pjsip.pjsua.pjsua_call_media_status: void <clinit>()> ==> <org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua_call_media_status$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_call_media_status$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_call_media_status$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsua_call_media_status$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_call_media_status$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua_call_media_status$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_media_status)> ==> <org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_media_status)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua_call_media_status$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_media_status)> ==> <org.pjsip.pjsua.pjsua_call_media_status$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsua_call_media_status: org.pjsip.pjsua.pjsua_call_media_status swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.ActionBarSherlock: void <init>(android.app.Activity,int)>($r1, $i0) in <com.actionbarsherlock.internal.ActionBarSherlockNative: void <init>(android.app.Activity,int)> ==> <com.actionbarsherlock.ActionBarSherlock: void <init>(android.app.Activity,int)>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.app.ActionBarWrapper: void <init>(android.app.Activity)>($r1) in <com.actionbarsherlock.internal.ActionBarSherlockNative: void initActionBar()> ==> <com.actionbarsherlock.internal.app.ActionBarWrapper: void <init>(android.app.Activity)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockNative: void initActionBar()>() in <com.actionbarsherlock.internal.ActionBarSherlockNative: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative: void initActionBar()>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuWrapper: android.view.Menu unwrap()>() in <com.actionbarsherlock.internal.ActionBarSherlockNative: boolean dispatchCreateOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: android.view.Menu unwrap()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>($r1) in <com.actionbarsherlock.internal.ActionBarSherlockNative: boolean dispatchCreateOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockNative: boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu)>($r2) in <com.actionbarsherlock.internal.ActionBarSherlockNative: boolean dispatchCreateOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem)>($r1) in <com.actionbarsherlock.internal.ActionBarSherlockNative: boolean dispatchOptionsItemSelected(android.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockNative: boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r3) in <com.actionbarsherlock.internal.ActionBarSherlockNative: boolean dispatchOptionsItemSelected(android.view.MenuItem)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockNative: boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>($r2) in <com.actionbarsherlock.internal.ActionBarSherlockNative: boolean dispatchPrepareOptionsMenu(android.view.Menu)> ==> <com.actionbarsherlock.ActionBarSherlock: boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockNative: void initActionBar()>() in <com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.app.ActionBar getActionBar()> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative: void initActionBar()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockNative: void initActionBar()>() in <com.actionbarsherlock.internal.ActionBarSherlockNative: void setContentView(int)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative: void initActionBar()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockNative: void initActionBar()>() in <com.actionbarsherlock.internal.ActionBarSherlockNative: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative: void initActionBar()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: void finish()>() in <com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: void finish()>
SPECIAL edge: specialinvoke r3.<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: void <init>(com.actionbarsherlock.internal.ActionBarSherlockNative,com.actionbarsherlock.view.ActionMode$Callback)>(r0, $r1) in <com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: void <init>(com.actionbarsherlock.internal.ActionBarSherlockNative,com.actionbarsherlock.view.ActionMode$Callback)>
VIRTUAL edge: virtualinvoke $r4.<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>(r3) in <com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>
VIRTUAL edge: virtualinvoke $r4.<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>(r3) in <com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: void onDestroyActionMode(android.view.ActionMode)>
VIRTUAL edge: virtualinvoke $r4.<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>(r3) in <com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>
VIRTUAL edge: virtualinvoke $r4.<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>(r3) in <com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1: void <init>()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState: void <clinit>()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState: void <init>(android.os.Parcel)> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState: void <init>(android.os.Parcel)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.impl.Vitelity$1: void <init>()>() in <com.csipsimple.wizards.impl.Vitelity: void <clinit>()> ==> <com.csipsimple.wizards.impl.Vitelity$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Vitelity: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Vitelity: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.wizards.impl.Vitelity: android.preference.Preference findPreference(java.lang.String)>("provider_list") in <com.csipsimple.wizards.impl.Vitelity: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Vitelity: void addPreference(android.preference.Preference)>($r7) in <com.csipsimple.wizards.impl.Vitelity: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void addPreference(android.preference.Preference)>
VIRTUAL edge: z0 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2) in <com.csipsimple.wizards.impl.Vitelity: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Vitelity: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4) in <com.csipsimple.wizards.impl.Vitelity: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.models.Filter: void <init>()>() in <com.csipsimple.wizards.impl.Vitelity: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.models.Filter: void <init>()>
STATIC edge: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.wizards.impl.Vitelity: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void updateDescriptions()>() in <com.csipsimple.wizards.impl.Vitelity: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void updateDescriptions()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Vitelity: void setStringFieldSummary(java.lang.String)>("provider_list") in <com.csipsimple.wizards.impl.Vitelity: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.impl.Zadarma$1: void <init>(com.csipsimple.wizards.impl.Zadarma)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.wizards.impl.Zadarma: com.csipsimple.wizards.impl.AccountCreationWebview access$2(com.csipsimple.wizards.impl.Zadarma)>($r3) in <com.csipsimple.wizards.impl.Zadarma$1: void onClick(android.view.View)> ==> <com.csipsimple.wizards.impl.Zadarma: com.csipsimple.wizards.impl.AccountCreationWebview access$2(com.csipsimple.wizards.impl.Zadarma)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.wizards.impl.AccountCreationWebview: void show()>() in <com.csipsimple.wizards.impl.Zadarma$1: void onClick(android.view.View)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: void show()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$RestartRunnable: void <init>(com.csipsimple.service.SipService)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.service.SipService: boolean stopSipStack()>() in <com.csipsimple.service.SipService$RestartRunnable: void doRun()> ==> <com.csipsimple.service.SipService: boolean stopSipStack()>
STATIC edge: staticinvoke <com.csipsimple.service.SipService: void access$9(com.csipsimple.service.SipService)>($r1) in <com.csipsimple.service.SipService$RestartRunnable: void doRun()> ==> <com.csipsimple.service.SipService: void access$9(com.csipsimple.service.SipService)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP SRV", "Can\'t stop ... so do not restart ! ") in <com.csipsimple.service.SipService$RestartRunnable: void doRun()> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.BroadVoice: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.BroadVoice: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.BroadVoice: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <com.csipsimple.wizards.impl.BroadVoice: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>(r5) in <com.csipsimple.wizards.impl.BroadVoice: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.BroadVoice: java.lang.String getDomain()>() in <com.csipsimple.wizards.impl.BroadVoice: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BroadVoice: java.lang.String getDomain()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.BroadVoice: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.csipsimple.wizards.impl.BroadVoice: android.preference.Preference findPreference(java.lang.String)>("suffix") in <com.csipsimple.wizards.impl.BroadVoice: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.BroadVoice: void addPreference(android.preference.Preference)>($r2) in <com.csipsimple.wizards.impl.BroadVoice: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void addPreference(android.preference.Preference)>
VIRTUAL edge: $r6 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getSipUserName()>() in <com.csipsimple.wizards.impl.BroadVoice: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: java.lang.String getSipUserName()>
VIRTUAL edge: $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>("x") in <com.csipsimple.wizards.impl.BroadVoice: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Telsome: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Telsome: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_reg_info: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_reg_info: void <init>()> ==> <org.pjsip.pjsua.pjsua_reg_info: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_reg_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_reg_info: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_reg_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_reg_info: void delete()>() in <org.pjsip.pjsua.pjsua_reg_info: void finalize()> ==> <org.pjsip.pjsua.pjsua_reg_info: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_reg_info: org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam getCbparam()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam)>($r1) in <org.pjsip.pjsua.pjsua_reg_info: void setCbparam(org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Zadarma: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.wizards.impl.Zadarma$AccountBalance: void <init>(com.csipsimple.wizards.impl.Zadarma)>(r0) in <com.csipsimple.wizards.impl.Zadarma: void <init>()> ==> <com.csipsimple.wizards.impl.Zadarma$AccountBalance: void <init>(com.csipsimple.wizards.impl.Zadarma)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.wizards.impl.AccountBalanceHelper: void launchRequest(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Zadarma: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AccountBalanceHelper: void launchRequest(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.wizards.impl.Zadarma$1: void <init>(com.csipsimple.wizards.impl.Zadarma)>(r0) in <com.csipsimple.wizards.impl.Zadarma: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Zadarma$1: void <init>(com.csipsimple.wizards.impl.Zadarma)>
VIRTUAL edge: virtualinvoke $r2.<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>($r5) in <com.csipsimple.wizards.impl.Zadarma: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Zadarma$1: void onClick(android.view.View)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Zadarma: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Zadarma: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Zadarma: void updateAccountInfos(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Zadarma: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Zadarma: void updateAccountInfos(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>($r4, "https://ss.zadarma.com/android/registration/", r0) in <com.csipsimple.wizards.impl.Zadarma: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>($r4, "https://ss.zadarma.com/android/registration/", r0) in <com.csipsimple.wizards.impl.Zadarma: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Zadarma: void onAccountCreationDone(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r8.<com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>($r4, "https://ss.zadarma.com/android/registration/", r0) in <com.csipsimple.wizards.impl.Zadarma: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Zadarma: boolean saveAndQuit()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Zadarma: void setUsername(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Zadarma: void onAccountCreationDone(java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void setUsername(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Zadarma: void setPassword(java.lang.String)>($r2) in <com.csipsimple.wizards.impl.Zadarma: void onAccountCreationDone(java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void setPassword(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Zadarma: boolean canSave()>() in <com.csipsimple.wizards.impl.Zadarma: boolean saveAndQuit()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()>() in <com.csipsimple.wizards.impl.Zadarma: boolean saveAndQuit()> ==> <com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.impl.Ovh$1: void <init>()>() in <com.csipsimple.wizards.impl.Ovh: void <clinit>()> ==> <com.csipsimple.wizards.impl.Ovh$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Ovh: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Ovh: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r8 = virtualinvoke r0.<com.csipsimple.wizards.impl.Ovh: android.preference.Preference findPreference(java.lang.String)>("provider_list") in <com.csipsimple.wizards.impl.Ovh: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Ovh: void addPreference(android.preference.Preference)>($r9) in <com.csipsimple.wizards.impl.Ovh: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void addPreference(android.preference.Preference)>
VIRTUAL edge: z0 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2) in <com.csipsimple.wizards.impl.Ovh: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.Ovh: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Ovh: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void updateDescriptions()>() in <com.csipsimple.wizards.impl.Ovh: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void updateDescriptions()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Ovh: void setStringFieldSummary(java.lang.String)>("provider_list") in <com.csipsimple.wizards.impl.Ovh: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)> ==> <com.csipsimple.api.SipProfile: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipProfile: void <init>(android.os.Parcel)> ==> <com.csipsimple.api.SipProfile: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipProfile: void <init>(android.os.Parcel)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) in <com.csipsimple.api.SipProfile: void <init>(android.os.Parcel)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: $r3 = specialinvoke r0.<com.csipsimple.api.SipProfile: java.lang.String getReadParcelableString(java.lang.String)>($r3) in <com.csipsimple.api.SipProfile: void <init>(android.os.Parcel)> ==> <com.csipsimple.api.SipProfile: java.lang.String getReadParcelableString(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.api.SipProfile: void <init>(android.os.Parcel)>($r1) in <com.csipsimple.api.SipProfile: void <init>(android.os.Parcel,com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: void <init>(android.os.Parcel)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipProfile: java.util.ArrayList getAllProfiles(android.content.Context,boolean,java.lang.String[])>($r0, $z0, $r2) in <com.csipsimple.api.SipProfile: java.util.ArrayList getAllProfiles(android.content.Context,boolean)> ==> <com.csipsimple.api.SipProfile: java.util.ArrayList getAllProfiles(android.content.Context,boolean,java.lang.String[])>
SPECIAL edge: specialinvoke $r9.<com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>($r8) in <com.csipsimple.api.SipProfile: java.util.ArrayList getAllProfiles(android.content.Context,boolean,java.lang.String[])> ==> <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("null") in <com.csipsimple.api.SipProfile: java.lang.String getReadParcelableString(java.lang.String)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
STATIC edge: $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.api.SipProfile: android.content.ContentValues getDbContentValues()> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b2) in <com.csipsimple.api.SipProfile: android.content.ContentValues getDbContentValues()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) in <com.csipsimple.api.SipProfile: android.content.ContentValues getDbContentValues()> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: r1 = staticinvoke <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipUriInfos parseSipUri(java.lang.String)>($r2) in <com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()> ==> <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipUriInfos parseSipUri(java.lang.String)>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0) in <com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()> ==> <java.lang.Integer: java.lang.String toString(int)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>($r2) in <com.csipsimple.api.SipProfile: java.lang.String getDisplayName()> ==> <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>($r2) in <com.csipsimple.api.SipProfile: java.lang.String getSipDomain()> ==> <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>($r2) in <com.csipsimple.api.SipProfile: java.lang.String getSipUserName()> ==> <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>
SPECIAL edge: $r2 = specialinvoke r0.<com.csipsimple.api.SipProfile: java.lang.String getWriteParcelableString(java.lang.String)>($r2) in <com.csipsimple.api.SipProfile: void writeToParcel(android.os.Parcel,int)> ==> <com.csipsimple.api.SipProfile: java.lang.String getWriteParcelableString(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipUri$ParsedSipUriInfos: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: java.lang.Object clone()>
VIRTUAL edge: $r4 = virtualinvoke $r4.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: java.lang.Object clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone()>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.utils.CallHandlerPlugin: void fillWith(java.lang.String,android.os.Bundle)>($r5, $r3) in <com.csipsimple.utils.CallHandlerPlugin$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.CallHandlerPlugin: void fillWith(java.lang.String,android.os.Bundle)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.utils.CallHandlerPlugin: com.csipsimple.utils.CallHandlerPlugin$OnLoadListener access$0(com.csipsimple.utils.CallHandlerPlugin)>($r4) in <com.csipsimple.utils.CallHandlerPlugin$1: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.utils.CallHandlerPlugin: com.csipsimple.utils.CallHandlerPlugin$OnLoadListener access$0(com.csipsimple.utils.CallHandlerPlugin)>
VIRTUAL edge: r10 = virtualinvoke $r11.<com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>($r5) in <com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
VIRTUAL edge: r10 = virtualinvoke $r11.<com.csipsimple.utils.PreferencesWrapper: java.lang.Float getPreferenceFloatValue(java.lang.String)>($r5) in <com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.Float getPreferenceFloatValue(java.lang.String)>
VIRTUAL edge: $r14 = virtualinvoke $r11.<com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean getPreferenceBooleanValue(java.lang.String)>($r5) in <com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: r10 = virtualinvoke $r11.<com.csipsimple.utils.PreferencesWrapper: java.lang.Integer getPreferenceIntegerValue(java.lang.String)>($r5) in <com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ==> <com.csipsimple.utils.PreferencesWrapper: java.lang.Integer getPreferenceIntegerValue(java.lang.String)>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>($r7, $r3) in <com.csipsimple.service.PreferenceProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceFloatValue(java.lang.String,float)>($r7, $f0) in <com.csipsimple.service.PreferenceProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceFloatValue(java.lang.String,float)>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>($r7, $z0) in <com.csipsimple.service.PreferenceProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.utils.PreferencesWrapper: void resetAllDefaultValues()>() in <com.csipsimple.service.PreferenceProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ==> <com.csipsimple.utils.PreferencesWrapper: void resetAllDefaultValues()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>($r0) in <org.pjsip.pjsua.pjsua: void acc_config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_acc_config,org.pjsip.pjsua.pjsua_acc_config)> ==> <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_acc_config: long getCPtr(org.pjsip.pjsua.pjsua_acc_config)>($r1) in <org.pjsip.pjsua.pjsua: void acc_config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_acc_config,org.pjsip.pjsua.pjsua_acc_config)> ==> <org.pjsip.pjsua.pjsua_acc_config: long getCPtr(org.pjsip.pjsua.pjsua_acc_config)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_method: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_method)>($r0) in <org.pjsip.pjsua.pjsua: int acc_create_request(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_method,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_method: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_method)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua: int acc_create_request(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_method,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data)>($r2) in <org.pjsip.pjsua.pjsua: int acc_create_request(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_method,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data)> ==> <org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>($r0) in <org.pjsip.pjsua.pjsua: int acc_create_uac_contact(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua: int acc_create_uac_contact(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>($r0) in <org.pjsip.pjsua.pjsua: int acc_create_uas_contact(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua: int acc_create_uas_contact(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>($r2) in <org.pjsip.pjsua.pjsua: int acc_create_uas_contact(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_acc_info: long getCPtr(org.pjsip.pjsua.pjsua_acc_info)>($r0) in <org.pjsip.pjsua.pjsua: int acc_enum_info(org.pjsip.pjsua.pjsua_acc_info,long[])> ==> <org.pjsip.pjsua.pjsua_acc_info: long getCPtr(org.pjsip.pjsua.pjsua_acc_info)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>($r0) in <org.pjsip.pjsua.pjsua: int acc_find_for_incoming(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int acc_find_for_outgoing(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_acc_info: long getCPtr(org.pjsip.pjsua.pjsua_acc_info)>($r0) in <org.pjsip.pjsua.pjsua: int acc_get_info(int,org.pjsip.pjsua.pjsua_acc_info)> ==> <org.pjsip.pjsua.pjsua_acc_info: long getCPtr(org.pjsip.pjsua.pjsua_acc_info)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjrpid_element: long getCPtr(org.pjsip.pjsua.pjrpid_element)>($r0) in <org.pjsip.pjsua.pjsua: int acc_set_online_status2(int,int,org.pjsip.pjsua.pjrpid_element)> ==> <org.pjsip.pjsua.pjrpid_element: long getCPtr(org.pjsip.pjsua.pjrpid_element)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_buddy_config: long getCPtr(org.pjsip.pjsua.pjsua_buddy_config)>($r0) in <org.pjsip.pjsua.pjsua: int buddy_add(org.pjsip.pjsua.pjsua_buddy_config,int[])> ==> <org.pjsip.pjsua.pjsua_buddy_config: long getCPtr(org.pjsip.pjsua.pjsua_buddy_config)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_buddy_config: long getCPtr(org.pjsip.pjsua.pjsua_buddy_config)>($r0) in <org.pjsip.pjsua.pjsua: void buddy_config_default(org.pjsip.pjsua.pjsua_buddy_config)> ==> <org.pjsip.pjsua.pjsua_buddy_config: long getCPtr(org.pjsip.pjsua.pjsua_buddy_config)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int buddy_find(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_buddy_info: long getCPtr(org.pjsip.pjsua.pjsua_buddy_info)>($r0) in <org.pjsip.pjsua.pjsua: int buddy_get_info(int,org.pjsip.pjsua.pjsua_buddy_info)> ==> <org.pjsip.pjsua.pjsua_buddy_info: long getCPtr(org.pjsip.pjsua.pjsua_buddy_info)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int call_answer(int,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r1) in <org.pjsip.pjsua.pjsua: int call_answer(int,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsua_call_setting: long getCPtr(org.pjsip.pjsua.pjsua_call_setting)>($r0) in <org.pjsip.pjsua.pjsua: int call_answer2(int,org.pjsip.pjsua.pjsua_call_setting,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_call_setting: long getCPtr(org.pjsip.pjsua.pjsua_call_setting)>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua: int call_answer2(int,org.pjsip.pjsua.pjsua_call_setting,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l4 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r2) in <org.pjsip.pjsua.pjsua: int call_answer2(int,org.pjsip.pjsua.pjsua_call_setting,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int call_dial_dtmf(int,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l2, 1) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t call_dump(int,int,java.lang.String)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_call_info: long getCPtr(org.pjsip.pjsua.pjsua_call_info)>($r0) in <org.pjsip.pjsua.pjsua: int call_get_info(int,org.pjsip.pjsua.pjsua_call_info)> ==> <org.pjsip.pjsua.pjsua_call_info: long getCPtr(org.pjsip.pjsua.pjsua_call_info)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport_info: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport_info)>($r0) in <org.pjsip.pjsua.pjsua: int call_get_med_transport_info(int,long,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport_info)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport_info: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport_info)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type)>($r0) in <org.pjsip.pjsua.pjsua: int call_get_rem_nat_type(int,org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsua_stream_info: long getCPtr(org.pjsip.pjsua.pjsua_stream_info)>($r0) in <org.pjsip.pjsua.pjsua: int call_get_stream_info(int,long,org.pjsip.pjsua.pjsua_stream_info)> ==> <org.pjsip.pjsua.pjsua_stream_info: long getCPtr(org.pjsip.pjsua.pjsua_stream_info)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsua_stream_stat: long getCPtr(org.pjsip.pjsua.pjsua_stream_stat)>($r0) in <org.pjsip.pjsua.pjsua: int call_get_stream_stat(int,long,org.pjsip.pjsua.pjsua_stream_stat)> ==> <org.pjsip.pjsua.pjsua_stream_stat: long getCPtr(org.pjsip.pjsua.pjsua_stream_stat)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int call_hangup(int,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r1) in <org.pjsip.pjsua.pjsua: int call_hangup(int,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int call_make_call(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_call_setting,byte[],org.pjsip.pjsua.pjsua_msg_data,int[])> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsua_call_setting: long getCPtr(org.pjsip.pjsua.pjsua_call_setting)>($r1) in <org.pjsip.pjsua.pjsua: int call_make_call(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_call_setting,byte[],org.pjsip.pjsua.pjsua_msg_data,int[])> ==> <org.pjsip.pjsua.pjsua_call_setting: long getCPtr(org.pjsip.pjsua.pjsua_call_setting)>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r3) in <org.pjsip.pjsua.pjsua: int call_make_call(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_call_setting,byte[],org.pjsip.pjsua.pjsua_msg_data,int[])> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
VIRTUAL edge: $i1 = virtualinvoke $r0.<org.pjsip.pjsua.pjsip_redirect_op: int swigValue()>() in <org.pjsip.pjsua.pjsua: int call_process_redirect(int,org.pjsip.pjsua.pjsip_redirect_op)> ==> <org.pjsip.pjsua.pjsip_redirect_op: int swigValue()>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int call_recording_start(int,org.pjsip.pjsua.pj_str_t,int)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_call_setting: long getCPtr(org.pjsip.pjsua.pjsua_call_setting)>($r0) in <org.pjsip.pjsua.pjsua: int call_reinvite2(int,org.pjsip.pjsua.pjsua_call_setting,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_call_setting: long getCPtr(org.pjsip.pjsua.pjsua_call_setting)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r1) in <org.pjsip.pjsua.pjsua: int call_reinvite2(int,org.pjsip.pjsua.pjsua_call_setting,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.SWIGTYPE_p_pjsip_dialog_cap_status call_remote_has_cap(int,int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke $r2.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_dialog_cap_status: void <init>(long,boolean)>($l2, 1) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.SWIGTYPE_p_pjsip_dialog_cap_status call_remote_has_cap(int,int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_dialog_cap_status: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l1, 1) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t call_secure_info(int)> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int call_send_im(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data,byte[])> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r2) in <org.pjsip.pjsua.pjsua: int call_send_im(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data,byte[])> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int call_send_request(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r1) in <org.pjsip.pjsua.pjsua: int call_send_request(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r0) in <org.pjsip.pjsua.pjsua: int call_send_typing_ind(int,int,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
VIRTUAL edge: $i1 = virtualinvoke $r0.<org.pjsip.pjsua.pjsua_call_vid_strm_op: int swigValue()>() in <org.pjsip.pjsua.pjsua: int call_set_vid_strm(int,org.pjsip.pjsua.pjsua_call_vid_strm_op,org.pjsip.pjsua.pjsua_call_vid_strm_op_param)> ==> <org.pjsip.pjsua.pjsua_call_vid_strm_op: int swigValue()>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsua_call_vid_strm_op_param: long getCPtr(org.pjsip.pjsua.pjsua_call_vid_strm_op_param)>($r1) in <org.pjsip.pjsua.pjsua: int call_set_vid_strm(int,org.pjsip.pjsua.pjsua_call_vid_strm_op,org.pjsip.pjsua.pjsua_call_vid_strm_op_param)> ==> <org.pjsip.pjsua.pjsua_call_vid_strm_op_param: long getCPtr(org.pjsip.pjsua.pjsua_call_vid_strm_op_param)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_call_setting: long getCPtr(org.pjsip.pjsua.pjsua_call_setting)>($r0) in <org.pjsip.pjsua.pjsua: void call_setting_default(org.pjsip.pjsua.pjsua_call_setting)> ==> <org.pjsip.pjsua.pjsua_call_setting: long getCPtr(org.pjsip.pjsua.pjsua_call_setting)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r0) in <org.pjsip.pjsua.pjsua: int call_update(int,long,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_call_setting: long getCPtr(org.pjsip.pjsua.pjsua_call_setting)>($r0) in <org.pjsip.pjsua.pjsua: int call_update2(int,org.pjsip.pjsua.pjsua_call_setting,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_call_setting: long getCPtr(org.pjsip.pjsua.pjsua_call_setting)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r1) in <org.pjsip.pjsua.pjsua: int call_update2(int,org.pjsip.pjsua.pjsua_call_setting,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
VIRTUAL edge: $i2 = virtualinvoke $r0.<org.pjsip.pjsua.pjmedia_dir: int swigValue()>() in <org.pjsip.pjsua.pjsua: int call_vid_stream_is_running(int,int,org.pjsip.pjsua.pjmedia_dir)> ==> <org.pjsip.pjsua.pjmedia_dir: int swigValue()>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_call_vid_strm_op_param: long getCPtr(org.pjsip.pjsua.pjsua_call_vid_strm_op_param)>($r0) in <org.pjsip.pjsua.pjsua: void call_vid_strm_op_param_default(org.pjsip.pjsua.pjsua_call_vid_strm_op_param)> ==> <org.pjsip.pjsua.pjsua_call_vid_strm_op_param: long getCPtr(org.pjsip.pjsua.pjsua_call_vid_strm_op_param)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int call_xfer(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r1) in <org.pjsip.pjsua.pjsua: int call_xfer(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r0) in <org.pjsip.pjsua.pjsua: int call_xfer_replaces(int,int,long,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry)>($r0) in <org.pjsip.pjsua.pjsua: void cancel_timer(org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int codec_get_param(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param)>($r1) in <org.pjsip.pjsua.pjsua: int codec_get_param(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int codec_set_param(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param)>($r1) in <org.pjsip.pjsua.pjsua: int codec_set_param(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>($r0) in <org.pjsip.pjsua.pjsua: int conf_add_port(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjmedia_port,int[])> ==> <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjmedia_port: long getCPtr(org.pjsip.pjsua.pjmedia_port)>($r1) in <org.pjsip.pjsua.pjsua: int conf_add_port(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjmedia_port,int[])> ==> <org.pjsip.pjsua.pjmedia_port: long getCPtr(org.pjsip.pjsua.pjmedia_port)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_conf_port_info: long getCPtr(org.pjsip.pjsua.pjsua_conf_port_info)>($r0) in <org.pjsip.pjsua.pjsua: int conf_get_port_info(int,org.pjsip.pjsua.pjsua_conf_port_info)> ==> <org.pjsip.pjsua.pjsua_conf_port_info: long getCPtr(org.pjsip.pjsua.pjsua_conf_port_info)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>($r0) in <org.pjsip.pjsua.pjsua: void config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_config,org.pjsip.pjsua.pjsua_config)> ==> <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_config: long getCPtr(org.pjsip.pjsua.pjsua_config)>($r1) in <org.pjsip.pjsua.pjsua: void config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_config,org.pjsip.pjsua.pjsua_config)> ==> <org.pjsip.pjsua.pjsua_config: long getCPtr(org.pjsip.pjsua.pjsua_config)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r0) in <org.pjsip.pjsua.pjsua: int csipsimple_init_acc_msg_data(int,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsip_event: long getCPtr(org.pjsip.pjsua.pjsip_event)>($r0) in <org.pjsip.pjsua.pjsua: void css_on_call_state(int,org.pjsip.pjsua.pjsip_event)> ==> <org.pjsip.pjsua.pjsip_event: long getCPtr(org.pjsip.pjsua.pjsip_event)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_info: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_info)>($r0) in <org.pjsip.pjsua.pjsua: int enum_aud_devs(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_info,long[])> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_info: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_info)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_codec_info: long getCPtr(org.pjsip.pjsua.pjsua_codec_info)>($r0) in <org.pjsip.pjsua.pjsua: int enum_codecs(org.pjsip.pjsua.pjsua_codec_info,long[])> ==> <org.pjsip.pjsua.pjsua_codec_info: long getCPtr(org.pjsip.pjsua.pjsua_codec_info)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjmedia_snd_dev_info: long getCPtr(org.pjsip.pjsua.pjmedia_snd_dev_info)>($r0) in <org.pjsip.pjsua.pjsua: int enum_snd_devs(org.pjsip.pjsua.pjmedia_snd_dev_info,long[])> ==> <org.pjsip.pjsua.pjmedia_snd_dev_info: long getCPtr(org.pjsip.pjsua.pjmedia_snd_dev_info)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_method: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.SWIGTYPE_p_pjsip_method getPjsip_info_method()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_method: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_method: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.SWIGTYPE_p_pjsip_method getPjsip_message_method()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_method: void <init>(long,boolean)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_unsigned_int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_unsigned_int)>($r0) in <org.pjsip.pjsua.pjsua: int get_ec_tail(org.pjsip.pjsua.SWIGTYPE_p_unsigned_int)> ==> <org.pjsip.pjsua.SWIGTYPE_p_unsigned_int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_unsigned_int)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsip_event: long getCPtr(org.pjsip.pjsua.pjsip_event)>($r0) in <org.pjsip.pjsua.pjsua: int get_event_status_code(org.pjsip.pjsua.pjsip_event)> ==> <org.pjsip.pjsua.pjsip_event: long getCPtr(org.pjsip.pjsua.pjsip_event)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type)>($r0) in <org.pjsip.pjsua.pjsua: int get_nat_type(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_endpt: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_endpt get_pjmedia_endpt()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_endpt: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_endpoint: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.SWIGTYPE_p_pjsip_endpoint get_pjsip_endpt()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_endpoint: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory get_pool_factory()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory: void <init>(long,boolean)>
STATIC edge: $r0 = staticinvoke <org.pjsip.pjsua.pjsua_state: org.pjsip.pjsua.pjsua_state swigToEnum(int)>($i0) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pjsua_state get_state()> ==> <org.pjsip.pjsua.pjsua_state: org.pjsip.pjsua.pjsua_state swigToEnum(int)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>($r0) in <org.pjsip.pjsua.pjsua: void ice_config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_ice_config,org.pjsip.pjsua.pjsua_ice_config)> ==> <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_ice_config: long getCPtr(org.pjsip.pjsua.pjsua_ice_config)>($r1) in <org.pjsip.pjsua.pjsua: void ice_config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_ice_config,org.pjsip.pjsua.pjsua_ice_config)> ==> <org.pjsip.pjsua.pjsua_ice_config: long getCPtr(org.pjsip.pjsua.pjsua_ice_config)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>($r0) in <org.pjsip.pjsua.pjsua: void ice_config_from_media_config(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_ice_config,org.pjsip.pjsua.pjsua_media_config)> ==> <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_ice_config: long getCPtr(org.pjsip.pjsua.pjsua_ice_config)>($r1) in <org.pjsip.pjsua.pjsua: void ice_config_from_media_config(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_ice_config,org.pjsip.pjsua.pjsua_media_config)> ==> <org.pjsip.pjsua.pjsua_ice_config: long getCPtr(org.pjsip.pjsua.pjsua_ice_config)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsua_media_config: long getCPtr(org.pjsip.pjsua.pjsua_media_config)>($r2) in <org.pjsip.pjsua.pjsua: void ice_config_from_media_config(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_ice_config,org.pjsip.pjsua.pjsua_media_config)> ==> <org.pjsip.pjsua.pjsua_media_config: long getCPtr(org.pjsip.pjsua.pjsua_media_config)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int im_send(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data,byte[])> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l4 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r3) in <org.pjsip.pjsua.pjsua: int im_send(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data,byte[])> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int im_typing(int,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r1) in <org.pjsip.pjsua.pjsua: int im_typing(int,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>($r0) in <org.pjsip.pjsua.pjsua: void logging_config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_logging_config,org.pjsip.pjsua.pjsua_logging_config)> ==> <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_logging_config: long getCPtr(org.pjsip.pjsua.pjsua_logging_config)>($r1) in <org.pjsip.pjsua.pjsua: void logging_config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_logging_config,org.pjsip.pjsua.pjsua_logging_config)> ==> <org.pjsip.pjsua.pjsua_logging_config: long getCPtr(org.pjsip.pjsua.pjsua_logging_config)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>($r0) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pjsua_msg_data msg_data_clone(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r1) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pjsua_msg_data msg_data_clone(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pjsua_msg_data: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pjsua_msg_data msg_data_clone(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: void <init>(long,boolean)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r0) in <org.pjsip.pjsua.pjsua: void msg_data_init(org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>($r0) in <org.pjsip.pjsua.pjsua: void pj_pool_release(org.pjsip.pjsua.pj_pool_t)> ==> <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
STATIC edge: $l5 = staticinvoke <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>($r0) in <org.pjsip.pjsua.pjsua: int pjmedia_tonegen_create2(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pj_str_t,long,long,long,long,long,org.pjsip.pjsua.pjmedia_port)> ==> <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
STATIC edge: $l6 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua: int pjmedia_tonegen_create2(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pj_str_t,long,long,long,long,long,org.pjsip.pjsua.pjmedia_port)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjmedia_port: long getCPtr(org.pjsip.pjsua.pjmedia_port)>($r0) in <org.pjsip.pjsua.pjsua: int pjmedia_tonegen_play(org.pjsip.pjsua.pjmedia_port,long,org.pjsip.pjsua.pjmedia_tone_desc[],long)> ==> <org.pjsip.pjsua.pjmedia_port: long getCPtr(org.pjsip.pjsua.pjmedia_port)>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.pjmedia_tone_desc: long[] cArrayUnwrap(org.pjsip.pjsua.pjmedia_tone_desc[])>($r1) in <org.pjsip.pjsua.pjsua: int pjmedia_tonegen_play(org.pjsip.pjsua.pjmedia_port,long,org.pjsip.pjsua.pjmedia_tone_desc[],long)> ==> <org.pjsip.pjsua.pjmedia_tone_desc: long[] cArrayUnwrap(org.pjsip.pjsua.pjmedia_tone_desc[])>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjmedia_port: long getCPtr(org.pjsip.pjsua.pjmedia_port)>($r0) in <org.pjsip.pjsua.pjsua: int pjmedia_tonegen_play_digits(org.pjsip.pjsua.pjmedia_port,long,org.pjsip.pjsua.pjmedia_tone_digit[],long)> ==> <org.pjsip.pjsua.pjmedia_port: long getCPtr(org.pjsip.pjsua.pjmedia_port)>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.pjmedia_tone_digit: long[] cArrayUnwrap(org.pjsip.pjsua.pjmedia_tone_digit[])>($r1) in <org.pjsip.pjsua.pjsua: int pjmedia_tonegen_play_digits(org.pjsip.pjsua.pjmedia_port,long,org.pjsip.pjsua.pjmedia_tone_digit[],long)> ==> <org.pjsip.pjsua.pjmedia_tone_digit: long[] cArrayUnwrap(org.pjsip.pjsua.pjmedia_tone_digit[])>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjmedia_port: long getCPtr(org.pjsip.pjsua.pjmedia_port)>($r0) in <org.pjsip.pjsua.pjsua: int pjmedia_tonegen_rewind(org.pjsip.pjsua.pjmedia_port)> ==> <org.pjsip.pjsua.pjmedia_port: long getCPtr(org.pjsip.pjsua.pjmedia_port)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_pool_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_pool_t pjsua_pool_create(java.lang.String,long,long)> ==> <org.pjsip.pjsua.pj_pool_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_p_void__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_void__void)>($r0) in <org.pjsip.pjsua.pjsua: int pjsua_schedule_timer2(org.pjsip.pjsua.SWIGTYPE_p_f_p_void__void,byte[],long)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_p_void__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_void__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int player_create(org.pjsip.pjsua.pj_str_t,long,int[])> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)>($r0) in <org.pjsip.pjsua.pjsua: int player_get_port(int,org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)> ==> <org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)>
STATIC edge: $r3 = staticinvoke <org.pjsip.pjsua.pj_str_t: long[] cArrayUnwrap(org.pjsip.pjsua.pj_str_t[])>($r0) in <org.pjsip.pjsua.pjsua: int playlist_create(org.pjsip.pjsua.pj_str_t[],long,org.pjsip.pjsua.pj_str_t,long,int[])> ==> <org.pjsip.pjsua.pj_str_t: long[] cArrayUnwrap(org.pjsip.pjsua.pj_str_t[])>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r1) in <org.pjsip.pjsua.pjsua: int playlist_create(org.pjsip.pjsua.pj_str_t[],long,org.pjsip.pjsua.pj_str_t,long,int[])> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_pool_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_pool_t pool_create(java.lang.String,long,long)> ==> <org.pjsip.pjsua.pj_pool_t: void <init>(long,boolean)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres)>($r0) in <org.pjsip.pjsua.pjsua: int pres_notify(int,org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres,org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres)>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state)>($r1) in <org.pjsip.pjsua.pjsua: int pres_notify(int,org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres,org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state)>
STATIC edge: $l4 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r2) in <org.pjsip.pjsua.pjsua: int pres_notify(int,org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres,org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l6 = staticinvoke <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>($r4) in <org.pjsip.pjsua.pjsua: int pres_notify(int,org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres,org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.pjsua_msg_data)> ==> <org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_logging_config: long getCPtr(org.pjsip.pjsua.pjsua_logging_config)>($r0) in <org.pjsip.pjsua.pjsua: int reconfigure_logging(org.pjsip.pjsua.pjsua_logging_config)> ==> <org.pjsip.pjsua.pjsua_logging_config: long getCPtr(org.pjsip.pjsua.pjsua_logging_config)>
STATIC edge: $l3 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int recorder_create(org.pjsip.pjsua.pj_str_t,long,byte[],int,long,int[])> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)>($r0) in <org.pjsip.pjsua.pjsua: int recorder_get_port(int,org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)> ==> <org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)>
STATIC edge: $r3 = staticinvoke <org.pjsip.pjsua.pj_str_t: long[] cArrayUnwrap(org.pjsip.pjsua.pj_str_t[])>($r0) in <org.pjsip.pjsua.pjsua: int resolve_stun_servers(long,org.pjsip.pjsua.pj_str_t[],int,byte[],org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_resolve_result__void)> ==> <org.pjsip.pjsua.pj_str_t: long[] cArrayUnwrap(org.pjsip.pjsua.pj_str_t[])>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_resolve_result__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_resolve_result__void)>($r2) in <org.pjsip.pjsua.pjsua: int resolve_stun_servers(long,org.pjsip.pjsua.pj_str_t[],int,byte[],org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_resolve_result__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_resolve_result__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_resolve_result__void)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry)>($r0) in <org.pjsip.pjsua.pjsua: int schedule_timer(org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry,org.pjsip.pjsua.pj_time_val)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_time_val: long getCPtr(org.pjsip.pjsua.pj_time_val)>($r1) in <org.pjsip.pjsua.pjsua: int schedule_timer(org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry,org.pjsip.pjsua.pj_time_val)> ==> <org.pjsip.pjsua.pj_time_val: long getCPtr(org.pjsip.pjsua.pj_time_val)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int send_dtmf_info(int,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap)>($r0) in <org.pjsip.pjsua.pjsua: int snd_get_setting(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap,byte[])> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap)>($r0) in <org.pjsip.pjsua.pjsua: int snd_set_setting(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap,byte[],int)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>($r0) in <org.pjsip.pjsua.pjsua: void transport_config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_transport_config,org.pjsip.pjsua.pjsua_transport_config)> ==> <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_transport_config: long getCPtr(org.pjsip.pjsua.pjsua_transport_config)>($r1) in <org.pjsip.pjsua.pjsua: void transport_config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_transport_config,org.pjsip.pjsua.pjsua_transport_config)> ==> <org.pjsip.pjsua.pjsua_transport_config: long getCPtr(org.pjsip.pjsua.pjsua_transport_config)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_transport_info: long getCPtr(org.pjsip.pjsua.pjsua_transport_info)>($r0) in <org.pjsip.pjsua.pjsua: int transport_get_info(int,org.pjsip.pjsua.pjsua_transport_info)> ==> <org.pjsip.pjsua.pjsua_transport_info: long getCPtr(org.pjsip.pjsua.pjsua_transport_info)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_transport: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_transport)>($r0) in <org.pjsip.pjsua.pjsua: int transport_register(org.pjsip.pjsua.SWIGTYPE_p_pjsip_transport,int[])> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_transport: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_transport)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>($r0) in <org.pjsip.pjsua.pjsua: void turn_config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_turn_config,org.pjsip.pjsua.pjsua_turn_config)> ==> <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_turn_config: long getCPtr(org.pjsip.pjsua.pjsua_turn_config)>($r1) in <org.pjsip.pjsua.pjsua: void turn_config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_turn_config,org.pjsip.pjsua.pjsua_turn_config)> ==> <org.pjsip.pjsua.pjsua_turn_config: long getCPtr(org.pjsip.pjsua.pjsua_turn_config)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>($r0) in <org.pjsip.pjsua.pjsua: void turn_config_from_media_config(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_turn_config,org.pjsip.pjsua.pjsua_media_config)> ==> <org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_turn_config: long getCPtr(org.pjsip.pjsua.pjsua_turn_config)>($r1) in <org.pjsip.pjsua.pjsua: void turn_config_from_media_config(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_turn_config,org.pjsip.pjsua.pjsua_media_config)> ==> <org.pjsip.pjsua.pjsua_turn_config: long getCPtr(org.pjsip.pjsua.pjsua_turn_config)>
STATIC edge: $l2 = staticinvoke <org.pjsip.pjsua.pjsua_media_config: long getCPtr(org.pjsip.pjsua.pjsua_media_config)>($r2) in <org.pjsip.pjsua.pjsua: void turn_config_from_media_config(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_turn_config,org.pjsip.pjsua.pjsua_media_config)> ==> <org.pjsip.pjsua.pjsua_media_config: long getCPtr(org.pjsip.pjsua.pjsua_media_config)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int update_transport(org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int vid_codec_get_param(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param)>($r1) in <org.pjsip.pjsua.pjsua: int vid_codec_get_param(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>($r0) in <org.pjsip.pjsua.pjsua: int vid_codec_set_param(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param)> ==> <org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param)>($r1) in <org.pjsip.pjsua.pjsua: int vid_codec_set_param(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>($r0) in <org.pjsip.pjsua.pjsua: int vid_dev_get_info(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info)>($r1) in <org.pjsip.pjsua.pjsua: int vid_dev_get_info(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_codec_info: long getCPtr(org.pjsip.pjsua.pjsua_codec_info)>($r0) in <org.pjsip.pjsua.pjsua: int vid_enum_codecs(org.pjsip.pjsua.pjsua_codec_info,long[])> ==> <org.pjsip.pjsua.pjsua_codec_info: long getCPtr(org.pjsip.pjsua.pjsua_codec_info)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info)>($r0) in <org.pjsip.pjsua.pjsua: int vid_enum_devs(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info,long[])> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>($r0) in <org.pjsip.pjsua.pjsua: int vid_preview_get_win(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>($r0) in <org.pjsip.pjsua.pjsua: int vid_preview_has_native(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.pjsua_vid_preview_param: long getCPtr(org.pjsip.pjsua.pjsua_vid_preview_param)>($r0) in <org.pjsip.pjsua.pjsua: void vid_preview_param_default(org.pjsip.pjsua.pjsua_vid_preview_param)> ==> <org.pjsip.pjsua.pjsua_vid_preview_param: long getCPtr(org.pjsip.pjsua.pjsua_vid_preview_param)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>($r0) in <org.pjsip.pjsua.pjsua: int vid_preview_start(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index,org.pjsip.pjsua.pjsua_vid_preview_param)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_vid_preview_param: long getCPtr(org.pjsip.pjsua.pjsua_vid_preview_param)>($r1) in <org.pjsip.pjsua.pjsua: int vid_preview_start(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index,org.pjsip.pjsua.pjsua_vid_preview_param)> ==> <org.pjsip.pjsua.pjsua_vid_preview_param: long getCPtr(org.pjsip.pjsua.pjsua_vid_preview_param)>
STATIC edge: $l0 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>($r0) in <org.pjsip.pjsua.pjsua: int vid_preview_stop(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.pjsua_vid_win_info: long getCPtr(org.pjsip.pjsua.pjsua_vid_win_info)>($r0) in <org.pjsip.pjsua.pjsua: int vid_win_get_info(int,org.pjsip.pjsua.pjsua_vid_win_info)> ==> <org.pjsip.pjsua.pjsua_vid_win_info: long getCPtr(org.pjsip.pjsua.pjsua_vid_win_info)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord)>($r0) in <org.pjsip.pjsua.pjsua: int vid_win_set_pos(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size)>($r0) in <org.pjsip.pjsua.pjsua: int vid_win_set_size(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.contacts.ContactsWrapper$Phone: void <init>(com.csipsimple.utils.contacts.ContactsWrapper,java.lang.String,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.WizardUtils: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.wizards.WizardUtils: int getWizardIconRes(java.lang.String)>($r4) in <com.csipsimple.wizards.WizardUtils: android.graphics.Bitmap getWizardBitmap(android.content.Context,com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.WizardUtils: int getWizardIconRes(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getWizardInfo", null) in <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClassInfos(java.lang.Class)> ==> <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
VIRTUAL edge: $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r17) in <com.csipsimple.wizards.WizardUtils: java.util.ArrayList getWizardsGroupedList()> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z1 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("") in <com.csipsimple.wizards.WizardUtils: java.util.ArrayList getWizardsGroupedList()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>() in <com.csipsimple.wizards.WizardUtils: java.util.Locale locale(java.lang.String)> ==> <java.lang.String: java.lang.String toUpperCase()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.api.SipCallSession$InvState: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.view.ActionMode: void <init>()>() in <com.actionbarsherlock.internal.view.StandaloneActionMode: void <init>(android.content.Context,com.actionbarsherlock.internal.widget.ActionBarContextView,com.actionbarsherlock.view.ActionMode$Callback,boolean)> ==> <com.actionbarsherlock.view.ActionMode: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>($r1) in <com.actionbarsherlock.internal.view.StandaloneActionMode: void <init>(android.content.Context,com.actionbarsherlock.internal.widget.ActionBarContextView,com.actionbarsherlock.view.ActionMode$Callback,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setDefaultShowAsAction(int)>(1) in <com.actionbarsherlock.internal.view.StandaloneActionMode: void <init>(android.content.Context,com.actionbarsherlock.internal.widget.ActionBarContextView,com.actionbarsherlock.view.ActionMode$Callback,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setDefaultShowAsAction(int)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.actionbarsherlock.internal.view.StandaloneActionMode: void <init>(android.content.Context,com.actionbarsherlock.internal.widget.ActionBarContextView,com.actionbarsherlock.view.ActionMode$Callback,boolean)> ==> <com.actionbarsherlock.internal.view.StandaloneActionMode: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.actionbarsherlock.internal.view.StandaloneActionMode: void <init>(android.content.Context,com.actionbarsherlock.internal.widget.ActionBarContextView,com.actionbarsherlock.view.ActionMode$Callback,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>(r0) in <com.actionbarsherlock.internal.view.StandaloneActionMode: void <init>(android.content.Context,com.actionbarsherlock.internal.widget.ActionBarContextView,com.actionbarsherlock.view.ActionMode$Callback,boolean)> ==> <com.actionbarsherlock.internal.view.StandaloneActionMode: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
SPECIAL edge: specialinvoke $r1.<com.actionbarsherlock.view.MenuInflater: void <init>(android.content.Context)>($r2) in <com.actionbarsherlock.internal.view.StandaloneActionMode: com.actionbarsherlock.view.MenuInflater getMenuInflater()> ==> <com.actionbarsherlock.view.MenuInflater: void <init>(android.content.Context)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()>() in <com.actionbarsherlock.internal.view.StandaloneActionMode: java.lang.CharSequence getSubtitle()> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContextView: java.lang.CharSequence getTitle()>() in <com.actionbarsherlock.internal.view.StandaloneActionMode: java.lang.CharSequence getTitle()> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: java.lang.CharSequence getTitle()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.StandaloneActionMode: void invalidate()>() in <com.actionbarsherlock.internal.view.StandaloneActionMode: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.view.StandaloneActionMode: void invalidate()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContextView: boolean showOverflowMenu()>() in <com.actionbarsherlock.internal.view.StandaloneActionMode: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: boolean showOverflowMenu()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: boolean hasVisibleItems()>() in <com.actionbarsherlock.internal.view.StandaloneActionMode: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean hasVisibleItems()>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>($r2, $r1) in <com.actionbarsherlock.internal.view.StandaloneActionMode: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void show()>() in <com.actionbarsherlock.internal.view.StandaloneActionMode: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void show()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContextView: void setCustomView(android.view.View)>($r1) in <com.actionbarsherlock.internal.view.StandaloneActionMode: void setCustomView(android.view.View)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void setCustomView(android.view.View)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.StandaloneActionMode: void setSubtitle(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.view.StandaloneActionMode: void setSubtitle(int)> ==> <com.actionbarsherlock.internal.view.StandaloneActionMode: void setSubtitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.view.StandaloneActionMode: void setSubtitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.StandaloneActionMode: void setTitle(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.view.StandaloneActionMode: void setTitle(int)> ==> <com.actionbarsherlock.internal.view.StandaloneActionMode: void setTitle(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)>($r1) in <com.actionbarsherlock.internal.view.StandaloneActionMode: void setTitle(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>() in <com.csipsimple.pjsip.PjSipAccount: boolean equals(java.lang.Object)> ==> <java.lang.Object: java.lang.Class getClass()>
SPECIAL edge: $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1) in <com.csipsimple.pjsip.PjSipAccount: boolean equals(java.lang.Object)> ==> <java.lang.Object: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.R$style: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R$bool: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.impl.AuthorizationImplementation$1: void <init>()>() in <com.csipsimple.wizards.impl.AuthorizationImplementation: void <clinit>()> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.BaseImplementation: void <init>()>() in <com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: android.preference.Preference findPreference(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.AuthorizationImplementation: void bindFields()> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r3) in <com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDomain()>() in <com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDomain()>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getText(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
STATIC edge: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.AuthorizationImplementation: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.AuthorizationImplementation: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void bindFields()>() in <com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void bindFields()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getSipUserName()>() in <com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: java.lang.String getSipUserName()>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getSipDomain()>() in <com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: java.lang.String getSipDomain()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void setStringFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.AuthorizationImplementation: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void setPasswordFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.AuthorizationImplementation: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setPasswordFieldSummary(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.ui.PickupSipUri: void access$0(com.csipsimple.ui.PickupSipUri)>($r3) in <com.csipsimple.ui.PickupSipUri$1: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)> ==> <com.csipsimple.ui.PickupSipUri: void access$0(com.csipsimple.ui.PickupSipUri)>
VIRTUAL edge: $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>() in <com.actionbarsherlock.internal.utils.Utility4: int loadLogoFromManifest(android.app.Activity)> ==> <java.lang.Object: java.lang.Class getClass()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>() in <com.actionbarsherlock.internal.utils.Utility4: int loadLogoFromManifest(android.app.Activity)> ==> <java.lang.Class: java.lang.String getName()>
VIRTUAL edge: $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9) in <com.actionbarsherlock.internal.utils.Utility4: int loadLogoFromManifest(android.app.Activity)> ==> <java.lang.String: boolean equals(java.lang.Object)>
STATIC edge: r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) in <com.actionbarsherlock.internal.utils.Utility4: int loadLogoFromManifest(android.app.Activity)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r10 = staticinvoke <com.actionbarsherlock.internal.ActionBarSherlockCompat: java.lang.String cleanActivityName(java.lang.String,java.lang.String)>(r2, $r9) in <com.actionbarsherlock.internal.utils.Utility4: int loadLogoFromManifest(android.app.Activity)> ==> <com.actionbarsherlock.internal.ActionBarSherlockCompat: java.lang.String cleanActivityName(java.lang.String,java.lang.String)>
STATIC edge: $i0 = staticinvoke <com.actionbarsherlock.internal.utils.Utility4: int loadLogoFromManifest(android.app.Activity)>($r2) in <com.actionbarsherlock.internal.utils.Utility4: android.graphics.drawable.Drawable getActivityLogo(android.content.Context)> ==> <com.actionbarsherlock.internal.utils.Utility4: int loadLogoFromManifest(android.app.Activity)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void setDividerDrawable(android.graphics.drawable.Drawable)>($r1) in <com.actionbarsherlock.internal.utils.Utility4: void setLinearLayoutDividerDrawable(android.widget.LinearLayout,android.graphics.drawable.Drawable)> ==> <com.actionbarsherlock.internal.widget.IcsLinearLayout: void setDividerDrawable(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.widget.IcsLinearLayout: void setDividerPadding(int)>($i0) in <com.actionbarsherlock.internal.utils.Utility4: void setLinearLayoutDividerPadding(android.widget.LinearLayout,int)> ==> <com.actionbarsherlock.internal.widget.IcsLinearLayout: void setDividerPadding(int)>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>() in <com.actionbarsherlock.internal.utils.Utility4: java.lang.CharSequence stringToUpper(java.lang.CharSequence)> ==> <java.lang.String: java.lang.String toUpperCase()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.calllog.CallLogGroupBuilder: void <init>(com.csipsimple.ui.calllog.CallLogGroupBuilder$GroupCreator)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.ui.calllog.CallLogGroupBuilder: boolean equalNumbers(java.lang.String,java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.calllog.CallLogGroupBuilder: void addGroup(int,int)>($i0, i3) in <com.csipsimple.ui.calllog.CallLogGroupBuilder: void addGroups(android.database.Cursor)> ==> <com.csipsimple.ui.calllog.CallLogGroupBuilder: void addGroup(int,int)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.ui.calllog.CallLogGroupBuilder: boolean equalNumbers(java.lang.String,java.lang.String)>($r2, $r3) in <com.csipsimple.ui.calllog.CallLogGroupBuilder: void addGroups(android.database.Cursor)> ==> <com.csipsimple.ui.calllog.CallLogGroupBuilder: boolean equalNumbers(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.view.ActionMode: void <init>()>() in <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: void <init>(com.actionbarsherlock.internal.ActionBarSherlockNative,android.view.ActionMode)> ==> <com.actionbarsherlock.view.ActionMode: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>($r1) in <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu()> ==> <com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu()>() in <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: com.actionbarsherlock.view.Menu getMenu()> ==> <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu()>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.view.MenuInflater getMenuInflater()>() in <com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: com.actionbarsherlock.view.MenuInflater getMenuInflater()> ==> <com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.view.MenuInflater getMenuInflater()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsip_event: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsip_event: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsip_event: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsip_event: void delete()>() in <org.pjsip.pjsua.pjsip_event: void finalize()> ==> <org.pjsip.pjsua.pjsip_event: void delete()>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsip_event_id_e: org.pjsip.pjsua.pjsip_event_id_e swigToEnum(int)>($i1) in <org.pjsip.pjsua.pjsip_event: org.pjsip.pjsua.pjsip_event_id_e getType()> ==> <org.pjsip.pjsua.pjsip_event_id_e: org.pjsip.pjsua.pjsip_event_id_e swigToEnum(int)>
VIRTUAL edge: $i1 = virtualinvoke $r1.<org.pjsip.pjsua.pjsip_event_id_e: int swigValue()>() in <org.pjsip.pjsua.pjsip_event: void setType(org.pjsip.pjsua.pjsip_event_id_e)> ==> <org.pjsip.pjsua.pjsip_event_id_e: int swigValue()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r1) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.widget.IcsListPopupWindow: com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r1) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void run()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
STATIC edge: $i1 = staticinvoke <com.actionbarsherlock.internal.widget.IcsListPopupWindow: int access$1(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r1) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void run()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: int access$1(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.widget.PopupWindow access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>($r1) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void run()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.widget.PopupWindow access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void run()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()>
SPECIAL edge: specialinvoke r0.<org.pjsip.pjsua.pjsua_mwi_info: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_mwi_info: void <init>()> ==> <org.pjsip.pjsua.pjsua_mwi_info: void <init>(long,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_mwi_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_mwi_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_mwi_info: void <init>()>
VIRTUAL edge: virtualinvoke r0.<org.pjsip.pjsua.pjsua_mwi_info: void delete()>() in <org.pjsip.pjsua.pjsua_mwi_info: void finalize()> ==> <org.pjsip.pjsua.pjsua_mwi_info: void delete()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_mwi_info: org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub getEvsub()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_mwi_info: org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data getRdata()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub)>($r1) in <org.pjsip.pjsua.pjsua_mwi_info: void setEvsub(org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>($r1) in <org.pjsip.pjsua.pjsua_mwi_info: void setRdata(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsip_ssl_method$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)>($r2, $r3, $r4, $z0) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup: void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>($r5) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.internal.view.menu.MenuBuilder: void close()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.MenuBuilder: void close()>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void access$0(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup)>($r1, null) in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup: void onDismiss()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void access$0(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup)>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1: void <init>()>() in <com.actionbarsherlock.internal.widget.ActionBarView$SavedState: void <clinit>()> ==> <com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.ActionBarView$SavedState: void <init>(android.os.Parcel)>($r1) in <com.actionbarsherlock.internal.widget.ActionBarView$SavedState: void <init>(android.os.Parcel,com.actionbarsherlock.internal.widget.ActionBarView$SavedState)> ==> <com.actionbarsherlock.internal.widget.ActionBarView$SavedState: void <init>(android.os.Parcel)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.DialingFeedback: java.lang.Object access$0(com.csipsimple.utils.DialingFeedback)>($r1) in <com.csipsimple.utils.DialingFeedback$StopTimerTask: void run()> ==> <com.csipsimple.utils.DialingFeedback: java.lang.Object access$0(com.csipsimple.utils.DialingFeedback)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.DialingFeedback: android.media.ToneGenerator access$1(com.csipsimple.utils.DialingFeedback)>($r1) in <com.csipsimple.utils.DialingFeedback$StopTimerTask: void run()> ==> <com.csipsimple.utils.DialingFeedback: android.media.ToneGenerator access$1(com.csipsimple.utils.DialingFeedback)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter)>($r1) in <com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter,com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter$AccListItemViewTag)> ==> <com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_dialog_cap_status: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_dialog_cap_status: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_dialog_cap_status: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_dialog_cap_status: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke $r20.<com.csipsimple.widgets.AccountChooserButton: void setTargetAccount(java.lang.Long)>($r21) in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])> ==> <com.csipsimple.widgets.AccountChooserButton: void setTargetAccount(java.lang.Long)>
SPECIAL edge: $r4 = specialinvoke r0.<com.csipsimple.ui.calllog.CallLogDetailsFragment: android.net.Uri[] getCallLogEntryUris()>() in <com.csipsimple.ui.calllog.CallLogDetailsFragment: void onMenuRemoveFromCallLog(android.view.MenuItem)> ==> <com.csipsimple.ui.calllog.CallLogDetailsFragment: android.net.Uri[] getCallLogEntryUris()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.service.SipNotifications: void startForegroundCompat(int,android.app.Notification)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipNotifications: void invokeMethod(java.lang.reflect.Method,java.lang.Object[])>($r3, $r4) in <com.csipsimple.service.SipNotifications: void startForegroundCompat(int,android.app.Notification)> ==> <com.csipsimple.service.SipNotifications: void invokeMethod(java.lang.reflect.Method,java.lang.Object[])>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Notifications", "Trying to create a service notification from outside the service") in <com.csipsimple.service.SipNotifications: void notifyRegisteredAccounts(java.util.ArrayList,boolean)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.widgets.RegistrationNotification: void <init>(java.lang.String)>($r6) in <com.csipsimple.service.SipNotifications: void notifyRegisteredAccounts(java.util.ArrayList,boolean)> ==> <com.csipsimple.widgets.RegistrationNotification: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.widgets.RegistrationNotification: void clearRegistrations()>() in <com.csipsimple.service.SipNotifications: void notifyRegisteredAccounts(java.util.ArrayList,boolean)> ==> <com.csipsimple.widgets.RegistrationNotification: void clearRegistrations()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(9) in <com.csipsimple.service.SipNotifications: void notifyRegisteredAccounts(java.util.ArrayList,boolean)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.widgets.RegistrationNotification: void setTextsColor(java.lang.Integer)>($r8) in <com.csipsimple.service.SipNotifications: void notifyRegisteredAccounts(java.util.ArrayList,boolean)> ==> <com.csipsimple.widgets.RegistrationNotification: void setTextsColor(java.lang.Integer)>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.widgets.RegistrationNotification: void addAccountInfos(android.content.Context,java.util.ArrayList)>($r5, r1) in <com.csipsimple.service.SipNotifications: void notifyRegisteredAccounts(java.util.ArrayList,boolean)> ==> <com.csipsimple.widgets.RegistrationNotification: void addAccountInfos(android.content.Context,java.util.ArrayList)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipNotifications: void startForegroundCompat(int,android.app.Notification)>(1, $r9) in <com.csipsimple.service.SipNotifications: void notifyRegisteredAccounts(java.util.ArrayList,boolean)> ==> <com.csipsimple.service.SipNotifications: void startForegroundCompat(int,android.app.Notification)>
VIRTUAL edge: $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("startForeground", $r3) in <com.csipsimple.service.SipNotifications: void onServiceCreate()> ==> <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
VIRTUAL edge: $r7 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: java.lang.String getRemoteContact()>() in <com.csipsimple.service.SipNotifications: void showNotificationForCall(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: java.lang.String getRemoteContact()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.CustomDistribution: boolean supportMessaging()>() in <com.csipsimple.service.SipNotifications: void showNotificationForMessage(com.csipsimple.api.SipMessage)> ==> <com.csipsimple.utils.CustomDistribution: boolean supportMessaging()>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.csipsimple.api.SipMessage: java.lang.String getFrom()>() in <com.csipsimple.service.SipNotifications: void showNotificationForMessage(com.csipsimple.api.SipMessage)> ==> <com.csipsimple.api.SipMessage: java.lang.String getFrom()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4) in <com.csipsimple.service.SipNotifications: void showNotificationForMessage(com.csipsimple.api.SipMessage)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.csipsimple.api.SipMessage: java.lang.String getDisplayName()>() in <com.csipsimple.service.SipNotifications: void showNotificationForMessage(com.csipsimple.api.SipMessage)> ==> <com.csipsimple.api.SipMessage: java.lang.String getDisplayName()>
VIRTUAL edge: $r4 = virtualinvoke $r1.<com.csipsimple.api.SipMessage: java.lang.String getBody()>() in <com.csipsimple.service.SipNotifications: void showNotificationForMessage(com.csipsimple.api.SipMessage)> ==> <com.csipsimple.api.SipMessage: java.lang.String getBody()>
STATIC edge: $r6 = staticinvoke <com.csipsimple.service.SipNotifications: java.lang.CharSequence buildTickerMessage(android.content.Context,java.lang.String,java.lang.String)>($r5, $r3, $r4) in <com.csipsimple.service.SipNotifications: void showNotificationForMessage(com.csipsimple.api.SipMessage)> ==> <com.csipsimple.service.SipNotifications: java.lang.CharSequence buildTickerMessage(android.content.Context,java.lang.String,java.lang.String)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.api.SipUri: boolean isPhoneNumber(java.lang.String)>($r3) in <com.csipsimple.service.SipNotifications: void showNotificationForMessage(com.csipsimple.api.SipMessage)> ==> <com.csipsimple.api.SipUri: boolean isPhoneNumber(java.lang.String)>
STATIC edge: $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5) in <com.csipsimple.service.SipNotifications: void showNotificationForVoiceMail(com.csipsimple.api.SipProfile,int)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $r5 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()>() in <com.csipsimple.service.SipNotifications: void showNotificationForVoiceMail(com.csipsimple.api.SipProfile,int)> ==> <com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()>
STATIC edge: $r7 = staticinvoke <com.csipsimple.api.SipUri: android.net.Uri forgeSipUri(java.lang.String,java.lang.String)>("csip", $r5) in <com.csipsimple.service.SipNotifications: void showNotificationForVoiceMail(com.csipsimple.api.SipProfile,int)> ==> <com.csipsimple.api.SipUri: android.net.Uri forgeSipUri(java.lang.String,java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getProfileName()>() in <com.csipsimple.service.SipNotifications: void showNotificationForVoiceMail(com.csipsimple.api.SipProfile,int)> ==> <com.csipsimple.api.SipProfile: java.lang.String getProfileName()>
STATIC edge: $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0) in <com.csipsimple.service.SipNotifications: void showNotificationForVoiceMail(com.csipsimple.api.SipProfile,int)> ==> <java.lang.Integer: java.lang.String toString(int)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.ui.prefs.hc.MainPrefs: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>() in <com.csipsimple.ui.prefs.hc.MainPrefs: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.view.MenuInflater: void inflate(int,com.actionbarsherlock.view.Menu)>(2131623940, $r1) in <com.csipsimple.ui.prefs.hc.MainPrefs: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.view.MenuInflater: void inflate(int,com.actionbarsherlock.view.Menu)>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>($r1) in <com.csipsimple.ui.prefs.hc.MainPrefs: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.ui.prefs.PrefsLogic: boolean onMainActivityOptionsItemSelected(com.actionbarsherlock.view.MenuItem,android.content.Context,com.csipsimple.utils.PreferencesWrapper)>($r1, r0, $r2) in <com.csipsimple.ui.prefs.hc.MainPrefs: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.prefs.PrefsLogic: boolean onMainActivityOptionsItemSelected(com.actionbarsherlock.view.MenuItem,android.content.Context,com.csipsimple.utils.PreferencesWrapper)>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r1) in <com.csipsimple.ui.prefs.hc.MainPrefs: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
STATIC edge: staticinvoke <com.csipsimple.ui.prefs.PrefsLogic: void onMainActivityPrepareOptionMenu(com.actionbarsherlock.view.Menu,android.content.Context,com.csipsimple.utils.PreferencesWrapper)>($r1, r0, $r2) in <com.csipsimple.ui.prefs.hc.MainPrefs: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.csipsimple.ui.prefs.PrefsLogic: void onMainActivityPrepareOptionMenu(com.actionbarsherlock.view.Menu,android.content.Context,com.csipsimple.utils.PreferencesWrapper)>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>($r1) in <com.csipsimple.ui.prefs.hc.MainPrefs: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.CamundaNet: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.CamundaNet: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.CamundaNet: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.CamundaNet: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_callback: void <init>(long,boolean)> ==> <org.pjsip.pjsua.pjsua_callback: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void getOn_buddy_evsub_state()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int__void getOn_buddy_state()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void getOn_call_media_event()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int__void getOn_call_media_state()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int getOn_call_media_transport_state()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op getOn_call_redirected()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void getOn_call_replace_request()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void getOn_call_replace_request2()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void getOn_call_replaced()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void getOn_call_rx_offer()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void getOn_call_sdp_created()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void getOn_call_state()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void getOn_call_transfer_request()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void getOn_call_transfer_request2()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void getOn_call_transfer_status()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void getOn_call_tsx_state()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport getOn_create_media_transport()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void getOn_dtmf_digit()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void getOn_ice_transport_error()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void getOn_incoming_call()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void getOn_incoming_subscribe()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void getOn_mwi_info()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void getOn_mwi_state()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void getOn_nat_detect()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void getOn_pager()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void getOn_pager2()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void getOn_pager_status()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void getOn_pager_status2()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void getOn_reg_started()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int__void getOn_reg_state()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void getOn_reg_state2()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int__int: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int__int getOn_snd_dev_operation()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int__int: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void getOn_srv_subscribe_state()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void getOn_stream_created()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void getOn_stream_destroyed()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback getOn_transport_state()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void getOn_typing()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void getOn_typing2()> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_buddy_evsub_state(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_buddy_state(org.pjsip.pjsua.SWIGTYPE_p_f_int__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_call_media_event(org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_call_media_state(org.pjsip.pjsua.SWIGTYPE_p_f_int__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_call_media_transport_state(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_call_redirected(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_call_replace_request(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_call_replace_request2(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_call_replaced(org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_call_rx_offer(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_call_sdp_created(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_call_state(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_call_transfer_request(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_call_transfer_request2(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_call_transfer_status(org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_call_tsx_state(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_create_media_transport(org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_dtmf_digit(org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_ice_transport_error(org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_incoming_call(org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_incoming_subscribe(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_mwi_info(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_mwi_state(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_nat_detect(org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_pager(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_pager2(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_pager_status(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_pager_status2(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_reg_started(org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_reg_state(org.pjsip.pjsua.SWIGTYPE_p_f_int__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_reg_state2(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int__int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int__int)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_snd_dev_operation(org.pjsip.pjsua.SWIGTYPE_p_f_int__int)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int__int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int__int)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_srv_subscribe_state(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_stream_created(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_stream_destroyed(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_transport_state(org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_typing(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void)>($r1) in <org.pjsip.pjsua.pjsua_callback: void setOn_typing2(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.CallsUtils: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $i0 = virtualinvoke $r0.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.utils.CallsUtils: java.lang.String getStringCallState(com.csipsimple.api.SipCallSession,android.content.Context)> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.IPComms: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>($r1, null, $i0) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable)>(r0, null) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable)>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor)>(r0, null) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor)>
SPECIAL edge: specialinvoke $r5.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener)>(r0, null) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener)>
SPECIAL edge: specialinvoke $r6.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider)>(r0, null) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable)>(r0, null) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable)>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor)>(r0, null) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor)>
SPECIAL edge: specialinvoke $r5.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener)>(r0, null) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener)>
SPECIAL edge: specialinvoke $r6.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider)>(r0, null) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider)>
STATIC edge: $r9 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
SPECIAL edge: $z0 = specialinvoke $r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isInputMethodNotNeeded()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean access$5(com.actionbarsherlock.internal.widget.IcsListPopupWindow)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isInputMethodNotNeeded()>
SPECIAL edge: specialinvoke $r16.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: void <init>(android.content.Context,boolean)>(r1, $z0) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: int buildDropDown()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: void <init>(android.content.Context,boolean)>
SPECIAL edge: specialinvoke $r17.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$1: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>(r0) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: int buildDropDown()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$1: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>($r17) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: int buildDropDown()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$1: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>($r17) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: int buildDropDown()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$1: void onNothingSelected(android.widget.AdapterView)>
SPECIAL edge: $i0 = specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)>(r3, $i0, $z0) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: int buildDropDown()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)>
SPECIAL edge: $i0 = specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: int measureHeightOfChildren(int,int,int,int,int)>(0, 0, -1, $i0, -1) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: int buildDropDown()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: int measureHeightOfChildren(int,int,int,int,int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void measureScrapChild(android.view.View,int,int)>($r4, $i1, $i0) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: int measureHeightOfChildren(int,int,int,int,int)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void measureScrapChild(android.view.View,int,int)>
STATIC edge: staticinvoke <com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: void access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean)>(r1, 1) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void clearListSelection()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: void access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean)>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver)>(r0, null) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setAdapter(android.widget.ListAdapter)> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver)>
SPECIAL edge: $i2 = specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: int buildDropDown()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: int buildDropDown()>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isInputMethodNotNeeded()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isInputMethodNotNeeded()>
VIRTUAL edge: $z0 = virtualinvoke $r4.<com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: boolean isInTouchMode()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: boolean isInTouchMode()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void clearListSelection()>() in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()> ==> <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void clearListSelection()>
VIRTUAL edge: virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r6) in <com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()> ==> <android.os.Handler: boolean post(java.lang.Runnable)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.view.MenuInflater$MenuState: void <init>(com.actionbarsherlock.view.MenuInflater,com.actionbarsherlock.view.Menu)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.view.MenuInflater$MenuState: void resetGroup()>() in <com.actionbarsherlock.view.MenuInflater$MenuState: void <init>(com.actionbarsherlock.view.MenuInflater,com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.view.MenuInflater$MenuState: void resetGroup()>
STATIC edge: $r6 = staticinvoke <com.actionbarsherlock.view.MenuInflater: android.content.Context access$0(com.actionbarsherlock.view.MenuInflater)>($r5) in <com.actionbarsherlock.view.MenuInflater$MenuState: java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])> ==> <com.actionbarsherlock.view.MenuInflater: android.content.Context access$0(com.actionbarsherlock.view.MenuInflater)>
STATIC edge: $r6 = staticinvoke <com.actionbarsherlock.view.MenuInflater: android.content.Context access$0(com.actionbarsherlock.view.MenuInflater)>($r5) in <com.actionbarsherlock.view.MenuInflater$MenuState: void setItem(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.view.MenuInflater: android.content.Context access$0(com.actionbarsherlock.view.MenuInflater)>
SPECIAL edge: specialinvoke $r8.<com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener: void <init>(android.content.Context,java.lang.String)>($r6, $r2) in <com.actionbarsherlock.view.MenuInflater$MenuState: void setItem(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener: void <init>(android.content.Context,java.lang.String)>
INTERFACE edge: interfaceinvoke $r1.<com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)>($r8) in <com.actionbarsherlock.view.MenuInflater$MenuState: void setItem(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
VIRTUAL edge: virtualinvoke r9.<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)>(1) in <com.actionbarsherlock.view.MenuInflater$MenuState: void setItem(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)>
STATIC edge: $r10 = staticinvoke <com.actionbarsherlock.view.MenuInflater: java.lang.Class[] access$3()>() in <com.actionbarsherlock.view.MenuInflater$MenuState: void setItem(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.view.MenuInflater: java.lang.Class[] access$3()>
STATIC edge: $r11 = staticinvoke <com.actionbarsherlock.view.MenuInflater: java.lang.Object[] access$4(com.actionbarsherlock.view.MenuInflater)>($r5) in <com.actionbarsherlock.view.MenuInflater$MenuState: void setItem(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.view.MenuInflater: java.lang.Object[] access$4(com.actionbarsherlock.view.MenuInflater)>
SPECIAL edge: $r12 = specialinvoke r0.<com.actionbarsherlock.view.MenuInflater$MenuState: java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])>($r2, $r10, $r11) in <com.actionbarsherlock.view.MenuInflater$MenuState: void setItem(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.view.MenuInflater$MenuState: java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.view.MenuInflater$MenuState: void setItem(com.actionbarsherlock.view.MenuItem)>($r2) in <com.actionbarsherlock.view.MenuInflater$MenuState: void addItem()> ==> <com.actionbarsherlock.view.MenuInflater$MenuState: void setItem(com.actionbarsherlock.view.MenuItem)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.view.MenuInflater$MenuState: void setItem(com.actionbarsherlock.view.MenuItem)>($r4) in <com.actionbarsherlock.view.MenuInflater$MenuState: com.actionbarsherlock.view.SubMenu addSubMenuItem()> ==> <com.actionbarsherlock.view.MenuInflater$MenuState: void setItem(com.actionbarsherlock.view.MenuItem)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.view.MenuInflater: android.content.Context access$0(com.actionbarsherlock.view.MenuInflater)>($r3) in <com.actionbarsherlock.view.MenuInflater$MenuState: void readGroup(android.util.AttributeSet)> ==> <com.actionbarsherlock.view.MenuInflater: android.content.Context access$0(com.actionbarsherlock.view.MenuInflater)>
STATIC edge: $r4 = staticinvoke <com.actionbarsherlock.view.MenuInflater: android.content.Context access$0(com.actionbarsherlock.view.MenuInflater)>($r3) in <com.actionbarsherlock.view.MenuInflater$MenuState: void readItem(android.util.AttributeSet)> ==> <com.actionbarsherlock.view.MenuInflater: android.content.Context access$0(com.actionbarsherlock.view.MenuInflater)>
SPECIAL edge: $c2 = specialinvoke r0.<com.actionbarsherlock.view.MenuInflater$MenuState: char getShortcut(java.lang.String)>($r8) in <com.actionbarsherlock.view.MenuInflater$MenuState: void readItem(android.util.AttributeSet)> ==> <com.actionbarsherlock.view.MenuInflater$MenuState: char getShortcut(java.lang.String)>
STATIC edge: $r9 = staticinvoke <com.actionbarsherlock.view.MenuInflater: java.lang.Class[] access$1()>() in <com.actionbarsherlock.view.MenuInflater$MenuState: void readItem(android.util.AttributeSet)> ==> <com.actionbarsherlock.view.MenuInflater: java.lang.Class[] access$1()>
STATIC edge: $r10 = staticinvoke <com.actionbarsherlock.view.MenuInflater: java.lang.Object[] access$2(com.actionbarsherlock.view.MenuInflater)>($r3) in <com.actionbarsherlock.view.MenuInflater$MenuState: void readItem(android.util.AttributeSet)> ==> <com.actionbarsherlock.view.MenuInflater: java.lang.Object[] access$2(com.actionbarsherlock.view.MenuInflater)>
SPECIAL edge: $r11 = specialinvoke r0.<com.actionbarsherlock.view.MenuInflater$MenuState: java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])>($r8, $r9, $r10) in <com.actionbarsherlock.view.MenuInflater$MenuState: void readItem(android.util.AttributeSet)> ==> <com.actionbarsherlock.view.MenuInflater$MenuState: java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.account.AccountsEditListAdapter$AccountListItemViews: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.EuroTelefon: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.EuroTelefon: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.EuroTelefon: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1) in <com.csipsimple.wizards.impl.EuroTelefon: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <java.lang.Integer: java.lang.String toString(int)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("dtmf_mode", $r2) in <com.csipsimple.wizards.impl.EuroTelefon: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>() in <com.csipsimple.wizards.impl.CongstarTelekom: void <init>()> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.CongstarTelekom: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.CongstarTelekom: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.CongstarTelekom: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r4) in <com.csipsimple.wizards.impl.CongstarTelekom: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
STATIC edge: $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <com.csipsimple.wizards.impl.CongstarTelekom: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.csipsimple.wizards.impl.CongstarTelekom: java.lang.String getDomain()>() in <com.csipsimple.wizards.impl.CongstarTelekom: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.CongstarTelekom: java.lang.String getDomain()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.CongstarTelekom: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.CongstarTelekom: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.CongstarTelekom: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.CongstarTelekom: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.CongstarTelekom: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.CongstarTelekom: void hidePreference(java.lang.String,java.lang.String)>(null, $r4) in <com.csipsimple.wizards.impl.CongstarTelekom: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void hidePreference(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.CongstarTelekom: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.CongstarTelekom: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.webrtc.videoengine.ViESurfaceRenderer: void <init>(android.view.SurfaceView)> ==> <java.lang.Object: void <init>()>
INTERFACE edge: interfaceinvoke $r2.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>(r0) in <org.webrtc.videoengine.ViESurfaceRenderer: void <init>(android.view.SurfaceView)> ==> <org.webrtc.videoengine.ViESurfaceRenderer: void surfaceCreated(android.view.SurfaceHolder)>
INTERFACE edge: interfaceinvoke $r2.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>(r0) in <org.webrtc.videoengine.ViESurfaceRenderer: void <init>(android.view.SurfaceView)> ==> <org.webrtc.videoengine.ViESurfaceRenderer: void surfaceDestroyed(android.view.SurfaceHolder)>
INTERFACE edge: interfaceinvoke $r2.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>(r0) in <org.webrtc.videoengine.ViESurfaceRenderer: void <init>(android.view.SurfaceView)> ==> <org.webrtc.videoengine.ViESurfaceRenderer: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
STATIC edge: $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) in <org.webrtc.videoengine.ViESurfaceRenderer: void saveBitmapToJPEG(int,int)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/sdcard/render_%d.jpg", $r5) in <org.webrtc.videoengine.ViESurfaceRenderer: void saveBitmapToJPEG(int,int)> ==> <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
VIRTUAL edge: $r3 = virtualinvoke r0.<org.webrtc.videoengine.ViESurfaceRenderer: android.graphics.Bitmap CreateBitmap(int,int)>($i0, $i1) in <org.webrtc.videoengine.ViESurfaceRenderer: java.nio.ByteBuffer CreateByteBuffer(int,int)> ==> <org.webrtc.videoengine.ViESurfaceRenderer: android.graphics.Bitmap CreateBitmap(int,int)>
VIRTUAL edge: virtualinvoke r0.<org.webrtc.videoengine.ViESurfaceRenderer: void DrawBitmap()>() in <org.webrtc.videoengine.ViESurfaceRenderer: void DrawByteBuffer()> ==> <org.webrtc.videoengine.ViESurfaceRenderer: void DrawBitmap()>
SPECIAL edge: specialinvoke r0.<org.webrtc.videoengine.ViESurfaceRenderer: void changeDestRect(int,int)>($i1, $i2) in <org.webrtc.videoengine.ViESurfaceRenderer: void surfaceChanged(android.view.SurfaceHolder,int,int,int)> ==> <org.webrtc.videoengine.ViESurfaceRenderer: void changeDestRect(int,int)>
SPECIAL edge: specialinvoke r0.<org.webrtc.videoengine.ViESurfaceRenderer: void changeDestRect(int,int)>($i0, $i1) in <org.webrtc.videoengine.ViESurfaceRenderer: void surfaceCreated(android.view.SurfaceHolder)> ==> <org.webrtc.videoengine.ViESurfaceRenderer: void changeDestRect(int,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_buddy_status$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()>() in <com.csipsimple.wizards.impl.OSTN: void <init>()> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.OSTN: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.wizards.impl.OSTN: java.lang.String getDomain()>() in <com.csipsimple.wizards.impl.OSTN: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: java.lang.String getDomain()>
VIRTUAL edge: $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(":") in <com.csipsimple.wizards.impl.OSTN: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.OSTN: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) in <com.csipsimple.wizards.impl.OSTN: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.OSTN: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_tls", 1) in <com.csipsimple.wizards.impl.OSTN: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.app.ActionBar$Tab: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Sipnet: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Sipnet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) in <com.csipsimple.wizards.impl.Sipnet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Sipnet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_dns_srv", 1) in <com.csipsimple.wizards.impl.Sipnet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("PCMA/8000/1", "wb", "245") in <com.csipsimple.wizards.impl.Sipnet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config: void <init>()>
STATIC edge: $i0 = staticinvoke <com.csipsimple.ui.incall.AccelerometerListener: int access$1(com.csipsimple.ui.incall.AccelerometerListener)>(r5) in <com.csipsimple.ui.incall.AccelerometerListener$AccelerometerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.ui.incall.AccelerometerListener: int access$1(com.csipsimple.ui.incall.AccelerometerListener)>
STATIC edge: staticinvoke <com.csipsimple.ui.incall.AccelerometerListener: void access$2(com.csipsimple.ui.incall.AccelerometerListener,int)>(r5, $i0) in <com.csipsimple.ui.incall.AccelerometerListener$AccelerometerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.ui.incall.AccelerometerListener: void access$2(com.csipsimple.ui.incall.AccelerometerListener,int)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.ui.incall.AccelerometerListener: int access$3(com.csipsimple.ui.incall.AccelerometerListener)>(r5) in <com.csipsimple.ui.incall.AccelerometerListener$AccelerometerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.ui.incall.AccelerometerListener: int access$3(com.csipsimple.ui.incall.AccelerometerListener)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("AccelerometerListener", $r6) in <com.csipsimple.ui.incall.AccelerometerListener$AccelerometerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.ui.incall.AccelerometerListener: com.csipsimple.ui.incall.AccelerometerListener$OrientationListener access$4(com.csipsimple.ui.incall.AccelerometerListener)>(r5) in <com.csipsimple.ui.incall.AccelerometerListener$AccelerometerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.ui.incall.AccelerometerListener: com.csipsimple.ui.incall.AccelerometerListener$OrientationListener access$4(com.csipsimple.ui.incall.AccelerometerListener)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: void <init>(com.csipsimple.wizards.impl.AccountCreationWebview)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.wizards.impl.AccountCreationWebview: android.webkit.WebView access$0(com.csipsimple.wizards.impl.AccountCreationWebview)>($r3) in <com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: void finishAccountCreation(boolean,java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: android.webkit.WebView access$0(com.csipsimple.wizards.impl.AccountCreationWebview)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.wizards.impl.AccountCreationWebview: android.view.ViewGroup access$1(com.csipsimple.wizards.impl.AccountCreationWebview)>($r3) in <com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: void finishAccountCreation(boolean,java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: android.view.ViewGroup access$1(com.csipsimple.wizards.impl.AccountCreationWebview)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.wizards.impl.AccountCreationWebview: android.view.ViewGroup access$2(com.csipsimple.wizards.impl.AccountCreationWebview)>($r3) in <com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: void finishAccountCreation(boolean,java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: android.view.ViewGroup access$2(com.csipsimple.wizards.impl.AccountCreationWebview)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.wizards.impl.AccountCreationWebview: com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener access$3(com.csipsimple.wizards.impl.AccountCreationWebview)>($r3) in <com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: void finishAccountCreation(boolean,java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener access$3(com.csipsimple.wizards.impl.AccountCreationWebview)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.wizards.impl.AccountCreationWebview: com.csipsimple.wizards.BasePrefsWizard access$4(com.csipsimple.wizards.impl.AccountCreationWebview)>($r3) in <com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: void finishAccountCreation(boolean,java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: com.csipsimple.wizards.BasePrefsWizard access$4(com.csipsimple.wizards.impl.AccountCreationWebview)>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.wizards.BasePrefsWizard: void updateValidation()>() in <com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: void finishAccountCreation(boolean,java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.BasePrefsWizard: void updateValidation()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.wizards.impl.AccountCreationWebview: android.webkit.WebView access$0(com.csipsimple.wizards.impl.AccountCreationWebview)>($r3) in <com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: boolean finishAccountCreationAndQuit(boolean,java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: android.webkit.WebView access$0(com.csipsimple.wizards.impl.AccountCreationWebview)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.wizards.impl.AccountCreationWebview: android.view.ViewGroup access$1(com.csipsimple.wizards.impl.AccountCreationWebview)>($r3) in <com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: boolean finishAccountCreationAndQuit(boolean,java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: android.view.ViewGroup access$1(com.csipsimple.wizards.impl.AccountCreationWebview)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.wizards.impl.AccountCreationWebview: android.view.ViewGroup access$2(com.csipsimple.wizards.impl.AccountCreationWebview)>($r3) in <com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: boolean finishAccountCreationAndQuit(boolean,java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: android.view.ViewGroup access$2(com.csipsimple.wizards.impl.AccountCreationWebview)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.wizards.impl.AccountCreationWebview: com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener access$3(com.csipsimple.wizards.impl.AccountCreationWebview)>($r3) in <com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: boolean finishAccountCreationAndQuit(boolean,java.lang.String,java.lang.String)> ==> <com.csipsimple.wizards.impl.AccountCreationWebview: com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener access$3(com.csipsimple.wizards.impl.AccountCreationWebview)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Sipgate: void <init>()> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.wizards.impl.Sipgate$AccountBalance: void <init>(com.csipsimple.wizards.impl.Sipgate)>(r0) in <com.csipsimple.wizards.impl.Sipgate: void <init>()> ==> <com.csipsimple.wizards.impl.Sipgate$AccountBalance: void <init>(com.csipsimple.wizards.impl.Sipgate)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.wizards.impl.AccountBalanceHelper: void launchRequest(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Sipgate: void updateAccountInfos(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AccountBalanceHelper: void launchRequest(com.csipsimple.api.SipProfile)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Sipgate: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.Sipgate: java.lang.String getText(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Sipgate: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
STATIC edge: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.Sipgate: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Sipgate: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.Sipgate: android.preference.Preference findPreference(java.lang.String)>("proxy_server") in <com.csipsimple.wizards.impl.Sipgate: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Sipgate: void addPreference(android.preference.Preference)>($r2) in <com.csipsimple.wizards.impl.Sipgate: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void addPreference(android.preference.Preference)>
VIRTUAL edge: $r5 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getProxyAddress()>() in <com.csipsimple.wizards.impl.Sipgate: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: java.lang.String getProxyAddress()>
VIRTUAL edge: $r6 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getSipDomain()>() in <com.csipsimple.wizards.impl.Sipgate: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: java.lang.String getSipDomain()>
VIRTUAL edge: z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5) in <com.csipsimple.wizards.impl.Sipgate: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Sipgate: void updateAccountInfos(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Sipgate: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Sipgate: void updateAccountInfos(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1) in <com.csipsimple.wizards.impl.Sipgate: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.Sipgate: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Sipgate: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.Sipgate: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>("stun.sipgate.net:10000") in <com.csipsimple.wizards.impl.Sipgate: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void updateDescriptions()>() in <com.csipsimple.wizards.impl.Sipgate: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: void updateDescriptions()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Sipgate: void setStringFieldSummary(java.lang.String)>("proxy_server") in <com.csipsimple.wizards.impl.Sipgate: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
VIRTUAL edge: $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>() in <com.actionbarsherlock.widget.ActivityChooserModel: void <clinit>()> ==> <java.lang.Class: java.lang.String getSimpleName()>
SPECIAL edge: specialinvoke $r2.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.widget.ActivityChooserModel: void <clinit>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void <init>(com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor)>(null) in <com.actionbarsherlock.widget.ActivityChooserModel: void <clinit>()> ==> <com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void <init>(com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor)>
SPECIAL edge: specialinvoke $r3.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.widget.ActivityChooserModel: void <init>(android.content.Context,java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r5.<com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter)>(r0, null) in <com.actionbarsherlock.widget.ActivityChooserModel: void <init>(android.content.Context,java.lang.String)> ==> <com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter)>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2) in <com.actionbarsherlock.widget.ActivityChooserModel: void <init>(android.content.Context,java.lang.String)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsLocked()>() in <com.actionbarsherlock.widget.ActivityChooserModel: void access$6(com.actionbarsherlock.widget.ActivityChooserModel)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsLocked()>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>() in <com.actionbarsherlock.widget.ActivityChooserModel: void access$7(com.actionbarsherlock.widget.ActivityChooserModel)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsLocked()>() in <com.actionbarsherlock.widget.ActivityChooserModel: boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsLocked()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void persistHistoricalData()>() in <com.actionbarsherlock.widget.ActivityChooserModel: boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void persistHistoricalData()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>() in <com.actionbarsherlock.widget.ActivityChooserModel: boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>
SPECIAL edge: specialinvoke r5.<com.actionbarsherlock.widget.ActivityChooserModel: void <init>(android.content.Context,java.lang.String)>($r0, $r1) in <com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void <init>(android.content.Context,java.lang.String)>
SPECIAL edge: specialinvoke r5.<com.actionbarsherlock.widget.ActivityChooserModel: void readHistoricalData()>() in <com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void readHistoricalData()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>() in <com.actionbarsherlock.widget.ActivityChooserModel: void loadActivitiesLocked()> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>
SPECIAL edge: specialinvoke $r8.<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,android.content.pm.ResolveInfo)>(r0, r6) in <com.actionbarsherlock.widget.ActivityChooserModel: void loadActivitiesLocked()> ==> <com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,android.content.pm.ResolveInfo)>
SPECIAL edge: specialinvoke $r6.<com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister)>(r0, null) in <com.actionbarsherlock.widget.ActivityChooserModel: void persistHistoricalData()> ==> <com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister)>
VIRTUAL edge: virtualinvoke $r5.<com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void execute(java.lang.Runnable)>($r6) in <com.actionbarsherlock.widget.ActivityChooserModel: void persistHistoricalData()> ==> <com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void execute(java.lang.Runnable)>
SPECIAL edge: specialinvoke $r2.<com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader)>(r0, null) in <com.actionbarsherlock.widget.ActivityChooserModel: void readHistoricalData()> ==> <com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader)>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void execute(java.lang.Runnable)>($r2) in <com.actionbarsherlock.widget.ActivityChooserModel: void readHistoricalData()> ==> <com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void execute(java.lang.Runnable)>
SPECIAL edge: specialinvoke r3.<com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)>(r2, $l1, 1.0F) in <com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)> ==> <com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord)>(r3) in <com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>() in <com.actionbarsherlock.widget.ActivityChooserModel: void setActivitySorter(com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>
SPECIAL edge: specialinvoke r2.<com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)>(r1, $l1, $f0) in <com.actionbarsherlock.widget.ActivityChooserModel: void setDefaultActivity(int)> ==> <com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord)>(r2) in <com.actionbarsherlock.widget.ActivityChooserModel: void setDefaultActivity(int)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsLocked()>() in <com.actionbarsherlock.widget.ActivityChooserModel: void setHistoryMaxSize(int)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsLocked()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>() in <com.actionbarsherlock.widget.ActivityChooserModel: void setHistoryMaxSize(int)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel: void loadActivitiesLocked()>() in <com.actionbarsherlock.widget.ActivityChooserModel: void setIntent(android.content.Intent)> ==> <com.actionbarsherlock.widget.ActivityChooserModel: void loadActivitiesLocked()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R$color: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.BGTel: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.BGTel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.BGTel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.BGTel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(3) in <com.csipsimple.wizards.impl.BGTel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <java.lang.Integer: java.lang.String toString(int)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("dtmf_mode", $r2) in <com.csipsimple.wizards.impl.BGTel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
STATIC edge: $i1 = staticinvoke <com.csipsimple.utils.Compatibility: int getHomeMenuId()>() in <com.csipsimple.ui.prefs.PrefsFilters: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.utils.Compatibility: int getHomeMenuId()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_media_config: org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options getIce_opt()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type: void <init>(long,boolean)>($l0, 1) in <org.pjsip.pjsua.pjsua_media_config: org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type getTurn_conn_type()> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type: void <init>(long,boolean)>
SPECIAL edge: specialinvoke $r1.<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>($l0, 0) in <org.pjsip.pjsua.pjsua_media_config: org.pjsip.pjsua.pj_str_t getTurn_server()> ==> <org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options)>($r1) in <org.pjsip.pjsua.pjsua_media_config: void setIce_opt(org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)>($r1) in <org.pjsip.pjsua.pjsua_media_config: void setTurn_auth_cred(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)>
STATIC edge: $l1 = staticinvoke <org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type)>($r1) in <org.pjsip.pjsua.pjsua_media_config: void setTurn_conn_type(org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()>() in <com.csipsimple.wizards.impl.SipWise: void <init>()> ==> <com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.SipWise: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.SipWise: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.SipWise: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_dns_srv", 1) in <com.csipsimple.wizards.impl.SipWise: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1: void <init>()>() in <com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState: void <clinit>()> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState: void <init>(android.os.Parcel)>($r1) in <com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState: void <init>(android.os.Parcel,com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState)> ==> <com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState: void <init>(android.os.Parcel)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void bindFields()>() in <com.csipsimple.wizards.impl.AlternateServerImplementation: void bindFields()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void bindFields()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: android.preference.Preference findPreference(java.lang.String)>($r2) in <com.csipsimple.wizards.impl.AlternateServerImplementation: void bindFields()> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>() in <com.csipsimple.wizards.impl.AlternateServerImplementation: boolean canSave()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>
VIRTUAL edge: $z1 = virtualinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.AlternateServerImplementation: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z1 = virtualinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: boolean checkField(android.preference.Preference,boolean)>($r1, $z1) in <com.csipsimple.wizards.impl.AlternateServerImplementation: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.AlternateServerImplementation: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.csipsimple.api.SipProfile: java.lang.String getSipDomain()>() in <com.csipsimple.wizards.impl.AlternateServerImplementation: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipProfile: java.lang.String getSipDomain()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.AlternateServerImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.AlternateServerImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void updateDescriptions()>() in <com.csipsimple.wizards.impl.AlternateServerImplementation: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void updateDescriptions()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.AlternateServerImplementation: void setStringFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.AlternateServerImplementation: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int,int)>("PJMEDIA_DIR_NONE", 0, $i0) in <org.pjsip.pjsua.pjmedia_dir: void <clinit>()> ==> <org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjmedia_dir$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjmedia_dir$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjmedia_dir$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjmedia_dir$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjmedia_dir$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjmedia_dir$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int,org.pjsip.pjsua.pjmedia_dir)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int,org.pjsip.pjsua.pjmedia_dir)> ==> <org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjmedia_dir$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int,org.pjsip.pjsua.pjmedia_dir)> ==> <org.pjsip.pjsua.pjmedia_dir$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjmedia_dir: org.pjsip.pjsua.pjmedia_dir swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
INTERFACE edge: interfaceinvoke $r2.<android.content.SharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>(r0) in <com.csipsimple.ui.prefs.GenericPrefs: void onPause()> ==> <com.csipsimple.ui.prefs.GenericPrefs: void setStringFieldSummary(java.lang.String)>
INTERFACE edge: interfaceinvoke $r2.<android.content.SharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>(r0) in <com.csipsimple.ui.prefs.GenericPrefs: void onPause()> ==> <com.csipsimple.ui.prefs.GenericPrefs: void hidePreference(java.lang.String,java.lang.String)>
INTERFACE edge: interfaceinvoke $r2.<android.content.SharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>(r0) in <com.csipsimple.ui.prefs.GenericPrefs: void onPause()> ==> <com.csipsimple.ui.prefs.GenericPrefs: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
INTERFACE edge: interfaceinvoke $r2.<android.content.SharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>(r0) in <com.csipsimple.ui.prefs.GenericPrefs: void onPause()> ==> <com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenSub(java.lang.String,java.lang.Class,java.lang.Class,int)>
INTERFACE edge: interfaceinvoke $r2.<android.content.SharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>(r0) in <com.csipsimple.ui.prefs.GenericPrefs: void onPause()> ==> <com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenType(java.lang.String,int)>
VIRTUAL edge: r6 = virtualinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.ui.prefs.GenericPrefs: void setListFieldSummary(java.lang.String)> ==> <com.csipsimple.ui.prefs.GenericPrefs: java.lang.String getDefaultFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceSummary(android.preference.Preference,java.lang.CharSequence)>(r4, $r5) in <com.csipsimple.ui.prefs.GenericPrefs: void setListFieldSummary(java.lang.String)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceSummary(android.preference.Preference,java.lang.CharSequence)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.ui.prefs.GenericPrefs: void setPasswordFieldSummary(java.lang.String)> ==> <com.csipsimple.ui.prefs.GenericPrefs: java.lang.String getDefaultFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceSummary(android.preference.Preference,java.lang.CharSequence)>($r4, $r1) in <com.csipsimple.ui.prefs.GenericPrefs: void setPasswordFieldSummary(java.lang.String)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceSummary(android.preference.Preference,java.lang.CharSequence)>
VIRTUAL edge: $r1 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(".", "*") in <com.csipsimple.ui.prefs.GenericPrefs: void setPasswordFieldSummary(java.lang.String)> ==> <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenType(java.lang.Class,java.lang.String,int)>(r2, $r1, $i0) in <com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenSub(java.lang.String,java.lang.Class,java.lang.Class,int)> ==> <com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenType(java.lang.Class,java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.AccountBalanceHelper: void <init>()>() in <com.csipsimple.wizards.impl.Ippi$AccountBalance: void <init>(com.csipsimple.wizards.impl.Ippi)> ==> <com.csipsimple.wizards.impl.AccountBalanceHelper: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.wizards.impl.Ippi: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Ippi)>(r3) in <com.csipsimple.wizards.impl.Ippi$AccountBalance: void applyResultError()> ==> <com.csipsimple.wizards.impl.Ippi: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Ippi)>
STATIC edge: $r5 = staticinvoke <com.csipsimple.wizards.impl.Ippi: android.widget.TextView access$1(com.csipsimple.wizards.impl.Ippi)>(r4) in <com.csipsimple.wizards.impl.Ippi$AccountBalance: void applyResultSuccess(java.lang.String)> ==> <com.csipsimple.wizards.impl.Ippi: android.widget.TextView access$1(com.csipsimple.wizards.impl.Ippi)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.wizards.impl.Ippi: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Ippi)>(r4) in <com.csipsimple.wizards.impl.Ippi$AccountBalance: void applyResultSuccess(java.lang.String)> ==> <com.csipsimple.wizards.impl.Ippi: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Ippi)>
STATIC edge: $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) in <com.csipsimple.wizards.impl.Ippi$AccountBalance: org.apache.http.client.methods.HttpRequestBase getRequest(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.MD5: java.lang.String MD5Hash(java.lang.String)>($r3) in <com.csipsimple.wizards.impl.Ippi$AccountBalance: org.apache.http.client.methods.HttpRequestBase getRequest(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.MD5: java.lang.String MD5Hash(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.Ippi$AccountBalance: java.lang.String parseResponseLine(java.lang.String)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("IppiW", "Can\'t get value for line") in <com.csipsimple.wizards.impl.Ippi$AccountBalance: java.lang.String parseResponseLine(java.lang.String)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Pennytel: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void: void <init>()>
VIRTUAL edge: virtualinvoke $r6.<com.csipsimple.ui.incall.InCallControls: void setCallState(com.csipsimple.api.SipCallSession)>(r2) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallControls: void setCallState(com.csipsimple.api.SipCallSession)>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.ui.incall.InCallAnswerControls: void setCallState(com.csipsimple.api.SipCallSession)>(r2) in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.ui.incall.InCallAnswerControls: void setCallState(com.csipsimple.api.SipCallSession)>
VIRTUAL edge: $i0 = virtualinvoke r2.<com.csipsimple.api.SipCallSession: int getCallId()>() in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.api.SipCallSession: int getCallId()>
VIRTUAL edge: $i0 = virtualinvoke r2.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
VIRTUAL edge: $i5 = virtualinvoke r1.<com.csipsimple.api.SipCallSession: int getMediaStatus()>() in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.api.SipCallSession: int getMediaStatus()>
VIRTUAL edge: $z1 = virtualinvoke r1.<com.csipsimple.api.SipCallSession: boolean isAfterEnded()>() in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.api.SipCallSession: boolean isAfterEnded()>
VIRTUAL edge: $z1 = virtualinvoke r1.<com.csipsimple.api.SipCallSession: boolean isLocalHeld()>() in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.api.SipCallSession: boolean isLocalHeld()>
VIRTUAL edge: $z1 = virtualinvoke r1.<com.csipsimple.api.SipCallSession: boolean mediaHasVideo()>() in <com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()> ==> <com.csipsimple.api.SipCallSession: boolean mediaHasVideo()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.AccountListUtils: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.FreephoneLineCa: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.FreephoneLineCa: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.FreephoneLineCa: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>("PCMU/8000/1", "wb", "245") in <com.csipsimple.wizards.impl.FreephoneLineCa: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1: void <init>(com.actionbarsherlock.internal.view.menu.MenuItemWrapper)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem$OnActionExpandListener access$0(com.actionbarsherlock.internal.view.menu.MenuItemWrapper)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1: boolean onMenuItemActionCollapse(android.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem$OnActionExpandListener access$0(com.actionbarsherlock.internal.view.menu.MenuItemWrapper)>
STATIC edge: $r3 = staticinvoke <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem$OnActionExpandListener access$0(com.actionbarsherlock.internal.view.menu.MenuItemWrapper)>($r2) in <com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1: boolean onMenuItemActionExpand(android.view.MenuItem)> ==> <com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem$OnActionExpandListener access$0(com.actionbarsherlock.internal.view.menu.MenuItemWrapper)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$2: void <init>(com.csipsimple.service.SipService$1)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService$1: com.csipsimple.service.SipService access$0(com.csipsimple.service.SipService$1)>($r2) in <com.csipsimple.service.SipService$1$2: void doRun()> ==> <com.csipsimple.service.SipService$1: com.csipsimple.service.SipService access$0(com.csipsimple.service.SipService$1)>
STATIC edge: staticinvoke <com.csipsimple.service.SipService: void access$1(com.csipsimple.service.SipService,boolean)>($r1, 1) in <com.csipsimple.service.SipService$1$2: void doRun()> ==> <com.csipsimple.service.SipService: void access$1(com.csipsimple.service.SipService,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$1: void <init>(com.csipsimple.service.SipService$1)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService$1: com.csipsimple.service.SipService access$0(com.csipsimple.service.SipService$1)>($r2) in <com.csipsimple.service.SipService$1$1: void doRun()> ==> <com.csipsimple.service.SipService$1: com.csipsimple.service.SipService access$0(com.csipsimple.service.SipService$1)>
STATIC edge: staticinvoke <com.csipsimple.service.SipService: void access$0(com.csipsimple.service.SipService)>($r1) in <com.csipsimple.service.SipService$1$1: void doRun()> ==> <com.csipsimple.service.SipService: void access$0(com.csipsimple.service.SipService)>
SPECIAL edge: specialinvoke $r0.<org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int,int)>("PJSIP_SC_TRYING", 0, $i0) in <org.pjsip.pjsua.pjsip_status_code: void <clinit>()> ==> <org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsip_status_code$SwigNext: int access$0()>() in <org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsip_status_code$SwigNext: int access$0()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_status_code$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int)> ==> <org.pjsip.pjsua.pjsip_status_code$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int,int)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_status_code$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsip_status_code$SwigNext: void access$1(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_status_code)> ==> <org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0) in <org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_status_code)> ==> <java.lang.Enum: void <init>(java.lang.String,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsip_status_code$SwigNext: void access$1(int)>($i0) in <org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_status_code)> ==> <org.pjsip.pjsua.pjsip_status_code$SwigNext: void access$1(int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object[] getEnumConstants()>() in <org.pjsip.pjsua.pjsip_status_code: org.pjsip.pjsua.pjsip_status_code swigToEnum(int)> ==> <java.lang.Class: java.lang.Object[] getEnumConstants()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$1$8: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int)> ==> <com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$8: java.lang.Object runWithReturn()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: int callHangup(int,int)>($i0, $i1) in <com.csipsimple.service.SipService$1$8: java.lang.Object runWithReturn()> ==> <com.csipsimple.pjsip.PjSipService: int callHangup(int,int)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.service.SipService$1$8: java.lang.Object runWithReturn()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$1$7: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int)> ==> <com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$7: java.lang.Object runWithReturn()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: int callAnswer(int,int)>($i0, $i1) in <com.csipsimple.service.SipService$1$7: java.lang.Object runWithReturn()> ==> <com.csipsimple.pjsip.PjSipService: int callAnswer(int,int)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.service.SipService$1$7: java.lang.Object runWithReturn()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.R$dimen: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.actionbarsherlock.internal.widget.CapitalizingButton: void setTextCompat(java.lang.CharSequence)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>($r2) in <com.csipsimple.service.SipService$1$9: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,java.lang.String)> ==> <com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$9: java.lang.Object runWithReturn()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $i0 = virtualinvoke $r2.<com.csipsimple.pjsip.PjSipService: int callXfer(int,java.lang.String)>($i0, $r1) in <com.csipsimple.service.SipService$1$9: java.lang.Object runWithReturn()> ==> <com.csipsimple.pjsip.PjSipService: int callXfer(int,java.lang.String)>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.service.SipService$1$9: java.lang.Object runWithReturn()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$4: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.api.SipProfile,int)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.service.SipService$1: com.csipsimple.service.SipService access$0(com.csipsimple.service.SipService$1)>($r3) in <com.csipsimple.service.SipService$1$4: void doRun()> ==> <com.csipsimple.service.SipService$1: com.csipsimple.service.SipService access$0(com.csipsimple.service.SipService$1)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.SipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)>($r1, $i0, 0) in <com.csipsimple.service.SipService$1$4: void doRun()> ==> <com.csipsimple.service.SipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$3: void <init>(com.csipsimple.service.SipService$1)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.service.SipService$1: com.csipsimple.service.SipService access$0(com.csipsimple.service.SipService$1)>($r2) in <com.csipsimple.service.SipService$1$3: void doRun()> ==> <com.csipsimple.service.SipService$1: com.csipsimple.service.SipService access$0(com.csipsimple.service.SipService$1)>
STATIC edge: staticinvoke <com.csipsimple.service.SipService: void access$2(com.csipsimple.service.SipService)>($r1) in <com.csipsimple.service.SipService$1$3: void doRun()> ==> <com.csipsimple.service.SipService: void access$2(com.csipsimple.service.SipService)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$6: void <init>(com.csipsimple.service.SipService$1,java.lang.String,java.lang.String,long)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP SRV", $r3) in <com.csipsimple.service.SipService$1$6: void doRun()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$6: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: $r6 = virtualinvoke $r4.<com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sendMessage(java.lang.String,java.lang.String,long)>($r3, $r5, $l0) in <com.csipsimple.service.SipService$1$6: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sendMessage(java.lang.String,java.lang.String,long)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String)>($r3) in <com.csipsimple.service.SipService$1$6: void doRun()> ==> <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String)>
VIRTUAL edge: $r5 = virtualinvoke $r6.<com.csipsimple.service.SipService$ToCall: java.lang.String getCallee()>() in <com.csipsimple.service.SipService$1$6: void doRun()> ==> <com.csipsimple.service.SipService$ToCall: java.lang.String getCallee()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.api.SipMessage: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,java.lang.String)>("SELF", $r3, $r5, $r7, "text/plain", $l0, 6, $r8) in <com.csipsimple.service.SipService$1$6: void doRun()> ==> <com.csipsimple.api.SipMessage: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<com.csipsimple.api.SipMessage: void setRead(boolean)>(1) in <com.csipsimple.service.SipService$1$6: void doRun()> ==> <com.csipsimple.api.SipMessage: void setRead(boolean)>
STATIC edge: $r10 = staticinvoke <com.csipsimple.service.SipService$1: com.csipsimple.service.SipService access$0(com.csipsimple.service.SipService$1)>($r9) in <com.csipsimple.service.SipService$1$6: void doRun()> ==> <com.csipsimple.service.SipService$1: com.csipsimple.service.SipService access$0(com.csipsimple.service.SipService$1)>
VIRTUAL edge: $r13 = virtualinvoke r1.<com.csipsimple.api.SipMessage: android.content.ContentValues getContentValues()>() in <com.csipsimple.service.SipService$1$6: void doRun()> ==> <com.csipsimple.api.SipMessage: android.content.ContentValues getContentValues()>
VIRTUAL edge: $r3 = virtualinvoke r1.<com.csipsimple.api.SipMessage: java.lang.String getTo()>() in <com.csipsimple.service.SipService$1$6: void doRun()> ==> <com.csipsimple.api.SipMessage: java.lang.String getTo()>
STATIC edge: $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3) in <com.csipsimple.service.SipService$1$6: void doRun()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r10.<com.csipsimple.service.SipService: void notifyUserOfMessage(java.lang.String)>($r3) in <com.csipsimple.service.SipService$1$6: void doRun()> ==> <com.csipsimple.service.SipService: void notifyUserOfMessage(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.SipService$SipRunnable: void <init>()>() in <com.csipsimple.service.SipService$1$5: void <init>(com.csipsimple.service.SipService$1,java.lang.String,int,android.os.Bundle)> ==> <com.csipsimple.service.SipService$SipRunnable: void <init>()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>() in <com.csipsimple.service.SipService$1$5: void doRun()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)>($r1, $i0, $r2) in <com.csipsimple.service.SipService$1$5: void doRun()> ==> <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.utils.contacts.ContactsAutocompleteAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
STATIC edge: $r2 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.utils.contacts.ContactsAutocompleteAdapter: java.lang.CharSequence convertToString(android.database.Cursor)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)>($r3, $l0, $r5) in <com.csipsimple.utils.contacts.ContactsAutocompleteAdapter: java.lang.CharSequence convertToString(android.database.Cursor)> ==> <com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>() in <com.csipsimple.utils.contacts.ContactsAutocompleteAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_int: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_int: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_int: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_int: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.wizards.impl.MondotalkCreate: android.graphics.Bitmap access$0(com.csipsimple.wizards.impl.MondotalkCreate)>(r4) in <com.csipsimple.wizards.impl.MondotalkCreate$MondotalkHandler: void dispatchMessage(android.os.Message)> ==> <com.csipsimple.wizards.impl.MondotalkCreate: android.graphics.Bitmap access$0(com.csipsimple.wizards.impl.MondotalkCreate)>
STATIC edge: $r6 = staticinvoke <com.csipsimple.wizards.impl.MondotalkCreate: android.widget.ImageView access$1(com.csipsimple.wizards.impl.MondotalkCreate)>(r4) in <com.csipsimple.wizards.impl.MondotalkCreate$MondotalkHandler: void dispatchMessage(android.os.Message)> ==> <com.csipsimple.wizards.impl.MondotalkCreate: android.widget.ImageView access$1(com.csipsimple.wizards.impl.MondotalkCreate)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.wizards.impl.MondotalkCreate: android.view.View access$2(com.csipsimple.wizards.impl.MondotalkCreate)>(r4) in <com.csipsimple.wizards.impl.MondotalkCreate$MondotalkHandler: void dispatchMessage(android.os.Message)> ==> <com.csipsimple.wizards.impl.MondotalkCreate: android.view.View access$2(com.csipsimple.wizards.impl.MondotalkCreate)>
STATIC edge: $r8 = staticinvoke <com.csipsimple.wizards.impl.MondotalkCreate: android.app.ProgressDialog access$3(com.csipsimple.wizards.impl.MondotalkCreate)>(r4) in <com.csipsimple.wizards.impl.MondotalkCreate$MondotalkHandler: void dispatchMessage(android.os.Message)> ==> <com.csipsimple.wizards.impl.MondotalkCreate: android.app.ProgressDialog access$3(com.csipsimple.wizards.impl.MondotalkCreate)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsua_call_flag$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.pjsip_inv_state$SwigNext: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.MD5: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $i0 = virtualinvoke $r0.<java.lang.String: int length()>() in <com.csipsimple.utils.MD5: java.lang.String MD5Hash(java.lang.String)> ==> <java.lang.String: int length()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r0) in <com.csipsimple.utils.MD5: boolean checkMD5(java.lang.String,java.io.File)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.CongstarQSC: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.CongstarQSC: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.CongstarQSC: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.CongstarQSC: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r5) in <com.csipsimple.wizards.impl.CongstarQSC: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
STATIC edge: $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5) in <com.csipsimple.wizards.impl.CongstarQSC: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.wizards.impl.CongstarQSC: java.lang.String getDomain()>() in <com.csipsimple.wizards.impl.CongstarQSC: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.CongstarQSC: java.lang.String getDomain()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.CongstarQSC: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2) in <com.csipsimple.wizards.impl.CongstarQSC: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.wizards.impl.CongstarQSC: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: boolean performClick()> ==> <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjrpid_activity: org.pjsip.pjsua.pjrpid_activity[] values()>() in <com.csipsimple.pjsip.UAStateReceiver: int[] $SWITCH_TABLE$org$pjsip$pjsua$pjrpid_activity()> ==> <org.pjsip.pjsua.pjrpid_activity: org.pjsip.pjsua.pjrpid_activity[] values()>
STATIC edge: $r1 = staticinvoke <org.pjsip.pjsua.pjsua_buddy_status: org.pjsip.pjsua.pjsua_buddy_status[] values()>() in <com.csipsimple.pjsip.UAStateReceiver: int[] $SWITCH_TABLE$org$pjsip$pjsua$pjsua_buddy_status()> ==> <org.pjsip.pjsua.pjsua_buddy_status: org.pjsip.pjsua.pjsua_buddy_status[] values()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void access$0(com.csipsimple.pjsip.UAStateReceiver)> ==> <com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>
SPECIAL edge: $r3 = specialinvoke $r0.<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)>($r1, $r2) in <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession access$12(com.csipsimple.pjsip.UAStateReceiver,java.lang.Integer,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.pjsip.UAStateReceiver: void launchCallHandler(com.csipsimple.api.SipCallSession)>($r1) in <com.csipsimple.pjsip.UAStateReceiver: void access$2(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.pjsip.UAStateReceiver: void launchCallHandler(com.csipsimple.api.SipCallSession)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.pjsip.UAStateReceiver: void broadCastAndroidCallState(java.lang.String,java.lang.String)>($r1, $r2) in <com.csipsimple.pjsip.UAStateReceiver: void access$3(com.csipsimple.pjsip.UAStateReceiver,java.lang.String,java.lang.String)> ==> <com.csipsimple.pjsip.UAStateReceiver: void broadCastAndroidCallState(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.pjsip.UAStateReceiver: void sendPendingDtmf(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: void access$5(com.csipsimple.pjsip.UAStateReceiver,int)> ==> <com.csipsimple.pjsip.UAStateReceiver: void sendPendingDtmf(int)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.pjsip.UAStateReceiver: void onBroadcastCallState(com.csipsimple.api.SipCallSession)>($r1) in <com.csipsimple.pjsip.UAStateReceiver: void access$6(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.pjsip.UAStateReceiver: void onBroadcastCallState(com.csipsimple.api.SipCallSession)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void access$8(com.csipsimple.pjsip.UAStateReceiver)> ==> <com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP UA Receiver", "Anounce call activity") in <com.csipsimple.pjsip.UAStateReceiver: void launchCallHandler(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP UA Receiver", "< LOCK CPU") in <com.csipsimple.pjsip.UAStateReceiver: void lockCpu()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r4.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.pjsip.UAStateReceiver: void sendPendingDtmf(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.pjsip.UAStateReceiver$5: void <init>(com.csipsimple.pjsip.UAStateReceiver,int)>(r0, $i0) in <com.csipsimple.pjsip.UAStateReceiver: void sendPendingDtmf(int)> ==> <com.csipsimple.pjsip.UAStateReceiver$5: void <init>(com.csipsimple.pjsip.UAStateReceiver,int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r1) in <com.csipsimple.pjsip.UAStateReceiver: void sendPendingDtmf(int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP UA Receiver", $r3) in <com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP UA Receiver", "Updating call infos from the stack") in <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r6.<com.csipsimple.api.SipCallSession: void <init>()>() in <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.api.SipCallSession: void <init>()>
VIRTUAL edge: virtualinvoke r6.<com.csipsimple.api.SipCallSession: void setCallId(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.api.SipCallSession: void setCallId(int)>
STATIC edge: staticinvoke <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)>(r6, $r2, $r7) in <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)>
VIRTUAL edge: $z0 = virtualinvoke $r7.<com.csipsimple.pjsip.PjSipService: boolean isRecording(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.pjsip.PjSipService: boolean isRecording(int)>
VIRTUAL edge: virtualinvoke r6.<com.csipsimple.api.SipCallSession: void setIsRecording(boolean)>($z0) in <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.api.SipCallSession: void setIsRecording(boolean)>
VIRTUAL edge: $z0 = virtualinvoke $r7.<com.csipsimple.pjsip.PjSipService: boolean canRecord(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.pjsip.PjSipService: boolean canRecord(int)>
VIRTUAL edge: virtualinvoke r6.<com.csipsimple.api.SipCallSession: void setCanRecord(boolean)>($z0) in <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.api.SipCallSession: void setCanRecord(boolean)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.api.SipCallSession: boolean isActive()>() in <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getActiveCallInProgress()> ==> <com.csipsimple.api.SipCallSession: boolean isActive()>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.api.SipCallSession: boolean isActive()>() in <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getActiveCallOngoing()> ==> <com.csipsimple.api.SipCallSession: boolean isActive()>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.api.SipCallSession: boolean isOngoing()>() in <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getActiveCallOngoing()> ==> <com.csipsimple.api.SipCallSession: boolean isOngoing()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getActiveCallInProgress()>() in <com.csipsimple.pjsip.UAStateReceiver: boolean handleHeadsetButton()> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getActiveCallInProgress()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.pjsip.UAStateReceiver: boolean handleHeadsetButton()> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isIncoming()>() in <com.csipsimple.pjsip.UAStateReceiver: boolean handleHeadsetButton()> ==> <com.csipsimple.api.SipCallSession: boolean isIncoming()>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.pjsip.UAStateReceiver: boolean handleHeadsetButton()> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r5.<com.csipsimple.pjsip.UAStateReceiver$3: void <init>(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)>(r0, $r1) in <com.csipsimple.pjsip.UAStateReceiver: boolean handleHeadsetButton()> ==> <com.csipsimple.pjsip.UAStateReceiver$3: void <init>(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r5) in <com.csipsimple.pjsip.UAStateReceiver: boolean handleHeadsetButton()> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
SPECIAL edge: specialinvoke $r6.<com.csipsimple.pjsip.UAStateReceiver$4: void <init>(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)>(r0, $r1) in <com.csipsimple.pjsip.UAStateReceiver: boolean handleHeadsetButton()> ==> <com.csipsimple.pjsip.UAStateReceiver$4: void <init>(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>
SPECIAL edge: specialinvoke r1.<org.pjsip.pjsua.pjsua_buddy_info: void <init>()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <org.pjsip.pjsua.pjsua_buddy_info: void <init>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int buddy_get_info(int,org.pjsip.pjsua.pjsua_buddy_info)>($i0, r1) in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <org.pjsip.pjsua.pjsua: int buddy_get_info(int,org.pjsip.pjsua.pjsua_buddy_info)>
VIRTUAL edge: $i0 = virtualinvoke r1.<org.pjsip.pjsua.pjsua_buddy_info: int getMonitor_pres()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <org.pjsip.pjsua.pjsua_buddy_info: int getMonitor_pres()>
VIRTUAL edge: $r3 = virtualinvoke r1.<org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pj_str_t getStatus_text()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pj_str_t getStatus_text()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r3) in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP UA Receiver", $r4) in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Online") in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
STATIC edge: $r7 = staticinvoke <com.csipsimple.pjsip.UAStateReceiver: int[] $SWITCH_TABLE$org$pjsip$pjsua$pjsua_buddy_status()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <com.csipsimple.pjsip.UAStateReceiver: int[] $SWITCH_TABLE$org$pjsip$pjsua$pjsua_buddy_status()>
VIRTUAL edge: $r8 = virtualinvoke r1.<org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pjsua_buddy_status getStatus()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pjsua_buddy_status getStatus()>
STATIC edge: $r7 = staticinvoke <com.csipsimple.pjsip.UAStateReceiver: int[] $SWITCH_TABLE$org$pjsip$pjsua$pjrpid_activity()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <com.csipsimple.pjsip.UAStateReceiver: int[] $SWITCH_TABLE$org$pjsip$pjsua$pjrpid_activity()>
VIRTUAL edge: $r9 = virtualinvoke r1.<org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pjrpid_element getRpid()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pjrpid_element getRpid()>
VIRTUAL edge: $r10 = virtualinvoke $r9.<org.pjsip.pjsua.pjrpid_element: org.pjsip.pjsua.pjrpid_activity getActivity()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <org.pjsip.pjsua.pjrpid_element: org.pjsip.pjsua.pjrpid_activity getActivity()>
VIRTUAL edge: $r3 = virtualinvoke r1.<org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pj_str_t getUri()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pj_str_t getUri()>
VIRTUAL edge: virtualinvoke $r13.<com.csipsimple.service.PresenceManager: void changeBuddyState(java.lang.String,int,com.csipsimple.api.SipManager$PresenceStatus,java.lang.String)>($r6, $i0, r5, $r4) in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <com.csipsimple.service.PresenceManager: void changeBuddyState(java.lang.String,int,com.csipsimple.api.SipManager$PresenceStatus,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)> ==> <com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void css_on_call_media_state(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: void on_call_media_state(int)> ==> <org.pjsip.pjsua.pjsua: void css_on_call_media_state(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_call_media_state(int)> ==> <com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.MediaManager: void stopRing()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_call_media_state(int)> ==> <com.csipsimple.service.MediaManager: void stopRing()>
STATIC edge: $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: void on_call_media_state(int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: $r4 = specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)>($r3, null) in <com.csipsimple.pjsip.UAStateReceiver: void on_call_media_state(int)> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)>
VIRTUAL edge: $i1 = virtualinvoke $r4.<com.csipsimple.api.SipCallSession: int getMediaStatus()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_call_media_state(int)> ==> <com.csipsimple.api.SipCallSession: int getMediaStatus()>
VIRTUAL edge: $i1 = virtualinvoke $r4.<com.csipsimple.api.SipCallSession: int getConfPort()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_call_media_state(int)> ==> <com.csipsimple.api.SipCallSession: int getConfPort()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int conf_connect(int,int)>($i1, 0) in <com.csipsimple.pjsip.UAStateReceiver: void on_call_media_state(int)> ==> <org.pjsip.pjsua.pjsua: int conf_connect(int,int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.MediaManager: void setSoftwareVolume()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_call_media_state(int)> ==> <com.csipsimple.service.MediaManager: void setSoftwareVolume()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: boolean canRecord(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: void on_call_media_state(int)> ==> <com.csipsimple.pjsip.PjSipService: boolean canRecord(int)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("auto_record_calls") in <com.csipsimple.pjsip.UAStateReceiver: void on_call_media_state(int)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void startRecording(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: void on_call_media_state(int)> ==> <com.csipsimple.pjsip.PjSipService: void startRecording(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_call_media_state(int)> ==> <com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r1) in <com.csipsimple.pjsip.UAStateReceiver: org.pjsip.pjsua.pjsip_redirect_op on_call_redirected(int,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("SIP UA Receiver", $r3) in <com.csipsimple.pjsip.UAStateReceiver: org.pjsip.pjsua.pjsip_redirect_op on_call_redirected(int,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void css_on_call_state(int,org.pjsip.pjsua.pjsip_event)>($i0, $r1) in <com.csipsimple.pjsip.UAStateReceiver: void on_call_state(int,org.pjsip.pjsua.pjsip_event)> ==> <org.pjsip.pjsua.pjsua: void css_on_call_state(int,org.pjsip.pjsua.pjsip_event)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_call_state(int,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP UA Receiver", "Call state <<") in <com.csipsimple.pjsip.UAStateReceiver: void on_call_state(int,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: void on_call_state(int,org.pjsip.pjsua.pjsip_event)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: $r3 = specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)>($r2, $r1) in <com.csipsimple.pjsip.UAStateReceiver: void on_call_state(int,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)>
VIRTUAL edge: $i1 = virtualinvoke $r3.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_call_state(int,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.service.MediaManager: void stopRingAndUnfocus()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_call_state(int,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.service.MediaManager: void stopRingAndUnfocus()>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.service.MediaManager: void resetSettings()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_call_state(int,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.service.MediaManager: void resetSettings()>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.pjsip.PjSipService: void stopDialtoneGenerator(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: void on_call_state(int,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.pjsip.PjSipService: void stopDialtoneGenerator(int)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.pjsip.PjSipService: void stopRecording(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: void on_call_state(int,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.pjsip.PjSipService: void stopRecording(int)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.pjsip.PjSipService: void stopPlaying(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: void on_call_state(int,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.pjsip.PjSipService: void stopPlaying(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_call_state(int,org.pjsip.pjsua.pjsip_event)> ==> <com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession[] getCalls()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession[] getCalls()>
STATIC edge: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: r2 = specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)>($r6, null) in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP UA Receiver", $r8) in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r8 = virtualinvoke r2.<com.csipsimple.api.SipCallSession: java.lang.String getRemoteContact()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.api.SipCallSession: java.lang.String getRemoteContact()>
VIRTUAL edge: virtualinvoke r2.<com.csipsimple.api.SipCallSession: void setIncoming(boolean)>(1) in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.api.SipCallSession: void setIncoming(boolean)>
VIRTUAL edge: virtualinvoke $r10.<com.csipsimple.service.SipNotifications: void showNotificationForCall(com.csipsimple.api.SipCallSession)>(r2) in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.service.SipNotifications: void showNotificationForCall(com.csipsimple.api.SipCallSession)>
VIRTUAL edge: $r11 = virtualinvoke $r3.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfile getAccountForPjsipId(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfile getAccountForPjsipId(int)>
VIRTUAL edge: $i0 = virtualinvoke $r4.<com.csipsimple.service.SipService: int shouldAutoAnswer(java.lang.String,com.csipsimple.api.SipProfile)>($r8, $r11) in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.service.SipService: int shouldAutoAnswer(java.lang.String,com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.pjsip.PjSipService: int callAnswer(int,int)>($i1, $i0) in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.pjsip.PjSipService: int callAnswer(int,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void launchCallHandler(com.csipsimple.api.SipCallSession)>(r2) in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.pjsip.UAStateReceiver: void launchCallHandler(com.csipsimple.api.SipCallSession)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>
VIRTUAL edge: $z1 = virtualinvoke r2.<com.csipsimple.api.SipCallSession: boolean isAfterEnded()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.api.SipCallSession: boolean isAfterEnded()>
VIRTUAL edge: $i4 = virtualinvoke r2.<com.csipsimple.api.SipCallSession: int getCallId()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.api.SipCallSession: int getCallId()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("SIP UA Receiver", "Settings to not support two call at the same time !!!") in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int call_hangup(int,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)>($i1, 486L, null, null) in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <org.pjsip.pjsua.pjsua: int call_hangup(int,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)>
VIRTUAL edge: $i1 = virtualinvoke $r4.<com.csipsimple.service.SipService: int getGSMCallState()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.service.SipService: int getGSMCallState()>
VIRTUAL edge: virtualinvoke $r13.<com.csipsimple.service.MediaManager: void startRing(java.lang.String)>($r8) in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.service.MediaManager: void startRing(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void broadCastAndroidCallState(java.lang.String,java.lang.String)>("RINGING", $r8) in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.pjsip.UAStateReceiver: void broadCastAndroidCallState(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r13.<com.csipsimple.service.MediaManager: void playInCallTone(int)>(1) in <com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)> ==> <com.csipsimple.service.MediaManager: void playInCallTone(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>
STATIC edge: r4 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r2) in <com.csipsimple.pjsip.UAStateReceiver: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\r?\\n") in <com.csipsimple.pjsip.UAStateReceiver: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <java.lang.String: java.lang.String[] split(java.lang.String)>
VIRTUAL edge: $r9 = virtualinvoke $r8.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfile getAccountForPjsipId(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfile getAccountForPjsipId(int)>
VIRTUAL edge: r4 = virtualinvoke $r9.<com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()>
VIRTUAL edge: r4 = virtualinvoke $r9.<com.csipsimple.api.SipProfile: java.lang.String getProfileName()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.api.SipProfile: java.lang.String getProfileName()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP UA Receiver", r4) in <com.csipsimple.pjsip.UAStateReceiver: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke $r11.<com.csipsimple.service.SipNotifications: void showNotificationForVoiceMail(com.csipsimple.api.SipProfile,int)>($r9, i1) in <com.csipsimple.pjsip.UAStateReceiver: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.service.SipNotifications: void showNotificationForVoiceMail(com.csipsimple.api.SipProfile,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("SIP UA Receiver", r4) in <com.csipsimple.pjsip.UAStateReceiver: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r13) in <com.csipsimple.pjsip.UAStateReceiver: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
STATIC edge: $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4) in <com.csipsimple.pjsip.UAStateReceiver: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<org.pjsip.pjsua.pj_stun_nat_detect_result: java.lang.String getNat_type_name()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_nat_detect(org.pjsip.pjsua.pj_stun_nat_detect_result)> ==> <org.pjsip.pjsua.pj_stun_nat_detect_result: java.lang.String getNat_type_name()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<org.pjsip.pjsua.pj_stun_nat_detect_result: int getStatus()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_nat_detect(org.pjsip.pjsua.pj_stun_nat_detect_result)> ==> <org.pjsip.pjsua.pj_stun_nat_detect_result: int getStatus()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP UA Receiver", $r3) in <com.csipsimple.pjsip.UAStateReceiver: void on_nat_detect(org.pjsip.pjsua.pj_stun_nat_detect_result)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>
STATIC edge: $r8 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r1) in <com.csipsimple.pjsip.UAStateReceiver: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $r9 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String)>($r8) in <com.csipsimple.pjsip.UAStateReceiver: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String)>
SPECIAL edge: specialinvoke r6.<com.csipsimple.api.SipMessage: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,java.lang.String)>($r9, $r11, $r10, $r12, $r13, $l1, 1, $r8) in <com.csipsimple.pjsip.UAStateReceiver: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.api.SipMessage: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,java.lang.String)>
VIRTUAL edge: $r18 = virtualinvoke r6.<com.csipsimple.api.SipMessage: android.content.ContentValues getContentValues()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.api.SipMessage: android.content.ContentValues getContentValues()>
VIRTUAL edge: $r8 = virtualinvoke r6.<com.csipsimple.api.SipMessage: java.lang.String getFrom()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.api.SipMessage: java.lang.String getFrom()>
VIRTUAL edge: $r8 = virtualinvoke r6.<com.csipsimple.api.SipMessage: java.lang.String getBody()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.api.SipMessage: java.lang.String getBody()>
VIRTUAL edge: virtualinvoke $r19.<com.csipsimple.service.SipNotifications: void showNotificationForMessage(com.csipsimple.api.SipMessage)>(r6) in <com.csipsimple.pjsip.UAStateReceiver: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.service.SipNotifications: void showNotificationForMessage(com.csipsimple.api.SipMessage)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<org.pjsip.pjsua.pjsip_status_code: boolean equals(java.lang.Object)>($r7) in <com.csipsimple.pjsip.UAStateReceiver: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)> ==> <java.lang.Enum: boolean equals(java.lang.Object)>
STATIC edge: $r8 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r1) in <com.csipsimple.pjsip.UAStateReceiver: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $r8 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String)>($r8) in <com.csipsimple.pjsip.UAStateReceiver: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r3.<org.pjsip.pjsua.pjsip_status_code: int swigValue()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)> ==> <org.pjsip.pjsua.pjsip_status_code: int swigValue()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP UA Receiver", $r12) in <com.csipsimple.pjsip.UAStateReceiver: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b1) in <com.csipsimple.pjsip.UAStateReceiver: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10) in <com.csipsimple.pjsip.UAStateReceiver: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)> ==> <com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_reg_state(int)> ==> <com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>
VIRTUAL edge: $r2 = virtualinvoke $r4.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_reg_state(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.pjsip.UAStateReceiver$1: void <init>(com.csipsimple.pjsip.UAStateReceiver,int)>(r0, $i0) in <com.csipsimple.pjsip.UAStateReceiver: void on_reg_state(int)> ==> <com.csipsimple.pjsip.UAStateReceiver$1: void <init>(com.csipsimple.pjsip.UAStateReceiver,int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r1) in <com.csipsimple.pjsip.UAStateReceiver: void on_reg_state(int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_reg_state(int)> ==> <com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>
VIRTUAL edge: $i0 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>("micro_source") in <com.csipsimple.pjsip.UAStateReceiver: int on_set_micro_source()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void setAudioInCall()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_setup_audio()> ==> <com.csipsimple.pjsip.PjSipService: void setAudioInCall()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: void unsetAudioInCall()>() in <com.csipsimple.pjsip.UAStateReceiver: void on_teardown_audio()> ==> <com.csipsimple.pjsip.PjSipService: void unsetAudioInCall()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.pjsip.PjSipService: int validateAudioClockRate(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: int on_validate_audio_clock_rate(int)> ==> <com.csipsimple.pjsip.PjSipService: int validateAudioClockRate(int)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r1) in <com.csipsimple.pjsip.UAStateReceiver: void on_zrtp_show_sas(int,org.pjsip.pjsua.pj_str_t,int)> ==> <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP UA Receiver", $r5) in <com.csipsimple.pjsip.UAStateReceiver: void on_zrtp_show_sas(int,org.pjsip.pjsua.pj_str_t,int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void updateZrtpInfos(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: void on_zrtp_show_sas(int,org.pjsip.pjsua.pj_str_t,int)> ==> <com.csipsimple.pjsip.UAStateReceiver: void updateZrtpInfos(int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void updateZrtpInfos(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: void on_zrtp_update_transport(int)> ==> <com.csipsimple.pjsip.UAStateReceiver: void updateZrtpInfos(int)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.TimerWrapper: int cancel(int,int)>($i0, $i1) in <com.csipsimple.pjsip.UAStateReceiver: int timer_cancel(int,int)> ==> <com.csipsimple.utils.TimerWrapper: int cancel(int,int)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.TimerWrapper: int schedule(int,int,int)>($i0, $i1, $i2) in <com.csipsimple.pjsip.UAStateReceiver: int timer_schedule(int,int,int)> ==> <com.csipsimple.utils.TimerWrapper: int schedule(int,int,int)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: void updateRecordingStatus(int,boolean,boolean)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getCallInfo(java.lang.Integer)>($r2) in <com.csipsimple.pjsip.UAStateReceiver: void updateRecordingStatus(int,boolean,boolean)> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getCallInfo(java.lang.Integer)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.api.SipCallSession: void setCanRecord(boolean)>($z0) in <com.csipsimple.pjsip.UAStateReceiver: void updateRecordingStatus(int,boolean,boolean)> ==> <com.csipsimple.api.SipCallSession: void setCanRecord(boolean)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.api.SipCallSession: void setIsRecording(boolean)>($z1) in <com.csipsimple.pjsip.UAStateReceiver: void updateRecordingStatus(int,boolean,boolean)> ==> <com.csipsimple.api.SipCallSession: void setIsRecording(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.UAStateReceiver: void onBroadcastCallState(com.csipsimple.api.SipCallSession)>($r3) in <com.csipsimple.pjsip.UAStateReceiver: void updateRecordingStatus(int,boolean,boolean)> ==> <com.csipsimple.pjsip.UAStateReceiver: void onBroadcastCallState(com.csipsimple.api.SipCallSession)>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int jzrtp_getCallId(int)>($i0) in <com.csipsimple.pjsip.UAStateReceiver: void updateZrtpInfos(int)> ==> <org.pjsip.pjsua.pjsua: int jzrtp_getCallId(int)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.pjsip.UAStateReceiver: void updateZrtpInfos(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r1.<com.csipsimple.pjsip.UAStateReceiver$2: void <init>(com.csipsimple.pjsip.UAStateReceiver,int)>(r0, $i0) in <com.csipsimple.pjsip.UAStateReceiver: void updateZrtpInfos(int)> ==> <com.csipsimple.pjsip.UAStateReceiver$2: void <init>(com.csipsimple.pjsip.UAStateReceiver,int)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r1) in <com.csipsimple.pjsip.UAStateReceiver: void updateZrtpInfos(int)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $z1 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("1") in <com.csipsimple.utils.ContactsAsyncHelper$WorkerHandler: void handleMessage(android.os.Message)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>("ContactsAsyncHelper", $r11) in <com.csipsimple.utils.ContactsAsyncHelper$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
STATIC edge: $r18 = staticinvoke <com.csipsimple.utils.ContactsAsyncHelper: com.csipsimple.utils.contacts.ContactsWrapper access$0()>() in <com.csipsimple.utils.ContactsAsyncHelper$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.utils.ContactsAsyncHelper: com.csipsimple.utils.contacts.ContactsWrapper access$0()>
STATIC edge: $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.utils.ContactsAsyncHelper$WorkerHandler: void handleMessage(android.os.Message)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String,java.lang.Throwable)>("ContactsAsyncHelper", $r11, r4) in <com.csipsimple.utils.ContactsAsyncHelper$WorkerHandler: void handleMessage(android.os.Message)> ==> <com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.BTone: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.BTone: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.BTone: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.BTone: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_dns_srv", 1) in <com.csipsimple.wizards.impl.BTone: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("override_nameserver", "67.214.119.234") in <com.csipsimple.wizards.impl.BTone: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void endAnimation()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void access$11(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void endAnimation()>
SPECIAL edge: specialinvoke $r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void startAnimation()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void access$6(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void startAnimation()>
SPECIAL edge: $z0 = specialinvoke $r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean delayedAnimationFrame(long)>($l0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean access$9(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,long)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean delayedAnimationFrame(long)>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setFloatValues(float[])>($r0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setFloatValues(float[])>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofInt(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setIntValues(int[])>($r0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofInt(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setIntValues(int[])>
SPECIAL edge: specialinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofObject(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()>
VIRTUAL edge: virtualinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofObject(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>
VIRTUAL edge: virtualinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)>($r0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofObject(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)>
SPECIAL edge: specialinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofPropertyValuesHolder(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()>
VIRTUAL edge: virtualinvoke r1.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>($r0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofPropertyValuesHolder(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void initAnimation()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void startAnimation()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void initAnimation()>
VIRTUAL edge: virtualinvoke $r4.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void calculateValue(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void animateValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void calculateValue(float)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void animateValue(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean animationFrame(long)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void animateValue(float)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void endAnimation()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void cancel()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void endAnimation()>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone()>
SPECIAL edge: $r3 = specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Animator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()>
SPECIAL edge: $r3 = specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()>
VIRTUAL edge: $r10 = virtualinvoke $r10.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()>
VIRTUAL edge: $r11 = virtualinvoke $r10.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getPropertyName()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getPropertyName()>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void animateValue(float)>(0.0F) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void end()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void animateValue(float)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void initAnimation()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void end()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void initAnimation()>
VIRTUAL edge: $r1 = virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.Object getAnimatedValue()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>
VIRTUAL edge: $r3 = virtualinvoke r4.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.Object getAnimatedValue(java.lang.String)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start(boolean)>(1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void reverse()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start(boolean)>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void initAnimation()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setCurrentPlayTime(long)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void initAnimation()>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long)>($l0) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long)>
VIRTUAL edge: virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)>
STATIC edge: r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>("", $r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setFloatValues(float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setFloatValues(float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>
VIRTUAL edge: virtualinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setFloatValues(float[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setFloatValues(float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setFloatValues(float[])>
VIRTUAL edge: virtualinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setIntValues(int[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setIntValues(int[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setIntValues(int[])>
STATIC edge: r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])>("", null, $r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setObjectValues(java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])>
VIRTUAL edge: virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>($r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setObjectValues(java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>
VIRTUAL edge: virtualinvoke r2.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setObjectValues(java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>
STATIC edge: $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3) in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.String toString()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $r2 = virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String toString()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.String toString()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String toString()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.UriUtils: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("@") in <com.csipsimple.utils.UriUtils: boolean isUriNumber(java.lang.String)> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
VIRTUAL edge: $r6 = virtualinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: android.view.animation.Interpolator getInterpolator()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: android.view.animation.Interpolator getInterpolator()>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float)>(0.0F) in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofFloat(float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float,float)>(1.0F, $f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofFloat(float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float,float)>
SPECIAL edge: specialinvoke $r4.<com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe[])>(r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofFloat(float[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe[])>
SPECIAL edge: specialinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe[])>(r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofKeyframe(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe[])>
SPECIAL edge: specialinvoke $r6.<com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe[])>(r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofKeyframe(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe[])>
SPECIAL edge: specialinvoke $r8.<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>($r0) in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofKeyframe(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float)>(0.0F) in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float)>
STATIC edge: $r2 = staticinvoke <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object)>(1.0F, $r4) in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object)>
SPECIAL edge: specialinvoke $r5.<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>(r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>(r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: java.lang.Object clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone()>
VIRTUAL edge: $r1 = virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: android.view.animation.Interpolator getInterpolator()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: java.lang.Object getValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: android.view.animation.Interpolator getInterpolator()>
VIRTUAL edge: $f1 = virtualinvoke $r7.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: float getFraction()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: java.lang.Object getValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: float getFraction()>
STATIC edge: r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: java.lang.String toString()> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.csipsimple.pjsip.UAStateReceiver: boolean handleHeadsetButton()>() in <com.csipsimple.service.HeadsetButtonReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.pjsip.UAStateReceiver: boolean handleHeadsetButton()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Pozitel: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Pozitel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>("stun.pozitel.com") in <com.csipsimple.wizards.impl.Pozitel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void: void <init>()>
STATIC edge: $r4 = staticinvoke <com.csipsimple.widgets.ShortcutWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)>($r0, i0) in <com.csipsimple.widgets.ShortcutWidgetProvider: void updateWidget(android.content.Context)> ==> <com.csipsimple.widgets.ShortcutWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Pbxes: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Pbxes: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Pbxes: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("tsx_t1_timeout", "1000") in <com.csipsimple.wizards.impl.Pbxes: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.service.PresenceManager: void access$0(com.csipsimple.service.PresenceManager)>($r1) in <com.csipsimple.service.PresenceManager$AccountStatusContentObserver: void onChange(boolean)> ==> <com.csipsimple.service.PresenceManager: void access$0(com.csipsimple.service.PresenceManager)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter: void <init>(com.actionbarsherlock.widget.ActivityChooserModel)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter: void <init>(com.actionbarsherlock.widget.ActivityChooserModel)>($r1) in <com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter)> ==> <com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter: void <init>(com.actionbarsherlock.widget.ActivityChooserModel)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("AudioFocus 8", $r2) in <com.csipsimple.utils.audio.AudioFocus8: void focus()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<com.csipsimple.service.SipService: com.csipsimple.pjsip.UAStateReceiver getUAStateReceiver()>() in <com.csipsimple.utils.audio.AudioFocus8: void focus()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.UAStateReceiver getUAStateReceiver()>
STATIC edge: staticinvoke <com.csipsimple.service.HeadsetButtonReceiver: void setService(com.csipsimple.pjsip.UAStateReceiver)>($r4) in <com.csipsimple.utils.audio.AudioFocus8: void focus()> ==> <com.csipsimple.service.HeadsetButtonReceiver: void setService(com.csipsimple.pjsip.UAStateReceiver)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.Compatibility: int getInCallStream()>() in <com.csipsimple.utils.audio.AudioFocus8: void focus()> ==> <com.csipsimple.utils.Compatibility: int getInCallStream()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.service.receiver.DynamicReceiver4: void onReceiveInternal(android.content.Context,android.content.Intent,boolean)>($r1, $r2, $z0) in <com.csipsimple.service.receiver.DynamicReceiver4: void access$0(com.csipsimple.service.receiver.DynamicReceiver4,android.content.Context,android.content.Intent,boolean)> ==> <com.csipsimple.service.receiver.DynamicReceiver4: void onReceiveInternal(android.content.Context,android.content.Intent,boolean)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("DynamicReceiver", $r5) in <com.csipsimple.service.receiver.DynamicReceiver4: void onReceiveInternal(android.content.Context,android.content.Intent,boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("android.net.conn.CONNECTIVITY_CHANGE") in <com.csipsimple.service.receiver.DynamicReceiver4: void onReceiveInternal(android.content.Context,android.content.Intent,boolean)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)>($r8, $z0) in <com.csipsimple.service.receiver.DynamicReceiver4: void onReceiveInternal(android.content.Context,android.content.Intent,boolean)> ==> <com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)>
VIRTUAL edge: $r10 = virtualinvoke $r9.<com.csipsimple.service.SipService: com.csipsimple.api.SipProfile getAccount(long)>($l0) in <com.csipsimple.service.receiver.DynamicReceiver4: void onReceiveInternal(android.content.Context,android.content.Intent,boolean)> ==> <com.csipsimple.service.SipService: com.csipsimple.api.SipProfile getAccount(long)>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.service.SipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)>($r10, $b1, 1) in <com.csipsimple.service.receiver.DynamicReceiver4: void onReceiveInternal(android.content.Context,android.content.Intent,boolean)> ==> <com.csipsimple.service.SipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.service.SipService: void unregisterForOutgoing(android.content.ComponentName)>($r12) in <com.csipsimple.service.receiver.DynamicReceiver4: void onReceiveInternal(android.content.Context,android.content.Intent,boolean)> ==> <com.csipsimple.service.SipService: void unregisterForOutgoing(android.content.ComponentName)>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.service.SipService: void deferUnregisterForOutgoing(android.content.ComponentName)>($r12) in <com.csipsimple.service.receiver.DynamicReceiver4: void onReceiveInternal(android.content.Context,android.content.Intent,boolean)> ==> <com.csipsimple.service.SipService: void deferUnregisterForOutgoing(android.content.ComponentName)>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.service.SipService: void cleanStop()>() in <com.csipsimple.service.receiver.DynamicReceiver4: void onReceiveInternal(android.content.Context,android.content.Intent,boolean)> ==> <com.csipsimple.service.SipService: void cleanStop()>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.service.SipService: void restartSipStack()>() in <com.csipsimple.service.receiver.DynamicReceiver4: void onReceiveInternal(android.content.Context,android.content.Intent,boolean)> ==> <com.csipsimple.service.SipService: void restartSipStack()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3) in <com.csipsimple.service.receiver.DynamicReceiver4: boolean compatIsInitialStickyBroadcast(android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $r4 = virtualinvoke $r5.<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>() in <com.csipsimple.service.receiver.DynamicReceiver4: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.receiver.DynamicReceiver4$1: void <init>(com.csipsimple.service.receiver.DynamicReceiver4,android.content.Context,android.content.Intent)>(r0, $r1, $r2) in <com.csipsimple.service.receiver.DynamicReceiver4: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.service.receiver.DynamicReceiver4$1: void <init>(com.csipsimple.service.receiver.DynamicReceiver4,android.content.Context,android.content.Intent)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>($r3) in <com.csipsimple.service.receiver.DynamicReceiver4: void onReceive(android.content.Context,android.content.Intent)> ==> <com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
VIRTUAL edge: $r3 = virtualinvoke $r2.<com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>() in <com.csipsimple.utils.audio.AudioFocus3: void pauseMusic()> ==> <com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("integrate_with_native_music") in <com.csipsimple.utils.audio.AudioFocus3: void pauseMusic()> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("AudioFocus3", "Register media button") in <com.csipsimple.utils.audio.AudioFocus3: void registerHeadsetButton()> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r3.<com.csipsimple.service.HeadsetButtonReceiver: void <init>()>() in <com.csipsimple.utils.audio.AudioFocus3: void registerHeadsetButton()> ==> <com.csipsimple.service.HeadsetButtonReceiver: void <init>()>
VIRTUAL edge: $r2 = virtualinvoke $r4.<com.csipsimple.service.SipService: com.csipsimple.pjsip.UAStateReceiver getUAStateReceiver()>() in <com.csipsimple.utils.audio.AudioFocus3: void registerHeadsetButton()> ==> <com.csipsimple.service.SipService: com.csipsimple.pjsip.UAStateReceiver getUAStateReceiver()>
STATIC edge: staticinvoke <com.csipsimple.service.HeadsetButtonReceiver: void setService(com.csipsimple.pjsip.UAStateReceiver)>($r2) in <com.csipsimple.utils.audio.AudioFocus3: void registerHeadsetButton()> ==> <com.csipsimple.service.HeadsetButtonReceiver: void setService(com.csipsimple.pjsip.UAStateReceiver)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.audio.AudioFocus3: void pauseMusic()>() in <com.csipsimple.utils.audio.AudioFocus3: void focus()> ==> <com.csipsimple.utils.audio.AudioFocus3: void pauseMusic()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.utils.audio.AudioFocus3: void registerHeadsetButton()>() in <com.csipsimple.utils.audio.AudioFocus3: void focus()> ==> <com.csipsimple.utils.audio.AudioFocus3: void registerHeadsetButton()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Advanced: void <init>()>() in <com.csipsimple.wizards.impl.VoipLlama: void <init>()> ==> <com.csipsimple.wizards.impl.Advanced: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.Advanced: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.VoipLlama: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Advanced: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>() in <com.csipsimple.wizards.impl.VoipLlama: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String trim()>
STATIC edge: $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) in <com.csipsimple.wizards.impl.VoipLlama: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>($r4) in <com.csipsimple.wizards.impl.VoipLlama: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.csipsimple.wizards.impl.VoipLlama: java.lang.String getDomain()>() in <com.csipsimple.wizards.impl.VoipLlama: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.VoipLlama: java.lang.String getDomain()>
STATIC edge: $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) in <com.csipsimple.wizards.impl.VoipLlama: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.VoipLlama: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.VoipLlama: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.VoipLlama: boolean checkField(android.preference.Preference,boolean)>($r1, $z0) in <com.csipsimple.wizards.impl.VoipLlama: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Advanced: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.VoipLlama: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Advanced: void fillLayout(com.csipsimple.api.SipProfile)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.VoipLlama: void hidePreference(java.lang.String,java.lang.String)>(null, "use_tcp") in <com.csipsimple.wizards.impl.VoipLlama: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void hidePreference(java.lang.String,java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.csipsimple.wizards.impl.VoipLlama: java.lang.String getDefaultName()>() in <com.csipsimple.wizards.impl.VoipLlama: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.VoipLlama: java.lang.String getDefaultName()>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131427920) in <com.csipsimple.wizards.impl.Local$1: void <init>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: java.lang.Object access$1(com.csipsimple.ui.incall.InCallActivity)>($r2) in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean hasNoMoreActiveCall()> ==> <com.csipsimple.ui.incall.InCallActivity: java.lang.Object access$1(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession[] access$7(com.csipsimple.ui.incall.InCallActivity)>($r2) in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean hasNoMoreActiveCall()> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession[] access$7(com.csipsimple.ui.incall.InCallActivity)>
VIRTUAL edge: $z0 = virtualinvoke r1.<com.csipsimple.api.SipCallSession: boolean isAfterEnded()>() in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean hasNoMoreActiveCall()> ==> <com.csipsimple.api.SipCallSession: boolean isAfterEnded()>
VIRTUAL edge: $z1 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isLocalHeld()>() in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean isValidCallForAdapter(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: boolean isLocalHeld()>
VIRTUAL edge: z0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: boolean isAfterEnded()>() in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean isValidCallForAdapter(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: boolean isAfterEnded()>
SPECIAL edge: z0 = specialinvoke r0.<com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean hasNoMoreActiveCall()>() in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean isValidCallForAdapter(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean hasNoMoreActiveCall()>
VIRTUAL edge: $i1 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getCallId()>() in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean isValidCallForAdapter(com.csipsimple.api.SipCallSession)> ==> <com.csipsimple.api.SipCallSession: int getCallId()>
STATIC edge: $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean isValidCallForAdapter(com.csipsimple.api.SipCallSession)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: java.lang.Object access$1(com.csipsimple.ui.incall.InCallActivity)>($r2) in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: int getCount()> ==> <com.csipsimple.ui.incall.InCallActivity: java.lang.Object access$1(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession[] access$7(com.csipsimple.ui.incall.InCallActivity)>($r2) in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: int getCount()> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession[] access$7(com.csipsimple.ui.incall.InCallActivity)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean isValidCallForAdapter(com.csipsimple.api.SipCallSession)>(r1) in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: int getCount()> ==> <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean isValidCallForAdapter(com.csipsimple.api.SipCallSession)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: java.lang.Object access$1(com.csipsimple.ui.incall.InCallActivity)>($r1) in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: java.lang.Object getItem(int)> ==> <com.csipsimple.ui.incall.InCallActivity: java.lang.Object access$1(com.csipsimple.ui.incall.InCallActivity)>
STATIC edge: $r3 = staticinvoke <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession[] access$7(com.csipsimple.ui.incall.InCallActivity)>($r1) in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: java.lang.Object getItem(int)> ==> <com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession[] access$7(com.csipsimple.ui.incall.InCallActivity)>
SPECIAL edge: $z0 = specialinvoke r0.<com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean isValidCallForAdapter(com.csipsimple.api.SipCallSession)>(r4) in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: java.lang.Object getItem(int)> ==> <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean isValidCallForAdapter(com.csipsimple.api.SipCallSession)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.ui.incall.InCallActivity$CallsAdapter: java.lang.Object getItem(int)>($i0) in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: long getItemId(int)> ==> <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: java.lang.Object getItem(int)>
VIRTUAL edge: $i0 = virtualinvoke r2.<com.csipsimple.api.SipCallSession: int getCallId()>() in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: long getItemId(int)> ==> <com.csipsimple.api.SipCallSession: int getCallId()>
SPECIAL edge: specialinvoke r4.<com.csipsimple.ui.incall.InCallCard: void <init>(android.content.Context,android.util.AttributeSet)>($r3, null) in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.ui.incall.InCallCard: void <init>(android.content.Context,android.util.AttributeSet)>
VIRTUAL edge: virtualinvoke r4.<com.csipsimple.ui.incall.InCallCard: void setOnTriggerListener(com.csipsimple.ui.incall.IOnCallActionTrigger)>($r3) in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.ui.incall.InCallCard: void setOnTriggerListener(com.csipsimple.ui.incall.IOnCallActionTrigger)>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.ui.incall.InCallActivity$CallsAdapter: java.lang.Object getItem(int)>($i0) in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: java.lang.Object getItem(int)>
VIRTUAL edge: $i0 = virtualinvoke r6.<com.csipsimple.api.SipCallSession: int getCallState()>() in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.api.SipCallSession: int getCallState()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("InCallActivity", $r8) in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r4.<com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)>(r6) in <com.csipsimple.ui.incall.InCallActivity$CallsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ==> <com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2131427920) in <com.csipsimple.wizards.impl.Basic$1: void <init>()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.Compatibility: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r1.<com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>($r0) in <com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>
VIRTUAL edge: $i0 = virtualinvoke r1.<com.csipsimple.utils.PreferencesWrapper: int getGsmIntegrationType()>() in <com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)> ==> <com.csipsimple.utils.PreferencesWrapper: int getGsmIntegrationType()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)>($r0) in <com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)> ==> <com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(5) in <com.csipsimple.utils.Compatibility: android.content.Intent getContactPhoneIntent()> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>() in <com.csipsimple.utils.Compatibility: int getDefaultAudioImplementation()> ==> <java.lang.String: java.lang.String toLowerCase()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("picasso") in <com.csipsimple.utils.Compatibility: int getDefaultAudioImplementation()> ==> <java.lang.String: boolean startsWith(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("olympus") in <com.csipsimple.utils.Compatibility: java.lang.String getDefaultFrequency()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>() in <com.csipsimple.utils.Compatibility: java.lang.String getDefaultFrequency()> ==> <java.lang.String: java.lang.String toUpperCase()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("GT-P1010") in <com.csipsimple.utils.Compatibility: java.lang.String getDefaultFrequency()> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>() in <com.csipsimple.utils.Compatibility: java.lang.String getDefaultMicroSource()> ==> <java.lang.String: java.lang.String toUpperCase()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("GT-I9100") in <com.csipsimple.utils.Compatibility: java.lang.String getDefaultMicroSource()> ==> <java.lang.String: boolean startsWith(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("archos") in <com.csipsimple.utils.Compatibility: int getInCallStream()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>() in <com.csipsimple.utils.Compatibility: java.lang.String guessInCallMode()> ==> <java.lang.String: java.lang.String toUpperCase()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("GT-I9100") in <com.csipsimple.utils.Compatibility: java.lang.String guessInCallMode()> ==> <java.lang.String: boolean startsWith(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sdg") in <com.csipsimple.utils.Compatibility: java.lang.String guessInCallMode()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("/data/") in <com.csipsimple.utils.Compatibility: boolean isInstalledOnSdCard(android.content.Context)> ==> <java.lang.String: boolean startsWith(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>($r7) in <com.csipsimple.utils.Compatibility: boolean isInstalledOnSdCard(android.content.Context)> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("vivo") in <com.csipsimple.utils.Compatibility: boolean needPspWorkaround()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>() in <com.csipsimple.utils.Compatibility: boolean needPspWorkaround()> ==> <java.lang.String: java.lang.String toLowerCase()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("htc") in <com.csipsimple.utils.Compatibility: boolean needPspWorkaround()> ==> <java.lang.String: boolean startsWith(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("milestone2") in <com.csipsimple.utils.Compatibility: boolean needPspWorkaround()> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>() in <com.csipsimple.utils.Compatibility: boolean needSGSWorkaround()> ==> <java.lang.String: java.lang.String toUpperCase()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("GT-I9000") in <com.csipsimple.utils.Compatibility: boolean needSGSWorkaround()> ==> <java.lang.String: boolean startsWith(java.lang.String)>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>() in <com.csipsimple.utils.Compatibility: boolean needToneWorkaround()> ==> <java.lang.String: java.lang.String toLowerCase()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("gt-i5800") in <com.csipsimple.utils.Compatibility: boolean needToneWorkaround()> ==> <java.lang.String: boolean startsWith(java.lang.String)>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>() in <com.csipsimple.utils.Compatibility: boolean needWebRTCImplementation()> ==> <java.lang.String: java.lang.String toLowerCase()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("droid2") in <com.csipsimple.utils.Compatibility: boolean needWebRTCImplementation()> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void startEditing()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void startEditing()>
STATIC edge: staticinvoke <com.csipsimple.utils.Compatibility: void resetCodecsSettings(com.csipsimple.utils.PreferencesWrapper)>($r0) in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: void resetCodecsSettings(com.csipsimple.utils.PreferencesWrapper)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Compatibility: java.lang.String getCpuAbi()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: java.lang.String getCpuAbi()>
VIRTUAL edge: $z1 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("armeabi-v7a") in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("snd_media_quality", $r1) in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(4) in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Compatibility: java.lang.String getDefaultFrequency()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: java.lang.String getDefaultFrequency()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean needPspWorkaround()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: boolean needPspWorkaround()>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("keep_awake_incall", $z1) in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: android.content.Context getContext()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: android.content.Context getContext()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isTabletScreen(android.content.Context)>($r2) in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: boolean isTabletScreen(android.content.Context)>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <java.lang.String: java.lang.String toUpperCase()>
VIRTUAL edge: $z1 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("GT-I9000") in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <java.lang.String: boolean startsWith(java.lang.String)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceFloatValue(java.lang.String,float)>("snd_mic_level", 0.4F) in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceFloatValue(java.lang.String,float)>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean shouldUseRoutingApi()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: boolean shouldUseRoutingApi()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean shouldUseModeApi()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: boolean shouldUseModeApi()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean needToneWorkaround()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: boolean needToneWorkaround()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean needSGSWorkaround()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: boolean needSGSWorkaround()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Compatibility: java.lang.String guessInCallMode()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: java.lang.String guessInCallMode()>
STATIC edge: $r1 = staticinvoke <com.csipsimple.utils.Compatibility: java.lang.String getDefaultMicroSource()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: java.lang.String getDefaultMicroSource()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean needWebRTCImplementation()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: boolean needWebRTCImplementation()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean shouldFocusAudio()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: boolean shouldFocusAudio()>
STATIC edge: $z1 = staticinvoke <com.csipsimple.utils.Compatibility: boolean shouldUsePriviledgedIntegration(android.content.Context)>($r2) in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: boolean shouldUsePriviledgedIntegration(android.content.Context)>
STATIC edge: $i0 = staticinvoke <com.csipsimple.utils.Compatibility: int getDefaultAudioImplementation()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.Compatibility: int getDefaultAudioImplementation()>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0) in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <java.lang.Integer: java.lang.String toString(int)>
VIRTUAL edge: virtualinvoke $r0.<com.csipsimple.utils.PreferencesWrapper: void endEditing()>() in <com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void endEditing()>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>() in <com.csipsimple.utils.Compatibility: boolean shouldFocusAudio()> ==> <java.lang.String: java.lang.String toLowerCase()>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("endeavoru") in <com.csipsimple.utils.Compatibility: boolean shouldFocusAudio()> ==> <java.lang.String: boolean startsWith(java.lang.String)>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>() in <com.csipsimple.utils.Compatibility: boolean shouldFocusAudio()> ==> <java.lang.String: java.lang.String toUpperCase()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("blade") in <com.csipsimple.utils.Compatibility: boolean shouldUseModeApi()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>() in <com.csipsimple.utils.Compatibility: boolean shouldUseModeApi()> ==> <java.lang.String: java.lang.String toUpperCase()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("GT-S") in <com.csipsimple.utils.Compatibility: boolean shouldUseModeApi()> ==> <java.lang.String: boolean startsWith(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>() in <com.csipsimple.utils.Compatibility: boolean shouldUseModeApi()> ==> <java.lang.String: java.lang.String toLowerCase()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("htc_supersonic") in <com.csipsimple.utils.Compatibility: boolean shouldUseRoutingApi()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>() in <com.csipsimple.utils.Compatibility: boolean shouldUseRoutingApi()> ==> <java.lang.String: java.lang.String toUpperCase()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("GT-S") in <com.csipsimple.utils.Compatibility: boolean shouldUseRoutingApi()> ==> <java.lang.String: boolean startsWith(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("archos") in <com.csipsimple.utils.Compatibility: boolean useFlipAnimation()> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.WiMobile: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.WiMobile: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>("enable_stun", 1) in <com.csipsimple.wizards.impl.WiMobile: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("stun_server", "stun.wimobile.it") in <com.csipsimple.wizards.impl.WiMobile: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r2.<com.csipsimple.ui.account.AccountsEditListAdapter$AccountListItemViews: void <init>()>() in <com.csipsimple.ui.account.AccountsEditListAdapter: com.csipsimple.ui.account.AccountsEditListAdapter$AccountListItemViews tagRowView(android.view.View)> ==> <com.csipsimple.ui.account.AccountsEditListAdapter$AccountListItemViews: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>(r0) in <com.csipsimple.ui.account.AccountsEditListAdapter: com.csipsimple.ui.account.AccountsEditListAdapter$AccountListItemViews tagRowView(android.view.View)> ==> <com.csipsimple.ui.account.AccountsEditListAdapter: void onClick(android.view.View)>
SPECIAL edge: r7 = specialinvoke r0.<com.csipsimple.ui.account.AccountsEditListAdapter: com.csipsimple.ui.account.AccountsEditListAdapter$AccountListItemViews tagRowView(android.view.View)>($r1) in <com.csipsimple.ui.account.AccountsEditListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.account.AccountsEditListAdapter: com.csipsimple.ui.account.AccountsEditListAdapter$AccountListItemViews tagRowView(android.view.View)>
SPECIAL edge: specialinvoke r4.<com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>($r3) in <com.csipsimple.ui.account.AccountsEditListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>
SPECIAL edge: specialinvoke r5.<com.csipsimple.ui.account.AccountsEditListAdapter$AccountRowTag: void <init>()>() in <com.csipsimple.ui.account.AccountsEditListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.ui.account.AccountsEditListAdapter$AccountRowTag: void <init>()>
STATIC edge: $r10 = staticinvoke <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)>($r2, $l1) in <com.csipsimple.ui.account.AccountsEditListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)>
STATIC edge: $r13 = staticinvoke <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)>($r9) in <com.csipsimple.ui.account.AccountsEditListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)> ==> <com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("AccEditListAd", "Clicked on ...") in <com.csipsimple.ui.account.AccountsEditListAdapter: void onClick(android.view.View)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.account.AccountsEditListAdapter: void setDraggable(boolean)>($z0) in <com.csipsimple.ui.account.AccountsEditListAdapter: void toggleDraggable()> ==> <com.csipsimple.ui.account.AccountsEditListAdapter: void setDraggable(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Catitel: void <init>()> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Catitel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.Catitel: java.lang.String getDefaultName()>() in <com.csipsimple.wizards.impl.Catitel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Catitel: java.lang.String getDefaultName()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3) in <com.csipsimple.wizards.impl.Catitel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.wizards.impl.Catitel: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.SimpleImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>($r1) in <com.csipsimple.wizards.impl.Catitel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1) in <com.csipsimple.wizards.impl.Catitel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <java.lang.Integer: java.lang.String toString(int)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>("dtmf_mode", $r2) in <com.csipsimple.wizards.impl.Catitel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)> ==> <com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>($r1) in <com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe[])> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe[])>(r2) in <com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe[])>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet clone()>
VIRTUAL edge: $f1 = virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: float getFloatValue()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: float getFloatValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: float getFloatValue()>
STATIC edge: $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1) in <com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: float getFloatValue(float)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
VIRTUAL edge: $f3 = virtualinvoke $r3.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: float getFraction()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: float getFloatValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: float getFraction()>
VIRTUAL edge: $r4 = virtualinvoke r9.<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: android.view.animation.Interpolator getInterpolator()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: float getFloatValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: android.view.animation.Interpolator getInterpolator()>
VIRTUAL edge: $f0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: float getFloatValue(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: java.lang.Object getValue(float)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: float getFloatValue(float)>
STATIC edge: $r1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) in <com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: java.lang.Object getValue(float)> ==> <java.lang.Float: java.lang.Float valueOf(float)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.warnings.WarningFragment: void bindView()>() in <com.csipsimple.ui.warnings.WarningFragment: void setWarningList(java.util.List)> ==> <com.csipsimple.ui.warnings.WarningFragment: void bindView()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.widgets.CheckableListItemView: void setChecked(boolean)>($z0) in <com.csipsimple.widgets.CheckableListItemView: void toggle()> ==> <com.csipsimple.widgets.CheckableListItemView: void setChecked(boolean)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.SipHome: void sendFragmentVisibilityChange(int,boolean)>($i0, $z0) in <com.csipsimple.ui.SipHome: void access$1(com.csipsimple.ui.SipHome,int,boolean)> ==> <com.csipsimple.ui.SipHome: void sendFragmentVisibilityChange(int,boolean)>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.ui.SipHome: void disconnect(boolean)>($z0) in <com.csipsimple.ui.SipHome: void access$6(com.csipsimple.ui.SipHome,boolean)> ==> <com.csipsimple.ui.SipHome: void disconnect(boolean)>
VIRTUAL edge: virtualinvoke $r2.<com.actionbarsherlock.app.ActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)>($r9) in <com.csipsimple.ui.SipHome: void applyTheme()> ==> <com.actionbarsherlock.app.ActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.warnings.WarningFragment: void setWarningList(java.util.List)>(r1) in <com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()> ==> <com.csipsimple.ui.warnings.WarningFragment: void setWarningList(java.util.List)>
VIRTUAL edge: virtualinvoke $r4.<com.csipsimple.ui.warnings.WarningFragment: void setOnWarningChangedListener(com.csipsimple.ui.warnings.WarningUtils$OnWarningChanged)>(r0) in <com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()> ==> <com.csipsimple.ui.warnings.WarningFragment: void setOnWarningChangedListener(com.csipsimple.ui.warnings.WarningUtils$OnWarningChanged)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("com.csipsimple.phone.action.DIALER") in <com.csipsimple.ui.SipHome: void selectTabWithAction(android.content.Intent)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean)>(1) in <com.csipsimple.ui.SipHome: void selectTabWithAction(android.content.Intent)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean)>
VIRTUAL edge: virtualinvoke $r9.<com.csipsimple.ui.dialpad.DialerFragment: void setTextFieldValue(java.lang.CharSequence)>($r2) in <com.csipsimple.ui.SipHome: void selectTabWithAction(android.content.Intent)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void setTextFieldValue(java.lang.CharSequence)>
SPECIAL edge: $r2 = specialinvoke r0.<com.csipsimple.ui.SipHome: android.support.v4.app.Fragment getFragmentAt(int)>($i0) in <com.csipsimple.ui.SipHome: android.support.v4.app.Fragment getCurrentFragment()> ==> <com.csipsimple.ui.SipHome: android.support.v4.app.Fragment getFragmentAt(int)>
VIRTUAL edge: r3 = virtualinvoke $r4.<com.csipsimple.ui.SipHome$TabsAdapter: java.lang.Integer getIdForPosition(int)>($i0) in <com.csipsimple.ui.SipHome: void onAttachFragment(android.support.v4.app.Fragment)> ==> <com.csipsimple.ui.SipHome$TabsAdapter: java.lang.Integer getIdForPosition(int)>
VIRTUAL edge: virtualinvoke r5.<com.csipsimple.ui.dialpad.DialerFragment: void onVisibilityChanged(boolean)>(1) in <com.csipsimple.ui.SipHome: void onAttachFragment(android.support.v4.app.Fragment)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void onVisibilityChanged(boolean)>
VIRTUAL edge: virtualinvoke r7.<com.csipsimple.ui.calllog.CallLogListFragment: void onVisibilityChanged(boolean)>(1) in <com.csipsimple.ui.SipHome: void onAttachFragment(android.support.v4.app.Fragment)> ==> <com.csipsimple.ui.calllog.CallLogListFragment: void onVisibilityChanged(boolean)>
VIRTUAL edge: virtualinvoke r8.<com.csipsimple.ui.messages.ConversationsListFragment: void onVisibilityChanged(boolean)>(1) in <com.csipsimple.ui.SipHome: void onAttachFragment(android.support.v4.app.Fragment)> ==> <com.csipsimple.ui.messages.ConversationsListFragment: void onVisibilityChanged(boolean)>
VIRTUAL edge: virtualinvoke r9.<com.csipsimple.ui.favorites.FavListFragment: void onVisibilityChanged(boolean)>(1) in <com.csipsimple.ui.SipHome: void onAttachFragment(android.support.v4.app.Fragment)> ==> <com.csipsimple.ui.favorites.FavListFragment: void onVisibilityChanged(boolean)>
VIRTUAL edge: virtualinvoke r10.<com.csipsimple.ui.warnings.WarningFragment: void setWarningList(java.util.List)>($r12) in <com.csipsimple.ui.SipHome: void onAttachFragment(android.support.v4.app.Fragment)> ==> <com.csipsimple.ui.warnings.WarningFragment: void setWarningList(java.util.List)>
VIRTUAL edge: virtualinvoke r10.<com.csipsimple.ui.warnings.WarningFragment: void setOnWarningChangedListener(com.csipsimple.ui.warnings.WarningUtils$OnWarningChanged)>(r0) in <com.csipsimple.ui.SipHome: void onAttachFragment(android.support.v4.app.Fragment)> ==> <com.csipsimple.ui.warnings.WarningFragment: void setOnWarningChangedListener(com.csipsimple.ui.warnings.WarningUtils$OnWarningChanged)>
VIRTUAL edge: virtualinvoke $r18.<java.lang.Thread: void start()>() in <com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)> ==> <java.lang.Thread: void run()>
STATIC edge: $r3 = staticinvoke <com.csipsimple.utils.CustomDistribution: com.csipsimple.wizards.WizardUtils$WizardInfo getCustomDistributionWizard()>() in <com.csipsimple.ui.SipHome: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.csipsimple.utils.CustomDistribution: com.csipsimple.wizards.WizardUtils$WizardInfo getCustomDistributionWizard()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.CustomDistribution: boolean distributionWantsOtherAccounts()>() in <com.csipsimple.ui.SipHome: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.csipsimple.utils.CustomDistribution: boolean distributionWantsOtherAccounts()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>(13) in <com.csipsimple.ui.SipHome: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>($r1) in <com.csipsimple.ui.SipHome: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.SipHome: void selectTabWithAction(android.content.Intent)>($r1) in <com.csipsimple.ui.SipHome: void onNewIntent(android.content.Intent)> ==> <com.csipsimple.ui.SipHome: void selectTabWithAction(android.content.Intent)>
SPECIAL edge: $z0 = specialinvoke r0.<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>($r1) in <com.csipsimple.ui.SipHome: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.actionbarsherlock.app.SherlockFragmentActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("SIP_HOME", "CLOSE") in <com.csipsimple.ui.SipHome: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForIncoming()>() in <com.csipsimple.ui.SipHome: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForIncoming()>
SPECIAL edge: specialinvoke $r7.<com.csipsimple.ui.SipHome$4: void <init>(com.csipsimple.ui.SipHome)>(r0) in <com.csipsimple.ui.SipHome: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.SipHome$4: void <init>(com.csipsimple.ui.SipHome)>
VIRTUAL edge: $r8 = virtualinvoke $r5.<com.csipsimple.utils.PreferencesProviderWrapper: java.util.ArrayList getAllIncomingNetworks()>() in <com.csipsimple.ui.SipHome: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.util.ArrayList getAllIncomingNetworks()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.SipHome: void disconnect(boolean)>(1) in <com.csipsimple.ui.SipHome: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.SipHome: void disconnect(boolean)>
STATIC edge: $r11 = staticinvoke <com.csipsimple.ui.help.Help: com.csipsimple.ui.help.Help newInstance()>() in <com.csipsimple.ui.SipHome: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.help.Help: com.csipsimple.ui.help.Help newInstance()>
STATIC edge: $r13 = staticinvoke <com.csipsimple.utils.CustomDistribution: com.csipsimple.wizards.WizardUtils$WizardInfo getCustomDistributionWizard()>() in <com.csipsimple.ui.SipHome: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.utils.CustomDistribution: com.csipsimple.wizards.WizardUtils$WizardInfo getCustomDistributionWizard()>
STATIC edge: $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) in <com.csipsimple.ui.SipHome: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("SIP_HOME", "Error while getting wizard", r2) in <com.csipsimple.ui.SipHome: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.SipHome: void applyWarning(java.lang.String,boolean)>($r1, 0) in <com.csipsimple.ui.SipHome: void onWarningRemoved(java.lang.String)> ==> <com.csipsimple.ui.SipHome: void applyWarning(java.lang.String,boolean)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_info: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_info: void <init>(long,boolean)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_info: void <init>(long,boolean)> ==> <org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_info: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r1) in <com.csipsimple.widgets.DragnDropListView: void doExpansion()> ==> <java.lang.Object: boolean equals(java.lang.Object)>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.widgets.DragnDropListView: int myPointToPosition(int,int)>(0, i1) in <com.csipsimple.widgets.DragnDropListView: int getItemForPosition(int)> ==> <com.csipsimple.widgets.DragnDropListView: int myPointToPosition(int,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.DragnDropListView: void stopDragging()>() in <com.csipsimple.widgets.DragnDropListView: void startDragging(android.graphics.Bitmap,int)> ==> <com.csipsimple.widgets.DragnDropListView: void stopDragging()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("DnD view", $r8) in <com.csipsimple.widgets.DragnDropListView: boolean onInterceptTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.DragnDropListView: void startDragging(android.graphics.Bitmap,int)>($r9, i1) in <com.csipsimple.widgets.DragnDropListView: boolean onInterceptTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.DragnDropListView: void startDragging(android.graphics.Bitmap,int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.DragnDropListView: void stopDragging()>() in <com.csipsimple.widgets.DragnDropListView: boolean onTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.DragnDropListView: void stopDragging()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.DragnDropListView: void unExpandViews(boolean)>(0) in <com.csipsimple.widgets.DragnDropListView: boolean onTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.DragnDropListView: void unExpandViews(boolean)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.DragnDropListView: void dragView(int,int)>(i0, i1) in <com.csipsimple.widgets.DragnDropListView: boolean onTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.DragnDropListView: void dragView(int,int)>
SPECIAL edge: i0 = specialinvoke r0.<com.csipsimple.widgets.DragnDropListView: int getItemForPosition(int)>(i1) in <com.csipsimple.widgets.DragnDropListView: boolean onTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.DragnDropListView: int getItemForPosition(int)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.DragnDropListView: void doExpansion()>() in <com.csipsimple.widgets.DragnDropListView: boolean onTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.DragnDropListView: void doExpansion()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.widgets.DragnDropListView: void adjustScrollBounds(int)>(i1) in <com.csipsimple.widgets.DragnDropListView: boolean onTouchEvent(android.view.MotionEvent)> ==> <com.csipsimple.widgets.DragnDropListView: void adjustScrollBounds(int)>
SPECIAL edge: specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder)>($r1, null) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet)> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder)>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()>
SPECIAL edge: $r1 = specialinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()>
VIRTUAL edge: r0 = virtualinvoke r0.<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone()>() in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()> ==> <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone()>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: java.lang.Object getAnimatedValue()> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.utils.PreferencesProviderWrapper: java.io.File getRecordsFolder(android.content.Context)>($r3) in <com.csipsimple.pjsip.PjSipService: java.io.File getRecordFile(java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: java.io.File getRecordsFolder(android.content.Context)>
SPECIAL edge: $r1 = specialinvoke r0.<com.csipsimple.pjsip.PjSipService: java.lang.String sanitizeForFile(java.lang.String)>($r1) in <com.csipsimple.pjsip.PjSipService: java.io.File getRecordFile(java.lang.String)> ==> <com.csipsimple.pjsip.PjSipService: java.lang.String sanitizeForFile(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", $r1) in <com.csipsimple.pjsip.PjSipService: java.io.File getRecordFile(java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $i2 = virtualinvoke $r2.<java.lang.String: int length()>() in <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)> ==> <java.lang.String: int length()>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[\\.\\\\<>:; \"\'\\*]", "_") in <com.csipsimple.pjsip.PjSipService: java.lang.String sanitizeForFile(java.lang.String)> ==> <java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r4.<com.csipsimple.api.SipProfile: void <init>()>() in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.api.SipProfile: void <init>()>
VIRTUAL edge: $r5 = virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)>(r4) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r5.<com.csipsimple.api.SipProfileState: boolean isAddedToStack()>() in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.api.SipProfileState: boolean isAddedToStack()>
STATIC edge: $i4 = staticinvoke <org.pjsip.pjsua.pjsua: int acc_get_default()>() in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <org.pjsip.pjsua.pjsua: int acc_get_default()>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfile getAccountForPjsipId(int)>($i4) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfile getAccountForPjsipId(int)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.api.SipProfileState: void <init>(android.database.Cursor)>($r10) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.api.SipProfileState: void <init>(android.database.Cursor)>
VIRTUAL edge: $z0 = virtualinvoke r3.<com.csipsimple.api.SipProfileState: boolean isValidForCall()>() in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.api.SipProfileState: boolean isValidForCall()>
VIRTUAL edge: $i4 = virtualinvoke r3.<com.csipsimple.api.SipProfileState: int getAccountId()>() in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.api.SipProfileState: int getAccountId()>
VIRTUAL edge: $i4 = virtualinvoke r3.<com.csipsimple.api.SipProfileState: int getPjsuaId()>() in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.api.SipProfileState: int getPjsuaId()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PjService", "Unable to find a valid account for this call") in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("PjService", "Error on looping over sip profiles state", r2) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r12 = staticinvoke <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>($r1) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", $r1) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: r4 = virtualinvoke $r7.<com.csipsimple.service.SipService: com.csipsimple.api.SipProfile getAccount(long)>($l0) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.service.SipService: com.csipsimple.api.SipProfile getAccount(long)>
VIRTUAL edge: $r1 = virtualinvoke r4.<com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()>() in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()>
VIRTUAL edge: $z0 = virtualinvoke $r15.<java.lang.String: boolean contains(java.lang.CharSequence)>(",") in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
VIRTUAL edge: $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i4) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <java.lang.String: java.lang.String substring(int)>
VIRTUAL edge: $r15 = virtualinvoke $r12.<com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString(boolean)>(0) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString(boolean)>
STATIC edge: $i4 = staticinvoke <org.pjsip.pjsua.pjsua: int verify_sip_url(java.lang.String)>($r15) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <org.pjsip.pjsua.pjsua: int verify_sip_url(java.lang.String)>
STATIC edge: $r16 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>($r15) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
STATIC edge: i1 = staticinvoke <org.pjsip.pjsua.pjsua: int acc_find_for_outgoing(org.pjsip.pjsua.pj_str_t)>($r16) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <org.pjsip.pjsua.pjsua: int acc_find_for_outgoing(org.pjsip.pjsua.pj_str_t)>
STATIC edge: $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke $r17.<com.csipsimple.service.SipService$ToCall: void <init>(java.lang.Integer,java.lang.String,java.lang.String)>($r14, $r15, $r1) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)> ==> <com.csipsimple.service.SipService$ToCall: void <init>(java.lang.Integer,java.lang.String,java.lang.String)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua: int call_is_active(int)>($i0) in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)> ==> <org.pjsip.pjsua.pjsua: int call_is_active(int)>
VIRTUAL edge: $z1 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(",") in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)> ==> <java.lang.String: boolean contains(java.lang.CharSequence)>
VIRTUAL edge: $i3 = virtualinvoke $r1.<java.lang.String: int length()>() in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)> ==> <java.lang.String: int length()>
STATIC edge: $r5 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>(r3) in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: boolean useSipInfoDtmf()>() in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean useSipInfoDtmf()>
STATIC edge: $i3 = staticinvoke <org.pjsip.pjsua.pjsua: int send_dtmf_info(int,org.pjsip.pjsua.pj_str_t)>($i0, $r5) in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)> ==> <org.pjsip.pjsua.pjsua: int send_dtmf_info(int,org.pjsip.pjsua.pj_str_t)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", $r1) in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r2.<com.csipsimple.pjsip.PjSipService$1: void <init>(com.csipsimple.pjsip.PjSipService,int)>(r0, $i0) in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)> ==> <com.csipsimple.pjsip.PjSipService$1: void <init>(com.csipsimple.pjsip.PjSipService,int)>
VIRTUAL edge: virtualinvoke $r8.<java.util.Timer: void schedule(java.util.TimerTask,long)>(r2, $l4) in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)> ==> <java.util.Timer: void schedule(java.util.TimerTask,long)>
STATIC edge: r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r3) in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: boolean forceDtmfInBand()>() in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean forceDtmfInBand()>
STATIC edge: $i3 = staticinvoke <org.pjsip.pjsua.pjsua: int call_dial_dtmf(int,org.pjsip.pjsua.pj_str_t)>($i0, $r5) in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)> ==> <org.pjsip.pjsua.pjsua: int call_dial_dtmf(int,org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<com.csipsimple.utils.PreferencesProviderWrapper: boolean forceDtmfRTP()>() in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean forceDtmfRTP()>
SPECIAL edge: specialinvoke $r11.<com.csipsimple.pjsip.PjStreamDialtoneGenerator: void <init>(int)>($i0) in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)> ==> <com.csipsimple.pjsip.PjStreamDialtoneGenerator: void <init>(int)>
VIRTUAL edge: $i3 = virtualinvoke $r11.<com.csipsimple.pjsip.PjStreamDialtoneGenerator: int sendPjMediaDialTone(java.lang.String)>($r1) in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)> ==> <com.csipsimple.pjsip.PjStreamDialtoneGenerator: int sendPjMediaDialTone(java.lang.String)>
SPECIAL edge: specialinvoke r2.<org.pjsip.pjsua.pjsua_buddy_config: void <init>()>() in <com.csipsimple.pjsip.PjSipService: int addBuddy(java.lang.String)> ==> <org.pjsip.pjsua.pjsua_buddy_config: void <init>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void buddy_config_default(org.pjsip.pjsua.pjsua_buddy_config)>(r2) in <com.csipsimple.pjsip.PjSipService: int addBuddy(java.lang.String)> ==> <org.pjsip.pjsua.pjsua: void buddy_config_default(org.pjsip.pjsua.pjsua_buddy_config)>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.pjsua_buddy_config: void setSubscribe(int)>(1) in <com.csipsimple.pjsip.PjSipService: int addBuddy(java.lang.String)> ==> <org.pjsip.pjsua.pjsua_buddy_config: void setSubscribe(int)>
STATIC edge: $r4 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>($r1) in <com.csipsimple.pjsip.PjSipService: int addBuddy(java.lang.String)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
VIRTUAL edge: virtualinvoke r2.<org.pjsip.pjsua.pjsua_buddy_config: void setUri(org.pjsip.pjsua.pj_str_t)>($r4) in <com.csipsimple.pjsip.PjSipService: int addBuddy(java.lang.String)> ==> <org.pjsip.pjsua.pjsua_buddy_config: void setUri(org.pjsip.pjsua.pj_str_t)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int buddy_add(org.pjsip.pjsua.pjsua_buddy_config,int[])>(r2, r3) in <com.csipsimple.pjsip.PjSipService: int addBuddy(java.lang.String)> ==> <org.pjsip.pjsua.pjsua: int buddy_add(org.pjsip.pjsua.pjsua_buddy_config,int[])>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)>($i0, $i1, 1) in <com.csipsimple.pjsip.PjSipService: void adjustStreamVolume(int,int,int)> ==> <com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)>
SPECIAL edge: specialinvoke r1.<org.pjsip.pjsua.pjsua_call_setting: void <init>()>() in <com.csipsimple.pjsip.PjSipService: int callAnswer(int,int)> ==> <org.pjsip.pjsua.pjsua_call_setting: void <init>()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void call_setting_default(org.pjsip.pjsua.pjsua_call_setting)>(r1) in <com.csipsimple.pjsip.PjSipService: int callAnswer(int,int)> ==> <org.pjsip.pjsua.pjsua: void call_setting_default(org.pjsip.pjsua.pjsua_call_setting)>
VIRTUAL edge: virtualinvoke r1.<org.pjsip.pjsua.pjsua_call_setting: void setAud_cnt(long)>(1L) in <com.csipsimple.pjsip.PjSipService: int callAnswer(int,int)> ==> <org.pjsip.pjsua.pjsua_call_setting: void setAud_cnt(long)>
VIRTUAL edge: $z0 = virtualinvoke $r2.<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>("use_video") in <com.csipsimple.pjsip.PjSipService: int callAnswer(int,int)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<org.pjsip.pjsua.pjsua_call_setting: void setVid_cnt(long)>($l2) in <com.csipsimple.pjsip.PjSipService: int callAnswer(int,int)> ==> <org.pjsip.pjsua.pjsua_call_setting: void setVid_cnt(long)>
VIRTUAL edge: virtualinvoke r1.<org.pjsip.pjsua.pjsua_call_setting: void setFlag(long)>(0L) in <com.csipsimple.pjsip.PjSipService: int callAnswer(int,int)> ==> <org.pjsip.pjsua.pjsua_call_setting: void setFlag(long)>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int call_answer2(int,org.pjsip.pjsua.pjsua_call_setting,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)>($i0, r1, $l2, null, null) in <com.csipsimple.pjsip.PjSipService: int callAnswer(int,int)> ==> <org.pjsip.pjsua.pjsua: int call_answer2(int,org.pjsip.pjsua.pjsua_call_setting,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int call_hangup(int,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)>($i0, $l2, null, null) in <com.csipsimple.pjsip.PjSipService: int callHangup(int,int)> ==> <org.pjsip.pjsua.pjsua: int call_hangup(int,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>($r1) in <com.csipsimple.pjsip.PjSipService: int callXfer(int,java.lang.String)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int call_xfer(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)>($i0, $r2, null) in <com.csipsimple.pjsip.PjSipService: int callXfer(int,java.lang.String)> ==> <org.pjsip.pjsua.pjsua: int call_xfer(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int call_xfer_replaces(int,int,long,org.pjsip.pjsua.pjsua_msg_data)>($i0, $i1, $l3, null) in <com.csipsimple.pjsip.PjSipService: int callXferReplace(int,int,int)> ==> <org.pjsip.pjsua.pjsua: int call_xfer_replaces(int,int,long,org.pjsip.pjsua.pjsua_msg_data)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)>($i0) in <com.csipsimple.pjsip.PjSipService: boolean canRecord(int)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: int getMediaStatus()>() in <com.csipsimple.pjsip.PjSipService: boolean canRecord(int)> ==> <com.csipsimple.api.SipCallSession: int getMediaStatus()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int conf_adjust_rx_level(int,float)>($i0, $f0) in <com.csipsimple.pjsip.PjSipService: void confAdjustRxLevel(int,float)> ==> <org.pjsip.pjsua.pjsua: int conf_adjust_rx_level(int,float)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int conf_adjust_tx_level(int,float)>($i0, $f0) in <com.csipsimple.pjsip.PjSipService: void confAdjustTxLevel(int,float)> ==> <org.pjsip.pjsua.pjsua: int conf_adjust_tx_level(int,float)>
VIRTUAL edge: $l1 = virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: long getAccountIdForPjsipId(int)>($i0) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfile getAccountForPjsipId(int)> ==> <com.csipsimple.pjsip.PjSipService: long getAccountIdForPjsipId(int)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.service.SipService: com.csipsimple.api.SipProfile getAccount(long)>($l1) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfile getAccountForPjsipId(int)> ==> <com.csipsimple.service.SipService: com.csipsimple.api.SipProfile getAccount(long)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", $r7) in <com.csipsimple.pjsip.PjSipService: long getAccountIdForPjsipId(int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("PjService", "Error on looping over sip profiles", r1) in <com.csipsimple.pjsip.PjSipService: long getAccountIdForPjsipId(int)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r3 = virtualinvoke $r1.<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getCallInfo(java.lang.Integer)>($r2) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getCallInfo(java.lang.Integer)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession[] getCalls()>() in <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession[] getCalls()> ==> <com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession[] getCalls()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int conf_get_signal_level(int,long[],long[])>($i0, r2, r1) in <com.csipsimple.pjsip.PjSipService: long getRxTxLevel(int)> ==> <org.pjsip.pjsua.pjsua: int conf_get_signal_level(int,long[],long[])>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua: int call_recording_status(int)>($i0) in <com.csipsimple.pjsip.PjSipService: boolean isRecording(int)> ==> <org.pjsip.pjsua.pjsua: int call_recording_status(int)>
SPECIAL edge: $r7 = specialinvoke r0.<com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)>($r1, $l1) in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)>
VIRTUAL edge: $r1 = virtualinvoke $r7.<com.csipsimple.service.SipService$ToCall: java.lang.String getCallee()>() in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <com.csipsimple.service.SipService$ToCall: java.lang.String getCallee()>
STATIC edge: $r8 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>($r1) in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
SPECIAL edge: specialinvoke r3.<org.pjsip.pjsua.pjsua_call_setting: void <init>()>() in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <org.pjsip.pjsua.pjsua_call_setting: void <init>()>
SPECIAL edge: specialinvoke r5.<org.pjsip.pjsua.pjsua_msg_data: void <init>()>() in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <org.pjsip.pjsua.pjsua_msg_data: void <init>()>
VIRTUAL edge: $r9 = virtualinvoke $r7.<com.csipsimple.service.SipService$ToCall: java.lang.Integer getPjsipAccountId()>() in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <com.csipsimple.service.SipService$ToCall: java.lang.Integer getPjsipAccountId()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void call_setting_default(org.pjsip.pjsua.pjsua_call_setting)>(r3) in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <org.pjsip.pjsua.pjsua: void call_setting_default(org.pjsip.pjsua.pjsua_call_setting)>
VIRTUAL edge: virtualinvoke r3.<org.pjsip.pjsua.pjsua_call_setting: void setAud_cnt(long)>(1L) in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <org.pjsip.pjsua.pjsua_call_setting: void setAud_cnt(long)>
VIRTUAL edge: virtualinvoke r3.<org.pjsip.pjsua.pjsua_call_setting: void setVid_cnt(long)>(0L) in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <org.pjsip.pjsua.pjsua_call_setting: void setVid_cnt(long)>
VIRTUAL edge: virtualinvoke r3.<org.pjsip.pjsua.pjsua_call_setting: void setFlag(long)>(0L) in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <org.pjsip.pjsua.pjsua_call_setting: void setFlag(long)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void msg_data_init(org.pjsip.pjsua.pjsua_msg_data)>(r5) in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <org.pjsip.pjsua.pjsua: void msg_data_init(org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int csipsimple_init_acc_msg_data(int,org.pjsip.pjsua.pjsua_msg_data)>($i0, r5) in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <org.pjsip.pjsua.pjsua: int csipsimple_init_acc_msg_data(int,org.pjsip.pjsua.pjsua_msg_data)>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int call_make_call(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_call_setting,byte[],org.pjsip.pjsua.pjsua_msg_data,int[])>($i0, $r8, r3, r4, r5, r6) in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <org.pjsip.pjsua.pjsua: int call_make_call(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_call_setting,byte[],org.pjsip.pjsua.pjsua_msg_data,int[])>
VIRTUAL edge: $r1 = virtualinvoke $r7.<com.csipsimple.service.SipService$ToCall: java.lang.String getDtmf()>() in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <com.csipsimple.service.SipService$ToCall: java.lang.String getDtmf()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", $r1) in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r14) in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r12.<com.csipsimple.service.SipService: void notifyUserOfMessage(java.lang.String)>($r1) in <com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)> ==> <com.csipsimple.service.SipService: void notifyUserOfMessage(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r4.<com.csipsimple.api.SipCallSession: int getCallId()>() in <com.csipsimple.pjsip.PjSipService: void onGSMStateChanged(int,java.lang.String)> ==> <com.csipsimple.api.SipCallSession: int getCallId()>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: void stopPlaying(int)>($i0) in <com.csipsimple.pjsip.PjSipService: void playWaveFile(java.lang.String,int,int)> ==> <com.csipsimple.pjsip.PjSipService: void stopPlaying(int)>
STATIC edge: $r3 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>($r1) in <com.csipsimple.pjsip.PjSipService: void playWaveFile(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
STATIC edge: i2 = staticinvoke <org.pjsip.pjsua.pjsua: int player_create(org.pjsip.pjsua.pj_str_t,long,int[])>($r3, 1L, r2) in <com.csipsimple.pjsip.PjSipService: void playWaveFile(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua: int player_create(org.pjsip.pjsua.pj_str_t,long,int[])>
STATIC edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2) in <com.csipsimple.pjsip.PjSipService: void playWaveFile(java.lang.String,int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: $i3 = staticinvoke <org.pjsip.pjsua.pjsua: int player_get_conf_port(int)>(i2) in <com.csipsimple.pjsip.PjSipService: void playWaveFile(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua: int player_get_conf_port(int)>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)>($i0) in <com.csipsimple.pjsip.PjSipService: void playWaveFile(java.lang.String,int,int)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)>
VIRTUAL edge: $i0 = virtualinvoke $r6.<com.csipsimple.api.SipCallSession: int getConfPort()>() in <com.csipsimple.pjsip.PjSipService: void playWaveFile(java.lang.String,int,int)> ==> <com.csipsimple.api.SipCallSession: int getConfPort()>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int conf_connect(int,int)>($i3, $i0) in <com.csipsimple.pjsip.PjSipService: void playWaveFile(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua: int conf_connect(int,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int player_set_pos(int,long)>(i2, 0L) in <com.csipsimple.pjsip.PjSipService: void playWaveFile(java.lang.String,int,int)> ==> <org.pjsip.pjsua.pjsua: int player_set_pos(int,long)>
STATIC edge: $r2 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>($r1) in <com.csipsimple.pjsip.PjSipService: void removeBuddy(java.lang.String)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int buddy_find(org.pjsip.pjsua.pj_str_t)>($r2) in <com.csipsimple.pjsip.PjSipService: void removeBuddy(java.lang.String)> ==> <org.pjsip.pjsua.pjsua: int buddy_find(org.pjsip.pjsua.pj_str_t)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int buddy_del(int)>($i0) in <com.csipsimple.pjsip.PjSipService: void removeBuddy(java.lang.String)> ==> <org.pjsip.pjsua.pjsua: int buddy_del(int)>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1) in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,int)> ==> <java.lang.Integer: java.lang.String toString(int)>
SPECIAL edge: $i0 = specialinvoke r0.<com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)>($i0, $r1) in <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,int)> ==> <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)>
SPECIAL edge: $r4 = specialinvoke r0.<com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)>($r1, $l0) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sendMessage(java.lang.String,java.lang.String,long)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)>
VIRTUAL edge: $r1 = virtualinvoke $r4.<com.csipsimple.service.SipService$ToCall: java.lang.String getCallee()>() in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sendMessage(java.lang.String,java.lang.String,long)> ==> <com.csipsimple.service.SipService$ToCall: java.lang.String getCallee()>
STATIC edge: $r5 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>($r1) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sendMessage(java.lang.String,java.lang.String,long)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
VIRTUAL edge: $r7 = virtualinvoke $r4.<com.csipsimple.service.SipService$ToCall: java.lang.Integer getPjsipAccountId()>() in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sendMessage(java.lang.String,java.lang.String,long)> ==> <com.csipsimple.service.SipService$ToCall: java.lang.Integer getPjsipAccountId()>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua: int im_send(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data,byte[])>($i1, $r5, null, $r6, null, r3) in <com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sendMessage(java.lang.String,java.lang.String,long)> ==> <org.pjsip.pjsua.pjsua: int im_send(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data,byte[])>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", $r4) in <com.csipsimple.pjsip.PjSipService: void sendPendingDtmf(int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)>($i0, $r4) in <com.csipsimple.pjsip.PjSipService: void sendPendingDtmf(int)> ==> <com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PjService", "PJSIP is not started here, nothing can be done") in <com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>("PjService", "Trying to set registration on a deleted account") in <com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)> ==> <com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
VIRTUAL edge: $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("LOCAL") in <com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z1 = virtualinvoke $r3.<com.csipsimple.api.SipProfileState: boolean isAddedToStack()>() in <com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)> ==> <com.csipsimple.api.SipProfileState: boolean isAddedToStack()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", "Account already added to stack, remove and re-load or delete") in <com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r3.<com.csipsimple.api.SipProfileState: int getPjsuaId()>() in <com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)> ==> <com.csipsimple.api.SipProfileState: int getPjsuaId()>
STATIC edge: i1 = staticinvoke <org.pjsip.pjsua.pjsua: int acc_del(int)>($i0) in <com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)> ==> <org.pjsip.pjsua.pjsua: int acc_del(int)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)>($r1) in <com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)> ==> <com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $r7 = virtualinvoke $r4.<com.csipsimple.service.SipService: com.csipsimple.api.SipManager$PresenceStatus getPresence()>() in <com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)> ==> <com.csipsimple.service.SipService: com.csipsimple.api.SipManager$PresenceStatus getPresence()>
SPECIAL edge: $i4 = specialinvoke r0.<com.csipsimple.pjsip.PjSipService: int getOnlineForStatus(com.csipsimple.api.SipManager$PresenceStatus)>($r7) in <com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)> ==> <com.csipsimple.pjsip.PjSipService: int getOnlineForStatus(com.csipsimple.api.SipManager$PresenceStatus)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int acc_set_online_status(int,int)>(i1, $i4) in <com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)> ==> <org.pjsip.pjsua.pjsua: int acc_set_online_status(int,int)>
STATIC edge: i1 = staticinvoke <org.pjsip.pjsua.pjsua: int acc_set_registration(int,int)>(i1, $i0) in <com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)> ==> <org.pjsip.pjsua.pjsua: int acc_set_registration(int,int)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.MediaManager: void setAudioInCall()>() in <com.csipsimple.pjsip.PjSipService: void setAudioInCall()> ==> <com.csipsimple.service.MediaManager: void setAudioInCall()>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.MediaManager: void setBluetoothOn(boolean)>($z0) in <com.csipsimple.pjsip.PjSipService: void setBluetoothOn(boolean)> ==> <com.csipsimple.service.MediaManager: void setBluetoothOn(boolean)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", $r3) in <com.csipsimple.pjsip.PjSipService: void setEchoCancellation(boolean)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: $l0 = virtualinvoke $r4.<com.csipsimple.utils.PreferencesProviderWrapper: long getEchoCancellationTail()>() in <com.csipsimple.pjsip.PjSipService: void setEchoCancellation(boolean)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: long getEchoCancellationTail()>
VIRTUAL edge: $i1 = virtualinvoke $r4.<com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>("echo_mode") in <com.csipsimple.pjsip.PjSipService: void setEchoCancellation(boolean)> ==> <com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int set_ec(long,long)>($l0, $l2) in <com.csipsimple.pjsip.PjSipService: void setEchoCancellation(boolean)> ==> <org.pjsip.pjsua.pjsua: int set_ec(long,long)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.MediaManager: void setMicrophoneMute(boolean)>($z0) in <com.csipsimple.pjsip.PjSipService: void setMicrophoneMute(boolean)> ==> <com.csipsimple.service.MediaManager: void setMicrophoneMute(boolean)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pjmedia_port set_no_snd_dev()>() in <com.csipsimple.pjsip.PjSipService: void setNoSnd()> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pjmedia_port set_no_snd_dev()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("PjService", "PJSIP is not started here, nothing can be done") in <com.csipsimple.pjsip.PjSipService: void setPresence(com.csipsimple.api.SipManager$PresenceStatus,java.lang.String,long)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r3.<com.csipsimple.api.SipProfile: void <init>()>() in <com.csipsimple.pjsip.PjSipService: void setPresence(com.csipsimple.api.SipManager$PresenceStatus,java.lang.String,long)> ==> <com.csipsimple.api.SipProfile: void <init>()>
VIRTUAL edge: $r4 = virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)>(r3) in <com.csipsimple.pjsip.PjSipService: void setPresence(com.csipsimple.api.SipManager$PresenceStatus,java.lang.String,long)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)>
VIRTUAL edge: $z0 = virtualinvoke $r4.<com.csipsimple.api.SipProfileState: boolean isAddedToStack()>() in <com.csipsimple.pjsip.PjSipService: void setPresence(com.csipsimple.api.SipManager$PresenceStatus,java.lang.String,long)> ==> <com.csipsimple.api.SipProfileState: boolean isAddedToStack()>
VIRTUAL edge: $i1 = virtualinvoke $r4.<com.csipsimple.api.SipProfileState: int getPjsuaId()>() in <com.csipsimple.pjsip.PjSipService: void setPresence(com.csipsimple.api.SipManager$PresenceStatus,java.lang.String,long)> ==> <com.csipsimple.api.SipProfileState: int getPjsuaId()>
SPECIAL edge: $i2 = specialinvoke r0.<com.csipsimple.pjsip.PjSipService: int getOnlineForStatus(com.csipsimple.api.SipManager$PresenceStatus)>($r1) in <com.csipsimple.pjsip.PjSipService: void setPresence(com.csipsimple.api.SipManager$PresenceStatus,java.lang.String,long)> ==> <com.csipsimple.pjsip.PjSipService: int getOnlineForStatus(com.csipsimple.api.SipManager$PresenceStatus)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int acc_set_online_status(int,int)>($i1, $i2) in <com.csipsimple.pjsip.PjSipService: void setPresence(com.csipsimple.api.SipManager$PresenceStatus,java.lang.String,long)> ==> <org.pjsip.pjsua.pjsua: int acc_set_online_status(int,int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int set_snd_dev(int,int)>(0, 0) in <com.csipsimple.pjsip.PjSipService: void setSnd()> ==> <org.pjsip.pjsua.pjsua: int set_snd_dev(int,int)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.MediaManager: void setSpeakerphoneOn(boolean)>($z0) in <com.csipsimple.pjsip.PjSipService: void setSpeakerphoneOn(boolean)> ==> <com.csipsimple.service.MediaManager: void setSpeakerphoneOn(boolean)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.MediaManager: void stopRingAndUnfocus()>() in <com.csipsimple.pjsip.PjSipService: void silenceRinger()> ==> <com.csipsimple.service.MediaManager: void stopRingAndUnfocus()>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: boolean canRecord(int)>($i0) in <com.csipsimple.pjsip.PjSipService: void startRecording(int)> ==> <com.csipsimple.pjsip.PjSipService: boolean canRecord(int)>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)>($i0) in <com.csipsimple.pjsip.PjSipService: void startRecording(int)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<com.csipsimple.api.SipCallSession: java.lang.String getRemoteContact()>() in <com.csipsimple.pjsip.PjSipService: void startRecording(int)> ==> <com.csipsimple.api.SipCallSession: java.lang.String getRemoteContact()>
SPECIAL edge: $r3 = specialinvoke r0.<com.csipsimple.pjsip.PjSipService: java.io.File getRecordFile(java.lang.String)>($r2) in <com.csipsimple.pjsip.PjSipService: void startRecording(int)> ==> <com.csipsimple.pjsip.PjSipService: java.io.File getRecordFile(java.lang.String)>
STATIC edge: $r4 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>($r2) in <com.csipsimple.pjsip.PjSipService: void startRecording(int)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua: int call_recording_start(int,org.pjsip.pjsua.pj_str_t,int)>($i0, $r4, $i1) in <com.csipsimple.pjsip.PjSipService: void startRecording(int)> ==> <org.pjsip.pjsua.pjsua: int call_recording_start(int,org.pjsip.pjsua.pj_str_t,int)>
VIRTUAL edge: virtualinvoke $r5.<com.csipsimple.pjsip.UAStateReceiver: void updateRecordingStatus(int,boolean,boolean)>($i0, 0, 1) in <com.csipsimple.pjsip.PjSipService: void startRecording(int)> ==> <com.csipsimple.pjsip.UAStateReceiver: void updateRecordingStatus(int,boolean,boolean)>
VIRTUAL edge: virtualinvoke $r7.<com.csipsimple.service.SipService: void notifyUserOfMessage(int)>(2131427853) in <com.csipsimple.pjsip.PjSipService: void startRecording(int)> ==> <com.csipsimple.service.SipService: void notifyUserOfMessage(int)>
VIRTUAL edge: virtualinvoke $r3.<com.csipsimple.pjsip.PjStreamDialtoneGenerator: void stopDialtoneGenerator()>() in <com.csipsimple.pjsip.PjSipService: void stopDialtoneGenerator(int)> ==> <com.csipsimple.pjsip.PjStreamDialtoneGenerator: void stopDialtoneGenerator()>
STATIC edge: $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) in <com.csipsimple.pjsip.PjSipService: void stopPlaying(int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int player_destroy(int)>($i1) in <com.csipsimple.pjsip.PjSipService: void stopPlaying(int)> ==> <org.pjsip.pjsua.pjsua: int player_destroy(int)>
STATIC edge: $i1 = staticinvoke <org.pjsip.pjsua.pjsua: int call_recording_stop(int)>($i0) in <com.csipsimple.pjsip.PjSipService: void stopRecording(int)> ==> <org.pjsip.pjsua.pjsua: int call_recording_stop(int)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.pjsip.UAStateReceiver: void updateRecordingStatus(int,boolean,boolean)>($i0, 1, 0) in <com.csipsimple.pjsip.PjSipService: void stopRecording(int)> ==> <com.csipsimple.pjsip.UAStateReceiver: void updateRecordingStatus(int,boolean,boolean)>
VIRTUAL edge: $r6 = virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)>($i0) in <com.csipsimple.pjsip.PjSipService: void stopRecording(int)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)>
VIRTUAL edge: virtualinvoke $r1.<com.csipsimple.service.MediaManager: void unsetAudioInCall()>() in <com.csipsimple.pjsip.PjSipService: void unsetAudioInCall()> ==> <com.csipsimple.service.MediaManager: void unsetAudioInCall()>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)>($i0) in <com.csipsimple.pjsip.PjSipService: int updateCallOptions(int,android.os.Bundle)> ==> <com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)>
VIRTUAL edge: $z1 = virtualinvoke $r2.<com.csipsimple.api.SipCallSession: boolean mediaHasVideo()>() in <com.csipsimple.pjsip.PjSipService: int updateCallOptions(int,android.os.Bundle)> ==> <com.csipsimple.api.SipCallSession: boolean mediaHasVideo()>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int call_set_vid_strm(int,org.pjsip.pjsua.pjsua_call_vid_strm_op,org.pjsip.pjsua.pjsua_call_vid_strm_op_param)>($i0, r3, null) in <com.csipsimple.pjsip.PjSipService: int updateCallOptions(int,android.os.Bundle)> ==> <org.pjsip.pjsua.pjsua: int call_set_vid_strm(int,org.pjsip.pjsua.pjsua_call_vid_strm_op,org.pjsip.pjsua.pjsua_call_vid_strm_op_param)>
VIRTUAL edge: $l1 = virtualinvoke r0.<com.csipsimple.pjsip.PjSipService: long getAccountIdForPjsipId(int)>($i0) in <com.csipsimple.pjsip.PjSipService: void updateProfileStateFromService(int)> ==> <com.csipsimple.pjsip.PjSipService: long getAccountIdForPjsipId(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", $r5) in <com.csipsimple.pjsip.PjSipService: void updateProfileStateFromService(int)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke r3.<org.pjsip.pjsua.pjsua_acc_info: void <init>()>() in <com.csipsimple.pjsip.PjSipService: void updateProfileStateFromService(int)> ==> <org.pjsip.pjsua.pjsua_acc_info: void <init>()>
STATIC edge: $i0 = staticinvoke <org.pjsip.pjsua.pjsua: int acc_get_info(int,org.pjsip.pjsua.pjsua_acc_info)>($i0, r3) in <com.csipsimple.pjsip.PjSipService: void updateProfileStateFromService(int)> ==> <org.pjsip.pjsua.pjsua: int acc_get_info(int,org.pjsip.pjsua.pjsua_acc_info)>
VIRTUAL edge: $r6 = virtualinvoke r3.<org.pjsip.pjsua.pjsua_acc_info: org.pjsip.pjsua.pjsip_status_code getStatus()>() in <com.csipsimple.pjsip.PjSipService: void updateProfileStateFromService(int)> ==> <org.pjsip.pjsua.pjsua_acc_info: org.pjsip.pjsua.pjsip_status_code getStatus()>
VIRTUAL edge: $i0 = virtualinvoke $r6.<org.pjsip.pjsua.pjsip_status_code: int swigValue()>() in <com.csipsimple.pjsip.PjSipService: void updateProfileStateFromService(int)> ==> <org.pjsip.pjsua.pjsip_status_code: int swigValue()>
STATIC edge: $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <com.csipsimple.pjsip.PjSipService: void updateProfileStateFromService(int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r8 = virtualinvoke r3.<org.pjsip.pjsua.pjsua_acc_info: org.pjsip.pjsua.pj_str_t getStatus_text()>() in <com.csipsimple.pjsip.PjSipService: void updateProfileStateFromService(int)> ==> <org.pjsip.pjsua.pjsua_acc_info: org.pjsip.pjsua.pj_str_t getStatus_text()>
STATIC edge: $r5 = staticinvoke <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>($r8) in <com.csipsimple.pjsip.PjSipService: void updateProfileStateFromService(int)> ==> <com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $i0 = virtualinvoke r3.<org.pjsip.pjsua.pjsua_acc_info: int getExpires()>() in <com.csipsimple.pjsip.PjSipService: void updateProfileStateFromService(int)> ==> <org.pjsip.pjsua.pjsua_acc_info: int getExpires()>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("PjService", $r3) in <com.csipsimple.pjsip.PjSipService: void updateTransportIp(java.lang.String)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
STATIC edge: $r4 = staticinvoke <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>($r1) in <com.csipsimple.pjsip.PjSipService: void updateTransportIp(java.lang.String)> ==> <org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: int update_transport(org.pjsip.pjsua.pj_str_t)>($r4) in <com.csipsimple.pjsip.PjSipService: void updateTransportIp(java.lang.String)> ==> <org.pjsip.pjsua.pjsua: int update_transport(org.pjsip.pjsua.pj_str_t)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.csipsimple.service.MediaManager: int validateAudioClockRate(int)>($i0) in <com.csipsimple.pjsip.PjSipService: int validateAudioClockRate(int)> ==> <com.csipsimple.service.MediaManager: int validateAudioClockRate(int)>
STATIC edge: staticinvoke <org.pjsip.pjsua.pjsua: void jzrtp_SASVerified(int)>($i0) in <com.csipsimple.pjsip.PjSipService: void zrtpSASVerified(int)> ==> <org.pjsip.pjsua.pjsua: void jzrtp_SASVerified(int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey: void <init>()> ==> <java.lang.Object: void <init>()>
STATIC edge: $r1 = staticinvoke <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>() in <com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey: boolean get(android.content.Context)> ==> <com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
STATIC edge: $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) in <com.csipsimple.service.Downloader$FileStreamResponseHandler: java.lang.Boolean handleResponse(org.apache.http.HttpResponse)> ==> <java.lang.Long: java.lang.Long valueOf(long)>
STATIC edge: $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) in <com.csipsimple.service.Downloader$FileStreamResponseHandler: java.lang.Boolean handleResponse(org.apache.http.HttpResponse)> ==> <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Downloader", "Problem on downloading") in <com.csipsimple.service.Downloader$FileStreamResponseHandler: java.lang.Boolean handleResponse(org.apache.http.HttpResponse)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.csipsimple.service.Downloader$FileStreamResponseHandler: java.lang.Boolean handleResponse(org.apache.http.HttpResponse)>($r1) in <com.csipsimple.service.Downloader$FileStreamResponseHandler: java.lang.Object handleResponse(org.apache.http.HttpResponse)> ==> <com.csipsimple.service.Downloader$FileStreamResponseHandler: java.lang.Boolean handleResponse(org.apache.http.HttpResponse)>
STATIC edge: $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1) in <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
VIRTUAL edge: $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>($r1) in <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1) in <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: java.lang.String getDefaultFieldSummary(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setPreferenceScreenType(java.lang.Class,java.lang.String,int)>(r3, $r1, $i0) in <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setPreferenceScreenSub(java.lang.String,java.lang.Class,java.lang.Class,int)> ==> <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setPreferenceScreenType(java.lang.Class,java.lang.String,int)>
VIRTUAL edge: r6 = virtualinvoke r0.<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: java.lang.String getDefaultFieldSummary(java.lang.String)>($r1) in <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setStringFieldSummary(java.lang.String)> ==> <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: java.lang.String getDefaultFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setPreferenceSummary(android.preference.Preference,java.lang.CharSequence)>($r4, r6) in <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setStringFieldSummary(java.lang.String)> ==> <com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setPreferenceSummary(android.preference.Preference,java.lang.CharSequence)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.contacts.ContactsWrapper$2: void <init>(com.csipsimple.utils.contacts.ContactsWrapper)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r3.<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void finishServiceIfNeeded(boolean)>(0) in <com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void run()> ==> <com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void finishServiceIfNeeded(boolean)>
STATIC edge: $r4 = staticinvoke <com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)>($r2) in <com.csipsimple.ui.dialpad.DialerFragment$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)>
STATIC edge: staticinvoke <com.csipsimple.ui.dialpad.DialerFragment: void access$0(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.api.ISipService)>($r3, $r4) in <com.csipsimple.ui.dialpad.DialerFragment$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void access$0(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.api.ISipService)>
STATIC edge: staticinvoke <com.csipsimple.ui.dialpad.DialerFragment: void access$0(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.api.ISipService)>($r2, null) in <com.csipsimple.ui.dialpad.DialerFragment$1: void onServiceDisconnected(android.content.ComponentName)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void access$0(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.api.ISipService)>
STATIC edge: $r2 = staticinvoke <com.csipsimple.ui.dialpad.DialerFragment: com.csipsimple.utils.contacts.ContactsSearchAdapter access$1(com.csipsimple.ui.dialpad.DialerFragment)>($r3) in <com.csipsimple.ui.dialpad.DialerFragment$3: void onChooseAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.ui.dialpad.DialerFragment: com.csipsimple.utils.contacts.ContactsSearchAdapter access$1(com.csipsimple.ui.dialpad.DialerFragment)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.utils.contacts.ContactsSearchAdapter: void setSelectedAccount(long)>(l0) in <com.csipsimple.ui.dialpad.DialerFragment$3: void onChooseAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.contacts.ContactsSearchAdapter: void setSelectedAccount(long)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.ui.dialpad.DialerFragment$4: void <init>(com.csipsimple.ui.dialpad.DialerFragment)> ==> <java.lang.Object: void <init>()>
STATIC edge: $z0 = staticinvoke <com.csipsimple.ui.dialpad.DialerFragment: boolean access$2(com.csipsimple.ui.dialpad.DialerFragment)>($r3) in <com.csipsimple.ui.dialpad.DialerFragment$4: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.dialpad.DialerFragment: boolean access$2(com.csipsimple.ui.dialpad.DialerFragment)>
VIRTUAL edge: virtualinvoke $r2.<com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean)>($z0) in <com.csipsimple.ui.dialpad.DialerFragment$4: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean)>
STATIC edge: staticinvoke <com.csipsimple.ui.dialpad.DialerFragment: void access$3(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.utils.CallHandlerPlugin)>($r2, $r1) in <com.csipsimple.ui.dialpad.DialerFragment$5: void onLoad(com.csipsimple.utils.CallHandlerPlugin)> ==> <com.csipsimple.ui.dialpad.DialerFragment: void access$3(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.utils.CallHandlerPlugin)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("sip") in <com.csipsimple.utils.contacts.ContactsWrapper: java.lang.String formatNumber(java.lang.String,java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("sip:") in <com.csipsimple.utils.contacts.ContactsWrapper: java.lang.String formatNumber(java.lang.String,java.lang.String)> ==> <java.lang.String: boolean startsWith(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.utils.contacts.ContactsWrapper: void treatContactPickerPositiveResult(android.content.Context,java.lang.String,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected)>($r1, r7, $r3) in <com.csipsimple.utils.contacts.ContactsWrapper: void treatContactPickerPositiveResult(android.content.Context,android.content.Intent,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: void treatContactPickerPositiveResult(android.content.Context,java.lang.String,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected)>
VIRTUAL edge: $r2 = virtualinvoke $r10.<com.csipsimple.utils.contacts.ContactsWrapper$Phone: java.lang.String getNumber()>() in <com.csipsimple.utils.contacts.ContactsWrapper: void treatContactPickerPositiveResult(android.content.Context,java.lang.String,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected)> ==> <com.csipsimple.utils.contacts.ContactsWrapper$Phone: java.lang.String getNumber()>
VIRTUAL edge: $r11 = virtualinvoke $r10.<com.csipsimple.utils.contacts.ContactsWrapper$Phone: java.lang.String getType()>() in <com.csipsimple.utils.contacts.ContactsWrapper: void treatContactPickerPositiveResult(android.content.Context,java.lang.String,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected)> ==> <com.csipsimple.utils.contacts.ContactsWrapper$Phone: java.lang.String getType()>
SPECIAL edge: $r2 = specialinvoke r0.<com.csipsimple.utils.contacts.ContactsWrapper: java.lang.String formatNumber(java.lang.String,java.lang.String)>($r2, $r11) in <com.csipsimple.utils.contacts.ContactsWrapper: void treatContactPickerPositiveResult(android.content.Context,java.lang.String,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected)> ==> <com.csipsimple.utils.contacts.ContactsWrapper: java.lang.String formatNumber(java.lang.String,java.lang.String)>
SPECIAL edge: specialinvoke $r13.<com.csipsimple.utils.contacts.ContactsWrapper$1: void <init>(com.csipsimple.utils.contacts.ContactsWrapper,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected,android.widget.ArrayAdapter)>(r0, $r3, r5) in <com.csipsimple.utils.contacts.ContactsWrapper: void treatContactPickerPositiveResult(android.content.Context,java.lang.String,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected)> ==> <com.csipsimple.utils.contacts.ContactsWrapper$1: void <init>(com.csipsimple.utils.contacts.ContactsWrapper,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected,android.widget.ArrayAdapter)>
VIRTUAL edge: virtualinvoke r7.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)>(r5, $r13) in <com.csipsimple.utils.contacts.ContactsWrapper: void treatContactPickerPositiveResult(android.content.Context,java.lang.String,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected)> ==> <com.csipsimple.utils.contacts.ContactsWrapper$1: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke $r14.<com.csipsimple.utils.contacts.ContactsWrapper$2: void <init>(com.csipsimple.utils.contacts.ContactsWrapper)>(r0) in <com.csipsimple.utils.contacts.ContactsWrapper: void treatContactPickerPositiveResult(android.content.Context,java.lang.String,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected)> ==> <com.csipsimple.utils.contacts.ContactsWrapper$2: void <init>(com.csipsimple.utils.contacts.ContactsWrapper)>
VIRTUAL edge: virtualinvoke r7.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>(2131427784, $r14) in <com.csipsimple.utils.contacts.ContactsWrapper: void treatContactPickerPositiveResult(android.content.Context,java.lang.String,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected)> ==> <com.csipsimple.utils.contacts.ContactsWrapper$2: void onClick(android.content.DialogInterface,int)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.csipsimple.utils.contacts.ContactsWrapper$1: void <init>(com.csipsimple.utils.contacts.ContactsWrapper,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected,android.widget.ArrayAdapter)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.csipsimple.wizards.impl.Expert$1: void <init>()>() in <com.csipsimple.wizards.impl.Expert: void <clinit>()> ==> <com.csipsimple.wizards.impl.Expert$1: void <init>()>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.BaseImplementation: void <init>()>() in <com.csipsimple.wizards.impl.Expert: void <init>()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.csipsimple.wizards.impl.Expert: android.preference.Preference findPreference(java.lang.String)>("display_name") in <com.csipsimple.wizards.impl.Expert: void bindFields()> ==> <com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
STATIC edge: $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <com.csipsimple.wizards.impl.Expert: int getIntValue(android.preference.EditTextPreference,int)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Expert", "List item is not a number") in <com.csipsimple.wizards.impl.Expert: int getIntValue(android.preference.EditTextPreference,int)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2) in <com.csipsimple.wizards.impl.Expert: int getIntValue(android.preference.ListPreference,int)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>("Expert", "List item is not a number") in <com.csipsimple.wizards.impl.Expert: int getIntValue(android.preference.ListPreference,int)> ==> <com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
STATIC edge: $i2 = staticinvoke <com.csipsimple.wizards.impl.Expert: int getIntValue(android.preference.ListPreference,int)>($r4, 1) in <com.csipsimple.wizards.impl.Expert: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Expert: int getIntValue(android.preference.ListPreference,int)>
STATIC edge: $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) in <com.csipsimple.wizards.impl.Expert: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
VIRTUAL edge: $r3 = virtualinvoke r0.<com.csipsimple.wizards.impl.Expert: java.lang.String getText(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Expert: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke r0.<com.csipsimple.wizards.impl.Expert: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Expert: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("0") in <com.csipsimple.wizards.impl.Expert: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
STATIC edge: $i2 = staticinvoke <com.csipsimple.wizards.impl.Expert: int getIntValue(android.preference.EditTextPreference,int)>($r2, -1) in <com.csipsimple.wizards.impl.Expert: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Expert: int getIntValue(android.preference.EditTextPreference,int)>
VIRTUAL edge: $z1 = virtualinvoke r0.<com.csipsimple.wizards.impl.Expert: boolean isEmpty(android.preference.EditTextPreference)>($r2) in <com.csipsimple.wizards.impl.Expert: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
VIRTUAL edge: $z1 = virtualinvoke r0.<com.csipsimple.wizards.impl.Expert: boolean checkField(android.preference.Preference,boolean)>($r1, $z1) in <com.csipsimple.wizards.impl.Expert: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
VIRTUAL edge: $z2 = virtualinvoke r0.<com.csipsimple.wizards.impl.Expert: boolean isMatching(android.preference.EditTextPreference,java.lang.String)>($r2, "[^<]*<sip(s)?:[^@]*@[^@]*>") in <com.csipsimple.wizards.impl.Expert: boolean canSave()> ==> <com.csipsimple.wizards.impl.BaseImplementation: boolean isMatching(android.preference.EditTextPreference,java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.csipsimple.wizards.impl.Expert: void bindFields()>() in <com.csipsimple.wizards.impl.Expert: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.wizards.impl.Expert: void bindFields()>
VIRTUAL edge: $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("") in <com.csipsimple.wizards.impl.Expert: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.String: boolean equals(java.lang.Object)>
STATIC edge: r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1) in <com.csipsimple.wizards.impl.Expert: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.Long: java.lang.String toString(long)>
STATIC edge: r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0) in <com.csipsimple.wizards.impl.Expert: void fillLayout(com.csipsimple.api.SipProfile)> ==> <java.lang.Integer: java.lang.String toString(int)>
STATIC edge: staticinvoke <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>("Expert", r2) in <com.csipsimple.wizards.impl.Expert: void fillLayout(com.csipsimple.api.SipProfile)> ==> <com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Expert: void setStringFieldSummary(java.lang.String)>("display_name") in <com.csipsimple.wizards.impl.Expert: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Expert: void setPasswordFieldSummary(java.lang.String)>("data") in <com.csipsimple.wizards.impl.Expert: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setPasswordFieldSummary(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.csipsimple.wizards.impl.Expert: void setListFieldSummary(java.lang.String)>("datatype") in <com.csipsimple.wizards.impl.Expert: void updateDescriptions()> ==> <com.csipsimple.wizards.impl.BaseImplementation: void setListFieldSummary(java.lang.String)>
