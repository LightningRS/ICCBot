<com.actionbarsherlock.widget.ActivityChooserView: boolean access$3(com.actionbarsherlock.widget.ActivityChooserView)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
<com.csipsimple.ui.calllog.CallLogAdapter: int[] getCallTypes(android.database.Cursor,int)>
<com.actionbarsherlock.internal.utils.Utility11: void viewSetActivated(android.view.View,boolean)>
<org.pjsip.pjsua.pjsua_buddy_config: void delete()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode access$2(com.actionbarsherlock.internal.ActionBarSherlockCompat)>
<com.csipsimple.utils.bluetooth.BluetoothUtils3: boolean isBluetoothOn()>
<com.actionbarsherlock.internal.widget.ActionBarView: void setSubtitle(java.lang.CharSequence)>
<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void bindView()>
<org.pjsip.pjsua.pjsua_media_config: long getCPtr(org.pjsip.pjsua.pjsua_media_config)>
<org.webrtc.videoengine.camera.CameraUtils5: void setDisplayOrientation(android.hardware.Camera,int)>
<org.pjsip.pjsua.pjrpid_activity$SwigNext: void <clinit>()>
<com.csipsimple.utils.bluetooth.BluetoothUtils8: boolean access$0(com.csipsimple.utils.bluetooth.BluetoothUtils8)>
<com.csipsimple.widgets.ShortcutWidgetProvider: void <clinit>()>
<com.csipsimple.R$styleable: void <clinit>()>
<com.csipsimple.widgets.SlidingTab$Slider: android.widget.ImageView access$0(com.csipsimple.widgets.SlidingTab$Slider)>
<org.webrtc.videoengine.camera.CameraUtils8: void setDisplayOrientation(android.hardware.Camera,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format)>
<com.csipsimple.wizards.impl.Scarlet: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.Nymgo: java.lang.String getDefaultName()>
<com.csipsimple.widgets.DialerCallBar: void setOnDialActionListener(com.csipsimple.widgets.DialerCallBar$OnDialActionListener)>
<com.csipsimple.ui.account.AccountsEditListFragment: java.lang.String access$0()>
<com.csipsimple.ui.account.AccountsChooserListFragment: void setShowCallHandlerPlugins(boolean)>
<com.csipsimple.wizards.impl.BroadVoice: java.lang.String getDomain()>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1: com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState[] newArray(int)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isInputMethodNotNeeded()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type)>
<com.csipsimple.db.DBAdapter: boolean isOpen()>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: boolean showsIcon()>
<com.csipsimple.wizards.impl.MondotalkCreate: void onTextChanged(java.lang.CharSequence,int,int,int)>
<org.pjsip.pjsua.pjsip_ssl_method: org.pjsip.pjsua.pjsip_ssl_method[] values()>
<com.csipsimple.widgets.DragnDropListView: void setOnDragListener(com.csipsimple.widgets.DragnDropListView$DragListener)>
<org.pjsip.pjsua.pjsua_transport_info: void delete()>
<com.actionbarsherlock.app.SherlockFragmentActivity: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_unsigned_int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_unsigned_int)>
<com.csipsimple.api.ISipService$Stub$Proxy: int hold(int)>
<org.pjsip.pjsua.pjsua_call_info: int getConf_slot()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: int getGroupId()>
<com.csipsimple.api.SipCallSession: void setCanRecord(boolean)>
<com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void scheduleNext()>
<com.csipsimple.wizards.impl.Sipgate: boolean needRestart()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence)>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void onConfigurationChanged(android.content.res.Configuration)>
<com.csipsimple.wizards.impl.Cryptel: java.lang.String getDomain()>
<com.csipsimple.ui.account.AccountsEditListFragment: void onClickAddAccount()>
<com.actionbarsherlock.app.SherlockActivity: void <init>()>
<com.csipsimple.service.SipService$SameThreadException: void <init>(com.csipsimple.service.SipService)>
<com.csipsimple.utils.PreferencesWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
<com.csipsimple.wizards.impl.Sipnet: boolean canTcp()>
<com.actionbarsherlock.view.MenuInflater: android.content.Context access$0(com.actionbarsherlock.view.MenuInflater)>
<com.csipsimple.utils.CustomDistribution: java.lang.String getSupportEmail()>
<org.pjsip.pjsua.pjsua_call_setting: long getFlag()>
<org.pjsip.pjsua.pjsua_media_config: int getHas_ioqueue()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setDisplayUseLogoEnabled(boolean)>
<com.csipsimple.widgets.contactbadge.OverlayedQuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setSubtitle(java.lang.CharSequence)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getTranslationY()>
<com.actionbarsherlock.internal.widget.ActionBarView: int getNavigationMode()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr)>
<com.csipsimple.api.SipProfileState: int getStatusCode()>
<com.actionbarsherlock.widget.ActivityChooserModel: void access$4(com.actionbarsherlock.widget.ActivityChooserModel,boolean)>
<com.csipsimple.ui.favorites.FavAdapter$MenuCallback: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<com.csipsimple.wizards.impl.Telsome: java.lang.String getDomain()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void)>
<com.csipsimple.service.PreferenceProvider: void <clinit>()>
<com.csipsimple.ui.warnings.WarningVpnIcs: int getLayout()>
<org.pjsip.pjsua.pjsua_call_info: void setRem_offerer(int)>
<org.pjsip.pjsua.pjsua_media_config: void setSnd_play_latency(long)>
<org.pjsip.pjsua.pjsip_ssl_method$SwigNext: int access$0()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setCheckable(boolean)>
<org.pjsip.pjsua.pjsua: int buddy_set_user_data(int,byte[])>
<com.csipsimple.wizards.impl.AccountCreationWebview: android.webkit.WebView access$0(com.csipsimple.wizards.impl.AccountCreationWebview)>
<org.pjsip.pjsua.pjsua_media_config: int getIce_no_rtcp()>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: java.lang.Object getTag()>
<com.csipsimple.wizards.impl.CongstarQSC: java.lang.String getDefaultName()>
<com.csipsimple.ui.calllog.GroupingListAdapter$1: boolean deliverSelfNotifications()>
<org.pjsip.pjsua.pjsua_100rel_use$SwigNext: void <clinit>()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)>
<com.csipsimple.wizards.impl.Broadsoft: int getBasePreferenceResource()>
<com.csipsimple.utils.PreferencesWrapper: java.lang.String[] getCodecList()>
<com.csipsimple.ui.favorites.FavAdapter$5: void onCancel(android.content.DialogInterface)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTitleCondensed()>
<org.pjsip.pjsua.pjsua: int vid_enum_wins(int[],long[])>
<com.csipsimple.wizards.impl.Rapidvox: java.lang.String getDomain()>
<org.pjsip.pjsua.pjsua_media_config: int getIce_max_host_cands()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: boolean needsDividerBefore()>
<com.csipsimple.wizards.impl.Ip2Mobile: boolean needRestart()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: long getItemId(int)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void)>
<com.csipsimple.api.ISipService$Stub$Proxy: int getVersion()>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawVerticalDivider(android.graphics.Canvas,int)>
<org.pjsip.pjsua.pjsua_state: int swigValue()>
<com.csipsimple.wizards.impl.Broadsoft: java.lang.String getDefaultFieldSummary(java.lang.String)>
<org.pjsip.pjsua.pj_qos_params: long getCPtr(org.pjsip.pjsua.pj_qos_params)>
<com.csipsimple.wizards.impl.Mobile4U: java.lang.String getDomain()>
<com.csipsimple.api.SipCallSession: boolean isRecording()>
<com.actionbarsherlock.internal.widget.CapitalizingButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<com.actionbarsherlock.view.MenuInflater: java.lang.Class[] access$1()>
<org.pjsip.pjsua.pjsua_config: int getHangup_forked_call()>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: void setShowAsAction(int)>
<com.csipsimple.wizards.impl.VPhone: java.lang.String getDomain()>
<com.actionbarsherlock.internal.widget.ActionBarContainer: android.view.View getTabContainer()>
<com.csipsimple.api.ISipService$Stub$Proxy: int hangup(int,int)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean access$0(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>
<com.csipsimple.service.DeviceStateReceiver: void <init>()>
<com.csipsimple.service.SipService$ReturnRunnable: void setResult(java.lang.Object)>
<com.csipsimple.wizards.impl.Sipkom: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setSubtitle(java.lang.CharSequence)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.Drawable getProgressDrawable()>
<com.csipsimple.api.SipProfileState$1: com.csipsimple.api.SipProfileState[] newArray(int)>
<com.csipsimple.wizards.impl.SimpleImplementation: void setUsername(java.lang.String)>
<com.csipsimple.wizards.impl.Broadsoft: boolean needRestart()>
<com.csipsimple.wizards.impl.Betamax: java.lang.String getDefaultFieldSummary(java.lang.String)>
<org.pjsip.pjsua.pjsip_event_id_e$SwigNext: int access$0()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void removeTabAt(int)>
<com.csipsimple.ui.incall.AccelerometerListener: int access$3(com.csipsimple.ui.incall.AccelerometerListener)>
<com.actionbarsherlock.app.ActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: java.lang.String toString()>
<org.pjsip.pjsua.pjsua_vid_preview_param: long getWnd_flags()>
<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void onFinishInflate()>
<com.csipsimple.wizards.impl.A1: java.lang.String getDefaultName()>
<com.csipsimple.ui.messages.MessageFragment: android.os.Bundle getArguments(java.lang.String,java.lang.String)>
<com.csipsimple.wizards.impl.Sipgate: android.widget.TextView access$1(com.csipsimple.wizards.impl.Sipgate)>
<org.pjsip.pjsua.pjmedia_tone_digit: char getDigit()>
<org.pjsip.pjsua.pjsua_media_config: void setRx_drop_pct(long)>
<com.csipsimple.service.receiver.DynamicReceiver4: void stopMonitoring()>
<com.csipsimple.wizards.impl.Tlenofon: java.lang.String getDomain()>
<com.actionbarsherlock.ActionBarSherlock: boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState: void <init>(android.os.Parcelable)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void changeMenuMode()>
<com.csipsimple.api.SipProfileState: java.lang.String getStatusText()>
<com.actionbarsherlock.internal.widget.IcsView: int getMeasuredStateInt(android.view.View)>
<com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.app.ActionBar$OnNavigationListener access$0(com.actionbarsherlock.internal.widget.ActionBarView)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: void setSecondaryProgress(int)>
<com.csipsimple.utils.SmileyParser: java.lang.CharSequence addSmileySpans(java.lang.CharSequence)>
<com.csipsimple.service.SipService$1: int getVersion()>
<com.csipsimple.ui.calllog.GroupingListAdapter: void onContentChanged()>
<org.pjsip.pjsua.pjsua_acc_config: int getAllow_via_rewrite()>
<com.csipsimple.wizards.impl.Voipdoup: java.lang.String getDomain()>
<com.csipsimple.utils.bluetooth.BluetoothUtils3: void setBluetoothOn(boolean)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<org.pjsip.pjsua.csipsimple_config: int getUse_compact_form_sdp()>
<org.pjsip.pjsua.pjrpid_activity: org.pjsip.pjsua.pjrpid_activity[] values()>
<org.pjsip.pjsua.pjsua: int conf_get_signal_level(int,long[],long[])>
<com.csipsimple.wizards.impl.NeufTalk: java.lang.String getDomain()>
<com.actionbarsherlock.ActionBarSherlock: boolean unregisterImplementation(java.lang.Class)>
<com.csipsimple.utils.Columns$Type: com.csipsimple.utils.Columns$Type valueOf(java.lang.String)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: java.lang.Object getItemAtPosition(int)>
<com.csipsimple.wizards.impl.ITTelenet: java.lang.String getDefaultName()>
<com.csipsimple.api.ISipService$Stub$Proxy: com.csipsimple.api.MediaState getCurrentMediaState()>
<org.pjsip.pjsua.pj_time_val: void setSec(int)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void)>
<com.csipsimple.wizards.impl.FastVoip: java.lang.String getDomain()>
<com.csipsimple.wizards.impl.SipMe: java.lang.String getDomain()>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onViewAttachedToWindow(android.view.View)>
<com.csipsimple.api.ISipService$Stub$Proxy: void stopRecording(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: java.lang.Object getValue()>
<org.pjsip.pjsua.pjsua: long vid_dev_count()>
<org.pjsip.pjsua.pjsua_config: int getNat_type_in_sdp()>
<org.pjsip.pjsua.pjsip_redirect_op: org.pjsip.pjsua.pjsip_redirect_op[] values()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: java.lang.CharSequence getTitleCondensed()>
<com.csipsimple.wizards.impl.MegaVoip: boolean needRestart()>
<com.csipsimple.wizards.impl.Zadarma: java.lang.String getDomain()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.actionbarsherlock.app.SherlockDialogFragment: void onDetach()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem getItem(int)>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()>
<com.csipsimple.wizards.impl.IiNet: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.EasyBell: java.lang.String getDefaultName()>
<com.actionbarsherlock.view.MenuInflater$MenuState: com.actionbarsherlock.view.ActionProvider access$0(com.actionbarsherlock.view.MenuInflater$MenuState)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream)>
<com.csipsimple.service.MediaManager: int validateAudioClockRate(int)>
<com.csipsimple.plugins.telephony.CallHandler: void <init>()>
<com.csipsimple.wizards.impl.Basic: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void access$5(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,boolean)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onClick(android.view.View)>
<com.csipsimple.ui.prefs.Codecs$TabsAdapter: void onTabSelected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>
<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession[] getCalls()>
<org.pjsip.pjsua.pjsua_callback: void setOn_call_transfer_status(org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener getOnItemLongClickListener()>
<com.csipsimple.api.SipProfileState: int getPriority()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void)>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawHorizontalDivider(android.graphics.Canvas,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: int getRepeatMode()>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setActionView(android.view.View)>
<org.webrtc.videoengine.ViEAndroidGLES20: boolean UseOpenGL2(java.lang.Object)>
<com.csipsimple.widgets.DragnDropListView: int myPointToPosition(int,int)>
<org.pjsip.pjsua.pjsua_media_config: void setSnd_rec_latency(long)>
<com.csipsimple.widgets.contactbadge.OverlayedQuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>
<com.actionbarsherlock.app.SherlockListActivity: void <init>()>
<com.csipsimple.wizards.impl.CallRomania: boolean needRestart()>
<com.csipsimple.wizards.impl.Svanto: java.lang.String getDefaultName()>
<com.csipsimple.api.SipProfileState: void setPriority(int)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setShowAsActionFlags(int)>
<org.pjsip.pjsua.pjsua_ice_config: int getEnable_ice()>
<com.csipsimple.utils.contacts.ContactsSearchAdapter: void setSelectedAccount(long)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onDetachedFromWindow()>
<org.pjsip.pjsua.pjsua: byte[] call_get_user_data(int)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<org.pjsip.pjsua.pjsua_conf_port_info: void delete()>
<org.pjsip.pjsua.pjsua_turn_config: long getCPtr(org.pjsip.pjsua.pjsua_turn_config)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param)>
<com.csipsimple.ui.account.AccountsChooserListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<com.csipsimple.wizards.impl.Sip2Sip: boolean canTcp()>
<com.csipsimple.api.ISipService$Stub: void <init>()>
<com.csipsimple.utils.DialingFeedback: android.media.ToneGenerator access$1(com.csipsimple.utils.DialingFeedback)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getNumericShortcut()>
<com.csipsimple.wizards.impl.SimpleImplementation: int getBasePreferenceResource()>
<com.csipsimple.wizards.impl.Advanced: int getBasePreferenceResource()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: int getItemId()>
<com.actionbarsherlock.internal.widget.ActionBarView: void onFinishInflate()>
<org.pjsip.pjsua.pj_stun_nat_detect_result: void setNat_type_name(java.lang.String)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.csipsimple.wizards.impl.Zadarma: android.widget.TextView access$1(com.csipsimple.wizards.impl.Zadarma)>
<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: boolean areAllItemsEnabled()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener)>
<com.actionbarsherlock.internal.widget.ActionBarView$1: void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long)>
<com.csipsimple.widgets.Dialpad: void onMeasure(int,int)>
<org.pjsip.pjsua.pjsua_create_media_transport_flag$SwigNext: void access$1(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void setInterpolator(android.view.animation.Interpolator)>
<com.csipsimple.widgets.FitTextView: float getMinTextSize()>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: boolean isActionViewExpanded()>
<com.csipsimple.ui.warnings.WarningVpnIcs: void bindView()>
<com.csipsimple.widgets.AccountChooserButton: void setShowExternals(boolean)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.ActionProvider getActionProvider()>
<org.pjsip.pjsua.pj_stun_nat_detect_result: void <init>()>
<com.actionbarsherlock.ActionBarSherlock: void setTitle(int)>
<org.pjsip.pjsua.pj_qos_type: int swigValue()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onViewDetachedFromWindow(android.view.View)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTitle()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void updateDrawableState()>
<org.pjsip.pjsua.pjsua_vid_req_keyframe_method: int swigValue()>
<com.csipsimple.wizards.impl.FreephoneLineCa: java.lang.String getDomain()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.Drawable getCurrentDrawable()>
<com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams: void <init>(int,int)>
<com.csipsimple.wizards.impl.Gradwell: java.lang.String getDefaultName()>
<com.csipsimple.service.Downloader: android.content.Intent getIntent()>
<com.csipsimple.wizards.impl.MundoR: boolean needRestart()>
<com.csipsimple.ui.incall.DtmfDialogFragment$1: void onClick(android.content.DialogInterface,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void initTitle()>
<org.pjsip.pjsua.csipsimple_config: int getTsx_t2_timeout()>
<com.csipsimple.wizards.impl.Pfingo: java.lang.String getDomain()>
<com.csipsimple.ui.account.AccountsEditListFragment: void updateCheckedItem()>
<com.actionbarsherlock.internal.view.menu.SubMenuWrapper: com.actionbarsherlock.view.SubMenu setHeaderIcon(int)>
<com.csipsimple.utils.Ringer: boolean isRinging()>
<com.csipsimple.ui.warnings.WarningPrivilegedIntent: void bindView()>
<org.webrtc.videoengine.ViEAndroidGLES20: boolean IsSupported(android.content.Context)>
<com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.app.ActionBar$Tab getTabAt(int)>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: void setSubtitle(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: boolean hasValue()>
<com.csipsimple.service.MediaManager: void broadcastMediaChanged()>
<org.pjsip.pjsua.pjsip_transport_type_e: org.pjsip.pjsua.pjsip_transport_type_e[] values()>
<com.csipsimple.wizards.impl.AccountCreationWebview$1: void <init>(com.csipsimple.wizards.impl.AccountCreationWebview)>
<com.actionbarsherlock.internal.utils.Utility14: boolean hasPermanentMenuKey(android.view.ViewConfiguration)>
<org.pjsip.pjsua.pjsua_med_tp_st$SwigNext: int access$0()>
<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void onConfigurationChanged(android.content.res.Configuration)>
<com.csipsimple.utils.bluetooth.BluetoothUtils8$1: void <init>(com.csipsimple.utils.bluetooth.BluetoothUtils8)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.SubMenu getSubMenu()>
<com.csipsimple.wizards.impl.VoipTel: boolean canTcp()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<org.pjsip.pjsua.pj_stun_nat_detect_result: void delete()>
<org.pjsip.pjsua.pjsip_status_code$SwigNext: void access$1(int)>
<org.pjsip.pjsua.pjsip_status_code$SwigNext: void <clinit>()>
<com.csipsimple.utils.CallHandlerPlugin: com.csipsimple.utils.CallHandlerPlugin$OnLoadListener access$0(com.csipsimple.utils.CallHandlerPlugin)>
<org.pjsip.pjsua.pjsua_media_config: void setJb_max_pre(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1: java.util.ArrayList initialValue()>
<com.actionbarsherlock.internal.view.menu.SubMenuWrapper: com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable)>
<com.actionbarsherlock.app.SherlockListActivity: void onActionModeStarted(com.actionbarsherlock.view.ActionMode)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void removeTab(com.actionbarsherlock.app.ActionBar$Tab)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getTranslationX()>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: int getWindowAnimations()>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: int getCount()>
<com.csipsimple.wizards.impl.Zadarma: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.utils.Utility11: android.graphics.drawable.Drawable getActivityLogo(android.content.Context)>
<com.csipsimple.wizards.impl.IiNet: boolean needRestart()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.api.SipCallSession: java.lang.String getRemoteContact()>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setTitle(java.lang.CharSequence)>
<org.pjsip.pjsua.pjmedia_port: long getCPtr(org.pjsip.pjsua.pjmedia_port)>
<com.csipsimple.widgets.DragnDropListView: void setGrabberId(int)>
<org.pjsip.pjsua.pjsua_acc_info: int getId()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setContentHeight(int)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op)>
<com.csipsimple.wizards.impl.EasyBell: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.pjsua_ice_config: void setIce_no_rtcp(int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<org.pjsip.pjsua.pjsua_state$SwigNext: int access$0()>
<org.pjsip.pjsua.pjsua_config: void setCred_count(long)>
<com.csipsimple.wizards.impl.Expert: int getBasePreferenceResource()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: boolean hasWindowFocus()>
<org.pjsip.pjsua.pjsua_config: long getThread_cnt()>
<com.csipsimple.service.SipService$1: int getPresence(long)>
<org.pjsip.pjsua.pj_time_val: void delete()>
<com.csipsimple.ui.account.AccountsLoader: void onReleaseResources(android.database.Cursor)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.view.View getSelectedView()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.csipsimple.utils.ContactsAsyncHelper: com.csipsimple.utils.contacts.ContactsWrapper access$0()>
<com.csipsimple.service.receiver.DynamicReceiver4: void <init>(com.csipsimple.service.SipService)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.MenuItem getItem()>
<org.pjsip.pjsua.pjsua_acc_config: long getVid_wnd_flags()>
<com.csipsimple.wizards.impl.BaseImplementation: android.preference.Preference findPreference(java.lang.String)>
<org.pjsip.pjsua.pjsip_status_code: org.pjsip.pjsua.pjsip_status_code[] values()>
<org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type)>
<com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.app.ActionBar$Tab getSelectedTab()>
<com.csipsimple.utils.ArrayUtils: boolean contains(int[],int)>
<org.pjsip.pjsua.pj_pool_t: java.lang.String getObj_name()>
<com.csipsimple.wizards.BasePrefsWizard: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.widgets.ScreenLocker: void setActivity(android.app.Activity)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void setContentHeight(int)>
<com.actionbarsherlock.internal.widget.AbsActionBarView: int getAnimatedVisibility()>
<com.actionbarsherlock.app.SherlockListFragment: void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.csipsimple.wizards.impl.VoipNor: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: int getGroupId()>
<com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$11(com.csipsimple.wizards.impl.MondotalkCreate)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: boolean needsDividerAfter()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.csipsimple.service.Downloader: android.app.NotificationManager access$0(com.csipsimple.service.Downloader)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean collapseActionView()>
<com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl)>
<com.csipsimple.wizards.impl.Vanbergsystems: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua: int pjmedia_tonegen_rewind(org.pjsip.pjsua.pjmedia_port)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: android.content.Context getContext()>
<org.pjsip.pjsua.pjsua: int jzrtp_getCallId(int)>
<org.pjsip.pjsua.pjsua: long conf_get_max_ports()>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertCheckBox()>
<com.csipsimple.service.PreferenceProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void <clinit>()>
<org.webrtc.videoengine.ViEAndroidGLES20: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)>
<com.csipsimple.wizards.impl.Broadsoft: java.lang.String getDomain()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1: void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.csipsimple.widgets.FitTextView: void refitText(java.lang.String,int)>
<org.webrtc.videoengine.ViEAndroidGLES20: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>
<com.actionbarsherlock.widget.ShareActionProvider: android.content.Context access$0(com.actionbarsherlock.widget.ShareActionProvider)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean)>
<com.csipsimple.wizards.impl.Vitelity$1: void <init>()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getOrdering()>
<com.csipsimple.wizards.impl.Viva: boolean canTcp()>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: boolean hasSubMenu()>
<com.actionbarsherlock.internal.widget.ActionBarContainer: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.csipsimple.service.SipWakeLock: void acquire(long)>
<com.actionbarsherlock.internal.widget.AbsActionBarView: int getContentHeight()>
<org.pjsip.pjsua.pjrpid_element: void delete()>
<com.csipsimple.wizards.impl.AuthorizationImplementation: int getBasePreferenceResource()>
<com.csipsimple.api.SipProfile: java.lang.String getWriteParcelableString(java.lang.String)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: void supportSetDividerDrawable(android.graphics.drawable.Drawable)>
<com.csipsimple.api.ISipService$Stub$Proxy: int startLoopbackTest()>
<com.csipsimple.widgets.DontPressWithParentImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.wizards.impl.A1: java.lang.String getDomain()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getOrder()>
<com.csipsimple.wizards.impl.AlternateServerImplementation: int getBasePreferenceResource()>
<com.csipsimple.api.SipCallSession: boolean isIncoming()>
<org.pjsip.pjsua.pjsua_acc_config: long getReg_use_proxy()>
<com.csipsimple.api.SipCallSession: void setCallId(int)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: android.os.Parcelable access$1(com.actionbarsherlock.internal.widget.IcsAdapterView)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: int getId()>
<com.csipsimple.ui.calllog.CallLogDetailsFragment: void setOnQuitListener(com.csipsimple.ui.calllog.CallLogDetailsFragment$OnQuitListener)>
<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void <init>()>
<com.csipsimple.ui.calllog.GroupingListAdapter: android.database.Cursor getCursor()>
<com.csipsimple.service.receiver.DynamicReceiver4: com.csipsimple.service.SipService access$3(com.csipsimple.service.receiver.DynamicReceiver4)>
<com.csipsimple.api.SipUri: void <clinit>()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams)>
<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession[] access$7(com.csipsimple.ui.incall.InCallActivity)>
<com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void markFinished()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void setFraction(float)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.Runnable getCallback()>
<org.pjsip.pjsua.pjsua_100rel_use$SwigNext: void access$1(int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean expandActionView()>
<com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: int access$0(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1: void run()>
<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: java.lang.String toString()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean isActionViewExpanded()>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void put(int,android.view.View)>
<com.csipsimple.ui.calllog.PhoneCallDetailsHelper: long getCurrentTimeMillis()>
<com.csipsimple.api.SipCallSession: boolean isOngoing()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: android.graphics.drawable.Drawable getIcon()>
<com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams: void <init>(int,int,boolean)>
<org.pjsip.pjsua.pjsua_call_info: void setMedia_cnt(long)>
<com.csipsimple.ui.calllog.CallLogListFragment: com.actionbarsherlock.view.ActionMode access$5(com.csipsimple.ui.calllog.CallLogListFragment)>
<org.pjsip.pjsua.pjsua_codec_info: java.lang.String getBuf_()>
<com.csipsimple.wizards.impl.Keyyo: java.lang.String getDomain()>
<com.actionbarsherlock.app.SherlockListActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.csipsimple.ui.incall.InCallCard: android.widget.TextView access$6(com.csipsimple.ui.incall.InCallCard)>
<org.pjsip.pjsua.pjsua: int verify_url(java.lang.String)>
<com.actionbarsherlock.widget.ActivityChooserView: void setProvider(com.actionbarsherlock.view.ActionProvider)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void setMed_idx(int)>
<com.actionbarsherlock.internal.view.StandaloneActionMode: void onCloseSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
<com.csipsimple.wizards.impl.VoipPlanet: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.Freeconet: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.SimpleImplementation: void bindFields()>
<org.pjsip.pjsua.pjsua_config: long getStun_srv_cnt()>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: java.lang.CharSequence getHintText()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type)>
<com.csipsimple.db.DBAdapter: com.csipsimple.db.DBAdapter open()>
<com.actionbarsherlock.widget.ActivityChooserView: void onMeasure(int,int)>
<com.csipsimple.wizards.impl.Beeztel: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
<com.csipsimple.wizards.impl.Ajtel$1: void <init>()>
<com.actionbarsherlock.internal.widget.IcsSpinner: void setPrompt(java.lang.CharSequence)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.csipsimple.api.ISipService$Stub$Proxy: void setAccountRegistration(int,int)>
<com.csipsimple.ui.incall.InCallMediaControl: void onStartTrackingTouch(android.widget.SeekBar)>
<com.csipsimple.ui.prefs.CodecsFragment$1: int compare(java.util.Map,java.util.Map)>
<org.pjsip.pjsua.pjsua_acc_config: long getReg_first_retry_interval()>
<com.csipsimple.ui.account.AccountsEditListFragment$3: com.csipsimple.ui.account.AccountsEditListFragment access$0(com.csipsimple.ui.account.AccountsEditListFragment$3)>
<com.csipsimple.wizards.WizardUtils$WizardPrioComparator: int compare(java.util.Map,java.util.Map)>
<org.webrtc.videoengine.camera.CameraUtils8: void addCallbackBuffer(android.hardware.Camera,byte[])>
<org.pjsip.pjsua.pjmedia_tone_desc: short getVolume()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3: void <init>()>
<org.pjsip.pjsua.pjsua: int call_dump(int,int,java.lang.String,long,java.lang.String)>
<com.csipsimple.wizards.impl.Basic: boolean needRestart()>
<com.csipsimple.api.SipCallSession: void setIncoming(boolean)>
<org.pjsip.pjsua.pjsua_acc_info: int getHas_registration()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean isCheckable()>
<com.csipsimple.ui.messages.MessageAdapter: void <clinit>()>
<org.pjsip.pjsua.pjsua_mwi_info: void delete()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: long getDuration()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_endpt: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_endpt)>
<com.csipsimple.utils.contacts.ContactsUtils3: android.database.Cursor getContactsByGroup(android.content.Context,java.lang.String)>
<com.csipsimple.wizards.impl.Globtelecom: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState: void writeToParcel(android.os.Parcel,int)>
<org.pjsip.pjsua.pjsua_call_media_info: void delete()>
<com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int)>
<org.pjsip.pjsua.pjsua_buddy_info: void delete()>
<com.csipsimple.service.OutgoingCall: void <clinit>()>
<org.pjsip.pjsua.pjsua_vid_win_info: void setIs_native(int)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener)>
<com.csipsimple.api.ISipService$Stub$Proxy: void sipStop()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)>
<com.actionbarsherlock.internal.widget.ActionBarView: android.graphics.drawable.Drawable access$4(com.actionbarsherlock.internal.widget.ActionBarView)>
<com.actionbarsherlock.ActionBarSherlock: boolean dispatchKeyEvent(android.view.KeyEvent)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$1(com.actionbarsherlock.internal.ActionBarSherlockNative)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void measureScrapChild(android.view.View,int,int)>
<com.csipsimple.ui.dialpad.DialerFragment: void setTextFieldValue(java.lang.CharSequence)>
<org.pjsip.pjsua.pj_str_t: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter: void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: int size()>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void addItemView(android.view.View,int)>
<org.pjsip.pjsua.pjsua_buddy_info: long getSub_term_code()>
<org.pjsip.pjsua.pj_stun_nat_detect_result: void setStatus(int)>
<com.csipsimple.ui.favorites.FavLoader: void onReleaseResources(android.database.Cursor)>
<com.csipsimple.wizards.BasePrefsWizard: void updateValidation()>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: java.lang.Object getTag()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void hide()>
<com.csipsimple.ui.messages.MessageActivity: void <init>()>
<org.pjsip.pjsua.pjsua_call_info: void setRem_aud_cnt(long)>
<com.csipsimple.ui.SipHome$TabsAdapter: void onTabReselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: int getItemId()>
<org.pjsip.pjsua.pjsua_sip_timer_use: int swigValue()>
<org.pjsip.pjsua.pjrpid_element: void <init>()>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: int getViewTypeCount()>
<com.csipsimple.wizards.impl.Blicnet: java.lang.String getDomain()>
<com.csipsimple.service.SipService$ToCall: java.lang.Integer getPjsipAccountId()>
<com.csipsimple.wizards.impl.Blueface: java.lang.String getDomain()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void completeDeferredDestroyActionMode()>
<com.csipsimple.ui.calllog.CallDetailHistoryAdapter: java.lang.Object getItem(int)>
<com.actionbarsherlock.widget.ActivityChooserModel: android.content.pm.ResolveInfo getDefaultActivity()>
<com.actionbarsherlock.internal.view.menu.SubMenuWrapper: com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence)>
<com.csipsimple.ui.dialpad.DialerFragment: void access$0(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.api.ISipService)>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<com.csipsimple.service.SipService$1: com.csipsimple.service.SipService access$0(com.csipsimple.service.SipService$1)>
<com.csipsimple.service.PresenceManager: com.csipsimple.service.SipService access$1(com.csipsimple.service.PresenceManager)>
<com.csipsimple.ui.calllog.CallTypeIconsView: int getCount()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void access$1(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)>
<com.csipsimple.widgets.EditSipUri$ToCall: java.lang.Long getAccountId()>
<com.csipsimple.utils.SmileyParser$Smileys: void <clinit>()>
<com.csipsimple.ui.calllog.GroupingListAdapter$2: void onInvalidated()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport_info: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport_info)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void access$3(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable)>
<org.pjsip.pjsua.pjsua: int transport_close(int,int)>
<com.csipsimple.ui.dialpad.DialerFragment: com.csipsimple.utils.contacts.ContactsSearchAdapter access$1(com.csipsimple.ui.dialpad.DialerFragment)>
<com.csipsimple.widgets.contactbadge.QuickContactBadge: void setDrawable()>
<com.actionbarsherlock.app.ActionBar$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>
<com.csipsimple.api.SipProfileState: void setPjsuaId(int)>
<com.csipsimple.wizards.impl.Ecs: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void show()>
<org.pjsip.pjsua.pjsua: int cancel_stun_resolution(byte[],int)>
<org.pjsip.pjsua.csipsimple_config: int getDisable_tcp_switch()>
<com.csipsimple.wizards.impl.Keyyo: boolean needRestart()>
<com.csipsimple.ui.dialpad.DialerFragment$OnAutoCompleteListItemClicked: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.csipsimple.wizards.impl.FringTalkTw: java.lang.String getDefaultName()>
<com.csipsimple.widgets.Dialpad: void setOnDialKeyListener(com.csipsimple.widgets.Dialpad$OnDialKeyListener)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: int getNavigationItemCount()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchDestroy()>
<org.pjsip.pjsua.pjsua_call_setting: long getAud_cnt()>
<com.actionbarsherlock.internal.widget.AbsActionBarView: int positionChild(android.view.View,int,int,int)>
<com.csipsimple.wizards.impl.UkrTelecom: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.Local: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setEnabled(boolean)>
<com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition: com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition[] values()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchCreateOptionsMenu(android.view.Menu)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: boolean isExpandedFormat()>
<com.csipsimple.ui.incall.InCallActivity: java.lang.Object access$1(com.csipsimple.ui.incall.InCallActivity)>
<org.pjsip.pjsua.pjsua: byte[] buddy_get_user_data(int)>
<com.csipsimple.wizards.BasePrefsWizard: void updateDescriptions()>
<org.pjsip.pjsua.pjsua_media_config: long getMax_media_ports()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void removeUpdateListener(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener)>
<com.csipsimple.api.SipMessage: int getType()>
<com.actionbarsherlock.internal.widget.ActionBarContainer: void onFinishInflate()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void)>
<org.pjsip.pjsua.pjsua: int conf_remove_port(int)>
<com.actionbarsherlock.view.MenuInflater$MenuState: void resetGroup()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean requiresActionButton()>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void onMeasure(int,int)>
<org.pjsip.pjsua.pjsua_buddy_config: long getCPtr(org.pjsip.pjsua.pjsua_buddy_config)>
<org.pjsip.pjsua.pjsua_acc_info: void setOnline_status(int)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: int findInsertIndex(java.util.ArrayList,int)>
<org.pjsip.pjsua.pjsua_acc_config: void setUser_data(byte[])>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void setPromptText(java.lang.CharSequence)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: java.lang.CharSequence getTitleCondensed()>
<org.pjsip.pjsua.pjsip_ssl_method: int swigValue()>
<org.pjsip.pjsua.pjsua_call_setting: void setReq_keyframe_method(long)>
<com.csipsimple.wizards.impl.Voipdoup: java.lang.String getDefaultName()>
<com.csipsimple.utils.Base64$InputStream: void <init>(java.io.InputStream)>
<org.webrtc.videoengine.VideoCaptureAndroid: void onPreviewFrame(byte[],android.hardware.Camera)>
<com.csipsimple.api.ISipService$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<org.pjsip.pjsua.pjsua: int player_get_conf_port(int)>
<org.pjsip.pjsua.pjmedia_tone_desc: void setOn_msec(short)>
<com.csipsimple.api.SipCallSession: int describeContents()>
<org.pjsip.pjsua.pjsua_acc_config: int getPriority()>
<com.csipsimple.ui.incall.InCallCard: boolean access$3(com.csipsimple.ui.incall.InCallCard)>
<com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper access$4(com.csipsimple.service.SipService)>
<com.csipsimple.widgets.contactbadge.QuickContactBadge: void setPosition(com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition)>
<org.pjsip.pjsua.pjmedia_snd_dev_info: void setOutput_count(long)>
<com.csipsimple.ui.incall.AccelerometerListener$AccelerometerHandler: void <init>(com.csipsimple.ui.incall.AccelerometerListener)>
<org.pjsip.pjsua.pjsua_acc_info: int getOnline_status()>
<com.csipsimple.api.ISipConfiguration$Stub: android.os.IBinder asBinder()>
<org.pjsip.pjsua.pjsua_acc_config: long getKa_interval()>
<com.csipsimple.wizards.impl.Advanced: boolean needRestart()>
<com.csipsimple.service.SipService$1: void ignoreNextOutgoingCallFor(java.lang.String)>
<org.pjsip.pjsua.pj_stun_nat_detect_result: void setStatus_text(java.lang.String)>
<com.csipsimple.ui.calllog.CallLogListFragment: void actionModeInvertSelection()>
<com.csipsimple.utils.CustomDistribution: boolean showIssueList()>
<com.csipsimple.wizards.impl.Globtelecom: java.lang.String getDomain()>
<org.pjsip.pjsua.pjsip_redirect_op: int swigValue()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void <init>(android.content.Context)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_transport: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_transport)>
<com.csipsimple.widgets.ScreenLocker: boolean onTouch(android.view.View,android.view.MotionEvent)>
<com.actionbarsherlock.internal.widget.AbsActionBarView: void setSplitActionBar(boolean)>
<com.csipsimple.api.SipCallSession$1: com.csipsimple.api.SipCallSession[] newArray(int)>
<com.csipsimple.wizards.impl.MondotalkCreate: java.lang.String getEditTextValue(android.widget.EditText)>
<com.csipsimple.ui.account.AccountsChooserListFragment: void changeCursor(android.database.Cursor)>
<com.csipsimple.wizards.impl.Viva: java.lang.String getDomain()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void onAttachedToWindow()>
<com.actionbarsherlock.internal.widget.ActionBarView: android.widget.LinearLayout access$6(com.actionbarsherlock.internal.widget.ActionBarView)>
<com.actionbarsherlock.internal.utils.Utility4: int getMeasuredState(android.view.View)>
<org.pjsip.pjsua.pjsua_stream_stat: long getCPtr(org.pjsip.pjsua.pjsua_stream_stat)>
<org.pjsip.pjsua.pjsua: int detect_nat_type()>
<com.csipsimple.ui.help.Legal: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void setAnchorView(android.view.View)>
<org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: void <clinit>()>
<com.csipsimple.widgets.ScreenLocker: android.os.Handler access$0(com.csipsimple.widgets.ScreenLocker)>
<com.csipsimple.wizards.impl.DeltaThree: java.lang.String getDomain()>
<com.csipsimple.wizards.impl.Freephonie: java.lang.String getDomain()>
<com.csipsimple.wizards.impl.Pbxes: boolean canTcp()>
<com.actionbarsherlock.internal.widget.AbsActionBarView: void setSplitView(com.actionbarsherlock.internal.widget.ActionBarContainer)>
<org.pjsip.pjsua.pj_time_val: void setMsec(int)>
<com.csipsimple.wizards.impl.MondotalkCreate: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: com.actionbarsherlock.internal.view.menu.MenuBuilder access$2(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void start()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: char getAlphabeticShortcut()>
<com.csipsimple.ui.dialpad.DialerFragment: void deleteAll()>
<org.pjsip.pjsua.pjsua: int conf_adjust_tx_level(int,float)>
<com.csipsimple.api.SipProfile: java.lang.String getProxyAddress()>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: boolean prefersCondensedTitle()>
<org.pjsip.pjsua.pjsua_sip_timer_use$SwigNext: int access$0()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setNumericShortcut(char)>
<com.csipsimple.wizards.BasePrefsWizard: int getXmlPreferences()>
<com.csipsimple.wizards.impl.Sipnet: java.lang.String getDomain()>
<com.csipsimple.widgets.CheckableListItemView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.ui.incall.InCallMediaControl: void access$1(com.csipsimple.ui.incall.InCallMediaControl,com.csipsimple.api.ISipService)>
<com.actionbarsherlock.internal.widget.ActionBarView$SavedState: void <init>(android.os.Parcel)>
<com.csipsimple.utils.Base64$OutputStream: void resumeEncoding()>
<com.csipsimple.pjsip.PjSipService$1: void <init>(com.csipsimple.pjsip.PjSipService,int)>
<org.pjsip.pjsua.pjsua_mwi_info: long getCPtr(org.pjsip.pjsua.pjsua_mwi_info)>
<com.csipsimple.ui.incall.InCallActivity: void detachVideoPreview()>
<org.pjsip.pjsua.pjrpid_activity: int swigValue()>
<org.pjsip.pjsua.pj_pool_t: void setCapacity(long)>
<com.csipsimple.wizards.impl.AlternateServerImplementation: java.lang.String getDomain()>
<com.csipsimple.wizards.impl.MultifonRu: boolean needRestart()>
<com.csipsimple.wizards.WizardChooser$1: void onClick(android.view.View)>
<org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)>
<com.csipsimple.utils.contacts.ContactsUtils14: android.graphics.Bitmap getContactPhoto(android.content.Context,android.net.Uri,boolean,java.lang.Integer)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op: int swigValue()>
<com.csipsimple.api.ISipService$Stub$Proxy: void updateCallOptions(int,android.os.Bundle)>
<org.pjsip.pjsua.pj_qos_params: short getDscp_val()>
<org.pjsip.pjsua.pjsua_media_config: void setJb_min_pre(int)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int)>
<org.pjsip.pjsua.pjsua_buddy_status$SwigNext: void access$1(int)>
<org.pjsip.pjsua.pjsua_call_setting: long getCPtr(org.pjsip.pjsua.pjsua_call_setting)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: int getCount()>
<com.csipsimple.ui.calllog.CallDetailHistoryAdapter: int getCount()>
<com.csipsimple.utils.Compatibility: int getApiLevel()>
<org.pjsip.pjsua.pjsua_logging_config: long getConsole_level()>
<org.pjsip.pjsua.pj_stun_resolve_result: int getStatus()>
<com.csipsimple.ui.SipHome: void onActivityResult(int,int,android.content.Intent)>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void <init>(com.actionbarsherlock.widget.ActivityChooserView)>
<com.csipsimple.wizards.impl.SipCel: java.lang.String getDomain()>
<com.csipsimple.api.ISipService$Stub$Proxy: int xfer(int,java.lang.String)>
<com.csipsimple.wizards.impl.AccountCreationWebview: com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener access$3(com.csipsimple.wizards.impl.AccountCreationWebview)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: void access$0(com.actionbarsherlock.internal.ActionBarSherlockNative,com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper)>
<com.actionbarsherlock.internal.widget.ActionBarView$SavedState: void <init>(android.os.Parcelable)>
<org.pjsip.pjsua.pjsua_config: void setEnable_unsolicited_mwi(int)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setScrollY(int)>
<com.actionbarsherlock.view.ActionProvider: void setSubUiVisibilityListener(com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener)>
<com.csipsimple.utils.contacts.ContactsWrapper$Phone: java.lang.String getNumber()>
<org.pjsip.pjsua.pjsua: int enum_accs(int[],long[])>
<com.csipsimple.wizards.impl.Eutelia: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>
<com.actionbarsherlock.internal.widget.IcsSpinner: void setEnabled(boolean)>
<org.pjsip.pjsua.pjsua_media_config: int getJb_max()>
<com.csipsimple.utils.contacts.ContactsUtils5: android.graphics.Bitmap getContactPhoto(android.content.Context,android.net.Uri,boolean,java.lang.Integer)>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: android.view.View getCustomView()>
<com.csipsimple.widgets.QuickActionItem: void setImageResource(int)>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getViewTypeCount()>
<com.actionbarsherlock.internal.widget.ActionBarView: android.view.View access$9(com.actionbarsherlock.internal.widget.ActionBarView)>
<com.csipsimple.ui.prefs.Codecs: boolean access$0(com.csipsimple.ui.prefs.Codecs)>
<com.actionbarsherlock.widget.ActivityChooserModel: int getActivityIndex(android.content.pm.ResolveInfo)>
<com.csipsimple.api.SipProfileState: java.lang.String getWizard()>
<com.csipsimple.service.SipService: void <clinit>()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void <clinit>()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size)>
<com.csipsimple.wizards.impl.FreephoneLineCa: boolean canTcp()>
<com.csipsimple.api.ISipService$Stub: android.os.IBinder asBinder()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void <init>()>
<com.actionbarsherlock.internal.widget.ActionBarView: void setHomeButtonEnabled(boolean)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: int getTabCount()>
<com.csipsimple.utils.Log: void <clinit>()>
<com.csipsimple.ui.help.Help: void onResume()>
<com.csipsimple.wizards.impl.Freeconet: boolean needRestart()>
<com.csipsimple.api.SipProfileState: boolean isActive()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code)>
<com.actionbarsherlock.view.MenuInflater$MenuState: java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])>
<com.actionbarsherlock.app.ActionBar: void setHomeButtonEnabled(boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void)>
<org.pjsip.pjsua.pjmedia_tone_digit: short getOn_msec()>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: void setTag(java.lang.Object)>
<com.csipsimple.widgets.DialerCallBar: void setVideoEnabled(boolean)>
<com.csipsimple.wizards.impl.Phonzo: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_vid_req_keyframe_method: org.pjsip.pjsua.pjsua_vid_req_keyframe_method[] values()>
<com.csipsimple.api.ISipService$Stub$Proxy: void addAllAccounts()>
<com.csipsimple.wizards.impl.Cotas: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.Vanbergsystems: boolean needRestart()>
<org.pjsip.pjsua.pjsua_stun_use: org.pjsip.pjsua.pjsua_stun_use[] values()>
<com.actionbarsherlock.widget.ActivityChooserView: android.content.Context access$4(com.actionbarsherlock.widget.ActivityChooserView)>
<com.csipsimple.pjsip.UAStateReceiver: int[] $SWITCH_TABLE$org$pjsip$pjsua$pjrpid_activity()>
<com.actionbarsherlock.ActionBarSherlock: void dispatchPanelClosed(int,android.view.Menu)>
<com.csipsimple.wizards.impl.MondotalkCreate: android.widget.ImageView access$1(com.csipsimple.wizards.impl.MondotalkCreate)>
<com.csipsimple.wizards.impl.CallRomania: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_conf_port_info: int[] getListeners()>
<com.csipsimple.widgets.SlidingTab$Slider: void showTarget()>
<org.webrtc.videoengine.ViESurfaceRenderer: void changeDestRect(int,int)>
<com.csipsimple.wizards.impl.Tanstagi: boolean needRestart()>
<org.pjsip.pjsua.pjsip_ssl_method$SwigNext: void access$1(int)>
<org.pjsip.pjsua.pjsua_acc_config: int getVid_out_auto_transmit()>
<org.pjsip.pjsua.pjsua_call_flag$SwigNext: int access$0()>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: boolean isEnabled(int)>
<com.csipsimple.api.SipProfileState: int getAddedStatus()>
<org.pjsip.pjsua.pjsua_conf_port_info: long getListener_cnt()>
<org.pjsip.pjsua.pjmedia_srtp_use: org.pjsip.pjsua.pjmedia_srtp_use[] values()>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setVisibility(int)>
<com.csipsimple.wizards.impl.Vanbergsystems: java.lang.String getDomain()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener)>
<com.csipsimple.api.SipMessage: java.lang.String getMimeType()>
<org.pjsip.pjsua.pjmedia_dir$SwigNext: int access$0()>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: int getChildHeight(android.view.View)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter access$3(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>
<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void setOnWarnChangedListener(com.csipsimple.ui.warnings.WarningUtils$OnWarningChanged)>
<com.csipsimple.utils.contacts.ContactsWrapper$Phone: void setNumber(java.lang.String)>
<com.csipsimple.widgets.DragnDropListView: void unExpandViews(boolean)>
<com.csipsimple.ui.messages.ConversationsListFragment$5: com.csipsimple.ui.messages.ConversationsListFragment access$0(com.csipsimple.ui.messages.ConversationsListFragment$5)>
<org.pjsip.pjsua.pj_time_val: int getMsec()>
<com.csipsimple.ui.calllog.CallLogDetailsActivity: void onQuit()>
<com.csipsimple.ui.favorites.PresenceStatusSpinner: boolean access$1(com.csipsimple.ui.favorites.PresenceStatusSpinner)>
<com.csipsimple.ui.account.AccountsChooserListFragment: com.csipsimple.ui.account.AccountsLoader access$0(com.csipsimple.ui.account.AccountsChooserListFragment)>
<com.csipsimple.utils.contacts.ContactsAutocompleteAdapter: void <init>(android.content.Context)>
<com.csipsimple.wizards.impl.Localphone: boolean needRestart()>
<com.csipsimple.utils.bluetooth.BluetoothUtils3: void unregister()>
<org.pjsip.pjsua.pjsua_acc_config: void setUnreg_timeout(long)>
<com.actionbarsherlock.app.SherlockListFragment: void <init>()>
<com.csipsimple.service.SipNotifications: void cancelMissedCalls()>
<com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>
<com.csipsimple.wizards.impl.Tanstagi$1: void onClick(android.view.View)>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera AllocateGalaxySFrontCamera()>
<com.csipsimple.wizards.impl.HalooCentrala: java.lang.String getDomain()>
<com.actionbarsherlock.R$styleable: void <clinit>()>
<com.csipsimple.wizards.impl.IiNet: java.lang.String getDomain()>
<org.pjsip.pjsua.pjsua_ice_config_use: org.pjsip.pjsua.pjsua_ice_config_use valueOf(java.lang.String)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: boolean isFocused()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: void setShowAsAction(int)>
<org.pjsip.pjsua.pjsua_ice_config: int getIce_max_host_cands()>
<com.csipsimple.wizards.impl.LiberTalk: java.lang.String getDomain()>
<com.csipsimple.wizards.impl.Netelip: boolean canTcp()>
<com.csipsimple.api.SipUri: boolean isPhoneNumber(java.lang.String)>
<com.csipsimple.ui.prefs.AudioTester: android.widget.ProgressBar access$4(com.csipsimple.ui.prefs.AudioTester)>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: android.graphics.drawable.Drawable getIcon()>
<com.csipsimple.api.SipCallSession: void setConfPort(int)>
<com.csipsimple.wizards.impl.LiberTalk: java.lang.String getDefaultName()>
<com.csipsimple.service.SipService: void deferUnregisterForOutgoing(android.content.ComponentName)>
<org.pjsip.pjsua.pj_qos_params: void setSo_prio(short)>
<com.actionbarsherlock.view.ActionMode: void setTag(java.lang.Object)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: int getRepeatCount()>
<com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.csipsimple.ui.SipHome$TabsAdapter: android.support.v4.app.Fragment getItem(int)>
<com.csipsimple.wizards.impl.VoipPlanet: boolean needRestart()>
<com.csipsimple.wizards.impl.Sipnet: boolean needRestart()>
<org.pjsip.pjsua.pjsua: int buddy_update_pres(int)>
<org.pjsip.pjsua.pjsip_timer_setting: long getMin_se()>
<com.csipsimple.api.SipCallSession: int getCallId()>
<org.pjsip.pjsua.pjsua: int buddy_add(org.pjsip.pjsua.pjsua_buddy_config,int[])>
<com.actionbarsherlock.internal.widget.IcsProgressBar: int getSecondaryProgress()>
<com.csipsimple.api.ISipService$Stub$Proxy: int stopLoopbackTest()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean access$5(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
<org.pjsip.pjsua.dynamic_factory: void <init>()>
<org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)>
<com.csipsimple.api.ISipConfiguration$Stub$Proxy: float getPreferenceFloat(java.lang.String)>
<com.csipsimple.utils.clipboard.Clipboard11: void setContext(android.content.Context)>
<com.csipsimple.service.SipNotifications: void showNotificationForMissedCall(android.content.ContentValues)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasSubMenu()>
<org.pjsip.pjsua.pjsua_media_config: void setJb_init(int)>
<com.csipsimple.service.SipService$ServiceHandler: void handleMessage(android.os.Message)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState: void <init>(android.os.Parcel)>
<com.csipsimple.widgets.ScreenLocker$LockTimerTask: void <init>(com.csipsimple.widgets.ScreenLocker)>
<com.csipsimple.api.SipCallSession: void setLastStatusCode(int)>
<org.pjsip.pjsua.pjsua_conf_port_info: long getChannel_count()>
<com.csipsimple.wizards.impl.Localphone: java.lang.String getDomain()>
<com.csipsimple.api.ISipService$Stub$Proxy: void reAddAllAccounts()>
<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void onMeasure(int,int)>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void <clinit>()>
<com.csipsimple.widgets.EditSipUri: android.widget.EditText getTextField()>
<com.csipsimple.wizards.impl.Fayn: java.lang.String getDomain()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info)>
<com.actionbarsherlock.view.MenuInflater: java.lang.Object[] access$4(com.actionbarsherlock.view.MenuInflater)>
<com.csipsimple.utils.CustomDistribution: boolean forceNoMultipleCalls()>
<com.csipsimple.utils.keyguard.Keyguard3: void unlock()>
<com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1: com.actionbarsherlock.internal.widget.ActionBarView$SavedState[] newArray(int)>
<com.csipsimple.utils.Base64: void <clinit>()>
<org.pjsip.pjsua.pjsip_tls_setting: long getCPtr(org.pjsip.pjsua.pjsip_tls_setting)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()>
<com.csipsimple.api.ISipService$Stub$Proxy: void setPresence(int,java.lang.String,long)>
<org.pjsip.pjsua.csipsimple_config: int getUse_zrtp()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void)>
<com.csipsimple.widgets.SlidingTab$Slider: void setState(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet setDuration(long)>
<com.csipsimple.wizards.impl.Gradwell: java.lang.String getDomain()>
<com.csipsimple.models.Filter: int getPositionFor(android.util.SparseArray,java.lang.Integer)>
<com.actionbarsherlock.widget.ActivityChooserView: int access$8(com.actionbarsherlock.widget.ActivityChooserView)>
<org.pjsip.pjsua.pjsua_media_config: long getThread_cnt()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport)>
<com.csipsimple.wizards.impl.Mobex: void <clinit>()>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType: org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType[] values()>
<org.webrtc.videoengine.camera.CameraUtils8: void unsetCallback(android.hardware.Camera)>
<com.csipsimple.wizards.impl.Rapidvox: boolean canTcp()>
<com.actionbarsherlock.ActionBarSherlock: void dispatchPostResume()>
<org.pjsip.pjsua.pjsip_cred_info: void <init>()>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: com.csipsimple.api.ISipService getConnectedService()>
<com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$5(com.csipsimple.wizards.impl.MondotalkCreate)>
<org.pjsip.pjsua.pj_qos_type$SwigNext: void <clinit>()>
<com.csipsimple.wizards.impl.VoipTiger: java.lang.String getDomain()>
<com.csipsimple.api.SipCallSession: long getAccId()>
<com.csipsimple.wizards.impl.AuthorizationImplementation: void bindFields()>
<com.csipsimple.utils.contacts.ContactsWrapper$Phone: java.lang.String getType()>
<com.csipsimple.pjsip.UAStateReceiver: java.util.HashMap access$7(com.csipsimple.pjsip.UAStateReceiver)>
<com.csipsimple.service.SipService: android.content.Intent getIntent()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void setForceShowIcon(boolean)>
<com.csipsimple.wizards.impl.ZengCn: boolean needRestart()>
<com.csipsimple.widgets.FitTextView: float getMaxTextSize()>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void reset()>
<org.pjsip.pjsua.pjsua_100rel_use$SwigNext: int access$0()>
<com.csipsimple.wizards.impl.Sipnet: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void removeViewAt(int)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: boolean isCheckable()>
<org.pjsip.pjsua.dynamic_factory: long getCPtr(org.pjsip.pjsua.dynamic_factory)>
<org.pjsip.pjsua.pjsua_med_tp_st$SwigNext: void <clinit>()>
<com.csipsimple.widgets.MaxScaleImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.ui.warnings.WarningSDCard: java.lang.String getWarningKey()>
<com.csipsimple.utils.bluetooth.BluetoothUtils3: boolean canBluetooth()>
<com.csipsimple.pjsip.UAStateReceiver: java.util.List access$11(com.csipsimple.pjsip.UAStateReceiver)>
<com.csipsimple.ui.calllog.CallLogDetailsFragment$2: void onClick(android.view.View)>
<com.csipsimple.wizards.impl.AbcVoip: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.Callcentric: boolean needRestart()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean isEnabled()>
<com.csipsimple.wizards.impl.Odorik: java.lang.String getDomain()>
<org.pjsip.pjsua.pjmedia_tone_desc: short getFreq2()>
<org.pjsip.pjsua.pjsua: int acc_set_transport(int,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] getValues()>
<com.csipsimple.widgets.SeekBarPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.ui.incall.InCallInfoGrid: void setMinCellSize(int,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: long getStartDelay()>
<org.webrtc.videoengine.camera.CameraUtils8: void setCallback(org.webrtc.videoengine.VideoCaptureAndroid,int,int,android.hardware.Camera)>
<com.csipsimple.wizards.impl.Freeconet: java.lang.String getDomain()>
<com.csipsimple.ui.favorites.FavListFragment: void onCreate(android.os.Bundle)>
<com.csipsimple.wizards.impl.Tecobu: java.lang.String getDomain()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setNumericShortcut(char)>
<org.pjsip.pjsua.pjsua_turn_config_use: org.pjsip.pjsua.pjsua_turn_config_use valueOf(java.lang.String)>
<com.actionbarsherlock.internal.view.menu.SubMenuWrapper: com.actionbarsherlock.view.SubMenu setHeaderTitle(int)>
<org.pjsip.pjsua.pjsua_media_config: int getJb_max_pre()>
<com.actionbarsherlock.widget.ActivityChooserView: void <clinit>()>
<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.csipsimple.ui.account.AccountsLoader$FilteredProfile: boolean getStatusForOutgoing()>
<com.csipsimple.wizards.WizardChooser$WizardsListAdapter: void bindView(android.view.View,java.util.Map,int,int)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: void setGroupEnabled(int,boolean)>
<org.pjsip.pjsua.pjsip_redirect_op$SwigNext: void access$1(int)>
<com.csipsimple.wizards.impl.Sipgate: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_call_hold_type$SwigNext: void access$1(int)>
<org.pjsip.pjsua.csipsimple_config: int getUse_no_update()>
<org.pjsip.pjsua.pjsua: void jzrtp_SASVerified(int)>
<com.actionbarsherlock.internal.view.menu.SubMenuWrapper: com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View)>
<org.pjsip.pjsua.pjsua_media_config: long getPtime()>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams()>
<org.pjsip.pjsua.pjsua: int get_ec_tail(org.pjsip.pjsua.SWIGTYPE_p_unsigned_int)>
<com.csipsimple.wizards.impl.Cellip: java.lang.String getDefaultName()>
<com.csipsimple.ui.favorites.PresenceStatusSpinner: void setProfileId(long)>
<com.csipsimple.widgets.FitTextView: void onMeasure(int,int)>
<com.csipsimple.ui.dialpad.DigitsEditText: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<org.pjsip.pjsua.pjsua_vid_win_info: void setShow(int)>
<com.csipsimple.wizards.impl.Rapidvox: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1: com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int)>
<org.pjsip.pjsua.pjsua_vid_win_info: long getCPtr(org.pjsip.pjsua.pjsua_vid_win_info)>
<com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1: java.lang.Object[] newArray(int)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setDisplayShowTitleEnabled(boolean)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean isRunning()>
<com.csipsimple.wizards.impl.CongstarQSC: java.lang.String getDomain()>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidPort(int)>
<com.csipsimple.wizards.impl.IPComms: java.lang.String getDomain()>
<org.pjsip.pjsua.pjsua_config: long getNameserver_count()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent)>
<com.csipsimple.ui.incall.AccelerometerListener: void access$2(com.csipsimple.ui.incall.AccelerometerListener,int)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean isVisible()>
<com.actionbarsherlock.internal.view.StandaloneActionMode: void invalidate()>
<com.csipsimple.ui.filters.AccountFiltersListFragment: void onCreate(android.os.Bundle)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void cancel()>
<com.actionbarsherlock.app.SherlockFragment: void onSaveInstanceState(android.os.Bundle)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setChecked(boolean)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: int getOrdering(int)>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)>
<com.csipsimple.ui.warnings.WarningUtils: java.lang.String getIgnoreKey(java.lang.String)>
<com.csipsimple.ui.calllog.CallLogListFragment$4: void onClick(android.content.DialogInterface,int)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: android.app.Activity access$1(com.actionbarsherlock.internal.ActionBarSherlockCompat)>
<com.csipsimple.wizards.impl.ZengCn: boolean canTcp()>
<com.csipsimple.wizards.impl.Messagenet: java.lang.String getDefaultName()>
<com.csipsimple.ui.SipHome$TabsAdapter: void removeTabAt(int)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isQwertyMode()>
<com.csipsimple.utils.NightlyUpdater: java.lang.String access$0(com.csipsimple.utils.NightlyUpdater)>
<com.actionbarsherlock.internal.widget.ActionBarView: int access$12(com.actionbarsherlock.internal.widget.ActionBarView)>
<org.pjsip.pjsua.pjsua_config: long getCPtr(org.pjsip.pjsua.pjsua_config)>
<com.csipsimple.wizards.impl.VoipTiger: java.lang.String getDefaultName()>
<com.csipsimple.utils.CallHandlerPlugin: java.lang.String getNextExcludeTelNumber()>
<com.csipsimple.ui.prefs.AudioTester: com.csipsimple.api.ISipService access$1(com.csipsimple.ui.prefs.AudioTester)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getPropertyName()>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void <init>(com.actionbarsherlock.widget.ActivityChooserView,com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter)>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void setVisibility(int)>
<org.pjsip.pjsua.pj_pool_t: byte[] getFactory_data()>
<com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: boolean isShowing()>
<com.csipsimple.utils.keyguard.Keyguard3: void initActivity(android.app.Activity)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block)>
<com.csipsimple.wizards.impl.Cellip: boolean needRestart()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: android.content.Intent getIntent()>
<com.csipsimple.utils.CustomDistribution: java.lang.String getUserAgent()>
<com.csipsimple.utils.contacts.ContactsWrapper$1: void onClick(android.content.DialogInterface,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e)>
<org.pjsip.pjsua.pjsua_media_config: int getEnable_ice()>
<org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void <clinit>()>
<com.csipsimple.wizards.impl.IpTel: boolean canTcp()>
<org.pjsip.pjsua.pjsip_cred_data_type$SwigNext: void <clinit>()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_info: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_info)>
<org.pjsip.pjsua.pjsip_inv_state$SwigNext: void access$1(int)>
<com.csipsimple.utils.contacts.ContactsUtils3: void updateCSipPresence(android.content.Context,java.lang.String,com.csipsimple.api.SipManager$PresenceStatus,java.lang.String)>
<com.csipsimple.widgets.DialerCallBar: void <init>(android.content.Context,android.util.AttributeSet)>
<org.pjsip.pjsua.pjsua_turn_config: void <init>()>
<com.csipsimple.service.SipNotifications: java.lang.CharSequence buildTickerMessage(android.content.Context,java.lang.String,java.lang.String)>
<com.actionbarsherlock.internal.view.menu.SubMenuWrapper: void clearHeader()>
<com.csipsimple.widgets.CSSListFragment: void <init>()>
<org.pjsip.pjsua.pjsip_tls_setting: int getQos_ignore_error()>
<org.pjsip.pjsua.pjsua: void cancel_timer(org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry)>
<com.csipsimple.wizards.impl.Voocall: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_call_info: int getAcc_id()>
<com.csipsimple.ui.account.AccountsEditListFragment: void showDetails(long,java.lang.String)>
<com.actionbarsherlock.widget.ActivityChooserView: void setDefaultActionButtonContentDescription(int)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.csipsimple.api.ISipConfiguration$Stub$Proxy: java.lang.String getInterfaceDescriptor()>
<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setUp(boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state)>
<com.csipsimple.service.SipNotifications: void cancelCalls()>
<com.csipsimple.ui.calllog.CallLogAdapter: void onContentChanged()>
<com.csipsimple.utils.Log: void setLogLevel(int)>
<com.csipsimple.utils.Columns$Type: com.csipsimple.utils.Columns$Type[] values()>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void setContentView(int)>
<com.csipsimple.api.SipCallSession: void setIsRecording(boolean)>
<org.pjsip.pjsua.pjmedia_snd_dev_info: void delete()>
<org.pjsip.pjsua.pjsua_codec_info: short getPriority()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setModal(boolean)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void delete()>
<com.csipsimple.service.SipService$1: java.lang.String getPresenceStatus(long)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory)>
<com.csipsimple.db.DBAdapter: void addColumn(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String)>
<com.csipsimple.ui.dialpad.DialerFragment$3: void onChooseAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjmedia_snd_dev_info: long getOutput_count()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isShortcutsVisible()>
<com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$1(com.actionbarsherlock.internal.widget.ActionBarView)>
<com.csipsimple.utils.NightlyUpdater: android.os.Bundle getApplicationMetaData(android.content.Context)>
<com.csipsimple.wizards.impl.HalooCentrala: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.ReachPhones: boolean needRestart()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void)>
<org.pjsip.pjsua.pjsua_acc_config: int getSrtp_optional_dup_offer()>
<org.pjsip.pjsua.pj_qos_type$SwigNext: int access$0()>
<com.csipsimple.api.SipUri: java.lang.String getPhoneNumber(com.csipsimple.api.SipUri$ParsedSipContactInfos)>
<com.csipsimple.utils.ExtraPlugins$DynCodecInfos: java.lang.String toString()>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: void setTitle(java.lang.CharSequence)>
<com.csipsimple.ui.incall.InCallActivity: void access$4(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.MediaState)>
<com.csipsimple.ui.incall.InCallActivity: void access$6(com.csipsimple.ui.incall.InCallActivity,boolean)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void onActionModeStarted(com.actionbarsherlock.view.ActionMode)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.csipsimple.ui.incall.InCallMediaControl: void onStopTrackingTouch(android.widget.SeekBar)>
<com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)>
<com.csipsimple.wizards.impl.Cryptel: com.csipsimple.wizards.impl.AccountCreationWebview access$0(com.csipsimple.wizards.impl.Cryptel)>
<com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()>
<org.pjsip.pjsua.pjsua_acc_config: void setLock_codec(long)>
<com.csipsimple.utils.contacts.ContactsUtils3: android.content.Intent getViewContactIntent(java.lang.Long)>
<com.csipsimple.service.MediaManager: boolean isUserWantMicrophoneMute()>
<com.csipsimple.ui.dialpad.DigitsEditText: boolean isTextSelectable()>
<com.csipsimple.ui.dialpad.DialerFragment: void onSaveInstanceState(android.os.Bundle)>
<com.csipsimple.ui.prefs.CodecsFragment: java.util.List access$0(com.csipsimple.ui.prefs.CodecsFragment)>
<com.csipsimple.utils.ArrayUtils: void <clinit>()>
<com.csipsimple.ui.calllog.GroupingListAdapter$2: void <init>(com.csipsimple.ui.calllog.GroupingListAdapter)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: void setProgressBarIndeterminate(boolean)>
<com.csipsimple.ui.incall.InCallControls: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void access$0(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionButton()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean isActionViewExpanded()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void access$3(com.actionbarsherlock.internal.ActionBarSherlockCompat,com.actionbarsherlock.view.ActionMode)>
<org.webrtc.videoengine.camera.CameraUtils5: void addCallbackBuffer(android.hardware.Camera,byte[])>
<org.pjsip.pjsua.pjsua_call_setting: long getVid_cnt()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void dispatchSaveInstanceState(android.util.SparseArray)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setTitle(int)>
<com.csipsimple.wizards.impl.BaseImplementation: boolean isMatching(android.preference.EditTextPreference,java.lang.String)>
<com.csipsimple.utils.UriUtils: java.lang.String uriToString(android.net.Uri)>
<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallControls access$9(com.csipsimple.ui.incall.InCallActivity)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setInterpolator(android.view.animation.Interpolator)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long)>
<org.pjsip.pjsua.csipsimple_config: int getTcp_keep_alive_interval()>
<com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$9(com.csipsimple.wizards.impl.MondotalkCreate)>
<com.actionbarsherlock.internal.widget.ActionBarView: void setCollapsable(boolean)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: void setTitle(java.lang.CharSequence)>
<org.pjsip.pjsua.pjsua_acc_config: void setMwi_expires(long)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.ContextMenu$ContextMenuInfo getMenuInfo()>
<com.csipsimple.utils.DialingFeedback$StopTimerTask: void <init>(com.csipsimple.utils.DialingFeedback)>
<com.csipsimple.wizards.impl.MiTelefono: boolean needRestart()>
<com.csipsimple.utils.CallHandlerPlugin: long getAccountId()>
<org.pjsip.pjsua.pjsua_stream_info: void delete()>
<org.pjsip.pjsua.pjsua: void dump(int)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean setVisibleInt(boolean)>
<com.csipsimple.utils.NightlyUpdater: boolean ignoreCheckByUser()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData()>
<com.csipsimple.wizards.impl.Blicnet: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_logging_config: long getLog_file_flags()>
<org.pjsip.pjsua.pjsua_media_config: void setPtime(long)>
<com.csipsimple.wizards.impl.Ip2Mobile: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: java.lang.CharSequence getTitle()>
<com.csipsimple.api.ISipService$Stub$Proxy: java.lang.String showCallInfosDialog(int)>
<com.csipsimple.widgets.PasswordPreference: void updateCanShowPassword()>
<org.pjsip.pjsua.pjsua_buddy_config: int getSubscribe()>
<com.csipsimple.ui.prefs.GenericPrefs: void <init>()>
<com.csipsimple.api.SipProfileState$1: java.lang.Object[] newArray(int)>
<com.actionbarsherlock.ActionBarSherlock: void setContentView(android.view.View)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: int getOrder()>
<com.csipsimple.service.HeadsetButtonReceiver: android.content.Intent getIntent()>
<com.actionbarsherlock.internal.utils.Utility4: int resolveSizeAndState(int,int,int)>
<org.pjsip.pjsua.pjsip_transport_type_e: int swigValue()>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void onActionModeFinished(com.actionbarsherlock.view.ActionMode)>
<org.pjsip.pjsua.pjsua_acc_config: void setRegister_on_acc_add(int)>
<com.csipsimple.wizards.impl.Innotel: java.lang.String getDefaultName()>
<com.csipsimple.utils.PhoneCapabilityTester: void <clinit>()>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void <clinit>()>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op_param: long getCPtr(org.pjsip.pjsua.pjsua_call_vid_strm_op_param)>
<com.csipsimple.wizards.impl.Pfingo: boolean needRestart()>
<com.csipsimple.ui.SipHome$TabsAdapter: void onTabUnselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>
<com.csipsimple.wizards.BasePrefsWizard: int getFreeSubActivityCode()>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: com.actionbarsherlock.view.MenuItem unwrap()>
<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.csipsimple.wizards.impl.AccountCreationWebview: android.view.ViewGroup access$1(com.csipsimple.wizards.impl.AccountCreationWebview)>
<com.csipsimple.wizards.impl.BaseImplementation: java.lang.String getText(android.preference.EditTextPreference)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.content.Intent getIntent()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setEnabled(boolean)>
<org.pjsip.pjsua.pjsua_callback: void setOn_incoming_call(org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void)>
<com.csipsimple.wizards.impl.Voocall: java.lang.String getDomain()>
<com.csipsimple.wizards.impl.VoipBel: boolean needRestart()>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: java.lang.CharSequence getContentDescription()>
<com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition: com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition valueOf(java.lang.String)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void setShowAsAction(int)>
<org.pjsip.pjsua.pj_time_val: long getCPtr(org.pjsip.pjsua.pj_time_val)>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: android.view.View getCustomView()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setSelectedNavigationItem(int)>
<com.csipsimple.plugins.telephony.CallHandler: void <clinit>()>
<org.pjsip.pjsua.pjsua_codec_info: long getCPtr(org.pjsip.pjsua.pjsua_codec_info)>
<com.csipsimple.wizards.impl.ITTelenet: java.lang.String getDomain()>
<com.csipsimple.api.SipConfigManager: void <clinit>()>
<com.csipsimple.wizards.impl.BelCentrale: void <clinit>()>
<com.csipsimple.wizards.impl.Haloo: java.lang.String getDomain()>
<com.csipsimple.service.SipService: void access$9(com.csipsimple.service.SipService)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: int getProgress()>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: android.content.pm.ResolveInfo getDefaultActivity()>
<com.csipsimple.widgets.ScreenLocker: void updateTabLayout(int,int,int,int)>
<com.csipsimple.wizards.impl.MagicJack: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.actionbarsherlock.ActionBarSherlock: boolean dispatchMenuOpened(int,android.view.Menu)>
<com.csipsimple.api.SipCallSession: java.lang.String getLastStatusComment()>
<com.csipsimple.ui.incall.InCallMediaControl: android.widget.ProgressBar access$3(com.csipsimple.ui.incall.InCallMediaControl)>
<com.csipsimple.wizards.impl.DvcNg: java.lang.String getDomain()>
<com.csipsimple.api.SipProfile: java.lang.String getProfileName()>
<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession[] getCalls()>
<org.pjsip.pjsua.pjsua_media_config: int getSnd_auto_close_time()>
<com.csipsimple.utils.Compatibility: int getHomeMenuId()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence)>
<org.pjsip.pjsua.pjsua_state$SwigNext: void access$1(int)>
<org.pjsip.pjsua.pjmedia_tone_digit: void <init>()>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: void setDividerPadding(int)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean requestFeature(int)>
<org.pjsip.pjsua.pjsua_media_config: void setIlbc_mode(long)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void sortNodes()>
<org.webrtc.videoengine.ViEAndroidGLES20: void DeRegisterNativeObject()>
<com.csipsimple.utils.bluetooth.BluetoothUtils3: void register()>
<org.pjsip.pjsua.pjsua_med_tp_state_info: long getMed_idx()>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void setAnchor(android.graphics.Rect)>
<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.SubMenu getSubMenu()>
<com.csipsimple.ui.incall.InCallActivity$CallsAdapter: void <init>(com.csipsimple.ui.incall.InCallActivity,boolean)>
<org.pjsip.pjsua.pjsua_ice_config: long getCPtr(org.pjsip.pjsua.pjsua_ice_config)>
<org.pjsip.pjsua.pjsua_conf_port_info: void setSamples_per_frame(long)>
<org.pjsip.pjsua.pj_pool_t: long getIncrement_size()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setSubtitle(int)>
<com.csipsimple.wizards.impl.EuroTelefon: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.Telsome: java.lang.String getDefaultName()>
<com.csipsimple.widgets.CheckableListItemView: void requestLayout()>
<org.pjsip.pjsua.pjsua_conf_port_info: long getSamples_per_frame()>
<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState: void <init>(android.os.Parcel)>
<org.pjsip.pjsua.pjsua: int set_null_snd_dev()>
<org.pjsip.pjsua.pjsua_buddy_status: int swigValue()>
<com.csipsimple.widgets.FitTextView: void onSizeChanged(int,int,int,int)>
<com.csipsimple.utils.DialingFeedback: void pause()>
<com.actionbarsherlock.widget.ActivityChooserView: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>
<com.csipsimple.service.SipService$StartRunnable: void doRun()>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: void invalidate()>
<com.csipsimple.wizards.impl.Sonetel: java.lang.String getDefaultName()>
<com.csipsimple.service.SipService$ServicePhoneStateReceiver: void <init>(com.csipsimple.service.SipService)>
<com.csipsimple.wizards.impl.ReachPhones: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.ZonPt: boolean needRestart()>
<com.csipsimple.api.ISipService$Stub$Proxy: void makeCallWithOptions(java.lang.String,int,android.os.Bundle)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: java.lang.Object getTarget()>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: boolean isOverflowReserved()>
<org.pjsip.pjsua.pjmedia_tone_digit: void delete()>
<com.csipsimple.ui.messages.ConverstationsAdapter: void <clinit>()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setVisible(boolean)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: boolean isShowing()>
<com.csipsimple.service.SipService$ToCall: java.lang.String getCallee()>
<com.csipsimple.utils.CustomDistribution: boolean supportCallRecord()>
<com.csipsimple.wizards.impl.Pbxes: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsip_cred_data_type: org.pjsip.pjsua.pjsip_cred_data_type valueOf(java.lang.String)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: java.lang.CharSequence getTitle()>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setIcon(int)>
<com.actionbarsherlock.internal.widget.CapitalizingTextView: void <clinit>()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)>
<com.csipsimple.wizards.impl.Viva: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void setTarget(java.lang.Object)>
<com.actionbarsherlock.widget.ActivityChooserView$3: void <init>(com.actionbarsherlock.widget.ActivityChooserView)>
<com.csipsimple.widgets.CheckableListItemView: void <init>(android.content.Context)>
<com.csipsimple.ui.incall.InCallCard: float access$0()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setShortcut(boolean,char)>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void removeAllItems()>
<com.csipsimple.api.ISipService$Stub$Proxy: void zrtpSASVerified(int)>
<com.csipsimple.ui.account.AccountsEditList: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isCheckable()>
<com.csipsimple.widgets.QuickActionItem: void setText(java.lang.CharSequence)>
<com.csipsimple.ui.prefs.GenericPrefs: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.csipsimple.wizards.impl.Sipkom: boolean needRestart()>
<com.csipsimple.wizards.impl.WiMobile: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: com.actionbarsherlock.internal.view.menu.MenuBuilder access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setEnabled(boolean)>
<com.csipsimple.wizards.impl.Sip2Sip: java.lang.String getDomain()>
<com.csipsimple.ui.messages.MessageFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
<com.csipsimple.wizards.impl.SipSorcery: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.utils.Utility4: int combineMeasuredStates(int,int)>
<com.csipsimple.widgets.AccountChooserButton: void setChangeable(boolean)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: int getCount()>
<com.csipsimple.api.ISipConfiguration$Stub$Proxy: java.lang.String getPreferenceString(java.lang.String)>
<com.csipsimple.api.MediaState: int describeContents()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.CharSequence getHeaderTitle()>
<com.actionbarsherlock.internal.view.ActionProviderWrapper: android.view.View onCreateActionView()>
<com.actionbarsherlock.app.ActionBar$LayoutParams: void <init>(int,int)>
<org.pjsip.pjsua.pjsua_ice_config: void <init>()>
<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.service.SipNotifications access$1(com.csipsimple.pjsip.UAStateReceiver)>
<com.csipsimple.api.ISipConfiguration$Stub$Proxy: android.os.IBinder asBinder()>
<org.pjsip.pjsua.pjsua_media_config: long getChannel_count()>
<com.csipsimple.api.ISipService$Stub$Proxy: void setEchoCancellation(boolean)>
<com.csipsimple.wizards.impl.TOnline: boolean needRestart()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: android.view.View getCustomView()>
<com.csipsimple.wizards.impl.Ecs: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.favorites.PresenceStatusSpinner: void onDetachedFromWindow()>
<com.csipsimple.db.DBProvider: void broadcastAccountChange(long)>
<com.csipsimple.api.ISipService$Stub$Proxy: int reinvite(int,boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session)>
<com.csipsimple.api.MediaState$1: com.csipsimple.api.MediaState[] newArray(int)>
<com.csipsimple.api.ISipService$Stub$Proxy: com.csipsimple.api.SipProfileState getSipProfileState(int)>
<org.pjsip.pjsua.pjsua_call_setting: void setAud_cnt(long)>
<com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$7(com.actionbarsherlock.internal.widget.ActionBarView)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setShortcut(char,char)>
<com.csipsimple.wizards.impl.Viva: boolean needRestart()>
<com.csipsimple.wizards.impl.Catitel: java.lang.String getDefaultName()>
<com.actionbarsherlock.widget.ActivityChooserView: android.widget.FrameLayout access$6(com.actionbarsherlock.widget.ActivityChooserView)>
<com.actionbarsherlock.widget.ActivityChooserView: void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)>
<com.csipsimple.wizards.impl.Fayn: boolean needRestart()>
<org.pjsip.pjsua.pjsua_100rel_use: int swigValue()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: android.view.View getActionView()>
<org.pjsip.pjsua.pjsua_buddy_info: int getMonitor_pres()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void updateMenuView(boolean)>
<com.csipsimple.ui.incall.InCallInfoGrid$CallDataObserver: void <init>(com.csipsimple.ui.incall.InCallInfoGrid)>
<com.csipsimple.wizards.impl.BGTel: java.lang.String getDomain()>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: java.lang.Object getItem(int)>
<com.actionbarsherlock.internal.widget.ActionBarView$1: void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView)>
<com.csipsimple.api.SipProfileState: int getExpires()>
<com.csipsimple.ui.messages.MessageFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<org.pjsip.pjsua.pjmedia_tone_desc: void setOff_msec(short)>
<com.csipsimple.wizards.WizardUtils: void <clinit>()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int__int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int__int)>
<com.actionbarsherlock.view.MenuInflater: java.lang.Class[] access$3()>
<com.csipsimple.ui.account.AccountsEditListFragment$AccountStatusContentObserver: void <init>(com.csipsimple.ui.account.AccountsEditListFragment,android.os.Handler)>
<org.pjsip.pjsua.pjsip_tls_setting: void setQos_ignore_error(int)>
<com.csipsimple.ui.favorites.PresenceStatusSpinner: void access$0(com.csipsimple.ui.favorites.PresenceStatusSpinner,com.csipsimple.api.ISipService)>
<org.pjsip.pjsua.pjsua: int call_recording_stop(int)>
<com.actionbarsherlock.app.SherlockFragment: com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity()>
<com.csipsimple.ui.incall.InCallInfoGrid$CallDataObserver: void <init>(com.csipsimple.ui.incall.InCallInfoGrid,com.csipsimple.ui.incall.InCallInfoGrid$CallDataObserver)>
<com.actionbarsherlock.internal.utils.Utility9: java.lang.CharSequence stringToUpper(java.lang.CharSequence)>
<com.csipsimple.api.SipCallSession: boolean equals(java.lang.Object)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: android.view.animation.Interpolator getInterpolator()>
<com.csipsimple.wizards.impl.MondotalkCreate: void onDestroy()>
<com.csipsimple.ui.help.Help$1: void onClick(android.content.DialogInterface,int)>
<com.actionbarsherlock.ActionBarSherlock: boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<org.pjsip.pjsua.pjsua_transport_config: long getPort()>
<com.actionbarsherlock.widget.ShareActionProvider: java.lang.String access$1(com.actionbarsherlock.widget.ShareActionProvider)>
<org.pjsip.pjsua.pj_stun_nat_detect_result: void setNat_type(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type)>
<com.actionbarsherlock.internal.widget.CapitalizingTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setDisplayHomeAsUpEnabled(boolean)>
<com.csipsimple.wizards.impl.Betamax: boolean needRestart()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setIcon(int)>
<org.pjsip.pjsua.pjsua_msg_data: void setHdr_list(org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr)>
<com.csipsimple.pjsip.PjSipService: long getRxTxLevel(int)>
<com.csipsimple.api.ISipService$Stub$Proxy: void removeAllAccounts()>
<com.csipsimple.utils.contacts.ContactsUtils3: java.util.List getCSipPhonesContact(android.content.Context,java.lang.Long)>
<com.csipsimple.api.SipProfileState: void setDatabaseId(int)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void)>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object)>
<com.csipsimple.ui.calllog.CallTypeIconsView: void onMeasure(int,int)>
<com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$10(com.csipsimple.wizards.impl.MondotalkCreate)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: void <init>(android.content.Context,boolean)>
<org.pjsip.pjsua.pjsua_acc_info: int getReg_last_err()>
<com.csipsimple.api.SipProfileState: int describeContents()>
<org.pjsip.pjsua.pjsua: int acc_is_valid(int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state)>
<com.csipsimple.ui.warnings.WarningNoStun: void bindView()>
<org.pjsip.pjsua.pjsua_call_hold_type$SwigNext: void <clinit>()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener)>
<com.actionbarsherlock.internal.app.ActionBarImpl: int getTabCount()>
<org.pjsip.pjsua.pjsip_event_id_e: org.pjsip.pjsua.pjsip_event_id_e[] values()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: boolean canAnimate()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>
<com.csipsimple.ui.SipHome: java.util.ArrayList getVisibleLeafs(android.view.View)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: char getAlphabeticShortcut()>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)>
<org.pjsip.pjsua.pjmedia_snd_dev_info: long getInput_count()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void)>
<com.csipsimple.ui.incall.InCallCard$ContactLoadedHandler: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setChecked(boolean)>
<com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView)>
<com.csipsimple.ui.prefs.CodecsFragment$1: int compare(java.lang.Object,java.lang.Object)>
<com.csipsimple.ui.incall.InCallAnswerControls: void dispatchTriggerEvent(int)>
<com.csipsimple.api.SipUri: android.net.Uri forgeSipUri(java.lang.String,java.lang.String)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void <clinit>()>
<org.pjsip.pjsua.csipsimple_config: void setVideo_render_implementation(org.pjsip.pjsua.dynamic_factory)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean hasFeature(int)>
<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.ISipService access$0(com.csipsimple.ui.incall.InCallActivity)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setNavigationMode(int)>
<org.pjsip.pjsua.pj_stun_resolve_result: long getCPtr(org.pjsip.pjsua.pj_stun_resolve_result)>
<com.csipsimple.wizards.impl.Ekiga: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsip_cred_data_type: int swigValue()>
<com.actionbarsherlock.ActionBarSherlock: void dispatchStop()>
<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallInfoGrid access$11(com.csipsimple.ui.incall.InCallActivity)>
<com.csipsimple.ui.help.Help$HelpArrayAdapter: void <init>(com.csipsimple.ui.help.Help,android.content.Context,java.util.List)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: int lookForSelectablePosition(int,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setTitle(int)>
<com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor$1: void run()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<org.pjsip.pjsua.pjsua_media_config: long getIlbc_mode()>
<com.csipsimple.widgets.SeekBarPreference: void onStartTrackingTouch(android.widget.SeekBar)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void <clinit>()>
<com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String)>
<org.pjsip.pjsua.pjsip_tls_setting: int getRequire_client_cert()>
<org.pjsip.pjsua.pjsua_med_tp_state_info: long getCPtr(org.pjsip.pjsua.pjsua_med_tp_state_info)>
<com.csipsimple.widgets.HorizontalQuickActionWindow$1: float getInterpolation(float)>
<org.pjsip.pjsua.pjsua_acc_config: void setTransport_id(int)>
<org.pjsip.pjsua.pjsua_vid_preview_param: long getCPtr(org.pjsip.pjsua.pjsua_vid_preview_param)>
<com.csipsimple.api.SipProfileState: void setAddedStatus(int)>
<com.actionbarsherlock.widget.ActivityChooserView$1: void onInvalidated()>
<com.csipsimple.wizards.impl.Ajtel: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_acc_config: int getAllow_contact_rewrite()>
<com.csipsimple.wizards.impl.Mondotalk: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.Cryptel: boolean needRestart()>
<com.csipsimple.utils.ContactsAsyncHelper$1: void <init>(com.csipsimple.utils.ContactsAsyncHelper,int)>
<com.csipsimple.api.SipProfile: java.lang.String getUriString()>
<org.pjsip.pjsua.pjmedia_tone_desc: short getOff_msec()>
<com.actionbarsherlock.internal.widget.ActionBarView: void setWindowCallback(com.actionbarsherlock.view.Window$Callback)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: void setUiOptions(int)>
<com.csipsimple.api.MediaState: void writeToParcel(android.os.Parcel,int)>
<org.pjsip.pjsua.pjsua: int acc_clean_all_registrations(int)>
<org.pjsip.pjsua.pjsua_ice_config_use: int swigValue()>
<com.csipsimple.widgets.AccountWidgetProvider: void <clinit>()>
<com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context getThemedContext()>
<org.pjsip.pjsua.pjsua_acc_config: void setReg_first_retry_interval(long)>
<com.csipsimple.ui.incall.InCallMediaControl: void onPause()>
<org.pjsip.pjsua.pjsua_buddy_config: void setSubscribe(int)>
<com.csipsimple.ui.incall.AccelerometerListener: com.csipsimple.ui.incall.AccelerometerListener$OrientationListener access$4(com.csipsimple.ui.incall.AccelerometerListener)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: int getDisplayOptions()>
<com.csipsimple.wizards.impl.Ajtel: java.lang.String getDomain()>
<org.pjsip.pjsua.pjsua_config: void setHangup_forked_call(int)>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: void setPosition(int)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: java.lang.CharSequence getTitle()>
<org.pjsip.pjsua.pjmedia_tone_desc: short getFreq1()>
<com.csipsimple.ui.dialpad.DialerFragment: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<com.csipsimple.ui.account.AccountsLoader: boolean access$4(com.csipsimple.ui.account.AccountsLoader)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()>
<org.pjsip.pjsua.pjsua_acc_config: long getReg_retry_interval()>
<org.pjsip.pjsua.pjsua: int conf_adjust_rx_level(int,float)>
<com.csipsimple.utils.PhoneCapabilityTester: boolean isUsingTwoPanes(android.content.Context)>
<org.pjsip.pjsua.pjsua_reg_info: long getCPtr(org.pjsip.pjsua.pjsua_reg_info)>
<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState: void <init>(android.os.Parcel,com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState)>
<org.pjsip.pjsua.pjsua: int call_set_user_data(int,byte[])>
<com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<org.pjsip.pjsua.pjsua: int call_get_rem_nat_type(int,org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type)>
<com.csipsimple.wizards.impl.Zeng: java.lang.String getDomain()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: android.app.Activity access$0(com.actionbarsherlock.internal.app.ActionBarWrapper)>
<com.actionbarsherlock.internal.utils.Utility4: boolean isLongPressEvent(android.view.KeyEvent)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: float getAnimatedFraction()>
<com.csipsimple.ui.incall.InCallActivity: android.os.PowerManager$WakeLock access$18(com.csipsimple.ui.incall.InCallActivity)>
<org.pjsip.pjsua.pjsua_acc_info: int getIs_default()>
<com.csipsimple.wizards.impl.Netelip: java.lang.String getDefaultName()>
<com.csipsimple.ui.account.AccountsEditListFragment: void onPause()>
<com.csipsimple.pjsip.UAStateReceiver: void broadCastAndroidCallState(java.lang.String,java.lang.String)>
<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void <init>()>
<org.pjsip.pjsua.pjsua_call_setting: void <init>()>
<com.csipsimple.wizards.impl.Vitelity: java.lang.String getDomain()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1: java.lang.Object[] newArray(int)>
<org.pjsip.pjsua.pjsip_redirect_op: org.pjsip.pjsua.pjsip_redirect_op valueOf(java.lang.String)>
<org.pjsip.pjsua.csipsimple_config: int getUse_compact_form_headers()>
<com.csipsimple.ui.filters.EditFilter: void <init>()>
<com.actionbarsherlock.app.SherlockFragment: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<org.pjsip.pjsua.pjsua_reg_info: void delete()>
<com.csipsimple.wizards.impl.AccountCreationWebview: android.view.ViewGroup access$2(com.csipsimple.wizards.impl.AccountCreationWebview)>
<com.actionbarsherlock.internal.utils.Utility11: void jumpDrawablesToCurrentState(android.view.View)>
<com.csipsimple.wizards.impl.FringTalkTw: java.lang.String getDomain()>
<org.pjsip.pjsua.pjsip_inv_state: org.pjsip.pjsua.pjsip_inv_state valueOf(java.lang.String)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: long getSelectedItemId()>
<com.csipsimple.widgets.FitTextView: void setMaxTextSize(int)>
<com.csipsimple.ui.favorites.FavAdapter: android.content.Context access$0(com.csipsimple.ui.favorites.FavAdapter)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: long access$5(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator)>
<org.pjsip.pjsua.pjsua: int call_get_stream_stat(int,long,org.pjsip.pjsua.pjsua_stream_stat)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: boolean isInTouchMode()>
<com.csipsimple.wizards.impl.Smarto: java.lang.String getDefaultName()>
<com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: com.actionbarsherlock.widget.ActivityChooserModel access$1(com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: boolean isVisible()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getItemId()>
<org.pjsip.pjsua.pjsua_acc_info: int getExpires()>
<org.pjsip.pjsua.pjsua_buddy_status: org.pjsip.pjsua.pjsua_buddy_status valueOf(java.lang.String)>
<com.actionbarsherlock.widget.ShareActionProvider: com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener access$2(com.actionbarsherlock.widget.ShareActionProvider)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setUiOptions(int)>
<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.pjsip.UAStateReceiver$WorkerHandler access$13(com.csipsimple.pjsip.UAStateReceiver)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
<org.pjsip.pjsua.pjsua_stun_use$SwigNext: void <clinit>()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.csipsimple.plugins.codecs.ReceiverSilk: void <init>()>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void select()>
<org.pjsip.pjsua.pjsua_call_info: long getMedia_cnt()>
<org.pjsip.pjsua.pjsua_config: int getSrtp_secure_signaling()>
<com.csipsimple.ui.incall.InCallCard: void onLayout(boolean,int,int,int,int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)>
<com.csipsimple.ui.account.AccountsEditListFragment: void <clinit>()>
<com.csipsimple.widgets.ScreenLocker: void onLayout(boolean,int,int,int,int)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void)>
<com.csipsimple.wizards.impl.Betamax: java.lang.String getDomain()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: float getFraction()>
<org.pjsip.pjsua.pjsip_ssl_method$SwigNext: void <clinit>()>
<com.csipsimple.wizards.impl.Sipgate: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Sipgate)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter: void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<org.pjsip.pjsua.pj_pool_t: void setObj_name(java.lang.String)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4: void <init>()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl getExpandedItem()>
<com.actionbarsherlock.internal.widget.ActionBarView: void setCustomNavigationView(android.view.View)>
<org.pjsip.pjsua.pjsua_transport_info: void setAddr_len(long)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)>
<com.csipsimple.api.SipProfile: java.lang.String getPassword()>
<com.csipsimple.wizards.impl.AbcVoip: java.lang.String getDomain()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setFrameDelay(long)>
<com.csipsimple.widgets.PasswordPreference: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<org.pjsip.pjsua.pjmedia_tone_desc: void setFreq1(short)>
<com.csipsimple.wizards.impl.PlanetPhone: boolean needRestart()>
<com.csipsimple.widgets.SlidingTab$Slider: void hide()>
<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void <init>(com.csipsimple.ui.outgoingcall.OutgoingCallListFragment,android.database.Cursor)>
<org.pjsip.pjsua.pjsua_call_info: void setRem_vid_cnt(long)>
<com.actionbarsherlock.internal.widget.AbsActionBarView: void setContentHeight(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setRepeatMode(int)>
<com.csipsimple.wizards.impl.Ippi: boolean canTcp()>
<com.csipsimple.api.SipUri: java.lang.String getCanonicalSipContact(java.lang.String)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <clinit>()>
<com.csipsimple.ui.warnings.WarningUtils: void <clinit>()>
<com.csipsimple.wizards.impl.Innotel: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)>
<com.csipsimple.service.SipService: com.csipsimple.api.SipManager$PresenceStatus getPresence()>
<com.csipsimple.service.SipService: android.os.IBinder onBind(android.content.Intent)>
<com.csipsimple.wizards.impl.Local: boolean needRestart()>
<com.csipsimple.wizards.impl.VoipTel: boolean needRestart()>
<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: android.os.Parcelable onSaveInstanceState()>
<org.pjsip.pjsua.pjsua_codec_info: void setBuf_(java.lang.String)>
<com.csipsimple.utils.PreferencesWrapper: void setPreferenceFloatValue(java.lang.String,float)>
<org.pjsip.pjsua.csipsimple_config: int getTls_keep_alive_interval()>
<com.actionbarsherlock.internal.widget.IcsSpinner: void setPromptId(int)>
<org.pjsip.pjsua.pjmedia_tone_desc: short getOn_msec()>
<com.csipsimple.api.SipCallSession: boolean isAfterEnded()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter)>
<com.csipsimple.wizards.impl.WiMobile: java.lang.String getDomain()>
<com.csipsimple.ui.favorites.FavAdapter$4: void onClick(android.content.DialogInterface,int)>
<com.csipsimple.ui.incall.InCallCard: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getMaxActivityCount()>
<org.pjsip.pjsua.pjsua: void css_on_call_media_state(int)>
<com.csipsimple.widgets.HorizontalQuickActionWindow: boolean onKeyDown(int,android.view.KeyEvent)>
<org.pjsip.pjsua.pjsua_acc_info: void setBuf_(java.lang.String)>
<org.pjsip.pjsua.pjsua_buddy_status$SwigNext: void <clinit>()>
<com.actionbarsherlock.app.SherlockDialogFragment: com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity()>
<org.pjsip.pjsua.pjsip_tls_setting: int getVerify_server()>
<org.pjsip.pjsua.pjsua_call_info: void delete()>
<com.csipsimple.utils.clipboard.Clipboard1: void setContext(android.content.Context)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: int getOrder()>
<com.csipsimple.api.SipMessage: java.lang.String getTo()>
<com.csipsimple.widgets.CheckableListItemView: void setChecked(boolean)>
<org.pjsip.pjsua.pjsua: int enum_codecs(org.pjsip.pjsua.pjsua_codec_info,long[])>
<com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.wizards.impl.LiberTalk: boolean needRestart()>
<com.csipsimple.ui.incall.InCallActivity$4: void onClick(android.content.DialogInterface,int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<com.csipsimple.ui.incall.InCallCard: android.widget.ImageView access$5(com.csipsimple.ui.incall.InCallCard)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: void <clinit>()>
<com.csipsimple.utils.PreferencesWrapper: java.io.File getZrtpFolder(android.content.Context)>
<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setPreferenceScreenType(java.lang.Class,java.lang.String,int)>
<com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarView access$6(com.actionbarsherlock.internal.app.ActionBarImpl)>
<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onCreate(android.os.Bundle)>
<com.csipsimple.ui.dialpad.DialerLayout: boolean canShowList()>
<org.pjsip.pjsua.pjsua_transport_info: long getAddr_len()>
<org.pjsip.pjsua.pjsua_buddy_info: void finalize()>
<com.csipsimple.ui.dialpad.DialerFragment: void keyPressed(int)>
<com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
<org.pjsip.pjsua.pjmedia_dir: int swigValue()>
<com.csipsimple.wizards.impl.IpTel: java.lang.String getDefaultName()>
<com.csipsimple.api.ISipService$Stub$Proxy: void forceStopService()>
<com.csipsimple.wizards.impl.MondotalkCreate: android.view.View access$2(com.csipsimple.wizards.impl.MondotalkCreate)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback)>
<com.csipsimple.wizards.impl.Mobex: java.lang.String getDomain()>
<com.actionbarsherlock.widget.ActivityChooserModel: android.content.pm.ResolveInfo getActivity(int)>
<org.pjsip.pjsua.pjsip_cred_data_type$SwigNext: void access$1(int)>
<org.pjsip.pjsua.pjsua_med_tp_st: int swigValue()>
<com.csipsimple.utils.bluetooth.BluetoothUtils3: void setContext(android.content.Context)>
<org.pjsip.pjsua.pjsua_msg_data: void <init>()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: android.view.LayoutInflater access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>
<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void onLayout(boolean,int,int,int,int)>
<org.pjsip.pjsua.pjsua_buddy_info: void setMonitor_pres(int)>
<com.csipsimple.ui.messages.ConversationsListFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: android.graphics.drawable.Drawable getIcon()>
<org.pjsip.pjsua.csipsimple_acc_config: long getCPtr(org.pjsip.pjsua.csipsimple_acc_config)>
<com.actionbarsherlock.internal.widget.ActionBarContextView$1: void onClick(android.view.View)>
<com.csipsimple.service.SipNotifications: void showNotificationForCall(com.csipsimple.api.SipCallSession)>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void setId(int)>
<com.csipsimple.wizards.impl.Flowroute: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_config: long getOutbound_proxy_cnt()>
<org.pjsip.pjsua.pjsua_buddy_info: void setSub_state_name(java.lang.String)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)>
<com.csipsimple.wizards.impl.EasyBell: boolean needRestart()>
<com.csipsimple.widgets.SeekBarPreference: void onStopTrackingTouch(android.widget.SeekBar)>
<com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: int getPreferenceType()>
<com.csipsimple.service.PreferenceProvider: java.lang.String getType(android.net.Uri)>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: java.lang.String GetDeviceUniqueName(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setRepeatCount(int)>
<com.csipsimple.service.SipService$1: void <init>(com.csipsimple.service.SipService)>
<org.pjsip.pjsua.pjsua_conf_port_info: void setListeners(int[])>
<com.csipsimple.ui.incall.InCallMediaControl: void onClick(android.view.View)>
<com.actionbarsherlock.widget.ActivityChooserModel: android.os.Handler access$5(com.actionbarsherlock.widget.ActivityChooserModel)>
<com.csipsimple.api.ISipService$Stub$Proxy: void sendMessage(java.lang.String,java.lang.String,long)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void onMeasure(int,int)>
<com.csipsimple.utils.contacts.ContactsUtils3: int getContactIndexableColumnIndex(android.database.Cursor)>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object)>
<org.pjsip.pjsua.pjsua_call_setting: long getReq_keyframe_method()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setDisplayShowHomeEnabled(boolean)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter: void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: void removeGroup(int)>
<org.pjsip.pjsua.pjsua_med_tp_state_info: void setMed_idx(long)>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)>
<com.csipsimple.widgets.contactbadge.ContactBadge3: android.widget.ImageView getImageView()>
<com.actionbarsherlock.widget.ActivityChooserView: boolean access$11()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: java.lang.Object clone()>
<com.actionbarsherlock.internal.ResourcesCompat: boolean getResources_getBoolean(android.content.Context,int)>
<com.actionbarsherlock.ActionBarSherlock: void dispatchPostCreate(android.os.Bundle)>
<com.csipsimple.ui.prefs.hc.MainPrefs: android.preference.PreferenceActivity$Header onGetInitialHeader()>
<com.csipsimple.wizards.impl.Vono: java.lang.String getDomain()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.view.View findViewForItem(com.actionbarsherlock.view.MenuItem)>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getDividerWidth()>
<com.actionbarsherlock.internal.utils.Utility4: void setBackgroundDrawable(android.view.View,android.graphics.drawable.Drawable)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setChecked(boolean)>
<org.pjsip.pjsua.pjmedia_tone_digit: void setOn_msec(short)>
<com.csipsimple.wizards.WizardChooser: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>
<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void filter(java.lang.CharSequence)>
<org.pjsip.pjsua.pj_time_val: void finalize()>
<org.pjsip.pjsua.pjrpid_activity$SwigNext: void access$1(int)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setCustomView(int)>
<com.csipsimple.db.DBProvider: void <init>()>
<com.csipsimple.api.SipCallSession: void setMediaSecureInfo(java.lang.String)>
<com.csipsimple.ui.account.AccountsEditList: void <init>()>
<org.pjsip.pjsua.pjsua: int call_get_med_transport_info(int,long,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport_info)>
<org.pjsip.pjsua.pjmedia_tone_digit: void setVolume(short)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: boolean isInFilterMode()>
<org.pjsip.pjsua.Callback: void swigReleaseOwnership()>
<com.actionbarsherlock.app.ActionBar$LayoutParams: void <init>(com.actionbarsherlock.app.ActionBar$LayoutParams)>
<com.csipsimple.utils.contacts.ContactsUtils3: int getPresenceIconResourceId(int)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void)>
<org.pjsip.pjsua.pjsua_destroy_flag: int swigValue()>
<com.csipsimple.wizards.impl.MiTelefono: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjmedia_dir: org.pjsip.pjsua.pjmedia_dir valueOf(java.lang.String)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.internal.view.menu.MenuBuilder access$5(com.actionbarsherlock.internal.ActionBarSherlockCompat)>
<com.csipsimple.utils.CustomDistribution: com.csipsimple.wizards.WizardUtils$WizardInfo getCustomDistributionWizard()>
<org.pjsip.pjsua.pjsua: int snd_get_setting(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap,byte[])>
<com.actionbarsherlock.view.Window: void <init>(android.content.Context)>
<com.csipsimple.wizards.impl.VoipLlama: java.lang.String getDomain()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: int getCurrentAnimationsCount()>
<com.csipsimple.ui.filters.AccountFiltersListFragment: void onResume()>
<org.pjsip.pjsua.pjsua_acc_info: long getCPtr(org.pjsip.pjsua.pjsua_acc_info)>
<com.csipsimple.ui.favorites.FavListFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.csipsimple.utils.contacts.ContactsUtils3: android.database.Cursor getGroups(android.content.Context)>
<org.pjsip.pjsua.pjsua_vid_req_keyframe_method$SwigNext: void access$1(int)>
<com.actionbarsherlock.widget.ActivityChooserView: void setInitialActivityCount(int)>
<com.actionbarsherlock.internal.utils.Utility4: void viewSetActivated(android.view.View,boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void)>
<com.csipsimple.api.SipMessage: void createFromContentValue(android.content.ContentValues)>
<com.csipsimple.ui.prefs.PrefsFilters: void onAccountClicked(long)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: char getNumericShortcut()>
<org.pjsip.pjsua.pjsua: int call_has_media(int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type)>
<com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceSummary(android.preference.Preference,java.lang.CharSequence)>
<com.csipsimple.wizards.impl.ZonPt: java.lang.String getDefaultName()>
<com.csipsimple.ui.warnings.WarningNoStun: java.lang.String getWarningKey()>
<com.csipsimple.ui.calllog.CallLogListItemHelper: java.lang.CharSequence getCallActionDescription(com.csipsimple.ui.calllog.PhoneCallDetails)>
<com.csipsimple.api.SipMessage: void <clinit>()>
<com.csipsimple.wizards.impl.Orbtalk: java.lang.String getDefaultName()>
<com.csipsimple.ui.prefs.PrefsFilters: boolean showInternalAccounts()>
<com.actionbarsherlock.internal.ResourcesCompat: int getResources_getInteger(android.content.Context,int)>
<org.pjsip.pjsua.pjsua_media_config: long getRx_drop_pct()>
<com.csipsimple.widgets.SlidingPanel: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.wizards.impl.Mobex: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_buddy_status$SwigNext: int access$0()>
<org.pjsip.pjsua.csipsimple_config: int getTsx_td_timeout()>
<com.csipsimple.service.HeadsetButtonReceiver: void <init>()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver: void <init>(com.actionbarsherlock.internal.view.menu.MenuPopupHelper)>
<org.pjsip.pjsua.csipsimple_config: void setVideo_capture_implementation(org.pjsip.pjsua.dynamic_factory)>
<com.csipsimple.ui.incall.InCallMediaControl: void onCreate(android.os.Bundle)>
<com.csipsimple.widgets.ShortcutWidgetConfigure: java.lang.String getPrefsKey(int)>
<com.csipsimple.ui.dialpad.DialerLayout: void setForceNoList(boolean)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setDefaultShowAsAction(int)>
<com.actionbarsherlock.app.SherlockDialogFragment: void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setLogo(int)>
<com.csipsimple.wizards.impl.BaseImplementation: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.actionbarsherlock.internal.widget.IcsSpinner: boolean performClick()>
<org.pjsip.pjsua.pj_qos_params: short getSo_prio()>
<com.csipsimple.ui.account.AccountsChooserListActivity: boolean showInternalAccounts()>
<com.csipsimple.utils.contacts.ContactsUtils5: int getPresenceIconResourceId(int)>
<com.csipsimple.ui.SipHome$TabsAdapter: int getCount()>
<com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenType(java.lang.Class,java.lang.String,int)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void dispatchRestoreInstanceState(android.os.Bundle)>
<com.csipsimple.wizards.impl.Pozitel: java.lang.String getDomain()>
<com.csipsimple.widgets.CSSListFragment: void onLoaderReset(android.support.v4.content.Loader)>
<com.csipsimple.ui.prefs.GenericPrefs: void beforeBuildPrefs()>
<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallActivity$CallsAdapter access$12(com.csipsimple.ui.incall.InCallActivity)>
<com.csipsimple.ui.incall.InCallMediaControl$2: void onServiceDisconnected(android.content.ComponentName)>
<com.csipsimple.wizards.impl.Tlenofon: java.lang.String getDefaultName()>
<com.actionbarsherlock.widget.ActivityChooserModel: int getHistorySize()>
<org.pjsip.pjsua.pjmedia_port_info: void setDir(org.pjsip.pjsua.pjmedia_dir)>
<com.csipsimple.ui.dialpad.DigitsEditText: void setIsDigit(boolean,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setCheckable(boolean)>
<org.pjsip.pjsua.pjsua: int player_get_port(int,org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
<org.pjsip.pjsua.pjsua: int player_set_pos(int,long)>
<org.pjsip.pjsua.pjsua: int enum_conf_ports(int[],long[])>
<org.pjsip.pjsua.pjsip_cred_data_type$SwigNext: int access$0()>
<org.pjsip.pjsua.pjsua_ice_config: void setIce_max_host_cands(int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setIcon(int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt)>
<org.pjsip.pjsua.pjsua_media_config: void setIce_max_host_cands(int)>
<org.pjsip.pjsua.pjsua_media_config: long getAudio_frame_ptime()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: boolean isCollapsed()>
<com.csipsimple.api.ISipConfiguration$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.csipsimple.ui.calllog.CallTypeIconsView: int getCallType(int)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: android.view.animation.Interpolator getInterpolator()>
<com.csipsimple.api.SipMessage: java.lang.String getFullFrom()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
<com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)>
<com.csipsimple.ui.SipHome$TabsAdapter: java.lang.Integer getIdForPosition(int)>
<com.csipsimple.utils.UriUtils: boolean areEqual(android.net.Uri,android.net.Uri)>
<com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: android.content.Context access$1(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>
<com.csipsimple.widgets.SlidingPanel: void onLayout(boolean,int,int,int,int)>
<com.csipsimple.pjsip.PjSipService: void <clinit>()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void <clinit>()>
<com.csipsimple.wizards.impl.XNet: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjmedia_tone_digit: short getVolume()>
<com.csipsimple.widgets.AccountChooserButton: void setTargetAccount(java.lang.Long)>
<org.pjsip.pjsua.pj_stun_resolve_result: void setStatus(int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_dialog_cap_status: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_dialog_cap_status)>
<com.csipsimple.utils.RewriterPlugin$OnRewriteReceiver: void <init>(java.lang.String)>
<com.csipsimple.wizards.impl.Mobile4U: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.Broadsoft: void bindFields()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: com.actionbarsherlock.app.ActionBar$Tab getTab()>
<org.pjsip.pjsua.pjsua_call_media_status$SwigNext: int access$0()>
<com.csipsimple.api.ISipService$Stub$Proxy: void confAdjustTxLevel(int,float)>
<com.csipsimple.ui.prefs.cupcake.MainPrefs: com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroupAdapter access$0(com.csipsimple.ui.prefs.cupcake.MainPrefs)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: boolean performItemClick(android.view.View,int,long)>
<com.csipsimple.utils.CallHandlerPlugin: java.lang.String getLabel()>
<com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String access$2(com.csipsimple.service.receiver.DynamicReceiver4)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void onActionModeFinished(com.actionbarsherlock.view.ActionMode)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: int findSyncPosition()>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: int getCount()>
<org.pjsip.pjsua.pj_pool_t: void setFactory_data(byte[])>
<com.csipsimple.utils.ExtraPlugins: void <clinit>()>
<com.csipsimple.api.ISipService$Stub$Proxy: int xferReplace(int,int,int)>
<org.pjsip.pjsua.csipsimple_config: int getTsx_t4_timeout()>
<org.pjsip.pjsua.pjsua_conf_port_info: void setChannel_count(long)>
<org.pjsip.pjsua.pjsua_call_hold_type: int swigValue()>
<com.csipsimple.wizards.impl.TOnline: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.app.ActionBarImpl: boolean isShowing()>
<org.pjsip.pjsua.pjsua_call_media_status$SwigNext: void access$1(int)>
<com.csipsimple.wizards.impl.AccountBalanceHelper: void handleMessage(android.os.Message)>
<com.csipsimple.ui.incall.InCallMediaControl$1: void <init>(com.csipsimple.ui.incall.InCallMediaControl)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void dispatchMenuVisibilityChanged(boolean)>
<org.pjsip.pjsua.pjmedia_port_info: void <init>()>
<com.csipsimple.ui.favorites.PresenceStatusSpinner$PresencesAdapter: android.view.View getCustomView(int,android.view.View,android.view.ViewGroup,boolean)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: android.support.v4.app.FragmentTransaction access$1(com.actionbarsherlock.internal.app.ActionBarWrapper)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setDisplayShowCustomEnabled(boolean)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void setInterpolator(android.view.animation.Interpolator)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: void close()>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void setCustomView(android.view.View)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState: java.lang.String toString()>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: boolean performIdentifierAction(int,int)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void dismiss()>
<com.actionbarsherlock.internal.widget.AbsActionBarView: void setSplitWhenNarrow(boolean)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setNumericShortcut(char)>
<org.pjsip.pjsua.pjsua_sip_timer_use$SwigNext: void access$1(int)>
<org.pjsip.pjsua.pjsip_tls_setting: void setCiphers_num(long)>
<com.csipsimple.utils.accessibility.Accessibility4: void init(android.content.Context)>
<org.pjsip.pjsua.pjsua_conf_port_info: void finalize()>
<org.pjsip.pjsua.pjsua_med_tp_st: org.pjsip.pjsua.pjsua_med_tp_st[] values()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setIcon(android.graphics.drawable.Drawable)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setTitle(int)>
<com.csipsimple.wizards.impl.Pennytel: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_conf_port_info: void setSlot_id(int)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void onDetachedFromWindow()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.os.Handler access$3(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setTitle(java.lang.CharSequence)>
<com.csipsimple.wizards.impl.BGTel: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean isVisible()>
<com.csipsimple.utils.ArrayUtils: boolean equals(byte[],byte[],int)>
<org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>
<org.pjsip.pjsua.pjsua: int vid_set_android_window(int,java.lang.Object)>
<com.csipsimple.service.receiver.DynamicReceiver4$2: com.csipsimple.service.receiver.DynamicReceiver4 access$0(com.csipsimple.service.receiver.DynamicReceiver4$2)>
<org.pjsip.pjsua.pjsua_stream_stat: void setJbuf(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state)>
<org.pjsip.pjsua.pjsip_tls_setting: long getCiphers_num()>
<com.csipsimple.ui.calllog.CallLogAdapter: com.csipsimple.ui.calllog.CallLogAdapter$OnCallLogAction access$0(com.csipsimple.ui.calllog.CallLogAdapter)>
<org.pjsip.pjsua.pjsip_inv_state$SwigNext: void <clinit>()>
<com.csipsimple.utils.bluetooth.BluetoothUtils3: void setMediaManager(com.csipsimple.service.MediaManager)>
<org.pjsip.pjsua.pjsua_config: int getEnable_unsolicited_mwi()>
<com.csipsimple.wizards.impl.Flowroute: java.lang.String getDomain()>
<com.csipsimple.ui.SipHome: android.support.v4.app.Fragment getFragmentAt(int)>
<com.csipsimple.wizards.impl.Sapo: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_acc_info: void setExpires(int)>
<com.actionbarsherlock.ActionBarSherlock: void dispatchConfigurationChanged(android.content.res.Configuration)>
<com.csipsimple.wizards.BasePrefsWizard: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.csipsimple.service.PreferenceProvider: void <init>()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: int measureContentWidth(android.widget.ListAdapter)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: long getStartDelay()>
<org.webrtc.videoengine.camera.CameraUtils5: android.hardware.Camera openCamera(int)>
<org.pjsip.pjsua.pjsua_media_config: long getEc_options()>
<com.csipsimple.wizards.impl.Betamax: android.widget.TextView access$1(com.csipsimple.wizards.impl.Betamax)>
<org.pjsip.pjsua.pjsua_callback: void setOn_stream_created(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void)>
<com.csipsimple.wizards.impl.MultifonRu: java.lang.String getDomain()>
<com.csipsimple.wizards.impl.Zadarma: boolean needRestart()>
<org.pjsip.pjsua.pjsua_call_media_info: void setType(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type)>
<com.csipsimple.api.ISipService$Stub$Proxy: void playWaveFile(java.lang.String,int,int)>
<com.csipsimple.ui.dialpad.DialerFragment: android.app.AlertDialog access$4(com.csipsimple.ui.dialpad.DialerFragment)>
<com.csipsimple.wizards.impl.Beeztel: java.lang.String getDomain()>
<org.pjsip.pjsua.pjsua_media_config: void setTx_drop_pct(long)>
<org.pjsip.pjsua.pjsua_config: void setUse_timer(org.pjsip.pjsua.pjsua_sip_timer_use)>
<org.pjsip.pjsua.pjsua_callback: void setOn_call_rx_offer(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void)>
<com.csipsimple.ui.favorites.FavLoader: void onStopLoading()>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.ActionProvider getActionProvider()>
<org.pjsip.pjsua.pj_str_t: void setPtr(java.lang.String)>
<com.csipsimple.utils.bluetooth.BluetoothUtils8: boolean isBluetoothOn()>
<com.csipsimple.wizards.impl.Svanto: java.lang.String getDomain()>
<org.pjsip.pjsua.pjsua_call_info: void setSetting(org.pjsip.pjsua.pjsua_call_setting)>
<com.csipsimple.utils.DialingFeedback: void hapticFeedback()>
<com.csipsimple.ui.account.AccountsChooserListFragment: void <init>()>
<com.csipsimple.wizards.impl.BaseImplementation: void onActivityResult(int,int,android.content.Intent)>
<com.csipsimple.ui.calllog.CallLogAdapter: boolean isLastOfSection(android.database.Cursor)>
<com.csipsimple.ui.calllog.CallTypeIconsView: void clear()>
<com.csipsimple.ui.SipHome$TabsAdapter: void onPageScrolled(int,float,int)>
<org.pjsip.pjsua.pjsua_call_flag: org.pjsip.pjsua.pjsua_call_flag[] values()>
<com.csipsimple.wizards.impl.MundoR: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: android.view.View getCustomView()>
<org.pjsip.pjsua.pjsua_acc_info: void setReg_last_err(int)>
<com.actionbarsherlock.app.SherlockListFragment: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.api.ISipConfiguration$Stub$Proxy: void setPreferenceBoolean(java.lang.String,boolean)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.csipsimple.ui.help.Help$HelpArrayAdapter: void bindView(android.view.View,com.csipsimple.ui.help.Help$HelpEntry)>
<com.csipsimple.ui.help.Legal$1: void onClick(android.content.DialogInterface,int)>
<com.csipsimple.ui.prefs.Codecs$TabsAdapter: void onTabUnselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>
<org.pjsip.pjsua.pjsua_media_config: int getJb_min_pre()>
<com.actionbarsherlock.internal.utils.Utility11: int getMeasuredState(android.view.View)>
<com.csipsimple.ui.messages.MessageActivity: void onQuit()>
<com.csipsimple.pjsip.PjStreamDialtoneGenerator: void <clinit>()>
<com.actionbarsherlock.internal.view.menu.ActionMenu: void setQwertyMode(boolean)>
<com.csipsimple.wizards.impl.SipCel: java.lang.String getDefaultName()>
<com.csipsimple.api.ISipConfiguration$Stub$Proxy: boolean getPreferenceBoolean(java.lang.String)>
<com.csipsimple.ui.warnings.WarningSDCard: int getLayout()>
<com.csipsimple.wizards.impl.FastVoip: java.lang.String getDefaultName()>
<com.csipsimple.ui.account.AccountsLoader: java.lang.String access$3(com.csipsimple.ui.account.AccountsLoader)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: com.actionbarsherlock.app.ActionBar$Tab getSelectedTab()>
<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.wizards.impl.SimpleImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.wizards.impl.EuroTelefon: java.lang.String getDomain()>
<com.actionbarsherlock.internal.widget.ActionBarView: android.view.View getCustomNavigationView()>
<com.csipsimple.api.SipCallSession: java.lang.String getMediaSecureInfo()>
<com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContainer access$1(com.actionbarsherlock.internal.app.ActionBarImpl)>
<com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$8(com.actionbarsherlock.internal.app.ActionBarImpl)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setCheckable(boolean)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.csipsimple.wizards.impl.Beeztel: boolean needRestart()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener)>
<com.csipsimple.ui.messages.MessageFragment: void setOnQuitListener(com.csipsimple.ui.messages.MessageFragment$OnQuitListener)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher)>
<com.csipsimple.api.ISipConfiguration$Stub: void <init>()>
<org.pjsip.pjsua.pjsua: int buddy_del(int)>
<org.pjsip.pjsua.pjsua_stream_stat: void delete()>
<com.csipsimple.ui.incall.InCallMediaControl: com.csipsimple.api.ISipService access$0(com.csipsimple.ui.incall.InCallMediaControl)>
<com.actionbarsherlock.internal.widget.ActionBarView: void setCallback(com.actionbarsherlock.app.ActionBar$OnNavigationListener)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean prefersCondensedTitle()>
<org.pjsip.pjsua.pjsua: int conf_connect(int,int)>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: boolean getShowDefaultActivity()>
<org.pjsip.pjsua.pjsua: int vid_win_rotate(int,int)>
<com.csipsimple.wizards.impl.SiptelPt: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem getItem(int)>
<org.pjsip.pjsua.pjsua_acc_config: long getReg_delay_before_refresh()>
<org.pjsip.pjsua.pjsua_config: int getSrtp_optional_dup_offer()>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setActionProvider(android.view.ActionProvider)>
<com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.api.SipCallSession: void setMediaSecure(boolean)>
<com.csipsimple.ui.calllog.CallDetailHistoryAdapter: void <init>(android.content.Context,android.view.LayoutInflater,com.csipsimple.ui.calllog.PhoneCallDetails[])>
<com.csipsimple.ui.incall.InCallActivity: android.os.PowerManager$WakeLock access$14(com.csipsimple.ui.incall.InCallActivity)>
<org.pjsip.pjsua.pjsua_call_info: void setAcc_id(int)>
<org.pjsip.pjsua.pjsua_callback: void setOn_reg_state2(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void)>
<com.csipsimple.wizards.impl.Rapidvox: boolean needRestart()>
<com.csipsimple.service.SipService$2: void <init>(com.csipsimple.service.SipService)>
<org.pjsip.pjsua.pjsua_vid_preview_param: void setWnd_flags(long)>
<org.pjsip.pjsua.pjsua_acc_info: void setIs_default(int)>
<com.csipsimple.wizards.impl.Expert: void bindFields()>
<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void <clinit>()>
<com.csipsimple.api.SipProfile$1: com.csipsimple.api.SipProfile[] newArray(int)>
<com.actionbarsherlock.view.MenuInflater$MenuState: char getShortcut(java.lang.String)>
<org.pjsip.pjsua.pjmedia_tone_desc: void setVolume(short)>
<com.csipsimple.utils.CustomDistribution: java.lang.String getFaqLink()>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: java.lang.CharSequence getText()>
<com.actionbarsherlock.widget.ActivityChooserView: void setExpandActivityOverflowButtonContentDescription(int)>
<com.csipsimple.widgets.EditSipUri$ContactAdapter: int getSectionForPosition(int)>
<com.csipsimple.ui.prefs.CodecsFragment: android.widget.SimpleAdapter access$2(com.csipsimple.ui.prefs.CodecsFragment)>
<com.csipsimple.ui.favorites.FavAdapter$3: void onClick(android.content.DialogInterface,int)>
<com.csipsimple.wizards.impl.InterTelecomGr: java.lang.String getDomain()>
<com.csipsimple.widgets.RegistrationNotification: void clearRegistrations()>
<org.pjsip.pjsua.pjsua_vid_req_keyframe_method: org.pjsip.pjsua.pjsua_vid_req_keyframe_method valueOf(java.lang.String)>
<com.actionbarsherlock.ActionBarSherlock: boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: android.view.ContextMenu$ContextMenuInfo getMenuInfo()>
<org.pjsip.pjsua.pjsua_call_info: void setId(int)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: void setProgressBarIndeterminateVisibility(boolean)>
<com.csipsimple.service.PreferenceProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$3: void onClick(android.content.DialogInterface,int)>
<org.pjsip.pjsua.pjsua_media_config: long getQuality()>
<com.csipsimple.api.SipProfileState: void setStatusCode(int)>
<org.pjsip.pjsua.pjsua_acc_config: void setUnpublish_max_wait_time_msec(long)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setCustomView(android.view.View)>
<org.pjsip.pjsua.pjsua_config: void setForce_lr(int)>
<org.pjsip.pjsua.pjsua_acc_config: void setSub_hdr_list(org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr)>
<com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable: void setup(int,int,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: boolean isShortcutKey(int,android.view.KeyEvent)>
<com.csipsimple.ui.help.Help$HelpArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchOptionsItemSelected(android.view.MenuItem)>
<com.csipsimple.ui.calllog.CallTypeIconsView: android.graphics.drawable.Drawable getCallTypeDrawable(int)>
<com.csipsimple.utils.contacts.ContactsUtils3: java.util.List getCSipPhonesByGroup(android.content.Context,java.lang.String)>
<com.csipsimple.wizards.impl.VoipMuch: java.lang.String getDomain()>
<org.pjsip.pjsua.pjsip_cred_info: long getCPtr(org.pjsip.pjsua.pjsip_cred_info)>
<com.csipsimple.wizards.impl.VoipMS$1: void <init>()>
<com.csipsimple.ui.account.AccountsChooserListFragment: void onCreate(android.os.Bundle)>
<com.csipsimple.api.SipCallSession: boolean isSecure()>
<com.csipsimple.api.SipManager$PresenceStatus: com.csipsimple.api.SipManager$PresenceStatus valueOf(java.lang.String)>
<org.pjsip.pjsua.pjsua_media_config: void setVid_preview_enable_native(int)>
<com.csipsimple.utils.PhoneCapabilityTester: boolean isIntentRegistered(android.content.Context,android.content.Intent)>
<org.pjsip.pjsua.pjsua_acc_config: void setUse_timer(org.pjsip.pjsua.pjsua_sip_timer_use)>
<com.csipsimple.utils.Base64$1: java.lang.Class resolveClass(java.io.ObjectStreamClass)>
<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onSaveInstanceState(android.os.Bundle)>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void setMaxActivityCount(int)>
<com.csipsimple.utils.contacts.ContactsAutocompleteAdapter: void setSelectedAccount(long)>
<com.csipsimple.wizards.impl.MondotalkCreate: android.app.ProgressDialog access$3(com.csipsimple.wizards.impl.MondotalkCreate)>
<com.csipsimple.widgets.MarqueeTextView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: void setUiOptions(int,int)>
<com.actionbarsherlock.ActionBarSherlock: void dispatchDestroy()>
<com.actionbarsherlock.internal.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)>
<com.csipsimple.wizards.impl.VoipTel: com.csipsimple.wizards.impl.AccountCreationWebview access$0(com.csipsimple.wizards.impl.VoipTel)>
<com.csipsimple.wizards.impl.Sip2Sip: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setActionView(int)>
<org.pjsip.pjsua.pjsua_buddy_config: void finalize()>
<org.pjsip.pjsua.pj_stun_resolve_result: void setToken(byte[])>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean isStarted()>
<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)>
<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1: com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState createFromParcel(android.os.Parcel)>
<org.pjsip.pjsua.pjsip_redirect_op$SwigNext: int access$0()>
<com.csipsimple.wizards.BasePrefsWizard$1: void onClick(android.view.View)>
<com.csipsimple.ui.prefs.PrefsFilters: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.utils.CallHandlerPlugin: android.app.PendingIntent getIntent()>
<com.csipsimple.utils.CustomDistribution: boolean distributionWantsOtherAccounts()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setChecked(boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
<org.pjsip.pjsua.pjsua_med_tp_state_info: void setSip_err_code(int)>
<com.csipsimple.api.SipCallSession: void setLastStatusComment(java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio)>
<org.pjsip.pjsua.pjsua_call_media_info: void setIndex(long)>
<org.pjsip.pjsua.pjrpid_element: void finalize()>
<com.actionbarsherlock.view.MenuInflater: void <clinit>()>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void setVisibility(int)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setDisplayOptions(int)>
<com.csipsimple.utils.NightlyUpdater: java.io.File getCachedFile()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: int getGroupId()>
<com.csipsimple.ui.calllog.CallLogListFragment: void access$1(com.csipsimple.ui.calllog.CallLogListFragment)>
<org.pjsip.pjsua.pjsua_codec_info: void delete()>
<org.pjsip.pjsua.pjmedia_dir: org.pjsip.pjsua.pjmedia_dir[] values()>
<org.pjsip.pjsua.pjsua_acc_config: int getContact_rewrite_method()>
<org.pjsip.pjsua.pjsua_mwi_info: void setRdata(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void initProgressBar()>
<com.csipsimple.ui.messages.ConverstationsAdapter: void <init>(android.content.Context,android.database.Cursor)>
<com.csipsimple.widgets.MaxScaleImageView: void updateScale()>
<com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.view.menu.ActionMenuItem access$2(com.actionbarsherlock.internal.widget.ActionBarView)>
<org.pjsip.pjsua.pjsua_media_config: long getTx_drop_pct()>
<org.pjsip.pjsua.pjsua_med_tp_state_info: int getStatus()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: void onAttachedToWindow()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void rememberSyncState()>
<org.pjsip.pjsua.pjsua: int pj_timer_fire(int)>
<com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener: void <clinit>()>
<org.pjsip.pjsua.pjsua_call_setting: void setVid_cnt(long)>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: int getPosition()>
<org.pjsip.pjsua.pjsip_tls_setting: int getMethod()>
<com.csipsimple.api.SipMessage: java.lang.String getBody()>
<com.csipsimple.ui.calllog.GroupingListAdapter: void resetCache()>
<com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.app.SherlockActivity: void onActionModeFinished(com.actionbarsherlock.view.ActionMode)>
<com.csipsimple.utils.contacts.ContactsUtils3: android.content.Intent getAddContactIntent(java.lang.String,java.lang.String)>
<com.csipsimple.ui.prefs.AudioTester: void updateStatusDisplay()>
<com.csipsimple.api.ISipService$Stub$Proxy: long confGetRxTxLevel(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setStartDelay(long)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setEnabled(boolean)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setCheckable(boolean)>
<com.csipsimple.ui.calllog.CallDetailHistoryAdapter: int getViewTypeCount()>
<com.actionbarsherlock.internal.ActionBarSherlockNative: boolean dispatchPrepareOptionsMenu(android.view.Menu)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op: org.pjsip.pjsua.pjsua_call_vid_strm_op[] values()>
<com.csipsimple.widgets.AccountChooserButton: void setOnAccountChangeListener(com.csipsimple.widgets.AccountChooserButton$OnAccountChangeListener)>
<com.csipsimple.ui.prefs.Codecs: void <init>()>
<org.webrtc.videoengine.ViERenderer: android.view.SurfaceView CreateLocalRenderer(android.content.Context)>
<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: int hashCode()>
<com.csipsimple.wizards.impl.Cotas: java.lang.String getDomain()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void removeAllViews()>
<com.csipsimple.wizards.impl.Blicnet: boolean needRestart()>
<com.csipsimple.ui.calllog.CallLogAdapter$2: void onClick(android.view.View)>
<com.csipsimple.wizards.impl.Callcentric: java.lang.String getDomain()>
<com.actionbarsherlock.view.MenuInflater$MenuState: void readGroup(android.util.AttributeSet)>
<com.csipsimple.utils.bluetooth.BluetoothUtils8: void access$2(com.csipsimple.utils.bluetooth.BluetoothUtils8,boolean)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setLogo(android.graphics.drawable.Drawable)>
<org.pjsip.pjsua.pjsip_status_code: int swigValue()>
<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Context access$0(com.actionbarsherlock.widget.ActivityChooserModel)>
<org.pjsip.pjsua.pjsua_destroy_flag$SwigNext: void <clinit>()>
<org.pjsip.pjsua.pjsua: int recorder_get_port(int,org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)>
<com.csipsimple.wizards.impl.Anv: java.lang.String getDomain()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.widget.ListView getListView()>
<com.csipsimple.ui.prefs.cupcake.MainPrefs: void <init>()>
<com.csipsimple.api.ISipService$Stub$Proxy: void setSpeakerphoneOn(boolean)>
<com.csipsimple.utils.PreferencesWrapper: android.content.Context getContext()>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setScrollX(int)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean flagActionItems()>
<com.csipsimple.wizards.impl.OSTN: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua: int enum_calls(int[],long[])>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part)>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: boolean isQwertyMode()>
<org.pjsip.pjsua.pjsua_100rel_use: org.pjsip.pjsua.pjsua_100rel_use valueOf(java.lang.String)>
<org.pjsip.pjsua.pjsua: int get_snd_dev(int[],int[])>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: boolean isChecked()>
<org.pjsip.pjsua.pjsua_buddy_info: java.lang.String getSub_state_name()>
<org.webrtc.videoengine.ViESurfaceRenderer: android.graphics.Bitmap CreateBitmap(int,int)>
<com.csipsimple.wizards.impl.Expert: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.ui.incall.InCallCard: void setVisibleWithFade(android.view.View,boolean)>
<com.csipsimple.wizards.impl.SipMe: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjmedia_srtp_use: org.pjsip.pjsua.pjmedia_srtp_use valueOf(java.lang.String)>
<com.csipsimple.ui.calllog.CallLogListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void updateDrawableBounds(int,int)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op$SwigNext: void access$1(int)>
<com.csipsimple.wizards.impl.VoipMS: java.lang.String getDomain()>
<com.csipsimple.ui.help.Faq: void <clinit>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void <init>()>
<com.csipsimple.widgets.DialerCallBar: void onClick(android.view.View)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
<com.csipsimple.service.SipService$AccountStatusContentObserver: void <init>(com.csipsimple.service.SipService,android.os.Handler)>
<com.csipsimple.api.ISipService$Stub$Proxy: void ignoreNextOutgoingCallFor(java.lang.String)>
<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.Object access$2(com.actionbarsherlock.widget.ActivityChooserModel)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: int findGroupIndex(int,int)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: android.content.Context getThemedContext()>
<org.pjsip.pjsua.pjsua_media_config: int getVid_preview_enable_native()>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)>
<org.pjsip.pjsua.pjsua: int vid_win_set_show(int,int)>
<org.pjsip.pjsua.pjsua: void call_hangup_all()>
<com.csipsimple.utils.PhoneCapabilityTester: void deinit()>
<org.pjsip.pjsua.pjsua_callback: void setOn_create_media_transport(org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport)>
<com.csipsimple.utils.contacts.ContactsUtils3: void bindAutoCompleteView(android.view.View,android.content.Context,android.database.Cursor)>
<com.csipsimple.wizards.impl.ReachPhones: boolean canTcp()>
<org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: void <clinit>()>
<org.pjsip.pjsua.SWIGTYPE_p_int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_int)>
<com.csipsimple.ui.calllog.CallLogAdapter$1: void onClick(android.view.View)>
<com.csipsimple.ui.filters.AccountFiltersListFragment: void showDetails(long)>
<com.actionbarsherlock.internal.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)>
<com.csipsimple.ui.prefs.Codecs$TabsAdapter: android.support.v4.app.Fragment getItem(int)>
<org.pjsip.pjsua.pjsua_call_media_info: void finalize()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.actionbarsherlock.app.SherlockFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
<org.pjsip.pjsua.pjsua_acc_config: void setCall_hold_type(org.pjsip.pjsua.pjsua_call_hold_type)>
<com.csipsimple.ui.prefs.PrefsLogic: int getTitleResourceForType(int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setActionView(android.view.View)>
<org.pjsip.pjsua.pjsua: int player_destroy(int)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.view.View getActionView()>
<com.csipsimple.wizards.impl.VoipTel: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_acc_info: void setId(int)>
<com.csipsimple.utils.PreferencesProviderWrapper: void resetAllDefaultValues()>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: java.lang.CharSequence getSubtitle()>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)>
<com.csipsimple.wizards.impl.Mobex: android.widget.LinearLayout access$1(com.csipsimple.wizards.impl.Mobex)>
<org.pjsip.pjsua.csipsimple_acc_config: int getUse_zrtp()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isVisible()>
<com.csipsimple.widgets.DragnDropListView: void stopDragging()>
<com.actionbarsherlock.internal.widget.ActionBarView$SavedState: void writeToParcel(android.os.Parcel,int)>
<com.csipsimple.wizards.impl.Mobex$AccountBalance: void applyResultError()>
<com.csipsimple.widgets.AlternateUnlocker: void setOnLeftRightListener(com.csipsimple.widgets.IOnLeftRightChoice)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int)>
<com.csipsimple.wizards.impl.IPshka: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_call_media_status$SwigNext: void <clinit>()>
<com.csipsimple.pjsip.PjSipService: void confAdjustTxLevel(int,float)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setCallback(java.lang.Runnable)>
<com.csipsimple.utils.contacts.ContactsUtils5: android.content.Intent getViewContactIntent(java.lang.Long)>
<com.csipsimple.utils.contacts.ContactsUtils3: android.database.Cursor getContactsPhones(android.content.Context)>
<com.csipsimple.utils.clipboard.Clipboard1: void setText(java.lang.String,java.lang.String)>
<com.csipsimple.wizards.impl.VoipMS: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.pjsip.PjSipService: boolean isCreated()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setAlphabeticShortcut(char)>
<com.csipsimple.ui.incall.InCallMediaControl$LockTimerTask: void run()>
<com.csipsimple.wizards.impl.BaseImplementation: void markFieldInvalid(android.preference.Preference)>
<com.csipsimple.service.SipService$ReturnRunnable: void doRun()>
<org.pjsip.pjsua.pjsua_media_config: long getSnd_rec_latency()>
<com.csipsimple.ui.account.AccountsChooserListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: boolean performShortcut(int,android.view.KeyEvent,int)>
<com.csipsimple.widgets.DragnDropListView: void adjustScrollBounds(int)>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void onFinishInflate()>
<com.actionbarsherlock.widget.ActivityChooserModel: void access$7(com.actionbarsherlock.widget.ActivityChooserModel)>
<com.csipsimple.wizards.impl.Gizmo5: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setForceShowIcon(boolean)>
<com.csipsimple.wizards.impl.Local: int getBasePreferenceResource()>
<org.pjsip.pjsua.pjsua_callback: void setOn_ice_transport_error(org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void)>
<org.pjsip.pjsua.pjsua_buddy_config: byte[] getUser_data()>
<com.csipsimple.ui.incall.InCallAnswerControls: void setOnTriggerListener(com.csipsimple.ui.incall.IOnCallActionTrigger)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void access$2(com.actionbarsherlock.internal.app.ActionBarWrapper,android.support.v4.app.FragmentTransaction)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean isCheckable()>
<org.pjsip.pjsua.pjsua_config: void setStun_ignore_failure(int)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: android.content.Context getThemedContext()>
<org.pjsip.pjsua.pj_stun_resolve_result: byte[] getToken()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction)>
<com.csipsimple.widgets.AccountChooserButton$2: com.csipsimple.widgets.AccountChooserButton access$0(com.csipsimple.widgets.AccountChooserButton$2)>
<com.csipsimple.widgets.ScreenLocker: void setOnLeftRightListener(com.csipsimple.widgets.IOnLeftRightChoice)>
<com.csipsimple.api.SipProfileState: void readFromParcel(android.os.Parcel)>
<com.csipsimple.service.SipNotifications: void cancelMessages()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
<com.actionbarsherlock.internal.ActionBarSherlockNative: boolean requestFeature(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1: java.lang.Object initialValue()>
<com.csipsimple.api.SipProfileState: void setExpires(int)>
<com.csipsimple.wizards.impl.Tanstagi: java.lang.String getDefaultName()>
<com.actionbarsherlock.widget.ActivityChooserView: android.widget.PopupWindow$OnDismissListener access$9(com.actionbarsherlock.widget.ActivityChooserView)>
<com.actionbarsherlock.widget.ActivityChooserView: void access$7(com.actionbarsherlock.widget.ActivityChooserView,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent)>
<com.csipsimple.ui.filters.AccountFiltersListFragment: void setAccountId(long)>
<com.csipsimple.wizards.impl.Balses: java.lang.String getDomain()>
<org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory: void <clinit>()>
<com.csipsimple.widgets.SlidingTab: void setOnLeftRightListener(com.csipsimple.widgets.IOnLeftRightChoice)>
<org.pjsip.pjsua.pjsua: long get_buddy_count()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onMeasure(int,int)>
<com.csipsimple.ui.help.Faq$FaqWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.csipsimple.utils.audio.AudioFocus3: void init(com.csipsimple.service.SipService,android.media.AudioManager)>
<com.csipsimple.service.Downloader: void onDestroy()>
<com.csipsimple.wizards.impl.CamundaNet: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler)>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void showArrow(int,int)>
<com.csipsimple.wizards.impl.Tecobu: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pj_str_t: long getCPtr(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.ui.incall.InCallActivity$QuitTimerTask: void <init>(com.csipsimple.ui.incall.InCallActivity)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr)>
<com.csipsimple.ui.incall.AccelerometerListener$1: void onAccuracyChanged(android.hardware.Sensor,int)>
<com.csipsimple.wizards.impl.Smarto: java.lang.String getDomain()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: int access$1(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
<com.actionbarsherlock.internal.widget.ActionBarView: boolean hasExpandedActionView()>
<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String access$8()>
<org.pjsip.pjsua.pjsua_vid_win_info: void setRdr_dev(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
<com.csipsimple.utils.SmileyParser: com.csipsimple.utils.SmileyParser getInstance()>
<com.csipsimple.wizards.impl.Betamax: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Betamax)>
<com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: void <init>(com.csipsimple.ui.account.AccountsChooserListFragment,android.content.Context,android.database.Cursor)>
<com.csipsimple.utils.clipboard.Clipboard11: void setText(java.lang.String,java.lang.String)>
<com.csipsimple.widgets.SlidingTab$Slider: void setResources(int,int,int,int)>
<org.pjsip.pjsua.pjsua: int buddy_subscribe_pres(int,int)>
<org.pjsip.pjsua.pjsua_conf_port_info: void setClock_rate(long)>
<org.pjsip.pjsua.pjsua_media_config: void setIce_no_rtcp(int)>
<com.csipsimple.utils.contacts.ContactsSearchAdapter: void <init>(android.content.Context)>
<com.csipsimple.service.SipService: void access$5(com.csipsimple.service.SipService,com.csipsimple.api.SipManager$PresenceStatus)>
<com.csipsimple.ui.messages.MessageFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.csipsimple.api.ISipService$Stub$Proxy: int getPresence(long)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>
<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: int getPreferenceType()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3: java.util.ArrayList initialValue()>
<com.csipsimple.api.ISipConfiguration$Stub$Proxy: void setPreferenceString(java.lang.String,java.lang.String)>
<org.pjsip.pjsua.pjsua_buddy_info: void setId(int)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.widget.SpinnerAdapter getAdapter()>
<com.csipsimple.wizards.impl.AccountCreationWebview: com.csipsimple.wizards.BasePrefsWizard access$4(com.csipsimple.wizards.impl.AccountCreationWebview)>
<org.pjsip.pjsua.pjsua_conf_port_info: void setName(org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<com.actionbarsherlock.internal.widget.CapitalizingButton: void <clinit>()>
<org.pjsip.pjsua.pjsua_acc_config: int getPublish_enabled()>
<com.csipsimple.api.ISipService$Stub$Proxy: com.csipsimple.api.SipCallSession getCallInfo(int)>
<com.csipsimple.api.ISipService$Stub$Proxy: void makeCall(java.lang.String,int)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setShortcut(char,char)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setItemLimit(int)>
<com.csipsimple.utils.bluetooth.BluetoothUtils14: boolean isBTHeadsetConnected()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isEnabled()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void addTab(com.actionbarsherlock.app.ActionBar$Tab)>
<com.csipsimple.wizards.impl.Zadarma: com.csipsimple.wizards.impl.AccountCreationWebview access$2(com.csipsimple.wizards.impl.Zadarma)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4: java.util.ArrayList initialValue()>
<org.pjsip.pjsua.pjrpid_activity$SwigNext: int access$0()>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: int getPosition()>
<org.pjsip.pjsua.pjsua_callback: void setOn_pager_status(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void)>
<org.pjsip.pjsua.pjsua_transport_info: void setType_name(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.db.DBAdapter$DatabaseHelper: void <init>(android.content.Context)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void onMenuVisibilityChanged(boolean)>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)>
<com.csipsimple.ui.prefs.Codecs$TabsAdapter: void onPageScrolled(int,float,int)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onActionModeFinished(com.actionbarsherlock.view.ActionMode)>
<org.pjsip.pjsua.pjsua_call_flag: int swigValue()>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void onConfigurationChanged(android.content.res.Configuration)>
<org.pjsip.pjsua.pjsua_acc_info: java.lang.String getBuf_()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setHomeButtonEnabled(boolean)>
<com.csipsimple.ui.messages.ConversationsListFragment: void changeCursor(android.database.Cursor)>
<org.pjsip.pjsua.pjsua_media_transport: void delete()>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()>
<com.csipsimple.ui.filters.EditFilter$1: void onClick(android.view.View)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.SubMenu addSubMenu(int)>
<com.csipsimple.api.SipProfileState$2: int compare(com.csipsimple.api.SipProfileState,com.csipsimple.api.SipProfileState)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean invoke()>
<com.csipsimple.wizards.impl.ZengCn: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setIsActionButton(boolean)>
<com.actionbarsherlock.view.ActionProvider: void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu)>
<org.pjsip.pjsua.pjsua_acc_config: int getDrop_calls_on_reg_fail()>
<com.csipsimple.ui.PickupSipUri: void <init>()>
<com.csipsimple.wizards.impl.AuthorizationImplementation: boolean needRestart()>
<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallAnswerControls access$10(com.csipsimple.ui.incall.InCallActivity)>
<com.actionbarsherlock.widget.ActivityChooserView: android.widget.FrameLayout access$5(com.actionbarsherlock.widget.ActivityChooserView)>
<org.pjsip.pjsua.pjsua_conf_port_info: void setListener_cnt(long)>
<com.csipsimple.wizards.impl.VPhone: java.lang.String getDefaultName()>
<com.csipsimple.utils.NightlyUpdater: android.content.SharedPreferences access$2(com.csipsimple.utils.NightlyUpdater)>
<com.actionbarsherlock.internal.widget.ActionBarView: java.lang.CharSequence getTitle()>
<com.csipsimple.wizards.impl.FreephoneLineCa: java.lang.String getDefaultName()>
<com.csipsimple.widgets.DialerCallBar: void setEnabled(boolean)>
<com.csipsimple.wizards.impl.DeltaThree: boolean needRestart()>
<org.pjsip.pjsua.pjsip_tls_setting: int getVerify_client()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int)>
<com.csipsimple.widgets.AlternateUnlocker: void onClick(android.view.View)>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: int getId()>
<com.csipsimple.utils.Columns: int[] $SWITCH_TABLE$com$csipsimple$utils$Columns$Type()>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: java.lang.CharSequence getContentDescription()>
<com.csipsimple.ui.messages.MessageFragment: void access$1(com.csipsimple.ui.messages.MessageFragment,com.csipsimple.api.ISipService)>
<com.csipsimple.service.SipService: void confAdjustTxLevel(float)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: int getMax()>
<org.pjsip.pjsua.pjsua: void buddy_config_default(org.pjsip.pjsua.pjsua_buddy_config)>
<com.csipsimple.widgets.DragnDropListView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.api.SipProfileState: void createFromContentValue(android.content.ContentValues)>
<com.csipsimple.wizards.impl.WiMobile: boolean needRestart()>
<com.actionbarsherlock.internal.view.menu.SubMenuWrapper: com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)>
<com.csipsimple.api.SipProfile: int describeContents()>
<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>
<org.pjsip.pjsua.pjsua_turn_config_use: org.pjsip.pjsua.pjsua_turn_config_use[] values()>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: int[] $SWITCH_TABLE$org$webrtc$videoengine$VideoCaptureDeviceInfoAndroid$FrontFacingCameraType()>
<org.pjsip.pjsua.pjsua_config: void setOutbound_proxy_cnt(long)>
<org.pjsip.pjsua.pjsua_codec_info: void finalize()>
<com.actionbarsherlock.app.SherlockDialogFragment: void <init>()>
<com.csipsimple.wizards.impl.Sapo: java.lang.String getDomain()>
<com.csipsimple.utils.TimerWrapper: java.util.List access$1(com.csipsimple.utils.TimerWrapper)>
<org.pjsip.pjsua.csipsimple_config: long getExtra_vid_codecs_cnt()>
<org.pjsip.pjsua.pjsua: int enum_buddies(int[],long[])>
<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: int compareTo(com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo)>
<com.csipsimple.widgets.ShortcutWidgetProvider: void <init>()>
<com.actionbarsherlock.internal.utils.Utility4: void jumpToCurrentState(android.graphics.drawable.Drawable)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status)>
<com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String)>
<com.csipsimple.ui.messages.MessageFragment: java.lang.String access$2(com.csipsimple.ui.messages.MessageFragment)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void)>
<com.csipsimple.ui.filters.AccountFiltersListFragment: long filterIdFromContextMenuInfo(android.view.ContextMenu$ContextMenuInfo)>
<com.csipsimple.ui.prefs.Codecs$TabsAdapter: int getCount()>
<com.csipsimple.ui.incall.InCallAnswerControls: void onFinishInflate()>
<org.pjsip.pjsua.pjsua_config: void setMax_calls(long)>
<org.pjsip.pjsua.pjsua_media_config: void setThread_cnt(long)>
<com.csipsimple.ui.calllog.CallLogDetailsActivity: void <init>()>
<com.csipsimple.wizards.impl.SimpleImplementation: boolean canTcp()>
<com.csipsimple.wizards.impl.Gizmo5: java.lang.String getDomain()>
<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState: void <init>(android.os.Parcelable)>
<com.csipsimple.service.DeviceStateReceiver: android.content.Intent getIntent()>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: boolean isEmpty()>
<com.csipsimple.utils.contacts.ContactsUtils5: int getContactIndexableColumnIndex(android.database.Cursor)>
<com.csipsimple.utils.CallHandlerPlugin$1: void <init>(com.csipsimple.utils.CallHandlerPlugin,java.lang.String)>
<com.actionbarsherlock.widget.ActivityChooserView$1: void <init>(com.actionbarsherlock.widget.ActivityChooserView)>
<com.csipsimple.service.SipService: void access$10(com.csipsimple.service.SipService,com.csipsimple.service.SipService$SipServiceExecutor)>
<com.csipsimple.service.Downloader: android.os.IBinder onBind(android.content.Intent)>
<com.csipsimple.widgets.ShortcutWidgetProvider: android.content.Intent getIntent()>
<com.csipsimple.widgets.MarqueeTextView: void onWindowFocusChanged(boolean)>
<com.actionbarsherlock.app.SherlockListFragment: void onDetach()>
<com.csipsimple.wizards.impl.Ecs: int getBasePreferenceResource()>
<com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: void finishAccountCreation(boolean,java.lang.String,java.lang.String)>
<com.actionbarsherlock.internal.widget.ActionBarView$3: void onClick(android.view.View)>
<com.csipsimple.wizards.impl.Fritzbox: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsip_status_code$SwigNext: int access$0()>
<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<com.csipsimple.widgets.SlidingTab$Slider: android.widget.TextView access$6(com.csipsimple.widgets.SlidingTab$Slider)>
<com.csipsimple.widgets.AccountChooserButton: void <clinit>()>
<org.pjsip.pjsua.pjsua: int vid_preview_has_native(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void onDraw(android.graphics.Canvas)>
<com.csipsimple.widgets.EditSipUri$ToCall: java.lang.String getCallee()>
<com.actionbarsherlock.app.SherlockListActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.csipsimple.wizards.impl.Odorik: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjmedia_port_info: void setFmt(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format)>
<com.csipsimple.wizards.impl.ReachPhones: java.lang.String getDomain()>
<com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.Object safelyInvokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])>
<com.csipsimple.db.DBAdapter$DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
<org.pjsip.pjsua.pjsua_buddy_config: void setUser_data(byte[])>
<com.csipsimple.service.SipService: int getGSMCallState()>
<com.csipsimple.api.SipCallSession$1: java.lang.Object[] newArray(int)>
<com.csipsimple.ui.incall.InCallCard: float access$1()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean onMenuItemClick(android.view.MenuItem)>
<com.csipsimple.service.receiver.DynamicReceiver5: boolean compatIsInitialStickyBroadcast(android.content.Intent)>
<org.pjsip.pjsua.pjsua_call_setting: void delete()>
<com.csipsimple.ui.incall.InCallInfoGrid: void onLayout(boolean,int,int,int,int)>
<com.csipsimple.wizards.impl.Mondotalk: java.lang.String getDomain()>
<com.actionbarsherlock.view.ActionProvider: void subUiVisibilityChanged(boolean)>
<com.csipsimple.wizards.impl.AuthorizationImplementation: java.lang.String getDomain()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: boolean hasFocus()>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onActionModeStarted(com.actionbarsherlock.view.ActionMode)>
<org.pjsip.pjsua.pjsua_acc_config: void setCred_info(org.pjsip.pjsua.pjsip_cred_info)>
<org.pjsip.pjsua.pjsua_transport_info: long getCPtr(org.pjsip.pjsua.pjsua_transport_info)>
<org.pjsip.pjsua.pjsua: int acc_find_for_incoming(org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
<com.csipsimple.ui.dialpad.DialerFragment$7: void onClick(android.content.DialogInterface,int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: void setPresenter(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter)>
<com.actionbarsherlock.internal.view.StandaloneActionMode: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)>
<org.pjsip.pjsua.pj_stun_nat_detect_result: java.lang.String getNat_type_name()>
<com.csipsimple.widgets.PasswordPreference: void onClick(android.view.View)>
<com.actionbarsherlock.internal.view.ActionProviderWrapper: void <init>(com.actionbarsherlock.view.ActionProvider)>
<org.pjsip.pjsua.pjsua_logging_config: long getCPtr(org.pjsip.pjsua.pjsua_logging_config)>
<org.pjsip.pjsua.pjsua: int call_get_conf_port(int)>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: com.actionbarsherlock.view.Menu getMenu()>
<org.pjsip.pjsua.pjsua_transport_info: void finalize()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2: void <init>()>
<com.csipsimple.service.SipService$ServiceHandler: void <init>(com.csipsimple.service.SipService)>
<com.csipsimple.ui.calllog.GroupingListAdapter: void findGroups()>
<org.pjsip.pjsua.pjsua_destroy_flag$SwigNext: void access$1(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: int getIntValue()>
<org.pjsip.pjsua.pjmedia_snd_dev_info: long getDefault_samples_per_sec()>
<com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver: void <init>(com.actionbarsherlock.internal.widget.IcsAdapterView)>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: int measureHeightOfChildren(int,int,int,int,int)>
<com.csipsimple.utils.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context)>
<com.csipsimple.pjsip.PjSipService$1: com.csipsimple.pjsip.PjSipService access$0(com.csipsimple.pjsip.PjSipService$1)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>
<com.csipsimple.utils.CallHandlerPlugin: android.graphics.Bitmap getIcon()>
<org.pjsip.pjsua.pjsua: int verify_sip_url(java.lang.String)>
<org.pjsip.pjsua.pjsua_stream_info: void setType(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type)>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
<com.csipsimple.widgets.DontPressWithParentImageView: void setPressed(boolean)>
<org.pjsip.pjsua.pj_stun_resolve_result: void setAddr(org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String)>
<com.csipsimple.ui.calllog.CallDetailHistoryAdapter: int getItemViewType(int)>
<com.csipsimple.api.SipCallSession: void setRemoteContact(java.lang.String)>
<com.csipsimple.api.ISipService$Stub$Proxy: java.lang.String getPresenceStatus(long)>
<org.pjsip.pjsua.pjsua: int buddy_is_valid(int)>
<com.csipsimple.widgets.Dialpad: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.utils.contacts.ContactsWrapper$Phone: void setType(java.lang.String)>
<com.csipsimple.ui.messages.MessageFragment: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<org.pjsip.pjsua.pjsua: int vid_win_get_info(int,org.pjsip.pjsua.pjsua_vid_win_info)>
<com.actionbarsherlock.app.SherlockListActivity: void onActionModeFinished(com.actionbarsherlock.view.ActionMode)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void)>
<com.csipsimple.wizards.impl.Sbohempevnalinko: java.lang.String getDefaultName()>
<com.csipsimple.widgets.AccountWidgetConfigure: java.lang.String getPrefsKey(int)>
<com.csipsimple.api.SipProfileState: boolean isAddedToStack()>
<com.csipsimple.utils.Base64$1: void <init>(java.io.InputStream,java.lang.ClassLoader)>
<com.actionbarsherlock.internal.utils.Utility5: boolean isLongPressEvent(android.view.KeyEvent)>
<com.csipsimple.ui.filters.EditFilter: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<com.csipsimple.ui.calllog.GroupingListAdapter: void obtainPositionMetadata(com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata,int)>
<com.csipsimple.ui.filters.AccountFiltersListFragment: void changeCursor(android.database.Cursor)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener)>
<com.csipsimple.api.SipProfileState: java.lang.CharSequence getDisplayName()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: int getNavigationMode()>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: boolean expandActionView()>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void <init>()>
<com.csipsimple.wizards.impl.BTone: boolean needRestart()>
<com.csipsimple.pjsip.PjSipService: int validateAudioClockRate(int)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void requestLayout()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<com.csipsimple.wizards.impl.SiptelPt: java.lang.String getDomain()>
<com.csipsimple.wizards.impl.VoipMS: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: void <clinit>()>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: void <clinit>()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.view.View access$1(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter)>
<com.csipsimple.wizards.impl.Interphone365: boolean needRestart()>
<org.pjsip.pjsua.pjsua_mwi_info: void finalize()>
<org.pjsip.pjsua.pjsua_create_media_transport_flag$SwigNext: void <clinit>()>
<com.csipsimple.utils.ContactsAsyncHelper$1: int sizeOf(android.net.Uri,android.graphics.Bitmap)>
<com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender: void run()>
<org.pjsip.pjsua.pjsip_tls_setting: void setRequire_client_cert(int)>
<org.pjsip.pjsua.pjsua_conf_port_info: long getClock_rate()>
<com.csipsimple.wizards.impl.Betamax$1: void <init>()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean isEnabled()>
<com.csipsimple.wizards.impl.Optimus: java.lang.String getDomain()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void removeAllListeners()>
<org.pjsip.pjsua.pjsua_stun_use$SwigNext: int access$0()>
<com.csipsimple.wizards.impl.Vitelity: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: int getLeftOffset()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: void onDetachedFromWindow()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean showsTextAsAction()>
<com.csipsimple.wizards.impl.Speakezi: java.lang.String getDomain()>
<com.csipsimple.utils.ArrayUtils: int idealByteArraySize(int)>
<com.csipsimple.api.SipProfileState: void writeToParcel(android.os.Parcel,int)>
<com.csipsimple.service.MediaManager: com.csipsimple.service.SipService access$0(com.csipsimple.service.MediaManager)>
<org.pjsip.pjsua.pjsua_codec_info: void setDesc(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua_state: org.pjsip.pjsua.pjsua_state valueOf(java.lang.String)>
<org.pjsip.pjsua.pjsip_redirect_op$SwigNext: void <clinit>()>
<com.actionbarsherlock.internal.view.StandaloneActionMode: void finish()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)>
<org.pjsip.pjsua.pjsua_buddy_info: void setSub_state(org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void setStartDelay(long)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<org.pjsip.pjsua.pjsua_config: long getMax_calls()>
<org.pjsip.pjsua.pjsua_stream_info: long getCPtr(org.pjsip.pjsua.pjsua_stream_info)>
<org.pjsip.pjsua.pjsua_call_info: int getId()>
<com.actionbarsherlock.widget.ActivityChooserModel: java.util.List access$3(com.actionbarsherlock.widget.ActivityChooserModel)>
<org.pjsip.pjsua.pjsua: byte[] acc_get_user_data(int)>
<org.pjsip.pjsua.pjsua_med_tp_st$SwigNext: void access$1(int)>
<org.pjsip.pjsua.pjsua_transport_info: void setId(int)>
<org.webrtc.videoengine.ViERenderer: android.view.SurfaceHolder GetLocalRenderer()>
<com.csipsimple.ui.dialpad.DialerFragment: boolean access$2(com.csipsimple.ui.dialpad.DialerFragment)>
<com.csipsimple.wizards.impl.Ippi: boolean needRestart()>
<com.csipsimple.utils.ContactsAsyncHelper$WorkerHandler: void <init>(com.csipsimple.utils.ContactsAsyncHelper,android.os.Looper)>
<com.csipsimple.wizards.impl.Vitelity: java.lang.String getDefaultName()>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.Bitmap,java.lang.String,android.view.View$OnClickListener)>
<com.csipsimple.wizards.BasePrefsWizard: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence)>
<org.pjsip.pjsua.pjsua_media_config: int getNo_vad()>
<com.csipsimple.ui.messages.ConversationsListFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void setupStartValues()>
<com.csipsimple.ui.filters.AccountFilters: void <init>()>
<org.pjsip.pjsua.pjsua_stun_use: org.pjsip.pjsua.pjsua_stun_use valueOf(java.lang.String)>
<org.pjsip.pjsua.pjmedia_port_info: long getSignature()>
<com.actionbarsherlock.internal.view.StandaloneActionMode: boolean isUiFocusable()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void <clinit>()>
<com.csipsimple.utils.SmileyParser$Smileys: int getSmileyResource(int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setItemInvoker(com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getAlpha()>
<com.csipsimple.ui.calllog.CallDetailHistoryAdapter: long getItemId(int)>
<org.pjsip.pjsua.pjsua_call_hold_type: org.pjsip.pjsua.pjsua_call_hold_type[] values()>
<org.pjsip.pjsua.pjsua_call_info: void setRole(org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e)>
<com.csipsimple.ui.messages.ConversationsListFragment: com.csipsimple.ui.messages.ConverstationsAdapter access$2(com.csipsimple.ui.messages.ConversationsListFragment)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setVisible(boolean)>
<com.actionbarsherlock.view.ActionMode: java.lang.Object getTag()>
<com.csipsimple.wizards.impl.Local: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.view.ActionProviderWrapper: com.actionbarsherlock.view.ActionProvider unwrap()>
<com.csipsimple.wizards.impl.AlternateServerImplementation: void <clinit>()>
<com.csipsimple.wizards.impl.Speakezi: boolean needRestart()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.Object getAnimatedValue()>
<com.csipsimple.pjsip.PjSipAccount: java.lang.String getDisplayName()>
<com.csipsimple.widgets.CheckableListItemView: boolean isChecked()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean collapseActionView()>
<com.csipsimple.ui.filters.EditFilter: void afterTextChanged(android.text.Editable)>
<com.csipsimple.wizards.impl.Localphone: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.DvcNg: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)>
<com.csipsimple.ui.warnings.WarningPrivilegedIntent: int getLayout()>
<com.csipsimple.ui.account.AccountsLoader$FilteredProfile: com.csipsimple.utils.CallHandlerPlugin getCallHandlerPlugin()>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.View getActionView()>
<com.actionbarsherlock.internal.view.StandaloneActionMode: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener)>
<com.actionbarsherlock.internal.widget.ActionBarView: int access$10(com.actionbarsherlock.internal.widget.ActionBarView)>
<com.actionbarsherlock.ActionBarSherlock: void dispatchPause()>
<org.pjsip.pjsua.pjmedia_tone_digit: void setOff_msec(short)>
<org.pjsip.pjsua.pjrpid_element: void setNote(org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.graphics.drawable.Drawable getHeaderIcon()>
<org.pjsip.pjsua.pjsua_acc_config: long getReg_timeout()>
<com.csipsimple.widgets.CSSListFragment: void onActivityCreated(android.os.Bundle)>
<org.pjsip.pjsua.pjsua_ice_config: int getIce_no_rtcp()>
<org.pjsip.pjsua.pjsip_status_code: org.pjsip.pjsua.pjsip_status_code valueOf(java.lang.String)>
<com.csipsimple.wizards.impl.BTone: java.lang.String getDefaultName()>
<com.csipsimple.utils.keyguard.Keyguard5: void lock()>
<com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter: void sort(android.content.Intent,java.util.List,java.util.List)>
<com.csipsimple.utils.bluetooth.BluetoothUtils3: boolean isBTHeadsetConnected()>
<org.pjsip.pjsua.pjsua_acc_info: void setOnline_status_text(org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams)>
<com.csipsimple.widgets.QuickActionItem: void setImageDrawable(android.graphics.drawable.Drawable)>
<org.pjsip.pjsua.pjsua_logging_config: void setDecor(long)>
<com.csipsimple.api.SipProfileState: void setStatusText(java.lang.String)>
<org.pjsip.pjsua.pjsua_transport_info: void setFlag(long)>
<org.pjsip.pjsua.pj_stun_nat_detect_result: long getCPtr(org.pjsip.pjsua.pj_stun_nat_detect_result)>
<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setPreferenceScreenSub(java.lang.String,java.lang.Class,java.lang.Class,int)>
<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent getIntent()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$4(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
<com.csipsimple.ui.prefs.GenericPrefs: void afterBuildPrefs()>
<com.csipsimple.api.ISipService$Stub$Proxy: int answer(int,int)>
<com.csipsimple.service.MediaManager: void <clinit>()>
<com.csipsimple.wizards.impl.EasyBell: java.lang.String getDomain()>
<org.pjsip.pjsua.csipsimple_config: long getExtra_aud_codecs_cnt()>
<org.pjsip.pjsua.pjsua: int recorder_get_conf_port(int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setTitle(int)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void setFocusableInTouchMode(boolean)>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>
<com.csipsimple.wizards.impl.BaseImplementation: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)>
<org.webrtc.videoengine.ViEAndroidGLES20: void ReDraw()>
<com.csipsimple.ui.dialpad.DigitsEditText: void onSelectionChanged(int,int)>
<com.actionbarsherlock.app.ActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: com.csipsimple.ui.account.AccountsLoader getAccountLoader()>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: float getSupportTranslationX()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: java.lang.CharSequence getSubtitle()>
<com.actionbarsherlock.internal.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void transformMatrix(android.graphics.Matrix,android.view.View)>
<org.pjsip.pjsua.pjsua_acc_config: void setReg_hdr_list(org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr)>
<com.csipsimple.wizards.impl.Ekiga: java.lang.String getDomain()>
<org.pjsip.pjsua.SWIGTYPE_p_f_p_void__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_void__void)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: void removeGroup(int)>
<com.csipsimple.api.SipCallSession: int getConfPort()>
<com.actionbarsherlock.app.SherlockActivity: void onActionModeStarted(com.actionbarsherlock.view.ActionMode)>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>
<com.csipsimple.wizards.impl.CongstarTelekom: java.lang.String getDomain()>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$TabListener getCallback()>
<org.pjsip.pjsua.pjsua_transport_info: long getFlag()>
<com.actionbarsherlock.app.SherlockListActivity: boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu)>
<org.pjsip.pjsua.pjsua: int snd_is_active()>
<org.pjsip.pjsua.pjsip_cred_info: int getData_type()>
<com.csipsimple.ui.calllog.GroupingListAdapter: void toggleGroup(int)>
<com.csipsimple.db.DBProvider: boolean onCreate()>
<org.pjsip.pjsua.pjsua_acc_config: void setPublish_opt(org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt)>
<com.csipsimple.ui.filters.AccountFilters: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<org.pjsip.pjsua.pjsua_acc_config: void setVid_rend_dev(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
<com.csipsimple.wizards.impl.Ippi: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.IpTel: java.lang.String getDomain()>
<org.webrtc.videoengine.ViEAndroidGLES20: void <clinit>()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void access$2(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu)>
<org.pjsip.pjsua.pjsua_create_media_transport_flag: int swigValue()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: long getCurrentPlayTime()>
<org.pjsip.pjsua.pjmedia_tone_digit: void setDigit(char)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: long getFrameDelay()>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: void setShowDividers(int)>
<com.csipsimple.wizards.impl.VoipNor: java.lang.String getDomain()>
<com.csipsimple.wizards.impl.Ajtel: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.ui.messages.MessageFragment: void onDetach()>
<com.csipsimple.db.DBAdapter: void access$0(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String)>
<com.actionbarsherlock.internal.widget.FakeDialogPhoneWindow: void onMeasure(int,int)>
<org.pjsip.pjsua.pjsua_config: void setSrtp_optional_dup_offer(int)>
<org.pjsip.pjsua.pjsua_sip_timer_use: org.pjsip.pjsua.pjsua_sip_timer_use[] values()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.internal.widget.ActionBarContextView access$0(com.actionbarsherlock.internal.ActionBarSherlockCompat)>
<com.csipsimple.ui.calllog.CallLogListFragment: void onActivityCreated(android.os.Bundle)>
<com.csipsimple.api.SipUri: java.lang.String encodeUser(java.lang.String)>
<org.pjsip.pjsua.pjsip_transport_type_e: org.pjsip.pjsua.pjsip_transport_type_e valueOf(java.lang.String)>
<org.pjsip.pjsua.pjsua_msg_data: void setMultipart_parts(org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part)>
<com.csipsimple.wizards.impl.Mondotalk: int access$0(com.csipsimple.wizards.impl.Mondotalk)>
<com.csipsimple.ui.prefs.AudioTester: android.widget.ProgressBar access$3(com.csipsimple.ui.prefs.AudioTester)>
<com.csipsimple.wizards.impl.Freephonie: java.lang.String getDefaultName()>
<com.csipsimple.ui.account.AccountsEditListFragment: void onSaveInstanceState(android.os.Bundle)>
<com.csipsimple.wizards.impl.Smarto: boolean needRestart()>
<com.csipsimple.utils.accessibility.Accessibility4: boolean isEnabled()>
<org.pjsip.pjsua.pjsua_acc_info: void setHas_registration(int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.ActionProvider getActionProvider()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean dispatchHoverEvent(android.view.MotionEvent)>
<org.pjsip.pjsua.pjmedia_tone_desc: void delete()>
<org.pjsip.pjsua.pjsua_logging_config: long getLevel()>
<com.csipsimple.service.Downloader$1: void run(long,long)>
<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void proposeRestoreFromBundle(android.os.Bundle)>
<com.csipsimple.wizards.impl.DeltaThree: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsip_inv_state: org.pjsip.pjsua.pjsip_inv_state[] values()>
<org.pjsip.pjsua.pjsua_msg_data: void delete()>
<com.csipsimple.db.DBProvider: void broadcastRegistrationChange(long)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: com.actionbarsherlock.app.ActionBar$Tab getTabAt(int)>
<org.pjsip.pjsua.pjmedia_dir$SwigNext: void <clinit>()>
<com.csipsimple.wizards.impl.Vono: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjmedia_srtp_use: int swigValue()>
<com.csipsimple.ui.account.AccountsEditListFragment: void access$1(com.csipsimple.ui.account.AccountsEditListFragment)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: boolean onNavigationItemSelected(int,long)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: boolean isRunning()>
<com.actionbarsherlock.internal.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()>
<org.pjsip.pjsua.dynamic_factory: long[] cArrayUnwrap(org.pjsip.pjsua.dynamic_factory[])>
<org.pjsip.pjsua.pjsua_call_info: void setLast_status(org.pjsip.pjsua.pjsip_status_code)>
<org.pjsip.pjsua.pjsip_tls_setting: void setQos_params(org.pjsip.pjsua.pj_qos_params)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void drawableStateChanged()>
<com.csipsimple.api.SipProfileState: int getAccountId()>
<com.csipsimple.wizards.impl.Basic: void bindFields()>
<com.csipsimple.pjsip.PjSipService: void resetCodecs()>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: java.lang.Object getTag()>
<com.csipsimple.ui.warnings.WarningFragment: void onWarningRemoved(java.lang.String)>
<com.csipsimple.api.SipManager: boolean isApiCompatible(com.csipsimple.api.ISipService)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setVisible(boolean)>
<com.csipsimple.ui.messages.MessageFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean isShowing()>
<com.csipsimple.wizards.impl.BaseImplementation: void markFieldValid(android.preference.Preference)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_method: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_method)>
<com.csipsimple.utils.accessibility.Accessibility3: boolean isEnabled()>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: boolean collapseActionView()>
<com.csipsimple.wizards.impl.Scarlet: java.lang.String getDomain()>
<com.csipsimple.ui.account.AccountsEditListFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.csipsimple.wizards.impl.Pozitel: boolean canTcp()>
<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean)>
<com.csipsimple.wizards.impl.BelCentrale: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setVisibility(int)>
<com.csipsimple.api.SipMessage: java.lang.String getFrom()>
<com.csipsimple.api.SipProfileState$2: int compare(java.lang.Object,java.lang.Object)>
<org.pjsip.pjsua.pjsua: int update_transport(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua_media_config: int getJb_init()>
<com.csipsimple.wizards.impl.VoipLlama: java.lang.String getDefaultName()>
<com.csipsimple.widgets.EditSipUri$ContactAdapter: java.lang.Object[] getSections()>
<com.csipsimple.service.SipService: void setAutoAnswerNext(boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int)>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void onBackPressed()>
<org.pjsip.pjsua.pjsua: long conf_get_active_ports()>
<com.csipsimple.ui.prefs.AudioTester$MonitorThread: com.csipsimple.ui.prefs.AudioTester access$1(com.csipsimple.ui.prefs.AudioTester$MonitorThread)>
<org.pjsip.pjsua.pjsua_transport_info: void setUsage_count(long)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: int getScrollY()>
<com.csipsimple.wizards.impl.MondotalkCreate: android.graphics.Bitmap access$0(com.csipsimple.wizards.impl.MondotalkCreate)>
<com.csipsimple.ui.calllog.CallLogListFragment: void access$3(com.csipsimple.ui.calllog.CallLogListFragment,com.actionbarsherlock.view.ActionMode)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op$SwigNext: void <clinit>()>
<com.csipsimple.widgets.contactbadge.OverlayedImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: void setProgressBarVisibility(boolean)>
<com.csipsimple.wizards.impl.Speakezi: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.MegaVoip: java.lang.String getDomain()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void addUpdateListener(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener)>
<org.pjsip.pjsua.pjsua: void pres_dump(int)>
<com.csipsimple.wizards.impl.Telsome: boolean canTcp()>
<org.pjsip.pjsua.pjsua_call_media_status: org.pjsip.pjsua.pjsua_call_media_status[] values()>
<org.pjsip.pjsua.pjsua_call_info: void setProv_media_cnt(long)>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType: org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType valueOf(java.lang.String)>
<com.csipsimple.widgets.EditSipUri: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<com.csipsimple.api.SipCallSession: void setAccId(long)>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isActionViewExpanded()>
<com.csipsimple.utils.contacts.ContactsWrapper$2: void onClick(android.content.DialogInterface,int)>
<com.csipsimple.widgets.ScreenLocker: void clearLockTasks()>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: int size()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setDisplayOptions(int,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setIcon(int)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: int getFeatures()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: android.view.View getActionView()>
<com.csipsimple.utils.Log: void v(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.csipsimple.wizards.impl.Ip2Mobile: java.lang.String getDomain()>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.pjsip.pjsua.pjsua_config: int getStun_map_use_stun2()>
<org.pjsip.pjsua.pjsua: int recorder_destroy(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void setupEndValues()>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)>
<org.pjsip.pjsua.pjsua_vid_req_keyframe_method$SwigNext: int access$0()>
<com.csipsimple.wizards.impl.Zeng: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$4(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
<com.csipsimple.wizards.impl.MondotalkCreate: boolean checkEmptyText(android.widget.EditText)>
<org.pjsip.pjsua.pjsua: int handle_events(long)>
<org.pjsip.pjsua.pjsua_callback: void setOn_call_transfer_request(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void)>
<com.csipsimple.ui.account.AccountsEditListAdapter: void setOnCheckedRowListener(com.csipsimple.ui.account.AccountsEditListAdapter$OnCheckedRowListener)>
<com.csipsimple.wizards.impl.Mondotalk: boolean canTcp()>
<com.actionbarsherlock.widget.ActivityChooserModel: int getHistoryMaxSize()>
<org.pjsip.pjsua.pjsua_callback: void <init>()>
<com.csipsimple.wizards.impl.Pozitel: java.lang.String getDefaultName()>
<com.csipsimple.utils.accessibility.Accessibility3: void init(android.content.Context)>
<com.csipsimple.wizards.impl.Zeng: boolean canTcp()>
<com.csipsimple.widgets.ScreenLocker: void tearDown()>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: java.lang.CharSequence getTitle()>
<org.webrtc.videoengine.ViEAndroidGLES20: java.lang.String access$0()>
<com.actionbarsherlock.internal.utils.Utility4: android.widget.PopupWindow buildPopupWindow(android.content.Context,android.util.AttributeSet,int,int)>
<com.csipsimple.utils.ArrayUtils: int idealShortArraySize(int)>
<org.pjsip.pjsua.pjsua_buddy_info: long getCPtr(org.pjsip.pjsua.pjsua_buddy_info)>
<org.pjsip.pjsua.pjmedia_snd_dev_info: void setName(java.lang.String)>
<org.pjsip.pjsua.pjsua_vid_win_info: void delete()>
<com.csipsimple.utils.contacts.ContactsWrapper: boolean usefulAsDigits(java.lang.CharSequence)>
<com.csipsimple.wizards.impl.Mobex: java.lang.String access$0()>
<com.csipsimple.utils.PreferencesWrapper: void startEditing()>
<com.csipsimple.utils.contacts.ContactsWrapper: void <clinit>()>
<org.pjsip.pjsua.Callback: long getCPtr(org.pjsip.pjsua.Callback)>
<com.csipsimple.widgets.PasswordPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.widgets.EditSipUri$ContactAdapter: int getPositionForSection(int)>
<com.csipsimple.wizards.impl.AccountCreationWebview: void show()>
<com.csipsimple.api.ISipService$Stub$Proxy: void askThreadedRestart()>
<org.pjsip.pjsua.pj_qos_type: org.pjsip.pjsua.pj_qos_type[] values()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_endpoint: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_endpoint)>
<org.pjsip.pjsua.pjsua: int vid_codec_set_param(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param)>
<com.csipsimple.models.Filter: android.content.ContentValues getDbContentValues()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void dispatchRestoreInstanceState(android.util.SparseArray)>
<com.csipsimple.wizards.impl.Pbxes: java.lang.String getDomain()>
<com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$5(com.actionbarsherlock.internal.widget.ActionBarView)>
<org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_resolve_result__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_resolve_result__void)>
<org.pjsip.pjsua.pjsua_logging_config: int getMsg_logging()>
<com.actionbarsherlock.internal.view.menu.ActionMenu: int size()>
<com.actionbarsherlock.internal.view.StandaloneActionMode: android.view.View getCustomView()>
<org.pjsip.pjsua.pjsua_sip_timer_use: org.pjsip.pjsua.pjsua_sip_timer_use valueOf(java.lang.String)>
<org.pjsip.pjsua.pjsua_acc_config: int getMwi_enabled()>
<com.actionbarsherlock.app.ActionBar: android.content.Context getThemedContext()>
<com.csipsimple.wizards.impl.Advanced: java.lang.String getDefaultFieldSummary(java.lang.String)>
<org.webrtc.videoengine.ViESurfaceRenderer: void surfaceDestroyed(android.view.SurfaceHolder)>
<com.csipsimple.ui.prefs.AudioTester: void onClick(android.view.View)>
<com.csipsimple.ui.calllog.CallLogListFragment: void <init>()>
<com.csipsimple.wizards.impl.Nymgo: boolean needRestart()>
<com.csipsimple.api.SipProfileState: void setRegUri(java.lang.String)>
<com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.IcsSpinner access$8(com.actionbarsherlock.internal.widget.ActionBarView)>
<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.InCallActivity$CallsAdapter access$13(com.csipsimple.ui.incall.InCallActivity)>
<com.csipsimple.ui.messages.MessageFragment: void onActivityCreated(android.os.Bundle)>
<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: int getId()>
<com.csipsimple.ui.incall.InCallControls: void dispatchTriggerEvent(int)>
<com.actionbarsherlock.app.SherlockActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setHorizontalOffset(int)>
<com.csipsimple.ui.account.AccountsEditListAdapter: boolean isDraggable()>
<com.csipsimple.ui.incall.InCallMediaControl$LockTimerTask: void <init>(com.csipsimple.ui.incall.InCallMediaControl)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void <init>(android.view.View)>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: void setTitle(int)>
<com.csipsimple.api.SipProfile: boolean getAutoRegistration()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()>
<com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu)>
<com.csipsimple.api.SipMessage: long getDate()>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<com.csipsimple.api.ISipService$Stub$Proxy: void sipStart()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>
<com.actionbarsherlock.internal.app.ActionBarImpl: int access$3(com.actionbarsherlock.internal.app.ActionBarImpl)>
<org.pjsip.pjsua.pjmedia_tone_desc: long getCPtr(org.pjsip.pjsua.pjmedia_tone_desc)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: android.view.Menu unwrap()>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView)>
<com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: com.csipsimple.utils.NightlyUpdater access$2(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>
<org.pjsip.pjsua.pjsua_media_config: int getEnable_turn()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent)>
<com.csipsimple.wizards.impl.MondotalkCreate$MondotalkHandler: void <init>(com.csipsimple.wizards.impl.MondotalkCreate)>
<com.csipsimple.widgets.EditSipUri: void clear()>
<com.csipsimple.utils.CustomDistribution: boolean distributionWantsOtherProviders()>
<com.csipsimple.service.SipService: void notifyUserOfMessage(java.lang.String)>
<com.csipsimple.utils.PreferencesWrapper: boolean getLibCapability(java.lang.String)>
<com.csipsimple.wizards.impl.InterTelecomGr: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_media_config: long getSnd_clock_rate()>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: int getFirstVisiblePosition()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
<com.csipsimple.widgets.MaxScaleImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<org.pjsip.pjsua.pjsua_call_info: void setTotal_duration(org.pjsip.pjsua.pj_time_val)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean isChecked()>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: float getSupportTranslationY()>
<com.csipsimple.wizards.impl.Sonetel: java.lang.String getDomain()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void removeAllTabs()>
<com.csipsimple.ui.favorites.FavListFragment: void changeCursor(android.database.Cursor)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: char getNumericShortcut()>
<org.pjsip.pjsua.pjsua_config: long getCred_count()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setAnchorView(android.view.View)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op: org.pjsip.pjsua.pjsua_call_vid_strm_op valueOf(java.lang.String)>
<com.csipsimple.service.SipNotifications: void cancelVoicemails()>
<org.pjsip.pjsua.pjsua_acc_config: byte[] getUser_data()>
<com.csipsimple.wizards.impl.OXO810: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.widget.FakeDialogPhoneWindow: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: int hashCode()>
<org.pjsip.pjsua.pjsua_callback: void setOn_call_replace_request(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isExclusiveCheckable()>
<com.csipsimple.wizards.impl.OXO810: boolean needRestart()>
<com.csipsimple.api.ISipService$Stub$Proxy: android.os.IBinder asBinder()>
<com.csipsimple.ui.calllog.GroupingListAdapter: int getCount()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.String toString()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.csipsimple.ui.account.AccountsEditListFragment$AccountStatusContentObserver: void onChange(boolean)>
<com.csipsimple.wizards.BasePrefsWizard: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.csipsimple.utils.contacts.ContactsSearchAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void recycleAllViews()>
<com.actionbarsherlock.view.ActionProvider: boolean hasSubMenu()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.shapes.Shape getDrawableShape()>
<com.csipsimple.widgets.MarqueeTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<org.pjsip.pjsua.pjsua_stun_use$SwigNext: void access$1(int)>
<com.csipsimple.ui.dialpad.DialerFragment: void onVisibilityChanged(boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setHomeButtonEnabled(boolean)>
<com.csipsimple.widgets.DragnDropListView: void setOnDropListener(com.csipsimple.widgets.DragnDropListView$DropListener)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.Context getContext()>
<org.pjsip.pjsua.pjsua_conf_port_info: int getSlot_id()>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: void setGroupVisible(int,boolean)>
<com.csipsimple.wizards.impl.CongstarTelekom: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)>
<org.pjsip.pjsua.csipsimple_config: int getAdd_bandwidth_tias_in_sdp()>
<org.pjsip.pjsua.pjsua_state: org.pjsip.pjsua.pjsua_state[] values()>
<com.csipsimple.wizards.impl.FreephoneLineCa: boolean needRestart()>
<org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int)>
<com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: boolean finishAccountCreationAndQuit(boolean,java.lang.String,java.lang.String)>
<org.pjsip.pjsua.csipsimple_config: void setExtra_vid_codecs(org.pjsip.pjsua.dynamic_factory[])>
<org.pjsip.pjsua.pjmedia_port: void <init>()>
<org.webrtc.videoengine.camera.CameraUtils5: void unsetCallback(android.hardware.Camera)>
<com.csipsimple.wizards.impl.Ovh: java.lang.String getDomain()>
<com.actionbarsherlock.internal.widget.ActionBarView: void setSplitActionBar(boolean)>
<com.csipsimple.wizards.impl.Haloo: java.lang.String getDefaultName()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport)>
<dummyMainClass: com.csipsimple.widgets.CSSListFragment dummyMainMethod_com_csipsimple_widgets_CSSListFragment(android.content.Intent,android.app.Activity)>
<com.csipsimple.wizards.WizardChooser: java.util.ArrayList access$0(com.csipsimple.wizards.WizardChooser)>
<org.webrtc.videoengine.camera.CameraUtils9: android.hardware.Camera openCamera(int)>
<com.csipsimple.widgets.SlidingTab$Slider: void setHintText(int)>
<com.actionbarsherlock.internal.widget.IcsSpinner: java.lang.CharSequence getPrompt()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char)>
<com.csipsimple.wizards.impl.Ecs: boolean needRestart()>
<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void setIcon(android.graphics.drawable.Drawable)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView: void access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.content.res.Resources getResources()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$1: void onNothingSelected(android.widget.AdapterView)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo getMenuInfo()>
<com.csipsimple.utils.ContactsAsyncHelper: void handleMessage(android.os.Message)>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void finishServiceIfNeeded(boolean)>
<org.pjsip.pjsua.pjmedia_tone_desc: void <init>()>
<com.actionbarsherlock.app.SherlockListFragment: com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity()>
<org.pjsip.pjsua.pjsua_acc_config: void setKa_data(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.wizards.impl.AlternateServerImplementation: void bindFields()>
<com.actionbarsherlock.internal.view.menu.ActionMenu: void setGroupEnabled(int,boolean)>
<com.csipsimple.utils.Compatibility: boolean isCompatible(int)>
<com.csipsimple.ui.dialpad.DigitsEditText: void <init>(android.content.Context,android.util.AttributeSet)>
<org.pjsip.pjsua.pjsua_create_media_transport_flag$SwigNext: int access$0()>
<com.csipsimple.api.SipProfileState: int getPjsuaId()>
<org.pjsip.pjsua.pjsua_callback: void setOn_call_tsx_state(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void)>
<org.pjsip.pjsua.pjsua_vid_win_info: int getIs_native()>
<com.csipsimple.ui.dialpad.DialerFragment: void onClick(android.view.View)>
<com.csipsimple.widgets.HorizontalQuickActionWindow: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<com.csipsimple.wizards.impl.BTone: java.lang.String getDomain()>
<com.csipsimple.service.SipService: void notifyUserOfMessage(int)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setIntent(android.content.Intent)>
<com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroupAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver: void clearSavedState()>
<com.csipsimple.utils.bluetooth.BluetoothUtils8: android.media.AudioManager access$1(com.csipsimple.utils.bluetooth.BluetoothUtils8)>
<org.pjsip.pjsua.pjsua_destroy_flag$SwigNext: int access$0()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void)>
<org.pjsip.pjsua.pjsua_100rel_use: org.pjsip.pjsua.pjsua_100rel_use[] values()>
<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void <init>()>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: void setQwertyMode(boolean)>
<org.pjsip.pjsua.pj_qos_type$SwigNext: void access$1(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1: void <init>()>
<com.actionbarsherlock.widget.ActivityChooserModel: java.lang.String access$1(com.actionbarsherlock.widget.ActivityChooserModel)>
<com.csipsimple.widgets.EditSipUri: com.csipsimple.utils.contacts.ContactsAutocompleteAdapter access$1(com.csipsimple.widgets.EditSipUri)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams)>
<com.csipsimple.api.SipCallSession: boolean isActive()>
<org.pjsip.pjsua.pjsua_med_tp_state_info: void setStatus(int)>
<org.pjsip.pjsua.pj_stun_resolve_result: void setName(org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1: com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState[] newArray(int)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: int[] onCreateDrawableState(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4: java.lang.Object initialValue()>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: java.lang.CharSequence getTitle()>
<com.actionbarsherlock.app.SherlockFragment: void onDetach()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)>
<com.csipsimple.utils.Base64: byte[] getAlphabet(int)>
<com.csipsimple.wizards.WizardChooser$WizardsListAdapter: void <init>(com.csipsimple.wizards.WizardChooser,android.content.Context,java.util.List,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>
<com.csipsimple.api.SipCallSession: void setConnectStart(long)>
<com.actionbarsherlock.app.SherlockActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.internal.utils.Utility11: void jumpToCurrentState(android.graphics.drawable.Drawable)>
<org.pjsip.pjsua.pj_qos_type: org.pjsip.pjsua.pj_qos_type valueOf(java.lang.String)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void close(boolean)>
<com.csipsimple.utils.NightlyUpdater: long lastCheck()>
<com.actionbarsherlock.internal.view.menu.ActionMenu: void clear()>
<com.csipsimple.utils.Columns: boolean hasField(android.database.Cursor,java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void)>
<com.csipsimple.wizards.impl.Callcentric: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsip_timer_setting: void <init>()>
<com.csipsimple.widgets.ScreenLocker$ShowHideHandler: void <init>(com.csipsimple.widgets.ScreenLocker)>
<org.pjsip.pjsua.pjsua_vid_preview_param: void setRend_id(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data)>
<com.csipsimple.wizards.impl.VoipBel: java.lang.String getDefaultName()>
<com.csipsimple.utils.bluetooth.BluetoothWrapper: void setContext(android.content.Context)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.SubMenu getSubMenu()>
<com.csipsimple.wizards.impl.Vegatel: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.api.SipCallSession: int getMediaStatus()>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getDividerPadding()>
<com.csipsimple.service.PresenceManager: void stopMonitoring()>
<com.actionbarsherlock.internal.utils.Utility11: boolean hasPermanentMenuKey(android.view.ViewConfiguration)>
<com.csipsimple.wizards.impl.SipWise: boolean needRestart()>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: void setCustomView(android.view.View)>
<org.pjsip.pjsua.pjsua_conf_port_info: long getCPtr(org.pjsip.pjsua.pjsua_conf_port_info)>
<com.csipsimple.ui.filters.AccountFiltersListAdapter: void <init>(android.content.Context,android.database.Cursor)>
<com.csipsimple.ui.incall.InCallActivity: void onActivityResult(int,int,android.content.Intent)>
<org.pjsip.pjsua.pjsua_vid_preview_param: void setShow(int)>
<com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setCallDetailsHeader(android.widget.TextView,com.csipsimple.ui.calllog.PhoneCallDetails)>
<com.csipsimple.wizards.impl.PlanetPhone: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua: int transport_set_enable(int,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: java.lang.Class getType()>
<com.csipsimple.widgets.SeekBarPreference: void onSetInitialValue(boolean,java.lang.Object)>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: boolean hasDividerBeforeChildAt(int)>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: float getSupportAlpha()>
<com.csipsimple.widgets.DragnDropListView: int getItemForPosition(int)>
<com.actionbarsherlock.view.MenuInflater$MenuState: boolean hasAddedItem()>
<com.csipsimple.service.SipService: com.csipsimple.api.SipManager$PresenceStatus access$6(com.csipsimple.service.SipService)>
<org.pjsip.pjsua.pjsua_transport_config: long getCPtr(org.pjsip.pjsua.pjsua_transport_config)>
<org.pjsip.pjsua.pjsua: void perror(java.lang.String,java.lang.String,int)>
<com.csipsimple.ui.SipHome: boolean access$2(com.csipsimple.ui.SipHome)>
<com.csipsimple.widgets.SlidingTab$Slider: void access$2(com.csipsimple.widgets.SlidingTab$Slider,int)>
<com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.widget.ActionBarContainer access$2(com.actionbarsherlock.internal.app.ActionBarImpl)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd)>
<com.actionbarsherlock.ActionBarSherlock: boolean dispatchCloseOptionsMenu()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void)>
<org.pjsip.pjsua.pjsua_call_info: int getRem_offerer()>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: boolean isShortcutsVisible()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)>
<com.csipsimple.wizards.impl.Anv: java.lang.String getDefaultName()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void access$0(com.actionbarsherlock.internal.widget.IcsAdapterView,android.os.Parcelable)>
<org.pjsip.pjsua.pjsua_callback: long getCPtr(org.pjsip.pjsua.pjsua_callback)>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: boolean hasStableIds()>
<com.actionbarsherlock.internal.ActionBarSherlockNative: boolean hasFeature(int)>
<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.pjsip.PjSipService access$4(com.csipsimple.pjsip.UAStateReceiver)>
<org.pjsip.pjsua.pj_str_t: void setSlen(int)>
<org.pjsip.pjsua.pjsua_call_media_info: long getIndex()>
<com.csipsimple.wizards.BasePrefsWizard: void <init>()>
<org.pjsip.pjsua.pjsua: int acc_set_user_data(int,byte[])>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem findItem(int)>
<com.actionbarsherlock.app.SherlockFragment: void <init>()>
<com.csipsimple.widgets.SlidingTab$Slider: void access$7(com.csipsimple.widgets.SlidingTab$Slider,int,int,int,int)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setPromptPosition(int)>
<org.pjsip.pjsua.pjsua_stun_use: int swigValue()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void end()>
<com.csipsimple.utils.SmileyParser: java.util.regex.Pattern buildPattern()>
<com.csipsimple.wizards.impl.Basic: int getBasePreferenceResource()>
<org.pjsip.pjsua.pjsua_media_config: void setSnd_clock_rate(long)>
<org.pjsip.pjsua.pjsip_inv_state$SwigNext: int access$0()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void dispatchSaveInstanceState(android.os.Bundle)>
<com.csipsimple.wizards.impl.CallRomania: java.lang.String getDomain()>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView)>
<com.csipsimple.utils.NightlyUpdater: java.io.File access$1(com.csipsimple.utils.NightlyUpdater)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onRestoreInstanceState(android.os.Parcelable)>
<com.csipsimple.wizards.impl.OnSip: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.TOnline: java.lang.String getDomain()>
<com.csipsimple.wizards.impl.BaseImplementation: boolean needRestart()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.csipsimple.service.SipService$ToCall: java.lang.String getDtmf()>
<com.actionbarsherlock.app.SherlockFragment: void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: char getAlphabeticShortcut()>
<org.pjsip.pjsua.pjsua_acc_info: void delete()>
<com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)>
<com.csipsimple.wizards.impl.Blueface: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider)>
<org.pjsip.pjsua.pjsua_call_media_status: org.pjsip.pjsua.pjsua_call_media_status valueOf(java.lang.String)>
<org.pjsip.pjsua.pj_pool_t: void <init>()>
<com.csipsimple.ui.help.Faq$1: void onClick(android.content.DialogInterface,int)>
<com.csipsimple.ui.help.Faq$FaqWebViewClient: void <init>(com.csipsimple.ui.help.Faq,android.view.View)>
<com.actionbarsherlock.app.SherlockDialogFragment: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<org.pjsip.pjsua.pjmedia_snd_dev_info: void setDefault_samples_per_sec(long)>
<com.csipsimple.wizards.impl.Ajtel: void <clinit>()>
<com.actionbarsherlock.app.SherlockDialogFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void)>
<org.webrtc.videoengine.ViEAndroidGLES20: void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)>
<org.pjsip.pjsua.pjsua_acc_config: void setContact_params(org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: int getGroupId()>
<com.csipsimple.api.SipProfileState: java.lang.String getRegUri()>
<com.csipsimple.ui.prefs.hc.MainPrefs: void <init>()>
<com.csipsimple.widgets.Dialpad: void setForceWidth(boolean)>
<com.actionbarsherlock.internal.app.ActionBarImpl: int getNavigationMode()>
<com.csipsimple.ui.account.AccountsEditListFragment$1: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
<com.actionbarsherlock.internal.widget.ActionBarView: com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$3(com.actionbarsherlock.internal.widget.ActionBarView)>
<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: float getSupportAlpha()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState: int describeContents()>
<com.csipsimple.wizards.impl.Betamax$AccountBalance: void applyResultSuccess(java.lang.String)>
<com.csipsimple.ui.calllog.CallLogListFragment$2: com.csipsimple.ui.calllog.CallLogListFragment access$0(com.csipsimple.ui.calllog.CallLogListFragment$2)>
<com.csipsimple.service.SipService: void releaseResources()>
<org.pjsip.pjsua.pjsua: int call_get_stream_info(int,long,org.pjsip.pjsua.pjsua_stream_info)>
<com.csipsimple.wizards.impl.Zadarma: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Zadarma)>
<com.csipsimple.ui.messages.MessageFragment: void onLoaderReset(android.support.v4.content.Loader)>
<com.csipsimple.wizards.impl.VoipBel: java.lang.String getDomain()>
<com.csipsimple.wizards.impl.OSTN: boolean needRestart()>
<org.pjsip.pjsua.pjsua_call_vid_strm_op_param: int getMed_idx()>
<org.pjsip.pjsua.pjsua_vid_req_keyframe_method$SwigNext: void <clinit>()>
<com.csipsimple.ui.incall.InCallControls: void setOnTriggerListener(com.csipsimple.ui.incall.IOnCallActionTrigger)>
<com.actionbarsherlock.app.SherlockListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
<com.csipsimple.ui.calllog.CallLogAdapter: void setOnCallLogActionListener(com.csipsimple.ui.calllog.CallLogAdapter$OnCallLogAction)>
<com.actionbarsherlock.internal.app.ActionBarImpl: android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl)>
<com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String)>
<org.pjsip.pjsua.pj_stun_nat_detect_result: int getStatus()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void onConfigurationChanged(android.content.res.Configuration)>
<com.csipsimple.api.ISipService$Stub$Proxy: boolean isRecording(int)>
<com.csipsimple.widgets.ScreenLocker$LockTimerTask: void <init>(com.csipsimple.widgets.ScreenLocker,com.csipsimple.widgets.ScreenLocker$LockTimerTask)>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: void close()>
<org.pjsip.pjsua.pjsua_call_vid_strm_op$SwigNext: int access$0()>
<com.actionbarsherlock.internal.widget.ActionBarView: void setIcon(android.graphics.drawable.Drawable)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener)>
<com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy: boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent)>
<com.csipsimple.widgets.AccountChooserButton: com.csipsimple.widgets.HorizontalQuickActionWindow access$1(com.csipsimple.widgets.AccountChooserButton)>
<org.pjsip.pjsua.pjsua: int set_ec(long,long)>
<org.pjsip.pjsua.pjsip_event: void delete()>
<org.pjsip.pjsua.pjsip_event_id_e: org.pjsip.pjsua.pjsip_event_id_e valueOf(java.lang.String)>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener)>
<com.actionbarsherlock.internal.widget.AbsActionBarView: int measureChildView(android.view.View,int,int,int)>
<com.csipsimple.api.SipProfile: void writeToParcel(android.os.Parcel,int)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.internal.utils.Utility4: void setLinearLayoutDividerPadding(android.widget.LinearLayout,int)>
<org.pjsip.pjsua.pjsua_vid_win_info: int getShow()>
<com.actionbarsherlock.widget.ShareActionProvider: boolean hasSubMenu()>
<org.pjsip.pjsua.pjsua_media_config: void setMax_media_ports(long)>
<org.pjsip.pjsua.pjsua_acc_config: long getLock_codec()>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getHistorySize()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean expandActionView()>
<org.pjsip.pjsua.pjrpid_element: long getCPtr(org.pjsip.pjsua.pjrpid_element)>
<com.csipsimple.ui.dialpad.DialerFragment$8: void onClick(android.content.DialogInterface,int)>
<com.csipsimple.service.SipService: com.csipsimple.service.SipWakeLock access$8(com.csipsimple.service.SipService)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void access$2(com.actionbarsherlock.internal.widget.IcsAbsSpinner,android.view.View,boolean)>
<com.csipsimple.utils.Compatibility: boolean isTabletScreen(android.content.Context)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence)>
<com.csipsimple.api.SipConfigManager: java.lang.String keyForNetwork(int,int)>
<com.csipsimple.ui.calllog.CallLogDetailsActivity: void onShowCallLog(long[])>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void access$0(com.csipsimple.ui.outgoingcall.OutgoingCallChooser,com.csipsimple.api.ISipService)>
<com.csipsimple.wizards.impl.Vegatel: java.lang.String getDefaultName()>
<com.csipsimple.utils.RewriterPlugin: void <clinit>()>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void onRestoreInstanceState(android.os.Parcelable)>
<org.pjsip.pjsua.pjsua_media_config: long getEc_tail_len()>
<com.csipsimple.wizards.impl.Gizmo5: boolean needRestart()>
<com.csipsimple.service.SipService$ReturnRunnable: java.lang.Object getResult()>
<com.csipsimple.api.SipMessage: void setRead(boolean)>
<com.csipsimple.widgets.FitTextView: void setMinTextSize(int)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener getOnItemSelectedListener()>
<com.csipsimple.ui.calllog.CallLogDetailsFragment: com.csipsimple.widgets.AccountChooserButton access$0(com.csipsimple.ui.calllog.CallLogDetailsFragment)>
<org.pjsip.pjsua.pjsua_med_tp_state_info: void setExt_info(byte[])>
<com.csipsimple.wizards.impl.PlanetPhone: java.lang.String getDomain()>
<com.csipsimple.widgets.HorizontalQuickActionWindow: boolean onKeyLongPress(int,android.view.KeyEvent)>
<com.csipsimple.service.PresenceManager$AccountStatusContentObserver: void <init>(com.csipsimple.service.PresenceManager,android.os.Handler)>
<org.pjsip.pjsua.pjsua_media_transport: long getCPtr(org.pjsip.pjsua.pjsua_media_transport)>
<com.csipsimple.wizards.impl.Ippi: com.csipsimple.wizards.impl.AccountCreationWebview access$2(com.csipsimple.wizards.impl.Ippi)>
<com.actionbarsherlock.app.ActionBar$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: boolean areAllItemsEnabled()>
<com.csipsimple.models.Filter: void createFromContentValue(android.content.ContentValues)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void clearAllAnimations()>
<com.actionbarsherlock.internal.widget.CapitalizingTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.utils.PreferencesWrapper: boolean startIsDigit()>
<org.pjsip.pjsua.pjsua_call_info: void setMedia_dir(org.pjsip.pjsua.pjmedia_dir)>
<com.csipsimple.widgets.DragnDropListView: void dragView(int,int)>
<com.csipsimple.wizards.impl.Amivox: java.lang.String getDomain()>
<com.csipsimple.service.receiver.DynamicReceiver4$2: void <init>(com.csipsimple.service.receiver.DynamicReceiver4)>
<org.pjsip.pjsua.pjsua: int call_get_vid_stream_idx(int)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void)>
<com.csipsimple.ui.warnings.WarningVpnIcs: java.lang.String getWarningKey()>
<com.csipsimple.ui.calllog.GroupingListAdapter$1: void <init>(com.csipsimple.ui.calllog.GroupingListAdapter,android.os.Handler)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence)>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: long getItemId(int)>
<org.pjsip.pjsua.pjsua: int get_nat_type(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type)>
<com.csipsimple.utils.SmileyParser: void <clinit>()>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: int pointToPosition(int,int)>
<org.pjsip.pjsua.pjsua_acc_config: long getUnpublish_max_wait_time_msec()>
<org.pjsip.pjsua.pj_pool_t: void setIncrement_size(long)>
<com.csipsimple.wizards.impl.Innotel: java.lang.String getDomain()>
<com.csipsimple.utils.PreferencesWrapper: java.lang.String[] getVideoCodecList()>
<com.csipsimple.wizards.impl.Tlenofon: boolean needRestart()>
<com.csipsimple.service.SipService: com.csipsimple.pjsip.UAStateReceiver getUAStateReceiver()>
<com.csipsimple.ui.filters.AccountFiltersListFragment: void onClickAddFilter()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: int getSelectedItemPosition()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: int getSelectedNavigationIndex()>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: long getDuration()>
<org.pjsip.pjsua.pjsua_config: int getStun_ignore_failure()>
<com.csipsimple.wizards.impl.OnSip: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.widgets.contactbadge.ContactBadge5: void assignContactUri(android.net.Uri)>
<com.csipsimple.ui.account.AccountsLoader: void onStopLoading()>
<org.pjsip.pjsua.pjsua_codec_info: void setPriority(short)>
<org.pjsip.pjsua.pjsua_call_info: long getCPtr(org.pjsip.pjsua.pjsua_call_info)>
<com.csipsimple.db.DBAdapter: void close()>
<org.pjsip.pjsua.pjsua_med_tp_st: org.pjsip.pjsua.pjsua_med_tp_st valueOf(java.lang.String)>
<org.pjsip.pjsua.pjsua_acc_config: void setSrtp_optional_dup_offer(int)>
<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
<com.csipsimple.widgets.CheckableListItemView: void toggle()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: java.util.ArrayList getListeners()>
<com.csipsimple.wizards.impl.BroadVoice: boolean canTcp()>
<org.pjsip.pjsua.pjsua_acc_config: void setTurn_cfg(org.pjsip.pjsua.pjsua_turn_config)>
<com.actionbarsherlock.internal.utils.Utility11: android.widget.PopupWindow buildPopupWindow(android.content.Context,android.util.AttributeSet,int,int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: char getNumericShortcut()>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: com.actionbarsherlock.app.ActionBar$Tab setIcon(int)>
<com.actionbarsherlock.app.SherlockListActivity: boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.ActionBarSherlock: boolean dispatchOpenOptionsMenu()>
<com.actionbarsherlock.internal.view.menu.SubMenuWrapper: com.actionbarsherlock.view.SubMenu setIcon(int)>
<com.actionbarsherlock.internal.widget.ActionBarView: boolean hasEmbeddedTabs()>
<com.csipsimple.ui.dialpad.DialerFragment: boolean hasAutocompleteList()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: android.view.animation.Interpolator getInterpolator()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: int getLastVisiblePosition()>
<com.csipsimple.wizards.impl.Netelip: java.lang.String getDomain()>
<com.csipsimple.ui.calllog.CallLogListFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.csipsimple.utils.ContactsAsyncHelper: void preloadImage(android.widget.ImageView,int,android.os.Message)>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: com.actionbarsherlock.app.ActionBar$Tab setCustomView(int)>
<org.pjsip.pjsua.pjmedia_dir$SwigNext: void access$1(int)>
<org.pjsip.pjsua.pjsua_acc_config: long getCPtr(org.pjsip.pjsua.pjsua_acc_config)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setShortcut(char,char)>
<org.pjsip.pjsua.pjsua: int call_is_active(int)>
<org.pjsip.pjsua.pjsua: long call_get_count()>
<com.csipsimple.ui.warnings.WarningFragment: void setOnWarningChangedListener(com.csipsimple.ui.warnings.WarningUtils$OnWarningChanged)>
<com.csipsimple.ui.dialpad.DialerFragment$1: void onServiceDisconnected(android.content.ComponentName)>
<org.pjsip.pjsua.pjmedia_tone_digit: short getOff_msec()>
<com.csipsimple.wizards.impl.Ovh$1: void <init>()>
<org.pjsip.pjsua.pjsip_event_id_e: int swigValue()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: long getItemIdAtPosition(int)>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: int NumberOfDevices()>
<com.actionbarsherlock.internal.widget.ActionBarView: boolean isCollapsed()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void)>
<org.pjsip.pjsua.pjmedia_snd_dev_info: void setInput_count(long)>
<com.csipsimple.widgets.contactbadge.OverlayedQuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.ui.prefs.hc.MainPrefs: void onBuildHeaders(java.util.List)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void onActionModeStarted(com.actionbarsherlock.view.ActionMode)>
<com.csipsimple.api.SipManager$PresenceStatus: com.csipsimple.api.SipManager$PresenceStatus[] values()>
<com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor getGroups(android.content.Context)>
<com.csipsimple.widgets.AccountChooserButton: void onDetachedFromWindow()>
<org.pjsip.pjsua.csipsimple_config: int getTsx_t1_timeout()>
<org.pjsip.pjsua.pjsua_call_setting: void finalize()>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertRadioButton()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void setInterpolator(android.view.animation.Interpolator)>
<com.csipsimple.wizards.impl.Tanstagi: java.lang.String getDomain()>
<com.csipsimple.models.CallerInfo$CallerInfoLruCache: void <init>(android.content.Context)>
<com.actionbarsherlock.view.MenuInflater: java.lang.Object[] access$2(com.actionbarsherlock.view.MenuInflater)>
<com.csipsimple.widgets.PasswordPreference: void onTextChanged(java.lang.CharSequence,int,int,int)>
<org.pjsip.pjsua.pjsua_config: int getForce_lr()>
<com.csipsimple.widgets.DontPressWithParentLayout: void setPressed(boolean)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setOptionalIconsVisible(boolean)>
<org.pjsip.pjsua.pjsua_med_tp_state_info: byte[] getExt_info()>
<org.pjsip.pjsua.pjsua_call_info: long getProv_media_cnt()>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void setShowDefaultActivity(boolean,boolean)>
<org.pjsip.pjsua.pjmedia_port_info: void delete()>
<org.pjsip.pjsua.pjmedia_tone_desc: void setFreq2(short)>
<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setPreferenceSummary(android.preference.Preference,java.lang.CharSequence)>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void setShowFooterView(boolean)>
<org.pjsip.pjsua.pjsua: void call_vid_strm_op_param_default(org.pjsip.pjsua.pjsua_call_vid_strm_op_param)>
<org.pjsip.pjsua.pjsua: void call_setting_default(org.pjsip.pjsua.pjsua_call_setting)>
<org.pjsip.pjsua.pjsua_vid_win_info: void finalize()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<com.csipsimple.widgets.SeekBarPreference: void onBindDialogView(android.view.View)>
<com.csipsimple.utils.DialingFeedback: java.lang.Object access$0(com.csipsimple.utils.DialingFeedback)>
<org.pjsip.pjsua.pj_pool_t: long getCPtr(org.pjsip.pjsua.pj_pool_t)>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: void finish()>
<org.pjsip.pjsua.pjsua_vid_win_info: void setHwnd(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd)>
<org.pjsip.pjsua.pj_qos_params: void <init>()>
<com.csipsimple.ui.warnings.WarningNoStun: int getLayout()>
<org.pjsip.pjsua.pjsua_call_info: long getRem_aud_cnt()>
<com.csipsimple.ui.favorites.PresenceStatusSpinner: void <clinit>()>
<org.pjsip.pjsua.pjmedia_port: void delete()>
<com.csipsimple.api.SipCallSession: boolean isLocalHeld()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setUiOptions(int,int)>
<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.MediaState access$3(com.csipsimple.ui.incall.InCallActivity)>
<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean flagActionItems()>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.widget.Adapter getAdapter()>
<com.csipsimple.pjsip.UAStateReceiver: void launchCallHandler(com.csipsimple.api.SipCallSession)>
<com.actionbarsherlock.internal.widget.ActionBarView: void setContextView(com.actionbarsherlock.internal.widget.ActionBarContextView)>
<org.pjsip.pjsua.pjsua_call_info: long getRem_vid_cnt()>
<org.pjsip.pjsua.pjsua_acc_config: void setIce_cfg(org.pjsip.pjsua.pjsua_ice_config)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void invalidateDrawable(android.graphics.drawable.Drawable)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setSubtitle(int)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: boolean hasSubMenu()>
<org.pjsip.pjsua.pjsip_tls_setting: void <init>()>
<com.actionbarsherlock.internal.utils.Utility4: boolean hasPermanentMenuKey(android.view.ViewConfiguration)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: boolean isStarted()>
<com.actionbarsherlock.internal.utils.Utility16: void setBackgroundDrawable(android.view.View,android.graphics.drawable.Drawable)>
<com.csipsimple.service.Downloader: void onCreate()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.csipsimple.api.ISipService$Stub$Proxy: void setMicrophoneMute(boolean)>
<com.csipsimple.ui.messages.MessageFragment$1: void onServiceDisconnected(android.content.ComponentName)>
<com.actionbarsherlock.app.SherlockListActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<org.pjsip.pjsua.pjsua_acc_config: long getUnreg_timeout()>
<com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout access$0(com.actionbarsherlock.internal.app.ActionBarImpl)>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser$1: void onServiceDisconnected(android.content.ComponentName)>
<org.pjsip.pjsua.pjsua_destroy_flag: org.pjsip.pjsua.pjsua_destroy_flag valueOf(java.lang.String)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: android.graphics.drawable.Drawable getIcon()>
<com.csipsimple.wizards.impl.VoipTel$1: void onClick(android.view.View)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: java.lang.Object getItem(int)>
<com.actionbarsherlock.view.ActionProvider: boolean onPerformDefaultAction()>
<org.pjsip.pjsua.pjsua_call_setting: void setFlag(long)>
<com.actionbarsherlock.internal.utils.Utility4: void jumpDrawablesToCurrentState(android.view.View)>
<org.pjsip.pjsua.pjsua: void turn_config_from_media_config(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_turn_config,org.pjsip.pjsua.pjsua_media_config)>
<com.csipsimple.widgets.AccountWidgetProvider: android.content.Intent getIntent()>
<com.actionbarsherlock.internal.widget.ActionBarView: void initTitle()>
<org.pjsip.pjsua.pjsua_sip_timer_use$SwigNext: void <clinit>()>
<com.csipsimple.ui.incall.InCallMediaControl: boolean onKeyDown(int,android.view.KeyEvent)>
<com.csipsimple.utils.keyguard.Keyguard5: void unlock()>
<com.csipsimple.wizards.impl.CamundaNet: java.lang.String getDomain()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void)>
<com.csipsimple.wizards.impl.MiTelefono: java.lang.String getDomain()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void access$10(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,boolean)>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: int getShowDividers()>
<com.csipsimple.api.ISipService$Stub$Proxy: void confAdjustRxLevel(int,float)>
<org.pjsip.pjsua.csipsimple_acc_config: void setP_preferred_identity(org.pjsip.pjsua.pj_str_t)>
<org.webrtc.videoengine.ViESurfaceRenderer: void SetCoordinates(float,float,float,float)>
<org.pjsip.pjsua.pjsua_transport_info: void setInfo(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua_acc_config: long getUse_rfc5626()>
<com.csipsimple.widgets.SlidingTab$Slider: void access$1(com.csipsimple.widgets.SlidingTab$Slider)>
<com.csipsimple.ui.account.AccountsEditListFragment: void onCreate(android.os.Bundle)>
<com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroupAdapter: void <init>(com.csipsimple.ui.prefs.cupcake.MainPrefs,android.content.Context,java.util.List)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: java.lang.Object getSelectedItem()>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState: void writeToParcel(android.os.Parcel,int)>
<com.csipsimple.ui.calllog.GroupingListAdapter$1: void onChange(boolean)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: void setGroupCheckable(int,boolean,boolean)>
<com.csipsimple.wizards.impl.ZonPt: java.lang.String getDomain()>
<com.csipsimple.ui.favorites.PresenceStatusSpinner$PresencesAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.csipsimple.ui.calllog.GroupingListAdapter: int getViewTypeCount()>
<com.csipsimple.ui.incall.InCallMediaControl: boolean onKeyUp(int,android.view.KeyEvent)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: boolean isStarted()>
<com.csipsimple.wizards.impl.Ippi: android.widget.TextView access$1(com.csipsimple.wizards.impl.Ippi)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: java.lang.String getPropertyName()>
<com.csipsimple.wizards.impl.AccountCreationWebview: android.widget.ProgressBar access$5(com.csipsimple.wizards.impl.AccountCreationWebview)>
<org.pjsip.pjsua.pjsua_acc_config: int getRegister_on_acc_add()>
<com.actionbarsherlock.internal.widget.ActionBarView: int getDisplayOptions()>
<com.csipsimple.utils.PreferencesWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
<com.csipsimple.widgets.ScreenLocker$LockTimerTask: void run()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean hasText()>
<com.csipsimple.wizards.impl.IPshka: boolean needRestart()>
<com.csipsimple.wizards.impl.Ippi: java.lang.String getDomain()>
<org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type)>
<org.pjsip.pjsua.pjsua_transport_info: int getId()>
<com.csipsimple.wizards.impl.Messagenet: java.lang.String getDomain()>
<com.csipsimple.wizards.impl.Interphone365: java.lang.String getDomain()>
<org.pjsip.pjsua.pjmedia_port_info: long getCPtr(org.pjsip.pjsua.pjmedia_port_info)>
<org.pjsip.pjsua.pjsua_acc_config: int getVid_in_auto_show()>
<com.csipsimple.ui.calllog.GroupingListAdapter$2: void onChanged()>
<com.csipsimple.ui.incall.InCallActivity: void access$2(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.SipCallSession[])>
<com.csipsimple.api.SipProfile: void createFromContentValue(android.content.ContentValues)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: int getOrder()>
<org.pjsip.pjsua.pjsua_call_media_info: long getCPtr(org.pjsip.pjsua.pjsua_call_media_info)>
<com.csipsimple.widgets.SlidingTab$Slider: int getTabHeight()>
<com.csipsimple.ui.filters.AccountFiltersListFragment: void updateCheckedItem()>
<org.pjsip.pjsua.pjsua: int acc_del(int)>
<com.csipsimple.utils.CallHandlerPlugin: android.graphics.drawable.Drawable getIconDrawable()>
<org.pjsip.pjsua.pjsua_logging_config: long getDecor()>
<com.csipsimple.service.MediaManager: android.media.AudioManager access$1(com.csipsimple.service.MediaManager)>
<com.csipsimple.api.SipCallSession: void setMediaStatus(int)>
<com.csipsimple.api.SipMessage: java.lang.String getBodyContent()>
<org.pjsip.pjsua.pj_pool_t: void setFactory(org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory)>
<com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void <init>()>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: android.graphics.drawable.Drawable getIcon()>
<com.csipsimple.api.ISipService$Stub$Proxy: void startRecording(int)>
<com.csipsimple.widgets.contactbadge.ContactBadge5: android.widget.ImageView getImageView()>
<com.csipsimple.widgets.contactbadge.QuickContactBadge: void overlay(android.graphics.Canvas,android.widget.ImageView)>
<com.csipsimple.widgets.MarqueeTextView: boolean isFocused()>
<com.csipsimple.ui.incall.InCallMediaControl: android.widget.ProgressBar access$4(com.csipsimple.ui.incall.InCallMediaControl)>
<com.csipsimple.widgets.contactbadge.OverlayedQuickContactBadge: void <init>(android.content.Context)>
<com.csipsimple.widgets.QuickActionItem: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener)>
<com.csipsimple.service.SipService: void registerForOutgoing(android.content.ComponentName)>
<org.pjsip.pjsua.pjsua_call_flag: org.pjsip.pjsua.pjsua_call_flag valueOf(java.lang.String)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: void clear()>
<com.csipsimple.widgets.PasswordPreference: void setCanShowPassword(boolean)>
<org.pjsip.pjsua.pjsip_timer_setting: long getCPtr(org.pjsip.pjsua.pjsip_timer_setting)>
<com.csipsimple.wizards.impl.Zadarma$AccountBalance: void applyResultSuccess(java.lang.String)>
<com.csipsimple.wizards.impl.Fayn: java.lang.String getDefaultName()>
<com.csipsimple.pjsip.PjSipService: int getOnlineForStatus(com.csipsimple.api.SipManager$PresenceStatus)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback)>
<com.csipsimple.ui.account.AccountsLoader: void deliverResult(java.lang.Object)>
<com.csipsimple.ui.incall.AccelerometerListener: int access$1(com.csipsimple.ui.incall.AccelerometerListener)>
<com.csipsimple.wizards.impl.Advanced: void bindFields()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setActionView(android.view.View)>
<com.csipsimple.wizards.impl.ZengCn: java.lang.String getDomain()>
<com.csipsimple.api.SipCallSession: int getCallState()>
<org.pjsip.pjsua.pjsua_msg_data: long getCPtr(org.pjsip.pjsua.pjsua_msg_data)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.Menu getParentMenu()>
<com.csipsimple.widgets.FitTextView: void onTextChanged(java.lang.CharSequence,int,int,int)>
<org.pjsip.pjsua.pjsua: int codec_h264_set_profile(long,long,long,long,long,long)>
<org.pjsip.pjsua.pjmedia_port_info: void setName(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua_acc_config: int getSrtp_secure_signaling()>
<org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: int access$0()>
<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1: java.lang.Object[] newArray(int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()>
<org.pjsip.pjsua.pjsuaJNI: void <clinit>()>
<com.actionbarsherlock.internal.widget.ActionBarView: java.lang.CharSequence getSubtitle()>
<com.csipsimple.wizards.impl.SipCel: boolean needRestart()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void setOnItemLongClickListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: void setProgress(int)>
<com.actionbarsherlock.widget.ActivityChooserView: android.database.DataSetObserver access$10(com.actionbarsherlock.widget.ActivityChooserView)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.widgets.SlidingTab$Slider: void layout(int,int,int,int,int)>
<org.pjsip.pjsua.pjsua_acc_config: void setReg_retry_interval(long)>
<com.csipsimple.ui.favorites.FavAdapter: void showViewForType(android.view.View,int)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: boolean isIndeterminate()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean access$4(com.actionbarsherlock.internal.ActionBarSherlockCompat)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void onScroll(android.widget.AbsListView,int,int,int)>
<com.csipsimple.utils.CollectLogs: void <clinit>()>
<com.actionbarsherlock.app.SherlockActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.wizards.WizardUtils$WizardPrioComparator: int compare(java.lang.Object,java.lang.Object)>
<org.pjsip.pjsua.pjsua: long acc_get_count()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void access$4(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<org.pjsip.pjsua.pjrpid_element: void setActivity(org.pjsip.pjsua.pjrpid_activity)>
<com.csipsimple.service.HeadsetButtonReceiver: void <clinit>()>
<com.csipsimple.utils.Theme: boolean needRepeatableFix()>
<org.pjsip.pjsua.pjsua_acc_config: long getMwi_expires()>
<com.csipsimple.api.ISipService$Stub$Proxy: int sendDtmf(int,int)>
<org.pjsip.pjsua.pjsip_event_id_e$SwigNext: void access$1(int)>
<com.csipsimple.ui.account.AccountsChooserListActivity: void <init>()>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: void setSubtitle(java.lang.CharSequence)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long)>
<com.csipsimple.ui.favorites.PresenceStatusSpinner: void onNothingSelected(android.widget.AdapterView)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: void setGroupVisible(int,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void dismiss()>
<com.csipsimple.wizards.impl.Orbtalk: java.lang.String getDomain()>
<org.pjsip.pjsua.pjsua: int conf_add_port(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjmedia_port,int[])>
<com.csipsimple.wizards.impl.MultifonRu: java.lang.String getDefaultName()>
<com.csipsimple.widgets.DontPressWithParentLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.Object getAnimatedValue(java.lang.String)>
<com.csipsimple.ui.help.Help: void onActivityResult(int,int,android.content.Intent)>
<com.csipsimple.ui.prefs.AudioTester$MonitorThread$UpdateConfLevelRunnable: void run()>
<com.actionbarsherlock.view.ActionMode: boolean isUiFocusable()>
<org.pjsip.pjsua.pjsua: int schedule_timer(org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry,org.pjsip.pjsua.pj_time_val)>
<com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$7(com.csipsimple.wizards.impl.MondotalkCreate)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: int getChildWidth(android.view.View)>
<org.pjsip.pjsua.csipsimple_config: void setTls_keep_alive_interval(int)>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: java.lang.CharSequence getText()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref)>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void resetInternals()>
<org.pjsip.pjsua.pjsip_inv_state: int swigValue()>
<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState: void writeToParcel(android.os.Parcel,int)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: android.os.Parcelable onSaveInstanceState()>
<com.csipsimple.utils.UriUtils: android.net.Uri parseUriOrNull(java.lang.String)>
<com.csipsimple.ui.incall.InCallCard: android.os.Handler access$8()>
<com.actionbarsherlock.internal.app.ActionBarImpl: int getHeight()>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void clear()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.csipsimple.wizards.impl.SimpleImplementation: void setPassword(java.lang.String)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setInputMethodMode(int)>
<com.csipsimple.ui.prefs.CodecsFragment: void <clinit>()>
<org.pjsip.pjsua.pjsua_acc_info: void setStatus(org.pjsip.pjsua.pjsip_status_code)>
<com.csipsimple.ui.incall.InCallActivity: android.view.SurfaceView access$17(com.csipsimple.ui.incall.InCallActivity)>
<org.pjsip.pjsua.pjsua_media_config: void setJb_max(int)>
<com.csipsimple.wizards.impl.DvcNg: boolean needRestart()>
<com.csipsimple.ui.messages.MessageAdapter: void setPhotoSide(com.csipsimple.ui.messages.MessageAdapter$MessageListItemViews,com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition)>
<com.csipsimple.widgets.AccountWidgetConfigure: void deleteWidget(android.content.Context,int)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: android.view.View get(int)>
<org.pjsip.pjsua.pjsua_call_media_info: void setDir(org.pjsip.pjsua.pjmedia_dir)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void addView(android.view.View)>
<org.pjsip.pjsua.pjsua: int call_recording_status(int)>
<com.csipsimple.wizards.impl.Pennytel: java.lang.String getDomain()>
<org.pjsip.pjsua.pjsua_call_info: void setConnect_duration(org.pjsip.pjsua.pj_time_val)>
<org.pjsip.pjsua.csipsimple_config: void delete()>
<org.pjsip.pjsua.pjsua_ice_config_use: org.pjsip.pjsua.pjsua_ice_config_use[] values()>
<org.pjsip.pjsua.pjsua_buddy_info: java.lang.String getBuf_()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: int getScrollX()>
<com.csipsimple.wizards.impl.IPComms: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void removeAllUpdateListeners()>
<com.csipsimple.wizards.impl.Interphone365: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>
<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getCallInfo(java.lang.Integer)>
<com.csipsimple.ui.calllog.CallLogGroupBuilder: void addGroup(int,int)>
<org.pjsip.pjsua.pjsua_buddy_info: void setSub_term_code(long)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: void removeItem(int)>
<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: int compareTo(java.lang.Object)>
<org.webrtc.videoengine.VideoCaptureAndroid: int StopCapture()>
<org.pjsip.pjsua.pjsua_call_info: void setConf_slot(int)>
<com.csipsimple.service.OutgoingCall: void <init>()>
<org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void setDir(org.pjsip.pjsua.pjmedia_dir)>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean flagActionItems()>
<com.csipsimple.ui.incall.CallProximityManager: void onAccuracyChanged(android.hardware.Sensor,int)>
<com.csipsimple.wizards.impl.Zadarma$AccountBalance: void applyResultError()>
<org.pjsip.pjsua.pj_str_t: long[] cArrayUnwrap(org.pjsip.pjsua.pj_str_t[])>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView)>
<org.pjsip.pjsua.pjsua_call_media_info: void <init>()>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: android.view.View getCustomView()>
<com.csipsimple.service.SipService$3: void doRun()>
<org.pjsip.pjsua.pjsua: int acc_get_default()>
<com.csipsimple.wizards.impl.Optimus: boolean needRestart()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: void setValue(java.lang.Object)>
<com.csipsimple.wizards.impl.UkrTelecom: java.lang.String getDomain()>
<org.pjsip.pjsua.pjsua_media_transport: void finalize()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: com.actionbarsherlock.app.ActionBar$Tab setText(int)>
<org.pjsip.pjsua.pjsua_acc_config: long getCred_count()>
<org.pjsip.pjsua.pjsua_med_tp_state_info: int getSip_err_code()>
<com.csipsimple.utils.CustomDistribution: boolean supportMessaging()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()>
<org.pjsip.pjsua.pjsua_destroy_flag: org.pjsip.pjsua.pjsua_destroy_flag[] values()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsLinearLayout createTabLayout()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: android.widget.PopupWindow access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
<com.csipsimple.ui.prefs.AudioTester$MonitorThread: void markFinished()>
<com.actionbarsherlock.internal.view.StandaloneActionMode: com.actionbarsherlock.view.Menu getMenu()>
<com.csipsimple.utils.contacts.ContactsUtils5: void bindAutoCompleteView(android.view.View,android.content.Context,android.database.Cursor)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void setupEndValues()>
<com.csipsimple.utils.PreferencesWrapper: void endEditing()>
<com.csipsimple.wizards.impl.MegaVoip: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_create_media_transport_flag: org.pjsip.pjsua.pjsua_create_media_transport_flag[] values()>
<com.csipsimple.plugins.telephony.CallHandler: android.content.Intent getIntent()>
<com.csipsimple.wizards.impl.Catitel: java.lang.String getDomain()>
<org.pjsip.pjsua.pj_time_val: void <init>()>
<org.pjsip.pjsua.pjsua_vid_preview_param: int getShow()>
<org.pjsip.pjsua.pjsua_turn_config_use: int swigValue()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setReserveOverflow(boolean)>
<org.pjsip.pjsua.pjsip_ssl_method: org.pjsip.pjsua.pjsip_ssl_method valueOf(java.lang.String)>
<org.pjsip.pjsua.pj_pool_t: long getCapacity()>
<org.pjsip.pjsua.pjsua_transport_config: void setPort(long)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setPropertyName(java.lang.String)>
<com.csipsimple.utils.bluetooth.BluetoothWrapper: void setBluetoothChangeListener(com.csipsimple.utils.bluetooth.BluetoothWrapper$BluetoothChangeListener)>
<com.csipsimple.widgets.CSSListFragment: void ensureCustomList()>
<org.pjsip.pjsua.pjsua: int acc_set_default(int)>
<com.csipsimple.wizards.impl.Sonetel: boolean needRestart()>
<org.pjsip.pjsua.Callback: void swigTakeOwnership()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: float getFloatValue()>
<com.csipsimple.wizards.impl.Mobex: android.widget.TextView access$2(com.csipsimple.wizards.impl.Mobex)>
<org.pjsip.pjsua.pjsua: int call_send_im(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data,byte[])>
<org.pjsip.pjsua.pjsua_acc_config: int getTransport_id()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean isOverflowReserved()>
<org.pjsip.pjsua.pjsua_media_config: void setEnable_ice(int)>
<com.csipsimple.api.SipCallSession: void setMediaHasVideo(boolean)>
<com.csipsimple.ui.favorites.FavLoader: void deliverResult(java.lang.Object)>
<com.csipsimple.wizards.impl.MundoR: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.widgets.ShortcutWidgetConfigure: void <init>()>
<com.csipsimple.ui.favorites.FavLoader: void <init>(android.content.Context)>
<com.csipsimple.wizards.impl.Keyyo: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.widget.ActionBarView: android.widget.SpinnerAdapter getDropdownAdapter()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1: java.lang.Object[] newArray(int)>
<com.csipsimple.wizards.impl.IPshka: java.lang.String getDomain()>
<org.pjsip.pjsua.pjsua_call_info: void setCall_id(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.csipsimple_config: void setTsx_td_timeout(int)>
<com.csipsimple.ui.dialpad.DigitsEditText: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5: void <init>()>
<org.pjsip.pjsua.pjsua: int call_xfer_replaces(int,int,long,org.pjsip.pjsua.pjsua_msg_data)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: int getItemId()>
<com.csipsimple.widgets.RegistrationNotification: void setTextsColor(java.lang.Integer)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: void dispatchInvalidateOptionsMenu()>
<org.pjsip.pjsua.pjsua_buddy_info: void setBuf_(java.lang.String)>
<com.csipsimple.ui.prefs.PrefsLogic: int getXmlResourceForType(int)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.csipsimple.utils.Base64: byte[] getDecodabet(int)>
<com.csipsimple.api.SipProfileState: java.util.Comparator getComparator()>
<com.actionbarsherlock.internal.view.menu.ActionMenu: boolean hasVisibleItems()>
<com.csipsimple.wizards.impl.Ovh: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_call_hold_type: org.pjsip.pjsua.pjsua_call_hold_type valueOf(java.lang.String)>
<com.csipsimple.ui.incall.AccelerometerListener: void setOrientation(int)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: boolean shouldDelayChildPressedState()>
<org.pjsip.pjsua.pjsua: int enum_aud_devs(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_info,long[])>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<org.pjsip.pjsua.pjsua: int csipsimple_destroy(long)>
<org.pjsip.pjsua.pjsua_media_config: long getSnd_play_latency()>
<org.pjsip.pjsua.pjsip_cred_data_type: org.pjsip.pjsua.pjsip_cred_data_type[] values()>
<org.webrtc.videoengine.ViESurfaceRenderer: void DrawBitmap()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean isChecked()>
<com.csipsimple.wizards.impl.VoipPlanet: java.lang.String getDomain()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: android.view.View getHeaderView()>
<com.csipsimple.ui.prefs.Codecs$TabsAdapter: void onTabReselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>
<com.csipsimple.wizards.impl.Pbxes: boolean needRestart()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info)>
<com.csipsimple.api.SipManager: void <clinit>()>
<org.pjsip.pjsua.pjmedia_snd_dev_info: java.lang.String getName()>
<com.csipsimple.api.SipProfileState: void setWizard(java.lang.String)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: android.content.Context getThemedContext()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean getOptionalIconsVisible()>
<org.pjsip.pjsua.pjsua_med_tp_state_info: void delete()>
<com.csipsimple.api.SipCallSession: boolean mediaHasVideo()>
<com.csipsimple.wizards.impl.Sipkom: java.lang.String getDomain()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setAnimatedValue(java.lang.Object)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setAlpha(float)>
<org.pjsip.pjsua.pjsua_vid_win_info: void setPos(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void removeView(android.view.View)>
<com.csipsimple.utils.TimerWrapper: com.csipsimple.service.SipWakeLock access$0(com.csipsimple.utils.TimerWrapper)>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)>
<com.csipsimple.ui.calllog.CallLogAdapter: long[] getCallIds(android.database.Cursor,int)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean delayedAnimationFrame(long)>
<com.csipsimple.wizards.impl.Betamax: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjmedia_snd_dev_info: long getCPtr(org.pjsip.pjsua.pjmedia_snd_dev_info)>
<org.pjsip.pjsua.pjsua_transport_config: void setTls_setting(org.pjsip.pjsua.pjsip_tls_setting)>
<org.pjsip.pjsua.pj_stun_nat_detect_result: java.lang.String getStatus_text()>
<com.actionbarsherlock.internal.widget.ActionBarView: boolean isSplitActionBar()>
<org.pjsip.pjsua.pj_stun_resolve_result: void delete()>
<com.csipsimple.wizards.impl.Expert: boolean needRestart()>
<org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)>
<com.actionbarsherlock.internal.utils.Utility11: int resolveSizeAndState(int,int,int)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<org.pjsip.pjsua.pjsua_config: void setSrtp_secure_signaling(int)>
<org.pjsip.pjsua.pjsua_callback: void setOn_call_redirected(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op)>
<com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenSub(java.lang.String,java.lang.Class,java.lang.Class,int)>
<com.csipsimple.api.SipCallSession: boolean isBeforeConfirmed()>
<com.csipsimple.wizards.impl.Nymgo: java.lang.String getDomain()>
<com.csipsimple.wizards.impl.SipSorcery: java.lang.String getDomain()>
<com.csipsimple.ui.favorites.PresenceStatusSpinner$PresencesAdapter: void <init>(com.csipsimple.ui.favorites.PresenceStatusSpinner,android.content.Context,java.util.List)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void)>
<org.pjsip.pjsua.pjsua: int transport_create(org.pjsip.pjsua.pjsip_transport_type_e,org.pjsip.pjsua.pjsua_transport_config,int[])>
<com.csipsimple.ui.prefs.AudioTester: void access$0(com.csipsimple.ui.prefs.AudioTester,com.csipsimple.api.ISipService)>
<com.csipsimple.wizards.impl.Voocall: boolean needRestart()>
<com.csipsimple.utils.Base64$OutputStream: void <init>(java.io.OutputStream)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void)>
<com.csipsimple.api.SipCallSession: int getLastStatusCode()>
<com.csipsimple.widgets.AccountWidgetProvider: void <init>()>
<com.csipsimple.wizards.impl.Phonzo: java.lang.String getDomain()>
<com.actionbarsherlock.internal.widget.AbsActionBarView: int positionChildInverse(android.view.View,int,int,int)>
<com.csipsimple.utils.PreferencesWrapper: boolean isAdvancedUser()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
<com.csipsimple.widgets.DragnDropListView: void startDragging(android.graphics.Bitmap,int)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setActionView(int)>
<com.csipsimple.wizards.impl.AccountBalanceHelper: void <init>()>
<com.csipsimple.wizards.impl.MondotalkCreate: android.widget.EditText access$8(com.csipsimple.wizards.impl.MondotalkCreate)>
<com.csipsimple.ui.dialpad.DialerFragment: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void postInvalidate()>
<com.csipsimple.widgets.RegistrationNotification: void <init>(java.lang.String)>
<org.pjsip.pjsua.pjmedia_port: void setGet_frame(org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int)>
<com.csipsimple.ui.dialpad.DialerLayout: void init()>
<com.csipsimple.wizards.impl.BaseImplementation: void setParent(com.csipsimple.wizards.BasePrefsWizard)>
<com.csipsimple.utils.CallHandlerPlugin: void initHandler()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void configureTab(com.actionbarsherlock.app.ActionBar$Tab,int)>
<com.actionbarsherlock.internal.app.ActionBarImpl: java.lang.CharSequence getTitle()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void onDetachedFromWindow()>
<org.pjsip.pjsua.pjsip_timer_setting: long getSess_expires()>
<com.csipsimple.widgets.FitTextView: void initialise()>
<com.csipsimple.ui.messages.ConversationsListFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getScaleX()>
<org.pjsip.pjsua.pjsua_conf_port_info: long getBits_per_sample()>
<org.pjsip.pjsua.pjsua_buddy_info: int getId()>
<org.pjsip.pjsua.pjsip_event_id_e$SwigNext: void <clinit>()>
<com.csipsimple.utils.bluetooth.BluetoothUtils8: void register()>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: void setDividerDrawable(android.graphics.drawable.Drawable)>
<org.pjsip.pjsua.pjsua_vid_preview_param: void delete()>
<com.actionbarsherlock.internal.widget.ActionBarContainer: void setTransitioning(boolean)>
<com.actionbarsherlock.internal.utils.Utility11: int combineMeasuredStates(int,int)>
<com.csipsimple.ui.filters.AccountFiltersListFragment: void onSaveInstanceState(android.os.Bundle)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.content.Intent getIntent()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()>
<com.actionbarsherlock.app.SherlockActivity: boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu)>
<org.webrtc.videoengine.ViEAndroidGLES20: void RegisterNativeObject(long)>
<org.pjsip.pjsua.pjsua: int call_update(int,long,org.pjsip.pjsua.pjsua_msg_data)>
<org.pjsip.pjsua.pjsua_state$SwigNext: void <clinit>()>
<com.csipsimple.ui.incall.InCallControls: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
<org.pjsip.pjsua.pjsua_buddy_status: org.pjsip.pjsua.pjsua_buddy_status[] values()>
<com.csipsimple.ui.warnings.WarningSDCard: void bindView()>
<com.actionbarsherlock.internal.widget.ActionBarView: boolean shouldDelayChildPressedState()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean showsIcon()>
<com.csipsimple.utils.CallLogHelper: void addCallLog(android.content.Context,android.content.ContentValues,android.content.ContentValues)>
<com.csipsimple.service.receiver.DynamicReceiver5: void <init>(com.csipsimple.service.SipService)>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawDividersVertical(android.graphics.Canvas)>
<org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])>
<org.pjsip.pjsua.pjsua: int recorder_create(org.pjsip.pjsua.pj_str_t,long,byte[],int,long,int[])>
<org.pjsip.pjsua.pjsua_transport_info: long getUsage_count()>
<com.csipsimple.ui.messages.MessageFragment: void chooseSipUri()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: android.view.View getEmptyView()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchPanelClosed(int,android.view.Menu)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: float getScaleY()>
<com.csipsimple.widgets.contactbadge.QuickContactBadge: void assignContactUri(android.net.Uri)>
<com.csipsimple.pjsip.UAStateReceiver: void onBroadcastCallState(com.csipsimple.api.SipCallSession)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.service.SipService$1$26: void doRun()>
<org.pjsip.pjsua.pjsua_acc_config: void setDrop_calls_on_reg_fail(int)>
<org.pjsip.pjsua.pjsua_callback: void setOn_snd_dev_operation(org.pjsip.pjsua.SWIGTYPE_p_f_int__int)>
<com.csipsimple.ui.incall.InCallCard: java.lang.String access$7(com.csipsimple.ui.incall.InCallCard)>
<org.pjsip.pjsua.pjsip_event: long getCPtr(org.pjsip.pjsua.pjsip_event)>
<com.csipsimple.models.Filter: int getForPosition(android.util.SparseArray,java.lang.Integer)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: long getItemId(int)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean requestsActionButton()>
<com.csipsimple.api.SipCallSession: void setCallState(int)>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void onCloseSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
<com.csipsimple.ui.account.AccountsLoader$FilteredProfile: int getStatusColor()>
<org.pjsip.pjsua.pjsua_vid_win_info: void setSize(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size)>
<org.pjsip.pjsua.pjsua: int conf_disconnect(int,int)>
<com.csipsimple.utils.contacts.ContactsUtils3: boolean insertOrUpdateCSipUri(android.content.Context,long,java.lang.String)>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: com.actionbarsherlock.internal.widget.IcsSpinner access$0(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup)>
<org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void)>
<com.csipsimple.widgets.SlidingTab: void setLeftTabResources(int,int,int,int)>
<org.pjsip.pjsua.pjsua_call_media_status: int swigValue()>
<org.pjsip.pjsua.pjsua: int enum_transports(int[],long[])>
<com.csipsimple.api.SipCallSession: boolean canRecord()>
<com.actionbarsherlock.internal.widget.ActionBarContainer: void onDraw(android.graphics.Canvas)>
<com.csipsimple.wizards.impl.VoipTel: java.lang.String getDomain()>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: boolean hasVisibleItems()>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: void setOverflowReserved(boolean)>
<com.csipsimple.api.SipProfileState: void setActive(boolean)>
<org.pjsip.pjsua.pjmedia_port_info: void setSignature(long)>
<com.actionbarsherlock.internal.widget.ActionBarContainer: void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
<com.csipsimple.utils.CustomDistribution: boolean showFirstSettingScreen()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2: java.util.ArrayList initialValue()>
<com.actionbarsherlock.internal.widget.AbsActionBarView: void <clinit>()>
<org.pjsip.pjsua.pjsua_turn_config: int getEnable_turn()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: android.content.Intent getIntent()>
<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.csipsimple.pjsip.UAStateReceiver: void unlockCpu()>
<org.webrtc.videoengine.camera.CameraUtils5: void setCallback(org.webrtc.videoengine.VideoCaptureAndroid,int,int,android.hardware.Camera)>
<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.ui.incall.CallProximityManager access$16(com.csipsimple.ui.incall.InCallActivity)>
<com.csipsimple.ui.messages.MessageActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.api.ISipService$Stub$Proxy: void setBluetoothOn(boolean)>
<com.csipsimple.ui.incall.InCallActivity$1: void <init>(com.csipsimple.ui.incall.InCallActivity)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean hasSubMenu()>
<com.csipsimple.api.ISipService$Stub$Proxy: com.csipsimple.api.SipCallSession[] getCalls()>
<com.csipsimple.wizards.impl.VoipMuch: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setChecked(boolean)>
<com.csipsimple.plugins.codecs.ReceiverSilk: android.content.Intent getIntent()>
<com.csipsimple.ui.SipHome: com.csipsimple.utils.PreferencesProviderWrapper access$5(com.csipsimple.ui.SipHome)>
<com.csipsimple.widgets.DialerCallBar: boolean onLongClick(android.view.View)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int__void)>
<org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data)>
<com.csipsimple.api.ISipConfiguration$Stub$Proxy: void setPreferenceFloat(java.lang.String,float)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: boolean isEnabled()>
<com.csipsimple.wizards.impl.Eutelia: java.lang.String getDomain()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void onLayout(boolean,int,int,int,int)>
<org.webrtc.videoengine.VideoCaptureAndroid: void DeleteVideoCaptureAndroid(org.webrtc.videoengine.VideoCaptureAndroid)>
<com.csipsimple.widgets.contactbadge.QuickContactBadge: android.widget.ImageView getImageView()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem$OnActionExpandListener access$0(com.actionbarsherlock.internal.view.menu.MenuItemWrapper)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5: java.util.ArrayList initialValue()>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: int getItemViewType(int)>
<com.csipsimple.utils.keyguard.Keyguard3: void lock()>
<com.csipsimple.wizards.impl.XNet: java.lang.String getDomain()>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: boolean hasDividerBeforeChildAt(int)>
<org.pjsip.pjsua.pjsua_acc_config: void setRequire_100rel(org.pjsip.pjsua.pjsua_100rel_use)>
<org.pjsip.pjsua.pjsua_acc_info: void setStatus_text(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.ui.dialpad.DigitsEditText: void onLayout(boolean,int,int,int,int)>
<com.csipsimple.ui.account.AccountsChooserListFragment: void setOnAccountClickListener(com.csipsimple.ui.account.AccountsChooserListFragment$OnAccountClickListener)>
<com.csipsimple.wizards.impl.Cryptel: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_media_config: void setIce_opt(org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options)>
<com.csipsimple.ui.incall.InCallActivity: void access$5(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.ISipService)>
<com.csipsimple.api.SipCallSession: long getConnectStart()>
<com.actionbarsherlock.internal.app.ActionBarWrapper: int getHeight()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: char getShortcut()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean needsDividerAfter()>
<com.actionbarsherlock.internal.app.ActionBarImpl: android.view.View getCustomView()>
<com.csipsimple.utils.keyguard.Keyguard5: void initActivity(android.app.Activity)>
<com.csipsimple.utils.Log: void i(java.lang.String,java.lang.String)>
<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getSystemProp(java.lang.String)>
<com.csipsimple.wizards.impl.BroadVoice: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua_acc_config: void setVid_wnd_flags(long)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>
<com.csipsimple.wizards.impl.Speakezi: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.wizards.impl.Amivox: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<com.csipsimple.wizards.impl.WiMobile: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.utils.ArrayUtils: int idealFloatArraySize(int)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean dispatchSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
<com.actionbarsherlock.internal.widget.IcsSpinner: android.graphics.Rect access$0(com.actionbarsherlock.internal.widget.IcsSpinner)>
<com.actionbarsherlock.widget.ActivityChooserModel: int getActivityCount()>
<org.pjsip.pjsua.pjsip_cred_info: void setData(org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void addView(android.view.View,int)>
<com.csipsimple.ui.favorites.PresenceStatusSpinner: com.csipsimple.api.SipManager$PresenceStatus getSelectedPresence()>
<com.csipsimple.wizards.impl.Ecs: void bindFields()>
<com.csipsimple.ui.dialpad.DigitsEditText: boolean onTouchEvent(android.view.MotionEvent)>
<com.csipsimple.wizards.impl.Pfingo: java.lang.String getDefaultName()>
<com.actionbarsherlock.widget.ActivityChooserModel: void setOnChooseActivityListener(com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener)>
<org.pjsip.pjsua.pjsua_media_config: long getClock_rate()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)>
<org.pjsip.pjsua.pjsua_conf_port_info: void setBits_per_sample(long)>
<com.csipsimple.ui.calllog.CallDetailHistoryAdapter: int getCallTypeText(int)>
<com.csipsimple.ui.incall.InCallCard: void setOnTriggerListener(com.csipsimple.ui.incall.IOnCallActionTrigger)>
<org.pjsip.pjsua.pjsua: int pjsua_schedule_timer2(org.pjsip.pjsua.SWIGTYPE_p_f_p_void__void,byte[],long)>
<com.csipsimple.ui.account.AccountsLoader: void <clinit>()>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData()>
<com.csipsimple.ui.favorites.PresenceStatusSpinner$1: void onServiceDisconnected(android.content.ComponentName)>
<org.pjsip.pjsua.pj_qos_params: void setWmm_prio(org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio)>
<com.actionbarsherlock.widget.ActivityChooserModel: void setActivitySorter(com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter)>
<org.pjsip.pjsua.pjsip_tls_setting: void setTimeout(org.pjsip.pjsua.pj_time_val)>
<com.csipsimple.api.ISipService$Stub$Proxy: void switchToAutoAnswer()>
<org.pjsip.pjsua.pjsua: int call_update2(int,org.pjsip.pjsua.pjsua_call_setting,org.pjsip.pjsua.pjsua_msg_data)>
<com.csipsimple.widgets.AccountChooserButton$AccountStatusContentObserver: void <init>(com.csipsimple.widgets.AccountChooserButton,android.os.Handler)>
<com.csipsimple.ui.prefs.PrefsFast: void <init>()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<org.pjsip.pjsua.pjsua_call_hold_type$SwigNext: int access$0()>
<com.csipsimple.wizards.impl.SimpleImplementation: boolean needRestart()>
<com.csipsimple.widgets.contactbadge.ContactBadge3: void assignContactUri(android.net.Uri)>
<com.csipsimple.widgets.SlidingTab: void vibrate(long)>
<com.csipsimple.api.ISipService$Stub$Proxy: boolean canRecord(int)>
<org.pjsip.pjsua.csipsimple_config: long getCPtr(org.pjsip.pjsua.csipsimple_config)>
<org.pjsip.pjsua.pjsua_msg_data: void setMultipart_ctype(org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type)>
<com.csipsimple.wizards.impl.AccountBalanceHelper$1: void run()>
<com.csipsimple.ui.favorites.PresenceStatusSpinner$AccountStatusContentObserver: void <init>(com.csipsimple.ui.favorites.PresenceStatusSpinner,android.os.Handler)>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: long getItemId(int)>
<com.actionbarsherlock.internal.utils.Utility14: void setLinearLayoutDividerPadding(android.widget.LinearLayout,int)>
<com.actionbarsherlock.view.MenuInflater$MenuState: void readItem(android.util.AttributeSet)>
<com.csipsimple.ui.incall.InCallCard: float access$2()>
<org.pjsip.pjsua.pjsua_buddy_info: void setStatus(org.pjsip.pjsua.pjsua_buddy_status)>
<com.csipsimple.wizards.impl.Vitelity: void <clinit>()>
<com.actionbarsherlock.ActionBarSherlock: void dispatchTitleChanged(java.lang.CharSequence,int)>
<com.csipsimple.ui.account.AccountsEditListFragment: void changeCursor(android.database.Cursor)>
<org.pjsip.pjsua.pj_time_val: int getSec()>
<org.pjsip.pjsua.pjsua: void vid_preview_param_default(org.pjsip.pjsua.pjsua_vid_preview_param)>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: java.lang.CharSequence getSubtitle()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean isChecked()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)>
<com.csipsimple.wizards.impl.Balses: java.lang.String getDefaultName()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: java.lang.CharSequence getTitle()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat)>
<com.csipsimple.wizards.impl.Ippi: android.widget.LinearLayout access$0(com.csipsimple.wizards.impl.Ippi)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param)>
<com.csipsimple.ui.prefs.PrefsFast$Profile: com.csipsimple.ui.prefs.PrefsFast$Profile[] values()>
<com.csipsimple.ui.account.AccountsEditListAdapter: void setDraggable(boolean)>
<com.csipsimple.service.SipService: com.csipsimple.utils.PreferencesProviderWrapper getPrefs()>
<com.csipsimple.ui.calllog.GroupingListAdapter: int getGroupSize(int)>
<org.pjsip.pjsua.pjsua_create_media_transport_flag: org.pjsip.pjsua.pjsua_create_media_transport_flag valueOf(java.lang.String)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setContentWidth(int)>
<com.csipsimple.wizards.impl.Ekiga: boolean needRestart()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setActionView(int)>
<com.csipsimple.wizards.impl.SipWise: java.lang.String getDefaultName()>
<org.pjsip.pjsua.pjsua: int send_dtmf_info(int,org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsip_event: void <init>()>
<org.pjsip.pjsua.pjsua_buddy_info: void setRpid(org.pjsip.pjsua.pjrpid_element)>
<org.pjsip.pjsua.pjsua_call_flag$SwigNext: void <clinit>()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onAttachedToWindow()>
<com.csipsimple.wizards.impl.Sbohempevnalinko: java.lang.String getDomain()>
<com.csipsimple.ui.calllog.CallLogListFragment: com.csipsimple.ui.calllog.CallLogAdapter access$6(com.csipsimple.ui.calllog.CallLogListFragment)>
<com.csipsimple.wizards.impl.Cellip: java.lang.String getDomain()>
<org.pjsip.pjsua.pj_qos_params: short getFlags()>
<com.csipsimple.service.OutgoingCall: android.content.Intent getIntent()>
<com.actionbarsherlock.widget.ActivityChooserModel: void pruneExcessiveHistoricalRecordsLocked()>
<com.csipsimple.wizards.impl.NeufTalk: java.lang.String getDefaultName()>
<com.csipsimple.ui.prefs.AudioTester: void onCreate(android.os.Bundle)>
<org.pjsip.pjsua.pjsua: long call_get_max_count()>
<com.csipsimple.wizards.impl.Optimus: java.lang.String getDefaultName()>
<com.csipsimple.wizards.impl.OXO810: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setVerticalOffset(int)>
<com.csipsimple.service.Downloader: void <init>()>
<org.pjsip.pjsua.pjrpid_activity: org.pjsip.pjsua.pjrpid_activity valueOf(java.lang.String)>
<com.csipsimple.ui.prefs.PrefsFast$Profile: com.csipsimple.ui.prefs.PrefsFast$Profile valueOf(java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void: long getCPtr(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void)>
<com.csipsimple.widgets.DialerCallBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.utils.CallHandlerPlugin: void <clinit>()>
<org.pjsip.pjsua.pj_pool_t: void delete()>
<org.pjsip.pjsua.pjmedia_tone_digit: long getCPtr(org.pjsip.pjsua.pjmedia_tone_digit)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.internal.view.menu.ActionMenuItem setExclusiveCheckable(boolean)>
<org.pjsip.pjsua.pjsua_vid_preview_param: void finalize()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$1: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
<com.csipsimple.widgets.MaxScaleImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<org.pjsip.pjsua.pjsua: int vid_win_set_size(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size)>
<com.actionbarsherlock.internal.widget.ActionBarContainer: void onLayout(boolean,int,int,int,int)>
<com.csipsimple.ui.warnings.WarningPrivilegedIntent: java.lang.String getWarningKey()>
<org.pjsip.pjsua.csipsimple_config: void setVid_converter(org.pjsip.pjsua.dynamic_factory)>
<org.pjsip.pjsua.pjsua: int get_event_status_code(org.pjsip.pjsua.pjsip_event)>
<org.pjsip.pjsua.pjsua_config: void setNat_type_in_sdp(int)>
<org.pjsip.pjsua.pjsua_media_config: void setEc_tail_len(long)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1: boolean onMenuItemActionCollapse(android.view.MenuItem)>
<com.csipsimple.wizards.impl.Vanbergsystems: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.pjsua_call_media_info: void setStatus(org.pjsip.pjsua.pjsua_call_media_status)>
<com.actionbarsherlock.internal.widget.ActionBarView: void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void insertIconView()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void removeAllTabs()>
<com.csipsimple.ui.account.AccountsLoader$FilteredProfile$1: void onLoad(com.csipsimple.utils.CallHandlerPlugin)>
<org.pjsip.pjsua.pjsua: int acc_create_uac_contact(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsip_timer_setting: void delete()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.actionbarsherlock.internal.widget.ActionBarContainer: void onMeasure(int,int)>
<com.csipsimple.utils.Base64: byte[] access$0(int)>
<com.actionbarsherlock.internal.app.ActionBarImpl: int getDisplayOptions()>
<org.pjsip.pjsua.pjsip_tls_setting: void setCert_file(org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void setFocusable(boolean)>
<org.pjsip.pjsua.pjsua: int resolve_stun_servers(long,org.pjsip.pjsua.pj_str_t[],int,byte[],org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_resolve_result__void)>
<com.csipsimple.ui.calllog.GroupingListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<org.pjsip.pjsua.pjsua_media_config: void setQuality(long)>
<com.csipsimple.ui.prefs.GenericPrefs: void hidePreference(java.lang.String,java.lang.String)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem)>
<org.pjsip.pjsua.pjsua_media_config: void delete()>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)>
<org.pjsip.pjsua.pjsua_acc_config: void setForce_contact(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua_reg_info: void setCbparam(org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam)>
<com.csipsimple.api.SipProfileState: boolean isValidForCall()>
<org.pjsip.pjsua.pjsua: int call_answer(int,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)>
<org.pjsip.pjsua.pjsua_acc_config: void setMedia_stun_use(org.pjsip.pjsua.pjsua_stun_use)>
<org.pjsip.pjsua.pjsua_acc_config: void setIce_cfg_use(org.pjsip.pjsua.pjsua_ice_config_use)>
<org.pjsip.pjsua.csipsimple_config: void setExtra_aud_codecs(org.pjsip.pjsua.dynamic_factory[])>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<org.pjsip.pjsua.pjsua: int acc_modify(int,org.pjsip.pjsua.pjsua_acc_config)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver: void <init>(com.actionbarsherlock.internal.view.menu.MenuPopupHelper,com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver)>
<com.actionbarsherlock.internal.widget.IcsSpinner: int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)>
<com.csipsimple.ui.calllog.GroupingListAdapter: int getItemViewType(int)>
<com.csipsimple.ui.filters.AccountFiltersListFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<org.pjsip.pjsua.csipsimple_config: void setExtra_vid_codecs_destroy(org.pjsip.pjsua.dynamic_factory[])>
<org.pjsip.pjsua.pjsua_buddy_info: void setContact(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.models.Filter: int getReplaceForPosition(java.lang.Integer)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchMenuOpened(int,android.view.Menu)>
<com.csipsimple.service.SipNotifications: void invokeMethod(java.lang.reflect.Method,java.lang.Object[])>
<org.pjsip.pjsua.pjsua_logging_config: void setLog_filename(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.ui.calllog.CallLogDetailsFragment: android.net.Uri[] getCallLogEntryUris()>
<com.csipsimple.pjsip.UAStateReceiver: void access$2(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)>
<com.actionbarsherlock.widget.ActivityChooserView$1: void onChanged()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)>
<org.pjsip.pjsua.pjsua_acc_config: void setAllow_contact_rewrite(int)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void initAbsSpinner()>
<com.csipsimple.widgets.SlidingTab$Slider: void access$3(com.csipsimple.widgets.SlidingTab$Slider)>
<org.pjsip.pjsua.pjsua_acc_config: void setRfc5626_reg_id(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pj_stun_nat_detect_result: void finalize()>
<org.pjsip.pjsua.pjsua_acc_config: void setPidf_tuple_id(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.widgets.contactbadge.OverlayedImageView: void onDraw(android.graphics.Canvas)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams()>
<com.csipsimple.widgets.SlidingTab$Slider: void access$5(com.csipsimple.widgets.SlidingTab$Slider,int,int,int,int,int)>
<org.pjsip.pjsua.pjrpid_element: void setId(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.wizards.impl.Interphone365: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.pjsua_config: void setStun_map_use_stun2(int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int)>
<com.actionbarsherlock.internal.widget.IcsSpinner: void setUpChild(android.view.View)>
<org.pjsip.pjsua.pj_pool_t: void finalize()>
<com.csipsimple.utils.RewriterPlugin$OnRewriteReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.csipsimple.wizards.impl.NeufTalk: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.ui.calllog.CallLogDetailsActivity: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<org.pjsip.pjsua.pjsua: void media_config_default(org.pjsip.pjsua.pjsua_media_config)>
<org.pjsip.pjsua.pjsua_stream_info: void finalize()>
<org.pjsip.pjsua.pjsip_cred_info: void setScheme(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua: int vid_dev_get_info(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info)>
<com.csipsimple.ui.incall.InCallMediaControl$LockTimerTask: void <init>(com.csipsimple.ui.incall.InCallMediaControl,com.csipsimple.ui.incall.InCallMediaControl$LockTimerTask)>
<org.pjsip.pjsua.pjsua: int vid_codec_get_param(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param)>
<com.csipsimple.wizards.impl.Localphone: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.pjsua: int acc_create_request(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_method,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data)>
<com.csipsimple.ui.incall.InCallAnswerControls: boolean onKeyDown(int,android.view.KeyEvent)>
<com.csipsimple.ui.incall.InCallActivity: void onNewIntent(android.content.Intent)>
<org.pjsip.pjsua.pjsua_acc_config: void setVid_stream_rc_cfg(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config)>
<org.pjsip.pjsua.pjmedia_snd_dev_info: void finalize()>
<org.pjsip.pjsua.pjsua: int transport_register(org.pjsip.pjsua.SWIGTYPE_p_pjsip_transport,int[])>
<com.csipsimple.ui.SipHome$TabsAdapter: void clearDetails()>
<com.actionbarsherlock.internal.app.ActionBarImpl$2: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<org.pjsip.pjsua.pjsip_tls_setting: void setQos_type(org.pjsip.pjsua.pj_qos_type)>
<org.pjsip.pjsua.pjsua: int im_send(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data,byte[])>
<org.pjsip.pjsua.pjsua_logging_config: void setMsg_logging(int)>
<org.pjsip.pjsua.pjsua_acc_config: void setVid_in_auto_show(int)>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: float getSupportAlpha()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long)>
<org.pjsip.pjsua.pjsua_config: void setCb(org.pjsip.pjsua.pjsua_callback)>
<org.pjsip.pjsua.pjsua_transport_config: void setPublic_addr(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua: int buddy_find(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.ui.incall.InCallActivity: boolean shouldActivateProximity()>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setTitle(java.lang.CharSequence)>
<com.csipsimple.ui.help.Faq: void <init>()>
<org.pjsip.pjsua.pjsua_acc_config: void setKa_interval(long)>
<com.csipsimple.wizards.impl.Ippi: void onAccountCreationDone(java.lang.String,java.lang.String)>
<com.actionbarsherlock.widget.ActivityChooserModel: void setHistoryMaxSize(int)>
<com.csipsimple.ui.incall.InCallActivity$QuitTimerTask: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$QuitTimerTask)>
<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: boolean dispatchHoverEvent(android.view.MotionEvent)>
<com.csipsimple.widgets.ScreenLocker: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)>
<org.pjsip.pjsua.pjsua: int call_recording_start(int,org.pjsip.pjsua.pj_str_t,int)>
<org.pjsip.pjsua.pjsua: void acc_config_default(org.pjsip.pjsua.pjsua_acc_config)>
<com.csipsimple.wizards.impl.Ippi$AccountBalance: void applyResultSuccess(java.lang.String)>
<com.csipsimple.ui.prefs.AudioTester: void access$2(com.csipsimple.ui.prefs.AudioTester)>
<org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void access$1(int)>
<com.csipsimple.ui.incall.DtmfDialogFragment: void <init>()>
<org.pjsip.pjsua.pjsua: int codec_set_frames_per_packet(org.pjsip.pjsua.pj_str_t,int)>
<com.actionbarsherlock.internal.view.StandaloneActionMode: void setSubtitle(java.lang.CharSequence)>
<org.pjsip.pjsua.pjsua: int acc_add_local(int,int,int[])>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: void onDestroyActionMode(android.view.ActionMode)>
<com.csipsimple.ui.incall.AccelerometerListener$AccelerometerHandler: void handleMessage(android.os.Message)>
<com.csipsimple.ui.SipHome: void sendFragmentVisibilityChange(int,boolean)>
<org.pjsip.pjsua.pjsua_acc_config: void setProxy_cnt(long)>
<com.csipsimple.service.SipService$1: void switchToAutoAnswer()>
<com.actionbarsherlock.internal.view.ActionProviderWrapper: boolean onPerformDefaultAction()>
<org.pjsip.pjsua.pjsua_logging_config: void delete()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setCustomView(android.view.View)>
<com.csipsimple.widgets.EditSipUri: void setShowExternals(boolean)>
<org.pjsip.pjsua.pjsua_acc_config: void setPriority(int)>
<com.csipsimple.utils.PhoneCapabilityTester: boolean isSmsIntentRegistered(android.content.Context)>
<org.pjsip.pjsua.pjsua_media_config: void finalize()>
<org.pjsip.pjsua.pjsua: int acc_get_info(int,org.pjsip.pjsua.pjsua_acc_info)>
<com.actionbarsherlock.internal.app.ActionBarImpl: int getNavigationItemCount()>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>
<com.csipsimple.ui.dialpad.DialerLayout: void onMeasure(int,int)>
<org.webrtc.videoengine.ViESurfaceRenderer: void DrawByteBuffer()>
<com.csipsimple.wizards.impl.Pbxes: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void onSizeChanged(int,int,int,int)>
<com.csipsimple.pjsip.PjSipService: void zrtpSASVerified(int)>
<org.pjsip.pjsua.pjsua: int im_typing(int,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.pjsua_msg_data)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator)>
<org.pjsip.pjsua.pjsua_reg_info: void finalize()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3: java.lang.Object initialValue()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideOverflowMenu()>
<org.pjsip.pjsua.pjsua_buddy_info: void setSub_term_reason(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua: void csipsimple_config_default(org.pjsip.pjsua.csipsimple_config)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void flagActionItems()>
<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getActiveCallInProgress()>
<com.csipsimple.service.SipService$SyncStartRunnable: java.lang.Object runWithReturn()>
<org.pjsip.pjsua.pjsua: int call_set_hold(int,org.pjsip.pjsua.pjsua_msg_data)>
<com.csipsimple.ui.account.AccountsLoader: void onReset()>
<org.pjsip.pjsua.pjsua: int vid_preview_stop(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
<com.actionbarsherlock.internal.widget.ActionBarView: void setLogo(android.graphics.drawable.Drawable)>
<com.csipsimple.utils.bluetooth.BluetoothUtils8: void setContext(android.content.Context)>
<com.csipsimple.widgets.MaxScaleImageView: void onLayout(boolean,int,int,int,int)>
<com.csipsimple.ui.SipHome: void access$1(com.csipsimple.ui.SipHome,int,boolean)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.wizards.impl.MondotalkCreate: boolean canSave()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean shouldShowShortcut()>
<com.csipsimple.pjsip.PjSipService: void setService(com.csipsimple.service.SipService)>
<com.csipsimple.utils.DialingFeedback$StopTimerTask: void run()>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>
<com.csipsimple.ui.prefs.CodecsFragment$2: boolean setViewValue(android.view.View,java.lang.Object,java.lang.String)>
<com.csipsimple.widgets.SlidingTab$Slider: void access$9(com.csipsimple.widgets.SlidingTab$Slider,int)>
<com.actionbarsherlock.internal.app.ActionBarImpl: java.lang.CharSequence getSubtitle()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setIcon(android.graphics.drawable.Drawable)>
<com.csipsimple.widgets.PasswordPreference: void afterTextChanged(android.text.Editable)>
<com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: int getXmlPreferences()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: int findGroupIndex(int)>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void invalidate()>
<com.csipsimple.pjsip.PjSipService: int callXferReplace(int,int,int)>
<org.pjsip.pjsua.pjsua_transport_info: void setLocal_addr(org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.csipsimple.ui.account.AccountEditFragment: void <init>()>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: void measureChildWithMargins(android.view.View,int,int,int,int)>
<org.pjsip.pjsua.pjsua_turn_config: void setTurn_auth_cred(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long)>
<com.csipsimple.pjsip.PjSipService: boolean isRecording(int)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider)>
<org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: int access$0()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void onSubUiVisibilityChanged(boolean)>
<org.pjsip.pjsua.pjsua: int call_send_typing_ind(int,int,org.pjsip.pjsua.pjsua_msg_data)>
<org.pjsip.pjsua.pjsua_codec_info: void setCodec_id(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjmedia_port: void setOn_destroy(org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int)>
<org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: void access$1(int)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void startAnimation()>
<com.csipsimple.wizards.impl.Sipgate$AccountBalance: void <init>(com.csipsimple.wizards.impl.Sipgate)>
<org.pjsip.pjsua.pjsua_config: void setStun_host(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession getActiveCallOngoing()>
<org.pjsip.pjsua.pjsua_callback: void setOn_mwi_info(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void)>
<org.pjsip.pjsua.pjsua: int conf_get_port_info(int,org.pjsip.pjsua.pjsua_conf_port_info)>
<com.actionbarsherlock.internal.widget.ActionBarView: void setTitleImpl(java.lang.CharSequence)>
<org.pjsip.pjsua.pjsua: void logging_config_default(org.pjsip.pjsua.pjsua_logging_config)>
<com.csipsimple.utils.ArrayUtils: int idealLongArraySize(int)>
<com.csipsimple.ui.account.AccountsLoader: com.csipsimple.utils.CallHandlerPlugin getCallHandlerWithAccountId(long)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setCustomView(int)>
<org.pjsip.pjsua.pjsua_turn_config: void setTurn_server(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.csipsimple_config: void setDisable_tcp_switch(int)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter)>
<com.csipsimple.ui.incall.AccelerometerListener: void enable(boolean)>
<org.pjsip.pjsua.csipsimple_config: void setExtra_vid_codecs_cnt(long)>
<com.csipsimple.wizards.impl.Sipgate$AccountBalance: void applyResultSuccess(java.lang.String)>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setCustomView(android.view.View)>
<com.csipsimple.wizards.impl.MondotalkCreate$MondotalkHandler: void dispatchMessage(android.os.Message)>
<org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: void access$1(int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void supportOnPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.pjsip.pjsua.pjsua_transport_config: void setBound_addr(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.ui.incall.InCallCard: void updateElapsedTimer()>
<com.csipsimple.ui.favorites.FavListFragment: void <init>()>
<org.pjsip.pjsua.pjsua_call_info: void setLocal_contact(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua: void acc_config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_acc_config,org.pjsip.pjsua.pjsua_acc_config)>
<org.pjsip.pjsua.pjsua_msg_data: void finalize()>
<org.pjsip.pjsua.pjsua_media_config: void setChannel_count(long)>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onBackPressed()>
<com.csipsimple.ui.messages.ConversationsListFragment: void <init>()>
<org.pjsip.pjsua.pjsua_callback: void setOn_stream_destroyed(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void)>
<com.csipsimple.utils.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>
<org.pjsip.pjsua.pjsua: int call_get_info(int,org.pjsip.pjsua.pjsua_call_info)>
<org.pjsip.pjsua.pjsip_tls_setting: void setMethod(int)>
<org.pjsip.pjsua.pjsua_logging_config: void setLevel(long)>
<com.csipsimple.wizards.impl.MondotalkCreate: void afterTextChanged(android.text.Editable)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.internal.view.menu.ActionMenuItem findItemWithShortcut(int,android.view.KeyEvent)>
<com.csipsimple.pjsip.UAStateReceiver: int[] $SWITCH_TABLE$org$pjsip$pjsua$pjsua_buddy_status()>
<org.pjsip.pjsua.pjsua: int pres_notify(int,org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres,org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.pjsua_msg_data)>
<org.pjsip.pjsua.pjsua_transport_info: void setType(org.pjsip.pjsua.pjsip_transport_type_e)>
<com.csipsimple.widgets.FitTextView: void <init>(android.content.Context)>
<com.csipsimple.service.SipService: com.csipsimple.pjsip.PjSipService access$3()>
<org.pjsip.pjsua.pjsip_cred_info: void setData_type(int)>
<com.actionbarsherlock.internal.view.StandaloneActionMode: java.lang.CharSequence getTitle()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1: boolean onMenuItemActionExpand(android.view.MenuItem)>
<org.pjsip.pjsua.pj_pool_t: void setBlock_list(org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean onLongClick(android.view.View)>
<org.pjsip.pjsua.pjsua_callback: void setOn_call_sdp_created(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void)>
<org.pjsip.pjsua.pjsua_turn_config: void setTurn_conn_type(org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type)>
<com.csipsimple.pjsip.PjSipService: long getAccountIdForPjsipId(int)>
<org.pjsip.pjsua.pjsua: int csipsimple_init(org.pjsip.pjsua.pjsua_config,org.pjsip.pjsua.pjsua_logging_config,org.pjsip.pjsua.pjsua_media_config,org.pjsip.pjsua.csipsimple_config,java.lang.Object)>
<com.csipsimple.wizards.impl.Mobex$AccountBalance: void applyResultSuccess(java.lang.String)>
<com.actionbarsherlock.internal.widget.ActionBarView: int getDropdownSelectedPosition()>
<org.pjsip.pjsua.pjsua_media_config: void setTurn_auth_cred(org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)>
<org.pjsip.pjsua.pjsua_media_transport: void setTransport(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport)>
<org.pjsip.pjsua.pjmedia_tone_digit: long[] cArrayUnwrap(org.pjsip.pjsua.pjmedia_tone_digit[])>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setPropertyName(java.lang.String)>
<com.csipsimple.db.DBAdapter$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
<com.csipsimple.pjsip.UAStateReceiver: int on_validate_audio_clock_rate(int)>
<org.pjsip.pjsua.pjsua: int call_process_redirect(int,org.pjsip.pjsua.pjsip_redirect_op)>
<org.pjsip.pjsua.pjsua_callback: void setOn_nat_detect(org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void)>
<org.pjsip.pjsua.pjsua: int create()>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void finishAnimation()>
<com.csipsimple.utils.ArrayUtils: int idealBooleanArraySize(int)>
<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getActiveCallInProgress()>
<org.pjsip.pjsua.pjsua: int call_xfer(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)>
<org.pjsip.pjsua.pjsua_config: void setRequire_100rel(org.pjsip.pjsua.pjsua_100rel_use)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: java.lang.String getShortcutLabel()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>
<com.csipsimple.models.Filter: void createFromDb(android.database.Cursor)>
<org.pjsip.pjsua.pjsua_call_info: void setState(org.pjsip.pjsua.pjsip_inv_state)>
<org.pjsip.pjsua.pjsua_media_config: void setTurn_conn_type(org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<com.csipsimple.utils.bluetooth.BluetoothUtils8: boolean canBluetooth()>
<org.pjsip.pjsua.pjsua: void transport_config_default(org.pjsip.pjsua.pjsua_transport_config)>
<com.csipsimple.wizards.WizardChooser$WizardsListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: int findItemIndex(int)>
<org.pjsip.pjsua.pjsua_callback: void setOn_srv_subscribe_state(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void)>
<com.csipsimple.pjsip.UAStateReceiver: void access$3(com.csipsimple.pjsip.UAStateReceiver,java.lang.String,java.lang.String)>
<com.csipsimple.ui.messages.ConversationsListFragment: void attachAdapter()>
<com.csipsimple.api.SipConfigManager: java.lang.String getBandTypeKey(int,int)>
<org.pjsip.pjsua.pjsua: int buddy_get_info(int,org.pjsip.pjsua.pjsua_buddy_info)>
<com.csipsimple.widgets.SlidingTab: void setLeftHintText(int)>
<com.actionbarsherlock.internal.view.ActionProviderWrapper: boolean hasSubMenu()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
<org.webrtc.videoengine.ViESurfaceRenderer: java.nio.ByteBuffer CreateByteBuffer(int,int)>
<org.pjsip.pjsua.csipsimple_config: void setUse_compact_form_sdp(int)>
<org.pjsip.pjsua.pjsua: void csipsimple_acc_config_default(org.pjsip.pjsua.csipsimple_acc_config)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void setupStartValues()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setShowHideAnimationEnabled(boolean)>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: void setDataModel(com.actionbarsherlock.widget.ActivityChooserModel)>
<org.pjsip.pjsua.pjsua: int vid_win_set_pos(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord)>
<com.csipsimple.ui.SipHome: android.support.v4.app.Fragment getCurrentFragment()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)>
<com.csipsimple.wizards.impl.AccountCreationWebview$1: void onProgressChanged(android.webkit.WebView,int)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void applyTransformation(float,android.view.animation.Transformation)>
<com.csipsimple.ui.incall.InCallControls$1: void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: boolean performIdentifierAction(int,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long)>
<org.pjsip.pjsua.pjsua: int enum_snd_devs(org.pjsip.pjsua.pjmedia_snd_dev_info,long[])>
<com.actionbarsherlock.internal.widget.ActionBarView: void setDisplayOptions(int)>
<com.csipsimple.utils.NightlyUpdater: java.lang.String getChannelFolder(android.content.Context)>
<org.pjsip.pjsua.pjsua_acc_config: void setProxy(org.pjsip.pjsua.pj_str_t[])>
<com.actionbarsherlock.internal.widget.ActionBarView$SavedState: void <init>(android.os.Parcel,com.actionbarsherlock.internal.widget.ActionBarView$SavedState)>
<org.pjsip.pjsua.pjsua_call_info: void setLast_status_text(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.csipsimple_config: void setUse_no_update(int)>
<org.pjsip.pjsua.pjsua_acc_config: void setMwi_enabled(int)>
<com.csipsimple.ui.account.AccountsChooserListFragment: void onActivityCreated(android.os.Bundle)>
<com.csipsimple.utils.ArrayUtils: int idealIntArraySize(int)>
<org.pjsip.pjsua.pjsua_acc_config: void setSip_stun_use(org.pjsip.pjsua.pjsua_stun_use)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getActionItems()>
<com.actionbarsherlock.app.SherlockActivity: boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu)>
<com.csipsimple.pjsip.UAStateReceiver: void on_nat_detect(org.pjsip.pjsua.pj_stun_nat_detect_result)>
<com.actionbarsherlock.app.SherlockActivity: boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener: void onClick(android.view.View)>
<com.csipsimple.utils.ExtraPlugins: void clearDynPlugins()>
<com.actionbarsherlock.widget.ActivityChooserView: void onDetachedFromWindow()>
<org.pjsip.pjsua.pjsua_call_info: void setState_text(org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu)>
<com.csipsimple.utils.DialingFeedback$ThreadedTonePlay: void run()>
<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: float getSupportTranslationY()>
<org.pjsip.pjsua.pjsua_callback: void setOn_call_media_state(org.pjsip.pjsua.SWIGTYPE_p_f_int__void)>
<org.pjsip.pjsua.pjsip_timer_setting: void finalize()>
<org.pjsip.pjsua.pjsua_logging_config: void finalize()>
<com.actionbarsherlock.internal.view.StandaloneActionMode: java.lang.CharSequence getSubtitle()>
<com.csipsimple.utils.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)>
<com.csipsimple.ui.incall.InCallCard: void dispatchTriggerEvent(int)>
<com.csipsimple.widgets.SlidingTab$Slider: void reset()>
<org.pjsip.pjsua.pjsua_call_flag$SwigNext: void access$1(int)>
<org.pjsip.pjsua.pjsua_acc_config: void setCred_count(long)>
<com.csipsimple.widgets.PasswordPreference: void <init>(android.content.Context)>
<org.pjsip.pjsua.pjsua: int call_send_request(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: float getSupportAlpha()>
<org.pjsip.pjsua.pjsua_config: void setStun_srv_cnt(long)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean needsDividerBefore()>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setTitle(int)>
<com.csipsimple.ui.calllog.CallLogListFragment: void placeCall(java.lang.String,java.lang.Long)>
<org.pjsip.pjsua.pjsua_acc_config: void setContact_uri_params(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua_callback: void setOn_call_media_transport_state(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int)>
<org.pjsip.pjsua.pjsua_buddy_info: void setStatus_text(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua: void ice_config_from_media_config(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_ice_config,org.pjsip.pjsua.pjsua_media_config)>
<com.csipsimple.ui.account.AccountsChooserListFragment: void attachAdapter()>
<com.csipsimple.service.SipWakeLock: void release(java.lang.Object)>
<com.csipsimple.utils.bluetooth.BluetoothUtils8: void unregister()>
<com.csipsimple.wizards.impl.MondotalkCreate: java.lang.String access$6(com.csipsimple.wizards.impl.MondotalkCreate,android.widget.EditText)>
<com.csipsimple.wizards.impl.Zadarma$AccountBalance: void <init>(com.csipsimple.wizards.impl.Zadarma)>
<com.csipsimple.service.SipService$1$27: void doRun()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<org.pjsip.pjsua.pjmedia_tone_desc: long[] cArrayUnwrap(org.pjsip.pjsua.pjmedia_tone_desc[])>
<com.csipsimple.ui.dialpad.DialerLayout: void <init>(android.content.Context)>
<com.csipsimple.wizards.impl.IiNet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.pjsua_med_tp_state_info: void finalize()>
<com.csipsimple.widgets.contactbadge.OverlayedImageView: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>
<org.pjsip.pjsua.csipsimple_config: void setStorage_folder(org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean shouldShowIcon()>
<org.pjsip.pjsua.pjrpid_element: void setType(org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type)>
<org.pjsip.pjsua.pjsua_acc_config: void setAllow_via_rewrite(int)>
<com.csipsimple.ui.filters.AccountFiltersListFragment: boolean onContextItemSelected(android.view.MenuItem)>
<org.pjsip.pjsua.Callback: void delete()>
<org.pjsip.pjsua.pjsua_config: void setNameserver(org.pjsip.pjsua.pj_str_t[])>
<com.csipsimple.utils.PreferencesWrapper$1: void <init>()>
<com.csipsimple.ui.prefs.Codecs$TabsAdapter: void onPageSelected(int)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void clearListSelection()>
<com.csipsimple.widgets.HorizontalQuickActionWindow: boolean onKeyUp(int,android.view.KeyEvent)>
<com.csipsimple.ui.incall.InCallMediaControl$UpdateConfLevelRunnable: void run()>
<com.csipsimple.widgets.AccountWidgetProvider: void onDeleted(android.content.Context,int[])>
<org.pjsip.pjsua.pjsip_tls_setting: void delete()>
<com.csipsimple.ui.help.Faq: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<org.pjsip.pjsua.pjsua_acc_config: void setReg_uri(org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
<com.actionbarsherlock.internal.widget.ActionBarView: void setLogo(int)>
<com.csipsimple.ui.calllog.GroupingListAdapter: void changeCursor(android.database.Cursor)>
<com.csipsimple.ui.messages.ConversationsListFragment$4: void onClick(android.content.DialogInterface,int)>
<org.pjsip.pjsua.pjsua_media_config: void setHas_ioqueue(int)>
<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<org.pjsip.pjsua.pjsua: int vid_codec_set_priority(org.pjsip.pjsua.pj_str_t,short)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void close()>
<org.pjsip.pjsua.pjsua_media_config: void setTurn_server(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.utils.Base64: byte[] access$1(byte[],int,int,byte[],int,int)>
<org.pjsip.pjsua.pjsua: int call_answer2(int,org.pjsip.pjsua.pjsua_call_setting,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)>
<com.csipsimple.ui.prefs.cupcake.MainPrefs: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<com.csipsimple.utils.NightlyUpdater: void applyUpdate(android.content.Intent)>
<com.csipsimple.widgets.FitTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<org.pjsip.pjsua.pjsua_transport_config: void setQos_params(org.pjsip.pjsua.pj_qos_params)>
<org.pjsip.pjsua.pjsua_callback: void setOn_pager2(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void)>
<com.csipsimple.ui.incall.InCallActivity$QuitTimerTask: void run()>
<com.csipsimple.widgets.MaxScaleImageView: void setImageResource(int)>
<org.pjsip.pjsua.pjsua: int call_make_call(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_call_setting,byte[],org.pjsip.pjsua.pjsua_msg_data,int[])>
<org.webrtc.videoengine.ViESurfaceRenderer: void surfaceCreated(android.view.SurfaceHolder)>
<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)>
<org.pjsip.pjsua.pjsip_cred_info: void delete()>
<org.pjsip.pjsua.pjsua: int pjmedia_tonegen_create2(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pj_str_t,long,long,long,long,long,org.pjsip.pjsua.pjmedia_port)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>
<org.webrtc.videoengine.ViESurfaceRenderer: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<com.csipsimple.widgets.contactbadge.OverlayedQuickContactBadge: void onDraw(android.graphics.Canvas)>
<org.pjsip.pjsua.pjsua_acc_config: void setReg_use_proxy(long)>
<com.csipsimple.widgets.RegistrationNotification: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.pjsip.PjSipService: void confAdjustRxLevel(int,float)>
<com.csipsimple.utils.Log: void d(java.lang.String,java.lang.String,java.lang.Throwable)>
<org.pjsip.pjsua.pjsua_acc_config: void setAuth_pref(org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref)>
<com.csipsimple.wizards.impl.Mondotalk$1: void onClick(android.view.View)>
<com.csipsimple.wizards.impl.VoipPlanet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.ui.calllog.GroupingListAdapter: boolean isGroupHeader(int)>
<com.csipsimple.utils.Log: int getLogLevel()>
<com.csipsimple.utils.Theme: void fixRepeatableBitmapDrawable(android.graphics.drawable.BitmapDrawable)>
<com.csipsimple.api.SipProfile$1: java.lang.Object[] newArray(int)>
<com.csipsimple.models.Filter: void logInvalidPattern(java.util.regex.PatternSyntaxException)>
<org.pjsip.pjsua.pjsua: int codec_set_param(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param)>
<com.csipsimple.wizards.impl.Sipgate$AccountBalance: void applyResultError()>
<org.pjsip.pjsua.pjsua: int vid_enum_devs(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info,long[])>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.csipsimple.wizards.impl.VoipMS: void <clinit>()>
<com.csipsimple.ui.dialpad.DigitsEditText: void <init>(android.content.Context)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View)>
<com.csipsimple.ui.dialpad.DigitsEditText: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)>
<org.pjsip.pjsua.pjsua_callback: void setOn_reg_started(org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void)>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean isOverflowMenuShowing()>
<org.pjsip.pjsua.csipsimple_config: void setTcp_keep_alive_interval(int)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<org.pjsip.pjsua.pjsua_buddy_config: void setUri(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.utils.contacts.ContactsUtils3: android.graphics.Bitmap getContactPhoto(android.content.Context,android.net.Uri,boolean,java.lang.Integer)>
<com.csipsimple.ui.incall.InCallCard$ContactLoadedHandler: void <init>(com.csipsimple.ui.incall.InCallCard$ContactLoadedHandler)>
<com.csipsimple.service.SipService$1: com.csipsimple.api.SipCallSession[] getCalls()>
<com.actionbarsherlock.internal.widget.AbsActionBarView: boolean isOverflowReserved()>
<com.csipsimple.ui.account.AccountsEditListAdapter: void onClick(android.view.View)>
<com.csipsimple.utils.Base64: byte[] encode3to4(byte[],byte[],int,int)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void finalize()>
<org.pjsip.pjsua.pjsua_media_transport: void setSkinfo(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void stopAnimation()>
<org.pjsip.pjsua.pjsua_acc_config: void setRtp_cfg(org.pjsip.pjsua.pjsua_transport_config)>
<org.pjsip.pjsua.pjsua_media_config: void setClock_rate(long)>
<org.pjsip.pjsua.pjsua_config: void setUser_agent(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.service.MediaManager$InCallTonePlayer: void run()>
<com.csipsimple.widgets.MaxScaleImageView: void setImageMaxScale(float)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchStop()>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void show(int)>
<com.csipsimple.utils.RewriterPlugin$OnRewriteReceiver: java.lang.String getResult()>
<com.csipsimple.ui.incall.DtmfDialogFragment: com.csipsimple.ui.incall.DtmfDialogFragment newInstance(int)>
<com.csipsimple.pjsip.UAStateReceiver: void lockCpu()>
<org.pjsip.pjsua.pjsua: int set_snd_dev(int,int)>
<org.pjsip.pjsua.pjsua_call_info: void setMedia(org.pjsip.pjsua.pjsua_call_media_info)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<org.pjsip.pjsua.pjsua: int acc_add(org.pjsip.pjsua.pjsua_acc_config,int,int[])>
<org.pjsip.pjsua.pjsua: void turn_config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_turn_config,org.pjsip.pjsua.pjsua_turn_config)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState: void <init>(android.os.Parcel,com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void savePresenterStates(android.os.Bundle)>
<com.csipsimple.ui.help.Legal: void <init>()>
<org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: void access$1(int)>
<org.pjsip.pjsua.pjsua_acc_config: void setId(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.utils.contacts.ContactsUtils5: int[] $SWITCH_TABLE$com$csipsimple$api$SipManager$PresenceStatus()>
<com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$2: void onClick(android.content.DialogInterface,int)>
<org.pjsip.pjsua.pjsip_tls_setting: void setPassword(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua_ice_config: void setEnable_ice(int)>
<com.actionbarsherlock.internal.widget.ActionBarView: void access$11(com.actionbarsherlock.internal.widget.ActionBarView)>
<com.actionbarsherlock.app.SherlockListActivity: boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem)>
<org.pjsip.pjsua.pjsua: void transport_config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_transport_config,org.pjsip.pjsua.pjsua_transport_config)>
<com.csipsimple.wizards.impl.BaseImplementation: boolean checkField(android.preference.Preference,boolean)>
<org.pjsip.pjsua.pjsua_call_info: void setMedia_status(org.pjsip.pjsua.pjsua_call_media_status)>
<com.csipsimple.wizards.BasePrefsWizard: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.app.ActionBar$LayoutParams: void <init>(int,int,int)>
<com.csipsimple.widgets.MaxScaleImageView: void setImageBitmap(android.graphics.Bitmap)>
<org.pjsip.pjsua.pjsip_event: void finalize()>
<com.csipsimple.widgets.SlidingTab: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)>
<com.csipsimple.wizards.impl.ZengCn: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.pjsua: int acc_enum_info(org.pjsip.pjsua.pjsua_acc_info,long[])>
<com.csipsimple.api.SipConfigManager: android.net.Uri getPrefUriForKey(java.lang.String)>
<com.csipsimple.wizards.impl.PlanetPhone: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.wizards.WizardChooser: void <init>()>
<org.pjsip.pjsua.pjsua: int codecs_vid_get_nbr()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)>
<org.pjsip.pjsua.pjsua_callback: void setOn_dtmf_digit(org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void)>
<com.csipsimple.ui.account.AccountEdit: void <init>()>
<com.csipsimple.ui.favorites.FavLoader: void deliverResult(android.database.Cursor)>
<com.csipsimple.models.Filter: boolean canCall(java.lang.String)>
<com.csipsimple.service.SipService: android.os.Looper createLooper()>
<org.pjsip.pjsua.pjsua_acc_config: void setReg_timeout(long)>
<com.csipsimple.ui.prefs.AudioTester: void onPause()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: int findItemIndex(int)>
<org.pjsip.pjsua.csipsimple_config: void setTsx_t4_timeout(int)>
<com.csipsimple.wizards.impl.LiberTalk: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.ui.incall.InCallActivity$2: void onServiceDisconnected(android.content.ComponentName)>
<org.pjsip.pjsua.pjsua_callback: void setOn_call_replaced(org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.csipsimple.wizards.impl.BaseImplementation: void hidePreference(java.lang.String,java.lang.String)>
<com.actionbarsherlock.widget.ActivityChooserView: void onAttachedToWindow()>
<org.pjsip.pjsua.pj_pool_t: void setCallback(org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback)>
<com.csipsimple.ui.prefs.CodecsFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void restorePresenterStates(android.os.Bundle)>
<org.pjsip.pjsua.pjsua: int acc_find_for_outgoing(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsip_tls_setting: void setVerify_client(int)>
<com.csipsimple.ui.calllog.GroupingListAdapter: void addGroup(int,int,boolean)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean access$9(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,long)>
<org.webrtc.videoengine.VideoCaptureAndroid: void surfaceCreated(android.view.SurfaceHolder)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<org.pjsip.pjsua.pjsip_event: void setType(org.pjsip.pjsua.pjsip_event_id_e)>
<com.csipsimple.ui.dialpad.DialerFragment: void afterTextChanged(android.text.Editable)>
<org.pjsip.pjsua.Callback: void swigDirectorDisconnect()>
<org.pjsip.pjsua.pjsua: int vid_enum_codecs(org.pjsip.pjsua.pjsua_codec_info,long[])>
<com.csipsimple.ui.prefs.PrefsFilters: void <init>()>
<org.pjsip.pjsua.pjsua_ice_config: void delete()>
<org.pjsip.pjsua.pjsua_acc_config: void setPublish_enabled(int)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.csipsimple.ui.help.Help: void <init>()>
<com.csipsimple.wizards.impl.OSTN: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.service.SipService$ServicePhoneStateReceiver: void <init>(com.csipsimple.service.SipService,com.csipsimple.service.SipService$ServicePhoneStateReceiver)>
<com.csipsimple.utils.PreferencesWrapper: void toogleExpertMode()>
<com.csipsimple.utils.Theme: android.graphics.drawable.Drawable getDrawableResource(java.lang.String)>
<org.pjsip.pjsua.pjsua_callback: void setOn_call_media_event(org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void)>
<org.pjsip.pjsua.pjsua_acc_info: void setRpid(org.pjsip.pjsua.pjrpid_element)>
<com.csipsimple.ui.calllog.CallTypeIconsView: void onDraw(android.graphics.Canvas)>
<com.csipsimple.wizards.impl.SipWise: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.wizards.impl.Freephonie: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.ui.incall.CallProximityManager: void stopTracking()>
<org.pjsip.pjsua.pjsua: int acc_set_online_status2(int,int,org.pjsip.pjsua.pjrpid_element)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <clinit>()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)>
<org.webrtc.videoengine.VideoCaptureAndroid: void surfaceDestroyed(android.view.SurfaceHolder)>
<org.pjsip.pjsua.csipsimple_config: void setExtra_aud_codecs_cnt(long)>
<com.csipsimple.ui.favorites.FavListFragment: void onActivityCreated(android.os.Bundle)>
<com.csipsimple.utils.Base64: void encode(java.nio.ByteBuffer,java.nio.ByteBuffer)>
<org.pjsip.pjsua.pj_str_t: java.lang.String getPtr()>
<com.actionbarsherlock.internal.app.ActionBarImpl: int getSelectedNavigationIndex()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayOptions(int,int)>
<org.pjsip.pjsua.pjsua_media_config: void setAudio_frame_ptime(long)>
<org.pjsip.pjsua.pjsua: void setCallbackObject(org.pjsip.pjsua.Callback)>
<org.pjsip.pjsua.pjsua_callback: void setOn_typing(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void)>
<com.csipsimple.ui.favorites.FavLoader: void onReset()>
<org.pjsip.pjsua.dynamic_factory: void setShared_lib_path(org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setSubtitle(java.lang.CharSequence)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void setInterpolator(android.content.Context,int)>
<com.csipsimple.utils.ArrayUtils: int idealCharArraySize(int)>
<org.pjsip.pjsua.csipsimple_config: void setTsx_t2_timeout(int)>
<org.pjsip.pjsua.pjsua_call_info: void finalize()>
<com.csipsimple.widgets.SlidingTab: void dispatchTriggerEvent(int)>
<org.pjsip.pjsua.pjsua_transport_config: void setQos_type(org.pjsip.pjsua.pj_qos_type)>
<com.csipsimple.ui.account.AccountEditFragment: com.csipsimple.ui.account.AccountEditFragment newInstance(long)>
<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onCreate(android.os.Bundle)>
<com.csipsimple.utils.audio.AudioFocus8$1: void onAudioFocusChange(int)>
<org.pjsip.pjsua.pj_qos_params: void delete()>
<com.actionbarsherlock.internal.widget.ActionBarView: void setIcon(int)>
<com.csipsimple.utils.PreferencesProviderWrapper: android.content.pm.PackageInfo getCurrentPackageInfos(android.content.Context)>
<org.pjsip.pjsua.pjsua_acc_config: void setUse_srtp(org.pjsip.pjsua.pjmedia_srtp_use)>
<com.csipsimple.wizards.impl.Mobex$AccountBalance: void <init>(com.csipsimple.wizards.impl.Mobex)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)>
<org.pjsip.pjsua.pjsua_callback: void delete()>
<com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void <init>(android.os.Looper,com.csipsimple.pjsip.UAStateReceiver)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void onAttachedToWindow()>
<org.pjsip.pjsua.pjsua_config: void setNameserver_count(long)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setShortcutsVisible(boolean)>
<com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: void onDestroyActionMode(com.actionbarsherlock.view.ActionMode)>
<org.pjsip.pjsua.pjsua_acc_config: void setTimer_setting(org.pjsip.pjsua.pjsip_timer_setting)>
<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: java.lang.Object getValue(float)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void computeRect(android.graphics.RectF,android.view.View)>
<com.actionbarsherlock.internal.utils.Utility4: void setLinearLayoutDividerDrawable(android.widget.LinearLayout,android.graphics.drawable.Drawable)>
<org.pjsip.pjsua.pjsua: int csipsimple_set_acc_user_data(org.pjsip.pjsua.pjsua_acc_config,org.pjsip.pjsua.csipsimple_acc_config)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setNumericShortcut(char)>
<org.pjsip.pjsua.pjsua_acc_config: void setVid_out_auto_transmit(int)>
<com.actionbarsherlock.internal.view.StandaloneActionMode: void setCustomView(android.view.View)>
<org.pjsip.pjsua.pjsua_msg_data: void setMsg_body(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsip_timer_setting: void setMin_se(long)>
<com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setGroupVisible(int,boolean)>
<org.pjsip.pjsua.pjsua_transport_info: void setLocal_name(org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port)>
<com.actionbarsherlock.internal.widget.AbsActionBarView: void setVisibility(int)>
<org.pjsip.pjsua.pjsip_timer_setting: void setSess_expires(long)>
<org.pjsip.pjsua.pjsua_acc_config: void delete()>
<org.pjsip.pjsua.pjmedia_port_info: void finalize()>
<com.csipsimple.ui.calllog.GroupingListAdapter: java.lang.Object getItem(int)>
<org.pjsip.pjsua.pjsua_config: void setUse_srtp(org.pjsip.pjsua.pjmedia_srtp_use)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu)>
<com.csipsimple.wizards.impl.BTone: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.wizards.impl.Betamax$AccountBalance: void <init>(com.csipsimple.wizards.impl.Betamax)>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener)>
<org.pjsip.pjsua.pjsua_turn_config: void delete()>
<com.csipsimple.ui.prefs.PrefsLogic: void onMainActivityPrepareOptionMenu(com.actionbarsherlock.view.Menu,android.content.Context,com.csipsimple.utils.PreferencesWrapper)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: android.os.Parcelable onSaveInstanceState()>
<com.csipsimple.wizards.impl.Ippi$AccountBalance: void <init>(com.csipsimple.wizards.impl.Ippi)>
<com.csipsimple.api.SipProfile: void createFromDb(android.database.Cursor)>
<org.pjsip.pjsua.pjsua: int call_reinvite2(int,org.pjsip.pjsua.pjsua_call_setting,org.pjsip.pjsua.pjsua_msg_data)>
<com.csipsimple.widgets.PasswordPreference: void onAddEditTextToDialogView(android.view.View,android.widget.EditText)>
<org.pjsip.pjsua.pjsua_media_config: void setEnable_turn(int)>
<com.csipsimple.utils.Theme: java.util.HashMap getAvailableThemes(android.content.Context)>
<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void hidePreference(java.lang.String,java.lang.String)>
<org.pjsip.pjsua.pjsua_callback: void setOn_mwi_state(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void)>
<com.csipsimple.widgets.SlidingTab: void onLayout(boolean,int,int,int,int)>
<com.actionbarsherlock.internal.widget.ActionBarView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void setCap_dev(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
<com.actionbarsherlock.internal.widget.AbsActionBarView: boolean isOverflowMenuShowing()>
<org.pjsip.pjsua.csipsimple_acc_config: void setUse_zrtp(int)>
<org.pjsip.pjsua.pjsua: int acc_set_registration(int,int)>
<com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)>
<com.csipsimple.ui.SipHome$TabsAdapter: void onPageSelected(int)>
<org.pjsip.pjsua.pjsua_config: void setCred_info(org.pjsip.pjsua.pjsip_cred_info)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: void onMeasureExactFormat(int,int)>
<org.pjsip.pjsua.pjsua: int acc_set_online_status(int,int)>
<org.pjsip.pjsua.pjsua_acc_config: void setContact_rewrite_method(int)>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setShortcut(boolean,char)>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<org.pjsip.pjsua.pjsua_callback: void setOn_transport_state(org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback)>
<com.csipsimple.widgets.PasswordPreference: void onBindDialogView(android.view.View)>
<org.pjsip.pjsua.pjsua: int call_set_vid_strm(int,org.pjsip.pjsua.pjsua_call_vid_strm_op,org.pjsip.pjsua.pjsua_call_vid_strm_op_param)>
<com.csipsimple.service.HeadsetButtonReceiver: void setService(com.csipsimple.pjsip.UAStateReceiver)>
<com.csipsimple.widgets.AccountWidgetConfigure: long getAccountForWidget(android.content.Context,int)>
<com.csipsimple.widgets.SeekBarPreference: void onDialogClosed(boolean)>
<com.csipsimple.widgets.PasswordPreference: void setText(java.lang.String)>
<org.pjsip.pjsua.pjsua: int set_turn_credentials(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchPostResume()>
<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void attachAdapter()>
<org.pjsip.pjsua.pjsua_turn_config: void setEnable_turn(int)>
<com.csipsimple.ui.account.AccountsLoader: void initHandlers()>
<com.csipsimple.wizards.impl.Ovh: void <clinit>()>
<org.pjsip.pjsua.pjsua_config: void setStun_domain(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.wizards.impl.Callcentric: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.api.MediaState$1: java.lang.Object[] newArray(int)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setEnabled(boolean)>
<org.pjsip.pjsua.pjsua_callback: void setOn_call_state(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void)>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: boolean dispatchOnCreate()>
<com.csipsimple.api.SipProfileState: void createFromDb(android.database.Cursor)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void setNextSelectedPositionInt(int)>
<org.pjsip.pjsua.csipsimple_config: void finalize()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)>
<com.csipsimple.widgets.SlidingTab$Slider: void access$4(com.csipsimple.widgets.SlidingTab$Slider)>
<org.pjsip.pjsua.pjsua: int start()>
<com.csipsimple.utils.CollectLogs: java.lang.StringBuilder getDeviceInfo()>
<com.csipsimple.utils.CallHandlerPlugin: void clearAvailableCallHandlers()>
<org.pjsip.pjsua.pj_str_t: int getSlen()>
<org.pjsip.pjsua.pjsua_transport_config: void delete()>
<org.pjsip.pjsua.pjmedia_tone_digit: void finalize()>
<org.pjsip.pjsua.pjsua_media_config: void setNo_vad(int)>
<org.pjsip.pjsua.pjsua_logging_config: void setLog_file_flags(long)>
<com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void notifyOnDismissListener()>
<com.csipsimple.ui.incall.InCallCard: void onClick(android.view.View)>
<org.pjsip.pjsua.pjsua_acc_info: void setAcc_uri(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: int access$0()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void updateTextButtonVisibility()>
<com.csipsimple.ui.favorites.PresenceStatusSpinner: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
<org.pjsip.pjsua.pjsip_cred_info: void setUsername(org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setHasEmbeddedTabs(boolean)>
<com.csipsimple.wizards.impl.Betamax$AccountBalance: void applyResultError()>
<org.pjsip.pjsua.pjsua_config: void setThread_cnt(long)>
<org.pjsip.pjsua.pjsua_callback: void setOn_buddy_state(org.pjsip.pjsua.SWIGTYPE_p_f_int__void)>
<com.csipsimple.ui.account.AccountsChooserListFragment: void onResume()>
<org.pjsip.pjsua.pjsua: int acc_get_config(int,org.pjsip.pjsua.pjsua_acc_config)>
<com.csipsimple.ui.calllog.CallLogListFragment: void changeCursor(android.database.Cursor)>
<org.pjsip.pjsua.pjsua: int call_vid_stream_is_running(int,int,org.pjsip.pjsua.pjmedia_dir)>
<com.csipsimple.widgets.EditSipUri: void setTextValue(java.lang.String)>
<com.csipsimple.wizards.impl.Zadarma: void onAccountCreationDone(java.lang.String,java.lang.String)>
<com.csipsimple.utils.audio.AudioFocus3: void unregisterHeadsetButton()>
<org.pjsip.pjsua.pjsua_callback: void setOn_pager_status2(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)>
<org.pjsip.pjsua.pjsua: void ice_config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_ice_config,org.pjsip.pjsua.pjsua_ice_config)>
<org.pjsip.pjsua.csipsimple_config: void setAudio_implementation(org.pjsip.pjsua.dynamic_factory)>
<com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<org.pjsip.pjsua.pjsua_stream_stat: void finalize()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean hasVisibleItems()>
<org.pjsip.pjsua.pjsua_stream_stat: void setRtcp(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat)>
<org.pjsip.pjsua.pjsip_tls_setting: void setCa_list_file(org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<org.pjsip.pjsua.pjsua_buddy_info: void setPres_status(org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status)>
<org.pjsip.pjsua.pjsua: int snd_set_setting(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap,byte[],int)>
<org.pjsip.pjsua.pjsua: int playlist_create(org.pjsip.pjsua.pj_str_t[],long,org.pjsip.pjsua.pj_str_t,long,int[])>
<com.csipsimple.ui.incall.AccelerometerListener: void onSensorEvent(double,double,double)>
<org.pjsip.pjsua.pjsua_msg_data: void setContent_type(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.wizards.impl.DvcNg: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: int access$0()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5: java.lang.Object initialValue()>
<com.csipsimple.widgets.AccountWidgetConfigure: void <init>()>
<com.csipsimple.widgets.CSSListFragment: void setListShown(boolean,boolean)>
<com.csipsimple.utils.PhoneCapabilityTester: android.content.pm.ResolveInfo resolveActivityForPriviledgedCall(android.content.Context)>
<com.csipsimple.utils.RewriterPlugin: java.util.Map getAvailableRewriters(android.content.Context)>
<com.csipsimple.ui.incall.CallProximityManager: void startTracking()>
<com.csipsimple.service.SipWakeLock: void reset()>
<org.pjsip.pjsua.pjsua: void logging_config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_logging_config,org.pjsip.pjsua.pjsua_logging_config)>
<org.pjsip.pjsua.pjsua_mwi_info: void setEvsub(org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub)>
<org.pjsip.pjsua.csipsimple_config: void setTsx_t1_timeout(int)>
<com.csipsimple.ui.calllog.CallLogAdapter: void addGroup(int,int,boolean)>
<com.csipsimple.wizards.impl.Cryptel: void onAccountCreationDone(java.lang.String,java.lang.String)>
<com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$1: void onClick(android.content.DialogInterface,int)>
<com.csipsimple.utils.ContactsAsyncHelper$1: int sizeOf(java.lang.Object,java.lang.Object)>
<org.pjsip.pjsua.pjsip_tls_setting: void finalize()>
<org.pjsip.pjsua.pjsua: void config_default(org.pjsip.pjsua.pjsua_config)>
<org.pjsip.pjsua.pjsua: int call_reinvite(int,long,org.pjsip.pjsua.pjsua_msg_data)>
<org.pjsip.pjsua.pjsua_med_tp_state_info: void setState(org.pjsip.pjsua.pjsua_med_tp_st)>
<com.csipsimple.ui.prefs.hc.MainPrefs: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<org.pjsip.pjsua.pjsua_logging_config: void setConsole_level(long)>
<com.csipsimple.service.MediaManager: void stopService()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean hideSubMenus()>
<com.csipsimple.widgets.SlidingTab: void moveHandle(float,float)>
<org.pjsip.pjsua.pjsua_acc_config: void setReg_delay_before_refresh(long)>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: void drawDividersHorizontal(android.graphics.Canvas)>
<com.csipsimple.ui.incall.InCallActivity$3: void onClick(android.content.DialogInterface,int)>
<org.pjsip.pjsua.pjsua_media_config: void setSnd_auto_close_time(int)>
<com.csipsimple.ui.incall.InCallActivity: boolean onKeyUp(int,android.view.KeyEvent)>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)>
<com.csipsimple.ui.incall.InCallActivity: void showDialpad(int)>
<com.csipsimple.wizards.impl.Zadarma$1: void onClick(android.view.View)>
<com.csipsimple.wizards.impl.Tanstagi: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.ui.calllog.CallLogDetailsFragment: void onMenuRemoveFromCallLog(android.view.MenuItem)>
<org.pjsip.pjsua.pjsua: int vid_preview_get_win(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: boolean onKeyDown(int,android.view.KeyEvent)>
<com.csipsimple.ui.incall.InCallControls: void setMediaState(com.csipsimple.api.MediaState)>
<com.csipsimple.plugins.codecs.ReceiverSilk: void onReceive(android.content.Context,android.content.Intent)>
<com.csipsimple.widgets.DragnDropListView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<org.pjsip.pjsua.pjsua_callback: void setOn_reg_state(org.pjsip.pjsua.SWIGTYPE_p_f_int__void)>
<com.actionbarsherlock.internal.widget.ActionBarView: void onLayout(boolean,int,int,int,int)>
<org.pjsip.pjsua.csipsimple_config: void setAdd_bandwidth_tias_in_sdp(int)>
<org.pjsip.pjsua.pjmedia_port: void setInfo(org.pjsip.pjsua.pjmedia_port_info)>
<org.pjsip.pjsua.pjsua: int codec_set_priority(org.pjsip.pjsua.pj_str_t,short)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getActivityCount()>
<com.csipsimple.widgets.MaxScaleImageView: void <init>(android.content.Context)>
<com.csipsimple.widgets.SlidingTab: void setRightHintText(int)>
<com.csipsimple.utils.bluetooth.BluetoothUtils8: void setBluetoothOn(boolean)>
<com.csipsimple.ui.SipHome: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<org.pjsip.pjsua.pjsua_callback: void setOn_call_replace_request2(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void)>
<com.csipsimple.widgets.SlidingTab: void onMeasure(int,int)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void updateEmptyStatus(boolean)>
<com.csipsimple.widgets.DialerCallBar: void <init>(android.content.Context)>
<org.pjsip.pjsua.pjsua_acc_config: long getProxy_cnt()>
<org.pjsip.pjsua.pjsua_config: void delete()>
<com.csipsimple.ui.incall.InCallActivity: void onStart()>
<com.csipsimple.utils.RewriterPlugin: void clearAvailableRewriters()>
<org.pjsip.pjsua.pj_qos_params: void setFlags(short)>
<org.pjsip.pjsua.pjsua: int codec_get_param(org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: void onLayout(boolean,int,int,int,int)>
<org.pjsip.pjsua.pjsua: int call_hangup(int,long,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsua_msg_data)>
<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: float getSupportTranslationX()>
<org.pjsip.pjsua.pjsua_buddy_info: void setUri(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua_acc_config: void setTurn_cfg_use(org.pjsip.pjsua.pjsua_turn_config_use)>
<com.csipsimple.wizards.impl.Freeconet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.pjsua: void pj_pool_release(org.pjsip.pjsua.pj_pool_t)>
<org.pjsip.pjsua.pjsua_call_info: void setProv_media(org.pjsip.pjsua.pjsua_call_media_info)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem findItem(int)>
<com.csipsimple.ui.favorites.PresenceStatusSpinner$PresencesAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void setSelectedPositionInt(int)>
<org.pjsip.pjsua.pjsua: int acc_create_uas_contact(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
<com.csipsimple.utils.ContactsAsyncHelper: boolean isAlreadyProcessed(android.widget.ImageView,android.net.Uri)>
<com.csipsimple.ui.prefs.AudioTester$1: void onServiceDisconnected(android.content.ComponentName)>
<org.pjsip.pjsua.pjsua: int pjmedia_tonegen_play(org.pjsip.pjsua.pjmedia_port,long,org.pjsip.pjsua.pjmedia_tone_desc[],long)>
<org.pjsip.pjsua.pjsua: int call_dial_dtmf(int,org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.ui.dialpad.DialerFragment: void onDetach()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void fireOnSelected()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: void setShortcutsVisible(boolean)>
<org.pjsip.pjsua.pj_str_t: void delete()>
<org.pjsip.pjsua.pjsua_acc_config: void setSrtp_secure_signaling(int)>
<org.pjsip.pjsua.pjsua_callback: void setOn_call_transfer_request2(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void)>
<com.csipsimple.ui.incall.InCallCard: void updateQuickActions()>
<com.csipsimple.wizards.impl.Ippi$1: void onClick(android.view.View)>
<org.pjsip.pjsua.pjsua: void config_dup(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_config,org.pjsip.pjsua.pjsua_config)>
<org.pjsip.pjsua.pjmedia_port: void setPut_frame(org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int)>
<com.csipsimple.pjsip.PjSipService: int callHold(int)>
<org.pjsip.pjsua.pjsua: int transport_get_info(int,org.pjsip.pjsua.pjsua_transport_info)>
<com.csipsimple.ui.favorites.FavListFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<org.pjsip.pjsua.pjsua: int pjmedia_tonegen_play_digits(org.pjsip.pjsua.pjmedia_port,long,org.pjsip.pjsua.pjmedia_tone_digit[],long)>
<com.csipsimple.pjsip.UAStateReceiver: void access$8(com.csipsimple.pjsip.UAStateReceiver)>
<org.pjsip.pjsua.pjsua_callback: void finalize()>
<com.csipsimple.wizards.impl.MultifonRu: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.widgets.CSSListFragment: void setListShownNoAnimation(boolean)>
<com.csipsimple.ui.dialpad.DialerFragment: void deleteChar()>
<com.csipsimple.ui.prefs.Codecs$TabsAdapter: void <init>(com.csipsimple.ui.prefs.Codecs,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)>
<org.pjsip.pjsua.pjsip_tls_setting: void setPrivkey_file(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua: int codecs_get_nbr()>
<com.csipsimple.service.SipService: void unregisterBroadcasts()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)>
<com.csipsimple.models.Filter: boolean stopProcessing(java.lang.String)>
<com.actionbarsherlock.internal.widget.IcsSpinner: void onDetachedFromWindow()>
<com.csipsimple.ui.SipHome: void disconnect(boolean)>
<com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu)>
<org.pjsip.pjsua.pjsua: void css_on_call_state(int,org.pjsip.pjsua.pjsip_event)>
<com.csipsimple.wizards.impl.Tlenofon: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.pjsip.NativeLibManager: boolean isDebuggableApp(android.content.Context)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setLogo(int)>
<org.pjsip.pjsua.pjsua_callback: void setOn_pager(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void)>
<org.pjsip.pjsua.pjsua_acc_info: void finalize()>
<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onActivityCreated(android.os.Bundle)>
<com.csipsimple.wizards.impl.MondotalkCreate: void <init>()>
<com.csipsimple.ui.calllog.CallLogListItemHelper: void configureCallSecondaryAction(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.ui.calllog.PhoneCallDetails)>
<org.pjsip.pjsua.pjsua_callback: void setOn_incoming_subscribe(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: void removeItem(int)>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void setSubtitle(int)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemVisibleChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<org.pjsip.pjsua.pjsua_config: void setStun_srv(org.pjsip.pjsua.pj_str_t[])>
<com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean hasNoMoreActiveCall()>
<org.pjsip.pjsua.csipsimple_acc_config: void delete()>
<org.pjsip.pjsua.pjsip_cred_info: void setRealm(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsip_tls_setting: void setCiphers(org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher)>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getCount()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: void onDestroyActionMode(com.actionbarsherlock.view.ActionMode)>
<org.pjsip.pjsua.pjsua_logging_config: void setCb(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider)>
<com.csipsimple.wizards.impl.Cryptel$1: void onClick(android.view.View)>
<com.csipsimple.pjsip.PjStreamDialtoneGenerator: void stopDialtoneGenerator()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void setEmptyView(android.view.View)>
<com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.widget.ActivityChooserModel getDataModel()>
<com.actionbarsherlock.internal.view.menu.ActionMenu: boolean performShortcut(int,android.view.KeyEvent,int)>
<com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor getContactsByGroup(android.content.Context,java.lang.String)>
<com.csipsimple.service.SipWakeLock: void acquire(java.lang.Object)>
<com.csipsimple.api.SipCallSession: void writeToParcel(android.os.Parcel,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$2()>
<com.actionbarsherlock.internal.view.StandaloneActionMode: void setSubtitle(int)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void removeTabAt(int)>
<com.csipsimple.ui.dialpad.DialerLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.ui.account.AccountsLoader: void deliverResult(android.database.Cursor)>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(int,int,android.view.View$OnClickListener)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2: java.lang.Object initialValue()>
<com.csipsimple.ui.account.AccountsLoader: void <init>(android.content.Context,java.lang.String,boolean)>
<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.widgets.RegistrationNotification: void <init>(android.content.Context)>
<com.actionbarsherlock.internal.view.StandaloneActionMode: void setTitle(java.lang.CharSequence)>
<com.csipsimple.utils.CallsUtils: java.lang.String getStringCallState(com.csipsimple.api.SipCallSession,android.content.Context)>
<com.csipsimple.ui.account.AccountsEditListAdapter: void toggleDraggable()>
<org.pjsip.pjsua.pjsua_ice_config: void setIce_opt(org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1: com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState createFromParcel(android.os.Parcel)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean flagActionItems()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayUseLogoEnabled(boolean)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void killMode()>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean invoke()>
<com.csipsimple.wizards.impl.Local: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.ui.filters.AccountFiltersListFragment: void access$0(com.csipsimple.ui.filters.AccountFiltersListFragment)>
<com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void supportOnPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.pjsip.pjsua.pjsua_acc_config: void setRfc5626_instance_id(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.utils.PreferencesWrapper: void setQuit(boolean)>
<com.csipsimple.ui.incall.InCallActivity$ShowZRTPInfoRunnable: void onClick(android.content.DialogInterface,int)>
<com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)>
<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.pjsip.pjsua.pjsua: int csipsimple_init_acc_msg_data(int,org.pjsip.pjsua.pjsua_msg_data)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>
<org.pjsip.pjsua.pjmedia_tone_desc: void finalize()>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void setCheckable(boolean)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setLogo(android.graphics.drawable.Drawable)>
<com.actionbarsherlock.widget.ActivityChooserModel: void access$6(com.actionbarsherlock.widget.ActivityChooserModel)>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void show()>
<org.pjsip.pjsua.pjsua_config: void setTimer_setting(org.pjsip.pjsua.pjsip_timer_setting)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean)>
<com.csipsimple.widgets.SlidingTab: void setRightTabResources(int,int,int,int)>
<com.csipsimple.utils.Compatibility: android.content.Intent getContactPhoneIntent()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setActionViewExpanded(boolean)>
<com.csipsimple.wizards.impl.Ippi$AccountBalance: void applyResultError()>
<org.pjsip.pjsua.pjsua_turn_config: void finalize()>
<com.csipsimple.ui.warnings.WarningSDCard: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.wizards.impl.Optimus: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.String,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)>
<com.csipsimple.ui.warnings.WarningFragment: void <init>()>
<org.pjsip.pjsua.pj_stun_resolve_result: void finalize()>
<com.csipsimple.service.SipService: android.os.Looper access$7()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.ActionProvider getActionProvider()>
<com.csipsimple.ui.dialpad.DialerFragment: void onTextChanged(java.lang.CharSequence,int,int,int)>
<com.csipsimple.ui.help.Faq: com.csipsimple.ui.help.Faq newInstance()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: long access$12()>
<org.pjsip.pjsua.pjsua_callback: void setOn_typing2(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayShowTitleEnabled(boolean)>
<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession getPrioritaryCall(com.csipsimple.api.SipCallSession,com.csipsimple.api.SipCallSession)>
<org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)>
<com.csipsimple.utils.bluetooth.BluetoothUtils8: boolean isBTHeadsetConnected()>
<org.pjsip.pjsua.pjsua: int player_create(org.pjsip.pjsua.pj_str_t,long,int[])>
<com.csipsimple.models.Filter: java.lang.String rewrite(java.lang.String)>
<org.pjsip.pjsua.pjsua_config: void setOutbound_proxy(org.pjsip.pjsua.pj_str_t[])>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver: void onInvalidated()>
<org.pjsip.pjsua.pjsua_callback: void setOn_buddy_evsub_state(org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void)>
<org.pjsip.pjsua.pjsua_call_info: void setRemote_info(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua_call_info: void setLocal_info(org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua_acc_config: void setUse_rfc5626(long)>
<org.pjsip.pjsua.pjsua: int vid_preview_start(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index,org.pjsip.pjsua.pjsua_vid_preview_param)>
<org.pjsip.pjsua.pjsua: int reconfigure_logging(org.pjsip.pjsua.pjsua_logging_config)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<com.actionbarsherlock.app.ActionBar$LayoutParams: void <init>(int)>
<com.actionbarsherlock.widget.ActivityChooserView: void updateAppearance()>
<org.pjsip.pjsua.pjsua_call_info: void setRemote_contact(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.utils.Base64$OutputStream: void <init>(java.io.OutputStream,int)>
<com.csipsimple.pjsip.UAStateReceiver: void access$6(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setShortcut(char,char)>
<com.csipsimple.api.SipCallSession: boolean isRemoteHeld()>
<org.pjsip.pjsua.pjsua_acc_config: void setVid_cap_dev(org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<com.csipsimple.ui.incall.InCallActivity: void onProximityTrackingChanged(boolean)>
<com.csipsimple.wizards.impl.BaseImplementation: void addPreference(android.preference.Preference)>
<org.pjsip.pjsua.pjsua_media_config: void setEc_options(long)>
<com.csipsimple.utils.Base64$InputStream: void <init>(java.io.InputStream,int)>
<com.csipsimple.widgets.contactbadge.OverlayedImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.ui.dialpad.DialerFragment: void placePluginCall(com.csipsimple.utils.CallHandlerPlugin)>
<org.pjsip.pjsua.pj_qos_params: void setDscp_val(short)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: android.os.Parcelable onSaveInstanceState()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$7()>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(int,java.lang.String,android.view.View$OnClickListener)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: boolean isShortcutKey(int,android.view.KeyEvent)>
<org.pjsip.pjsua.dynamic_factory: void delete()>
<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context,android.util.AttributeSet)>
<org.pjsip.pjsua.dynamic_factory: void setInit_factory_name(org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void onDetachedFromWindow()>
<org.pjsip.pjsua.csipsimple_config: void setUse_compact_form_headers(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$3()>
<com.csipsimple.utils.ArrayUtils: int idealObjectArraySize(int)>
<com.actionbarsherlock.internal.widget.AbsActionBarView: boolean hideOverflowMenu()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayOptions(int)>
<org.pjsip.pjsua.pjsip_tls_setting: void setVerify_server(int)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void setIndeterminate(boolean)>
<com.actionbarsherlock.internal.widget.ActionBarView: void setTitle(java.lang.CharSequence)>
<com.csipsimple.service.SipService$1$18: void doRun()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayHomeAsUpEnabled(boolean)>
<com.csipsimple.ui.help.Legal: com.csipsimple.ui.help.Legal newInstance()>
<org.pjsip.pjsua.pjsua: void msg_data_init(org.pjsip.pjsua.pjsua_msg_data)>
<com.csipsimple.widgets.RegistrationNotification: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.wizards.impl.Smarto: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: void setGroupCheckable(int,boolean,boolean)>
<com.csipsimple.models.Filter: boolean autoAnswer(java.lang.String)>
<com.csipsimple.ui.account.AccountsEditListFragment$5: void onClick(android.view.View)>
<org.pjsip.pjsua.csipsimple_config: void setUse_zrtp(int)>
<com.actionbarsherlock.internal.widget.IcsSpinner: void setGravity(int)>
<com.csipsimple.wizards.impl.VoipTel: void onAccountCreationDone(java.lang.String,java.lang.String)>
<com.csipsimple.widgets.AlternateUnlocker: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.wizards.WizardUtils: java.util.ArrayList getWizardsGroups(android.content.Context)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.csipsimple.utils.RewriterPlugin: java.lang.String rewriteNumber(android.content.Context,java.lang.String,java.lang.String)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setCheckedInt(boolean)>
<com.csipsimple.ui.calllog.CallLogAdapter: java.lang.String getCallRemoteAtPostion(int)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelection(int)>
<com.csipsimple.pjsip.UAStateReceiver: void access$0(com.csipsimple.pjsip.UAStateReceiver)>
<com.csipsimple.utils.Theme: void fixRepeatableDrawable(android.graphics.drawable.Drawable)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean isShortcutKey(int,android.view.KeyEvent)>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,int,android.view.View$OnClickListener)>
<com.csipsimple.utils.PhoneCapabilityTester: java.util.List resolveActivitiesForPriviledgedCall(android.content.Context)>
<com.csipsimple.ui.SipHome$TabsAdapter: void onTabSelected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void setAdapter(android.widget.ListAdapter)>
<com.csipsimple.api.ISipService$Stub$Proxy: void adjustVolume(com.csipsimple.api.SipCallSession,int,int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.actionbarsherlock.internal.widget.IcsSpinner: android.view.View makeAndAddView(int)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: boolean isOverflowMenuShowing()>
<com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1: com.actionbarsherlock.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void setVisibility(int)>
<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onResume()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$4()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void clearHeader()>
<com.actionbarsherlock.internal.widget.ActionBarContextView: boolean hideOverflowMenu()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char)>
<org.pjsip.pjsua.pjsip_cred_info: void finalize()>
<org.pjsip.pjsua.csipsimple_acc_config: void finalize()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void onDetachedFromWindow()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayShowHomeEnabled(boolean)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchPause()>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void invalidateAfterUpdate()>
<com.csipsimple.ui.prefs.cupcake.MainPrefs: boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: java.lang.Object getItem(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void calculateValue(float)>
<org.pjsip.pjsua.pjsua_transport_config: void finalize()>
<org.pjsip.pjsua.pjsua_acc_config: void finalize()>
<com.csipsimple.pjsip.PjSipService: boolean tryToLoadStack()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)>
<org.pjsip.pjsua.pj_str_t: void finalize()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.internal.widget.IcsProgressBar getCircularProgressBar(boolean)>
<com.csipsimple.widgets.SlidingTab: void resetView()>
<com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void resetList()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setTitle(java.lang.CharSequence)>
<com.csipsimple.ui.warnings.WarningSDCard: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: void onMeasure(int,int)>
<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setDisplayShowCustomEnabled(boolean)>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.actionbarsherlock.internal.widget.ActionBarView: void setWindowTitle(java.lang.CharSequence)>
<com.csipsimple.ui.incall.InCallCard: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.ui.calllog.GroupingListAdapter: long getItemId(int)>
<com.csipsimple.service.SipService$1$17: void doRun()>
<com.actionbarsherlock.internal.widget.ActionBarView: void onDetachedFromWindow()>
<org.pjsip.pjsua.dynamic_factory: void finalize()>
<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void <init>(android.content.Context)>
<com.actionbarsherlock.internal.widget.ActionBarView: android.os.Parcelable onSaveInstanceState()>
<com.csipsimple.ui.favorites.FavLoader: void onStartLoading()>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void prepareForUpdate()>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int getItemViewType(int)>
<com.csipsimple.utils.Base64: byte[] access$3(byte[],byte[],int,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void endAnimation()>
<com.csipsimple.pjsip.UAStateReceiver: void initService(com.csipsimple.pjsip.PjSipService)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setQwertyMode(boolean)>
<com.actionbarsherlock.internal.widget.IcsSpinner: int getBaseline()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider: void run()>
<com.csipsimple.ui.warnings.WarningPrivilegedIntent: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.actionbarsherlock.internal.utils.Utility11: void setLinearLayoutDividerDrawable(android.widget.LinearLayout,android.graphics.drawable.Drawable)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable)>
<dummyMainClass: com.csipsimple.plugins.codecs.ReceiverSilk dummyMainMethod_com_csipsimple_plugins_codecs_ReceiverSilk(android.content.Intent)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setIcon(int)>
<com.csipsimple.pjsip.PjSipService: void setSnd()>
<org.pjsip.pjsua.pj_qos_params: void finalize()>
<org.pjsip.pjsua.Callback: void finalize()>
<com.csipsimple.widgets.contactbadge.OverlayedImageView: void <init>(android.content.Context)>
<com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1: void run()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setIcon(int)>
<com.csipsimple.ui.account.AccountsEditListFragment$2: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)>
<com.actionbarsherlock.internal.widget.IcsSpinner: void onClick(android.content.DialogInterface,int)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setCheckable(boolean)>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: void onDraw(android.graphics.Canvas)>
<com.csipsimple.pjsip.PjSipService: void buffCodecLog(java.lang.StringBuilder,java.lang.String,short)>
<org.pjsip.pjsua.pjsua_config: void finalize()>
<com.csipsimple.service.SipService$SipServiceExecutor: void executeInternal(java.lang.Runnable)>
<com.csipsimple.utils.audio.AudioFocus3: void registerHeadsetButton()>
<com.csipsimple.pjsip.PjSipService: int callHangup(int,int)>
<com.csipsimple.service.SipService: void confAdjustRxLevel(float)>
<com.csipsimple.ui.incall.AccelerometerListener: void access$0(com.csipsimple.ui.incall.AccelerometerListener,double,double,double)>
<com.csipsimple.utils.Base64: void encode(java.nio.ByteBuffer,java.nio.CharBuffer)>
<com.csipsimple.ui.filters.AccountFiltersListFragment$1: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.ui.dialpad.DialerFragment: void access$3(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.utils.CallHandlerPlugin)>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void setAdapter(android.widget.ListAdapter)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelectionInt(int,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setTranslationX(float)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.ThreadLocal access$8()>
<com.csipsimple.ui.dialpad.DialerFragment$5: void onLoad(com.csipsimple.utils.CallHandlerPlugin)>
<com.csipsimple.ui.incall.InCallCard: void <clinit>()>
<com.csipsimple.widgets.ScreenLocker: void reset()>
<com.csipsimple.ui.account.AccountsLoader: void onStartLoading()>
<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession getActiveCallInfo()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(int)>
<com.csipsimple.ui.help.Help: com.csipsimple.ui.help.Help newInstance()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: void findExpandedIndex()>
<com.csipsimple.wizards.impl.Local: void bindFields()>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<com.actionbarsherlock.widget.ActivityChooserView: void access$12(com.actionbarsherlock.widget.ActivityChooserView)>
<com.csipsimple.ui.incall.InCallActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<com.actionbarsherlock.internal.view.StandaloneActionMode: void setTitle(int)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)>
<com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)>
<com.csipsimple.widgets.CSSListFragment: void setListShown(boolean)>
<com.csipsimple.utils.Theme: void fixRepeatableBackground(android.view.View)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void cancel()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View)>
<com.csipsimple.utils.audio.AudioFocus8: void unFocus()>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setActionView(android.view.View)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setSelection(int,boolean)>
<org.pjsip.pjsua.pjsua_ice_config: void finalize()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeGroup(int)>
<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean expandActionView()>
<com.csipsimple.ui.filters.AccountFiltersListFragment$3: void onClick(android.view.View)>
<com.csipsimple.ui.incall.InCallActivity: com.csipsimple.api.SipCallSession access$8(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.SipCallSession,com.csipsimple.api.SipCallSession)>
<com.csipsimple.utils.Theme: void applyImageDrawable(android.widget.ImageView,java.lang.String)>
<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<com.csipsimple.ui.calllog.CallLogListFragment: void actionModeDialpad()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void hideProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setVisible(boolean)>
<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<com.csipsimple.ui.incall.InCallControls: void setEnabledMediaButtons(boolean)>
<com.csipsimple.ui.calllog.CallLogAdapter: long[] getCallIdsAtPosition(int)>
<com.csipsimple.ui.SipHome: void access$6(com.csipsimple.ui.SipHome,boolean)>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: java.lang.Object getItem(int)>
<com.csipsimple.ui.account.AccountsLoader: void <init>(android.content.Context,boolean,boolean)>
<com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)>
<com.csipsimple.pjsip.PjSipService: void stopDialtoneGenerator(int)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setIcon(int)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void checkFocus()>
<com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onDismiss()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean dismissPopupMenus()>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)>
<com.csipsimple.ui.warnings.WarningNoStun: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void access$2(com.actionbarsherlock.internal.widget.IcsAdapterView)>
<com.csipsimple.api.ISipService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)>
<com.actionbarsherlock.internal.widget.ActionBarView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<com.csipsimple.widgets.AlternateUnlocker: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void actionFormatChanged()>
<com.csipsimple.ui.warnings.WarningVpnIcs: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void setWidthLimit(int,boolean)>
<com.csipsimple.service.SipService: void setSnd()>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setTranslationY(float)>
<com.csipsimple.ui.incall.InCallActivity$ShowZRTPInfoRunnable: void run()>
<com.csipsimple.ui.warnings.WarningVpnIcs: void <init>(android.content.Context)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: void setQwertyMode(boolean)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItemAt(int)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)>
<org.pjsip.pjsua.pjsua_transport_config: void <init>()>
<com.csipsimple.ui.incall.InCallCard: void updateCallStateBar()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void access$11(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator)>
<com.csipsimple.ui.incall.AccelerometerListener$1: void onSensorChanged(android.hardware.SensorEvent)>
<com.csipsimple.ui.warnings.WarningPrivilegedIntent: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver: void onChanged()>
<com.csipsimple.ui.warnings.WarningSDCard: void <init>(android.content.Context)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void showProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setTitle(int)>
<com.csipsimple.ui.calllog.CallLogListFragment: void access$2(com.csipsimple.ui.calllog.CallLogListFragment)>
<com.csipsimple.ui.warnings.WarningPrivilegedIntent: void <init>(android.content.Context)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean collapseActionView()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean onMenuItemClick(android.view.MenuItem)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)>
<com.csipsimple.ui.SipHome$TabsAdapter: void <init>(com.csipsimple.ui.SipHome,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setActionView(int)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: int getCount()>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setScaleY(float)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)>
<com.csipsimple.service.SipService$SipServiceExecutor: void <init>(com.csipsimple.service.SipService)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void clear()>
<com.csipsimple.widgets.AlternateUnlocker: void <init>(android.content.Context)>
<com.csipsimple.utils.Compatibility: boolean shouldUsePriviledgedIntegration(android.content.Context)>
<com.csipsimple.ui.incall.InCallControls: void onFinishInflate()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void removeItem(int)>
<com.csipsimple.ui.incall.InCallAnswerControls: void onLeftRightChoice(int)>
<com.csipsimple.utils.Base64$OutputStream: void flushBase64()>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: void onDetachedFromWindow()>
<com.actionbarsherlock.internal.widget.ActionBarView: void setDropdownSelectedPosition(int)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)>
<com.csipsimple.service.SipService$SipServiceExecutor: void handleMessage(android.os.Message)>
<com.actionbarsherlock.internal.widget.AbsActionBarView: void dismissPopupMenus()>
<com.csipsimple.service.SipService: com.csipsimple.service.SipService$SipServiceExecutor getExecutor()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(int)>
<com.actionbarsherlock.internal.widget.ActionBarView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter: void <init>(com.actionbarsherlock.internal.view.menu.MenuPopupHelper,com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setShowAsAction(int)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)>
<com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy: void setScaleX(float)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchTitleChanged(java.lang.CharSequence,int)>
<com.actionbarsherlock.internal.widget.ActionBarView: void collapseActionView()>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: void onDraw(android.graphics.Canvas)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver: void onChanged()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)>
<com.csipsimple.service.MediaManager$1: void doRun()>
<com.actionbarsherlock.widget.ActivityChooserView$3: void onChanged()>
<com.actionbarsherlock.internal.widget.ActionBarView$2: void onClick(android.view.View)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void cancel()>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setHeaderTitle(int)>
<com.csipsimple.widgets.CSSListFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
<com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver: void onInvalidated()>
<com.csipsimple.ui.incall.InCallControls: void setCallState(com.csipsimple.api.SipCallSession)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void clearAll()>
<com.csipsimple.widgets.CSSListFragment: void onLoadFinished(android.support.v4.content.Loader,java.lang.Object)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)>
<com.csipsimple.ui.account.AccountsChooserListFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)>
<com.csipsimple.ui.warnings.WarningNoStun: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier: void run()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setTitle(java.lang.CharSequence)>
<com.csipsimple.utils.Base64$OutputStream: void close()>
<com.csipsimple.ui.warnings.WarningNoStun: void <init>(android.content.Context)>
<com.csipsimple.utils.Base64$OutputStream: void suspendEncoding()>
<com.csipsimple.ui.warnings.WarningVpnIcs: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void checkCloseActionMenu(com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setChecked(boolean)>
<com.csipsimple.ui.filters.AccountFiltersListFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
<com.csipsimple.utils.Base64: void encodeToFile(byte[],java.lang.String)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setHeaderIcon(int)>
<com.csipsimple.utils.Base64: java.lang.String encodeObject(java.io.Serializable,int)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence)>
<com.csipsimple.utils.Base64: java.lang.String encodeObject(java.io.Serializable)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performIdentifierAction(int,int)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence)>
<com.csipsimple.ui.account.AccountsEditListFragment: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setTitle(int)>
<com.csipsimple.utils.Base64: void decodeToFile(java.lang.String,java.lang.String)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: boolean dispatchOptionsItemSelected(android.view.MenuItem)>
<com.csipsimple.wizards.impl.Vitelity: void <init>()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void doRefreshProgress(int,int,boolean,boolean)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.utils.audio.AudioFocus8$1: void <init>(com.csipsimple.utils.audio.AudioFocus8)>
<com.csipsimple.utils.Compatibility: java.lang.String getDefaultFrequency()>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)>
<com.csipsimple.service.receiver.DynamicReceiver4: boolean compatIsInitialStickyBroadcast(android.content.Intent)>
<com.csipsimple.wizards.impl.CamundaNet: void <init>()>
<com.actionbarsherlock.internal.widget.ActionBarView$SavedState: void <clinit>()>
<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void run()>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_time_val getTotal_duration()>
<com.csipsimple.wizards.impl.Gizmo5: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState: void <init>()>
<org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab)>
<com.actionbarsherlock.internal.utils.Utility14: void <init>()>
<dummyMainClass: com.csipsimple.ui.account.AccountsChooserListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsChooserListFragment(android.content.Intent,android.app.Activity)>
<com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void <init>(com.actionbarsherlock.widget.ActivityChooserView)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: java.lang.Object clone()>
<com.csipsimple.ui.filters.AccountFiltersListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
<com.csipsimple.wizards.impl.OnSip: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.TimerWrapper$TimerJob: void run()>
<com.csipsimple.wizards.impl.SipCel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.view.ActionMode: void <init>()>
<com.csipsimple.ui.account.AccountsEditListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
<com.csipsimple.pjsip.PjSipService: int callReinvite(int,boolean)>
<com.csipsimple.api.SipConfigManager: java.lang.Float getPreferenceFloatValue(android.content.Context,java.lang.String)>
<com.actionbarsherlock.widget.ShareActionProvider: void setShareHistoryFileName(java.lang.String)>
<org.pjsip.pjsua.pjsuaJNI: int SwigDirector_Callback_on_validate_audio_clock_rate(org.pjsip.pjsua.Callback,int)>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: boolean shouldIgnoreRewritingRules()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format: void <init>(long,boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub: void <init>(long,boolean)>
<com.actionbarsherlock.R$id: void <init>()>
<com.csipsimple.wizards.impl.CallRomania: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.pjsua_med_tp_state_info: void <init>(long,boolean)>
<com.csipsimple.utils.UriUtils: void <init>()>
<org.pjsip.pjsua.Callback: int timer_schedule(int,int,int)>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_endpt get_pjmedia_endpt()>
<com.csipsimple.wizards.impl.Sonetel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsActivity dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsActivity(android.content.Intent)>
<com.csipsimple.ui.messages.ConverstationsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<com.csipsimple.models.Filter: java.lang.String rewritePhoneNumber(android.content.Context,long,java.lang.String)>
<com.csipsimple.ui.favorites.FavAdapter$2: void onClick(android.view.View)>
<com.csipsimple.pjsip.UAStateReceiver: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node,int)>
<org.pjsip.pjsua.pj_qos_params: void <init>(long,boolean)>
<com.csipsimple.models.CallerInfo: void <init>()>
<com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,android.net.Uri,int)>
<org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_stun_use)>
<com.csipsimple.ui.prefs.PrefsFast: void onClick(android.view.View)>
<com.csipsimple.utils.PreferencesProviderWrapper: float getInitialVolumeLevel()>
<org.pjsip.pjsua.pjsua_med_tp_st: org.pjsip.pjsua.pjsua_med_tp_st swigToEnum(int)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(int)>
<com.csipsimple.ui.prefs.AudioTester$MonitorThread$UpdateConfLevelRunnable: void <init>(com.csipsimple.ui.prefs.AudioTester$MonitorThread,int,int)>
<com.csipsimple.wizards.impl.Odorik: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio: void <init>()>
<com.csipsimple.pjsip.PjSipAccount: void applyExtraParams(android.content.Context)>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.ui.incall.InCallActivity$2: void <init>(com.csipsimple.ui.incall.InCallActivity)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.csipsimple.wizards.impl.Callcentric: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)>
<com.csipsimple.api.SipMessage: java.lang.String getErrorContent()>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getForce_contact()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostCreate(android.os.Bundle)>
<org.pjsip.pjsua.Callback: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsip_event: org.pjsip.pjsua.pjsip_event_id_e getType()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver: void onChanged()>
<com.csipsimple.ui.dialpad.DialerFragment$4: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.ui.favorites.FavLoader: android.database.Cursor loadInBackground()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void: void <init>()>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int)>
<com.csipsimple.ui.incall.InCallInfoGrid$CallDataObserver: void onChanged()>
<com.csipsimple.ui.calllog.CallLogListFragment: void access$7(com.csipsimple.ui.calllog.CallLogListFragment)>
<org.pjsip.pjsua.pjsua_vid_win_info: void <init>()>
<com.csipsimple.wizards.WizardUtils$WizardPrioComparator: void <init>(com.csipsimple.wizards.WizardUtils$WizardPrioComparator)>
<com.csipsimple.R$style: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void: void <init>()>
<com.csipsimple.wizards.impl.Sonetel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_call_media_status: void <clinit>()>
<com.csipsimple.service.receiver.DynamicReceiver4: void access$0(com.csipsimple.service.receiver.DynamicReceiver4,android.content.Context,android.content.Intent,boolean)>
<org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pj_str_t getUri()>
<com.csipsimple.ui.messages.ConversationsListFragment: void access$0(com.csipsimple.ui.messages.ConversationsListFragment)>
<com.csipsimple.wizards.impl.InterTelecomGr: void <init>()>
<com.csipsimple.wizards.impl.Zeng: void <init>()>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void <init>(com.actionbarsherlock.internal.widget.IcsSpinner,android.content.Context,android.util.AttributeSet,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class)>
<org.pjsip.pjsua.pjsua_msg_data: org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part getMultipart_parts()>
<com.csipsimple.ui.messages.MessageAdapter$MessageListItemViews: void <init>()>
<com.csipsimple.ui.prefs.CodecsFragment$3: void <init>(com.csipsimple.ui.prefs.CodecsFragment)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void requestWindowFeature(long)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int__void: void <init>(long,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<com.csipsimple.ui.incall.InCallMediaControl: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetterAndGetter(java.lang.Object)>
<org.pjsip.pjsua.csipsimple_config: void <init>()>
<com.csipsimple.widgets.SlidingTab: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener)>
<com.csipsimple.ui.calllog.CallLogAdapter: void bindGroupView(int,android.view.View,android.content.Context,android.database.Cursor,int,boolean)>
<com.actionbarsherlock.ActionBarSherlock: void registerImplementation(java.lang.Class)>
<org.pjsip.pjsua.pjmedia_dir$SwigNext: void <init>()>
<com.csipsimple.utils.contacts.ContactsWrapper: com.csipsimple.utils.contacts.ContactsWrapper getInstance()>
<org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void getOn_ice_transport_error()>
<com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity)>
<com.csipsimple.ui.incall.InCallMediaControl$1: void onReceive(android.content.Context,android.content.Intent)>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void setSupportAlpha(float)>
<com.csipsimple.wizards.impl.BroadVoice: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofFloat(float[])>
<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setSupportAlpha(float)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager2(org.pjsip.pjsua.Callback,int,long,long,long,long,long,long)>
<com.csipsimple.wizards.impl.Mobex: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport: void <init>()>
<dummyMainClass: com.csipsimple.plugins.telephony.CallHandler dummyMainMethod_com_csipsimple_plugins_telephony_CallHandler(android.content.Intent)>
<com.csipsimple.wizards.impl.XNet: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.pjsip.UAStateReceiver$4: void <init>(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void supportInvalidateOptionsMenu()>
<com.csipsimple.utils.audio.AudioFocus3: void unFocus()>
<com.actionbarsherlock.app.SherlockActivity: void onPostResume()>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void onConfigurationChanged(android.content.res.Configuration)>
<org.pjsip.pjsua.pjsua_stream_info: void <init>()>
<com.csipsimple.ui.favorites.FavAdapter$5: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.database.Cursor)>
<com.csipsimple.wizards.impl.TOnline: boolean canSave()>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context,android.util.AttributeSet)>
<org.pjsip.pjsua.pjsua_state$SwigNext: void <init>()>
<com.csipsimple.ui.messages.MessageAdapter: java.lang.CharSequence formatMessage(java.lang.String,java.lang.String,java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt: void <init>()>
<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void <init>(com.actionbarsherlock.internal.widget.ActionBarView,com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter)>
<com.csipsimple.wizards.impl.Betamax: void updateDescriptions()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setupStartValues()>
<com.csipsimple.ui.SipHome$1: void run()>
<com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: boolean equals(java.lang.Object)>
<com.actionbarsherlock.internal.utils.Utility11: void <init>()>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void finish()>
<com.csipsimple.ui.favorites.FavAdapter: void access$3(com.csipsimple.ui.favorites.FavAdapter,java.lang.String,int,java.lang.String,long)>
<com.csipsimple.ui.favorites.PresenceStatusSpinner$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.actionbarsherlock.internal.widget.ActionBarContextView$1: void <init>(com.actionbarsherlock.internal.widget.ActionBarContextView,com.actionbarsherlock.view.ActionMode)>
<com.csipsimple.ui.account.AccountsEditListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.csipsimple.wizards.impl.Speakezi: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe clone()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type: void <init>()>
<com.csipsimple.R$color: void <init>()>
<com.csipsimple.wizards.impl.Voocall: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_endpt: void <init>()>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t call_dump(int,int,java.lang.String)>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: org.webrtc.videoengine.VideoCaptureAndroid AllocateCamera(int,long,java.lang.String)>
<com.csipsimple.ui.incall.InCallActivity: void onStop()>
<com.csipsimple.wizards.impl.Cryptel: void updateAccountInfos(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.Columns: void j2cvDouble(org.json.JSONObject,android.content.ContentValues,java.lang.String)>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void connectService()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback)>
<com.csipsimple.ui.calllog.CallLogListFragment: void actionModeDelete()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int)>
<com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void: void <init>()>
<org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int,org.pjsip.pjsua.pjrpid_activity)>
<com.csipsimple.utils.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)>
<com.csipsimple.api.SipConfigManager: void setPreferenceFloatValue(android.content.Context,java.lang.String,java.lang.Float)>
<com.actionbarsherlock.internal.utils.Utility4: android.graphics.drawable.Drawable getActivityLogo(android.content.Context)>
<com.actionbarsherlock.widget.ShareActionProvider: void setOnShareTargetSelectedListener(com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener)>
<com.csipsimple.wizards.impl.SimpleImplementation: void <init>()>
<com.csipsimple.widgets.AccountChooserButton$2$1: void <init>(com.csipsimple.widgets.AccountChooserButton$2,com.csipsimple.utils.CallHandlerPlugin)>
<org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_state)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher: void <init>()>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1: void <init>(com.actionbarsherlock.internal.view.menu.MenuItemWrapper)>
<com.csipsimple.service.receiver.DynamicReceiver4$2: void run()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord: void <init>(long,boolean)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void supportInvalidateOptionsMenu()>
<com.actionbarsherlock.app.SherlockActivity: void closeOptionsMenu()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float)>
<com.csipsimple.utils.Columns: void j2cvLong(org.json.JSONObject,android.content.ContentValues,java.lang.String)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: void <init>(android.content.Context)>
<com.csipsimple.service.SipService$1$5: void doRun()>
<com.csipsimple.wizards.impl.Broadsoft: void <clinit>()>
<com.csipsimple.ui.incall.InCallMediaControl: void onResume()>
<com.csipsimple.ui.calllog.CallTypeIconsView$Resources: void <init>(android.content.Context)>
<com.csipsimple.wizards.impl.Smarto: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String toString()>
<com.csipsimple.service.SipService$1: void setSpeakerphoneOn(boolean)>
<com.csipsimple.wizards.impl.Cellip: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.api.ISipService$Stub: com.csipsimple.api.ISipService asInterface(android.os.IBinder)>
<com.csipsimple.ui.messages.ConversationsListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<com.csipsimple.utils.PreferencesWrapper: java.lang.String gPrefStringValue(android.content.SharedPreferences,java.lang.String)>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context,android.view.View)>
<com.csipsimple.api.SipProfileState$1: void <init>()>
<org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pj_str_t[] getStun_srv()>
<com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String getContactAddress()>
<org.pjsip.pjsua.pjsua_codec_info: org.pjsip.pjsua.pj_str_t getDesc()>
<com.csipsimple.ui.calllog.CallLogAdapter$CallRowInfos: void <init>(com.csipsimple.ui.calllog.CallLogAdapter,com.csipsimple.ui.calllog.CallLogAdapter$CallRowInfos)>
<com.csipsimple.pjsip.UAStateReceiver: void stopService()>
<com.csipsimple.R$id: void <init>()>
<org.pjsip.pjsua.pjsua_media_config: org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options getIce_opt()>
<org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua_buddy_status: org.pjsip.pjsua.pjsua_buddy_status swigToEnum(int)>
<org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getVideo_render_implementation()>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.widgets.EditSipUri: void updateDialTextHelper()>
<com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.csipsimple.api.SipConfigManager: void <init>()>
<com.csipsimple.ui.PickupSipUri$1: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void removeTab(com.actionbarsherlock.app.ActionBar$Tab)>
<com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy: void <init>(com.actionbarsherlock.widget.ShareActionProvider)>
<com.csipsimple.ui.SipHome$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class,int)>
<com.csipsimple.ui.messages.MessageFragment: boolean onContextItemSelected(android.view.MenuItem)>
<com.csipsimple.api.MediaState: boolean equals(java.lang.Object)>
<com.csipsimple.wizards.impl.Odorik: java.lang.String getDefaultFieldSummary(java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport: void <init>()>
<com.csipsimple.wizards.BasePrefsWizard: void saveAccount()>
<com.csipsimple.ui.prefs.PrefsFilters: void onCreate(android.os.Bundle)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void update()>
<com.actionbarsherlock.widget.ActivityChooserView: boolean dismissPopup()>
<com.csipsimple.wizards.impl.CamundaNet: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.ui.incall.InCallActivity: void onDestroy()>
<org.pjsip.pjsua.Callback: void on_zrtp_update_transport(int)>
<com.csipsimple.utils.Base64$OutputStream: void write(byte[],int,int)>
<com.actionbarsherlock.app.SherlockDialogFragment: void onPrepareOptionsMenu(android.view.Menu)>
<org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pjsip_timer_setting getTimer_setting()>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_stream_created(org.pjsip.pjsua.Callback,int,long,long,long)>
<com.csipsimple.ui.messages.ConversationsListFragment$5: void <init>(com.csipsimple.ui.messages.ConversationsListFragment,int)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onPause()>
<com.csipsimple.wizards.impl.Gizmo5: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.utils.PreferencesWrapper: void <init>(android.content.Context)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status: void <init>()>
<org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_destroy_flag)>
<org.pjsip.pjsua.Callback: void on_stream_destroyed(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream,long)>
<com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int)>
<org.pjsip.pjsua.SWIGTYPE_p_f_p_void__void: void <init>()>
<com.csipsimple.ui.warnings.WarningFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getId()>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void onMeasure(int,int)>
<com.csipsimple.service.SipService$1$21: void doRun()>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_ice_config getIce_cfg()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua_transport_info: void <init>()>
<com.actionbarsherlock.widget.ActivityChooserView: void access$2(com.actionbarsherlock.widget.ActivityChooserView,int)>
<com.csipsimple.ui.account.AccountsEditListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void: void <init>()>
<org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int,int)>
<com.csipsimple.R: void <init>()>
<com.actionbarsherlock.app.SherlockListActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe[])>
<com.csipsimple.pjsip.PjSipService: void stopPlaying(int)>
<com.csipsimple.wizards.impl.Callcentric: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.widget.ActionBarView: void onMeasure(int,int)>
<org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_transport_type_e)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void invalidateOptionsMenu()>
<com.csipsimple.models.Filter: int getPositionForReplace(java.lang.Integer)>
<com.actionbarsherlock.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.api.SipProfileState: android.content.ContentValues getAsContentValue()>
<com.csipsimple.service.SipNotifications: void startForegroundCompat(int,android.app.Notification)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void getOn_dtmf_digit()>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void onMeasure(int,int)>
<dummyMainClass: com.csipsimple.ui.help.Help dummyMainMethod_com_csipsimple_ui_help_Help(android.content.Intent,android.app.Activity)>
<com.csipsimple.ui.incall.CallProximityManager: void orientationChanged(int)>
<com.actionbarsherlock.app.SherlockListActivity: void setContentView(int)>
<com.actionbarsherlock.app.SherlockListActivity: void onConfigurationChanged(android.content.res.Configuration)>
<com.csipsimple.wizards.impl.Local: void updateDescriptions()>
<com.csipsimple.utils.contacts.ContactsWrapper$2: void <init>(com.csipsimple.utils.contacts.ContactsWrapper)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void invalidateOptionsMenu()>
<org.webrtc.videoengine.camera.CameraUtils9: void Init(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid,java.util.List)>
<com.csipsimple.utils.NightlyUpdater: boolean isNightlyBuild(android.content.Context)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<org.pjsip.pjsua.pjmedia_port_info: org.pjsip.pjsua.pj_str_t getName()>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostCreate(android.os.Bundle)>
<com.csipsimple.service.SipService$1: void askThreadedRestart()>
<org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void: void <init>()>
<org.pjsip.pjsua.Callback: void on_setup_audio()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void checkSelectionChanged()>
<com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter)>
<com.csipsimple.wizards.impl.Beeztel: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchPrepareOptionsMenu(android.view.Menu)>
<org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_flag)>
<com.csipsimple.utils.AccountListUtils: void <init>()>
<com.csipsimple.utils.PreferencesProviderWrapper: int getDSCPVal()>
<com.csipsimple.utils.Theme: void applyBackgroundStateListDrawable(android.view.View,java.lang.String)>
<com.csipsimple.utils.PreferencesWrapper: java.lang.Float gPrefFloatValue(android.content.SharedPreferences,java.lang.String)>
<com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: void run()>
<com.csipsimple.service.PresenceManager: void <clinit>()>
<com.csipsimple.wizards.impl.TOnline: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.widgets.ShortcutWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence)>
<com.csipsimple.wizards.impl.Ippi$AccountBalance: java.lang.String parseResponseLine(java.lang.String)>
<com.csipsimple.wizards.impl.Interphone365: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter: void <init>(com.actionbarsherlock.widget.ActivityChooserModel)>
<com.csipsimple.service.SipService$1: void startRecording(int)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info: void <init>()>
<com.csipsimple.wizards.impl.AuthorizationImplementation: void updateDescriptions()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void initAnimation()>
<org.pjsip.pjsua.pjsua_turn_config_use: void <clinit>()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void ensureTabsExist()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.IcsSpinner createSpinner()>
<com.actionbarsherlock.app.SherlockListActivity: void invalidateOptionsMenu()>
<com.csipsimple.utils.PreferencesProviderWrapper: int getUDPTransportPort()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport getOn_create_media_transport()>
<org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_ice_config_use)>
<org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pjsua_100rel_use getRequire_100rel()>
<com.csipsimple.pjsip.UAStateReceiver: void on_zrtp_update_transport(int)>
<com.csipsimple.utils.Columns: void <init>(java.lang.String[],java.lang.Class[])>
<com.csipsimple.ui.help.Help$2: void <init>(com.csipsimple.ui.help.Help,com.csipsimple.utils.NightlyUpdater)>
<com.csipsimple.utils.NightlyUpdater: com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher getUpdaterPopup(boolean)>
<com.csipsimple.wizards.impl.AuthorizationImplementation: void <clinit>()>
<com.csipsimple.service.SipService: void startSipStack()>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void setSupportProgressBarVisibility(boolean)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem add(int)>
<com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.utils.contacts.ContactsWrapper$ContactInfo getContactInfo(android.content.Context,android.database.Cursor)>
<com.actionbarsherlock.app.SherlockActivity: void setSupportProgress(int)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_tsx_state(org.pjsip.pjsua.Callback,int,long,long)>
<org.pjsip.pjsua.pjsua_ice_config_use$SwigNext: void <init>()>
<dummyMainClass: com.csipsimple.ui.account.AccountEditFragment dummyMainMethod_com_csipsimple_ui_account_AccountEditFragment(android.content.Intent,android.app.Activity)>
<com.csipsimple.ui.incall.InCallInfoGrid: void terminate()>
<com.csipsimple.utils.audio.AudioFocus3: void focus()>
<org.webrtc.videoengine.camera.CameraUtils5: void <init>()>
<org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pj_str_t getContact()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_endpoint: void <init>(long,boolean)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void onFinishInflate()>
<com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void <init>(com.actionbarsherlock.internal.app.ActionBarWrapper,android.app.ActionBar$Tab)>
<com.csipsimple.ui.prefs.CodecsFragment: void <init>()>
<com.csipsimple.wizards.impl.VoipTiger: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.utils.PreferencesProviderWrapper: int getInCallMode()>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean useModeApi()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
<com.csipsimple.ui.SipHome$3: void run()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void getOn_pager_status2()>
<com.actionbarsherlock.internal.view.ActionProviderWrapper: void onPrepareSubMenu(android.view.SubMenu)>
<com.csipsimple.service.SipNotifications: void cancelRegisters()>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void openOptionsMenu()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void onPause()>
<com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.wizards.impl.Fritzbox: void <init>()>
<com.csipsimple.api.SipProfile: void <init>()>
<com.csipsimple.ui.account.AccountsEditListFragment: void <init>()>
<org.pjsip.pjsua.Callback: int timer_cancel(int,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone()>
<com.csipsimple.ui.favorites.PresenceStatusSpinner$AccountStatusContentObserver: void onChange(boolean)>
<com.csipsimple.db.DBProvider: android.database.Cursor getCursor(android.content.ContentValues[])>
<com.csipsimple.utils.clipboard.ClipboardWrapper: com.csipsimple.utils.clipboard.ClipboardWrapper getInstance(android.content.Context)>
<com.actionbarsherlock.app.SherlockActivity: void onPostCreate(android.os.Bundle)>
<com.csipsimple.wizards.impl.Scarlet: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.actionbarsherlock.Manifest$permission: void <init>()>
<org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pj_str_t getSub_term_reason()>
<com.csipsimple.ui.incall.InCallInfoGrid: void populate()>
<org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int,int)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_sdp_created(org.pjsip.pjsua.Callback,int,long,long,long)>
<com.actionbarsherlock.widget.ActivityChooserModel: void <init>(android.content.Context,java.lang.String)>
<com.csipsimple.service.MediaManager: void actualUnsetAudioInCall()>
<com.csipsimple.service.SipService$2: float getPreferenceFloat(java.lang.String)>
<com.csipsimple.wizards.impl.MondotalkCreate$1: void run()>
<com.csipsimple.ui.incall.InCallMediaControl: void delayedQuit(int)>
<com.csipsimple.api.SipProfileState: void <init>(android.database.Cursor)>
<com.csipsimple.widgets.Dialpad: void dispatchDialKeyEvent(int)>
<com.csipsimple.utils.TimerWrapper: int doCancel(int)>
<com.csipsimple.pjsip.PjSipService: void initCodecs()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op: void <init>()>
<com.csipsimple.pjsip.PjSipService: void updateTransportIp(java.lang.String)>
<com.actionbarsherlock.app.SherlockActivity: void supportInvalidateOptionsMenu()>
<com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$3: void <init>(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>
<com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: java.lang.String toString()>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index getVid_rend_dev()>
<com.csipsimple.utils.audio.AudioFocus3: void pauseMusic()>
<com.csipsimple.api.SipCallSession$StatusCode: void <init>()>
<com.csipsimple.wizards.impl.Broadsoft: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)>
<com.csipsimple.utils.CollectLogs$LogResult: void <init>(java.lang.StringBuilder,java.io.File)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState: void <clinit>()>
<com.csipsimple.wizards.impl.Tlenofon: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getLast_status_text()>
<com.csipsimple.ui.prefs.PrefsLogic: void updateDescriptionForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)>
<org.pjsip.pjsua.pjmedia_port_info: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.ZonPt: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipProfile(android.content.Context,com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsip_timer_setting: void <init>(long,boolean)>
<com.csipsimple.api.ISipService$Stub$Proxy: void <init>(android.os.IBinder)>
<com.csipsimple.wizards.impl.Ippi: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.app.SherlockListActivity: void onStop()>
<dummyMainClass: com.csipsimple.ui.dialpad.DialerFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerFragment(android.content.Intent,android.app.Activity)>
<com.csipsimple.utils.bluetooth.BluetoothUtils8$1: void onReceive(android.content.Context,android.content.Intent)>
<com.csipsimple.utils.accessibility.AccessibilityWrapper: void <init>()>
<com.csipsimple.wizards.impl.ReachPhones: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int,org.pjsip.pjsua.pjmedia_dir)>
<org.pjsip.pjsua.pjsua_ice_config_use: void <clinit>()>
<com.csipsimple.service.PresenceManager: void <init>()>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_mwi_info(org.pjsip.pjsua.Callback,int,long,long)>
<com.csipsimple.wizards.impl.Sipnet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.actionbarsherlock.internal.app.ActionBarImpl$1: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton: boolean performClick()>
<com.csipsimple.ui.SipHome: void selectTabWithAction(android.content.Intent)>
<org.pjsip.pjsua.pjsua_reg_info: void <init>()>
<com.csipsimple.ui.prefs.PrefsFast: void updateFromPrefs()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code: void <init>(long,boolean)>
<com.csipsimple.ui.favorites.FavAdapter$ConfigureObj: void <init>(com.csipsimple.ui.favorites.FavAdapter,com.csipsimple.ui.favorites.FavAdapter$ConfigureObj)>
<org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_media_status)>
<com.csipsimple.wizards.impl.ReachPhones: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.ui.warnings.WarningNoStun: void onClick(android.view.View)>
<com.csipsimple.wizards.impl.OSTN: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void setSupportProgressBarVisibility(boolean)>
<com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void <init>(com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor)>
<com.csipsimple.widgets.ShortcutWidgetConfigure: void deleteWidget(android.content.Context,int)>
<com.csipsimple.utils.bluetooth.BluetoothWrapper: com.csipsimple.utils.bluetooth.BluetoothWrapper getInstance(android.content.Context)>
<com.csipsimple.wizards.impl.TOnline: void <init>()>
<com.csipsimple.ui.messages.MessageFragment: void <init>()>
<com.csipsimple.ui.dialpad.DialerFragment$4: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void getOn_mwi_state()>
<org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int)>
<com.csipsimple.ui.calllog.CallLogAdapter: void addGroups(android.database.Cursor)>
<com.csipsimple.service.SipService$1: int startLoopbackTest()>
<com.csipsimple.ui.favorites.FavAdapter$4: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.database.Cursor)>
<com.csipsimple.pjsip.PjSipService: void setBluetoothOn(boolean)>
<com.csipsimple.wizards.impl.Ippi: boolean saveAndQuit()>
<com.csipsimple.service.SipService$2: void setPreferenceFloat(java.lang.String,float)>
<com.csipsimple.wizards.impl.Expert: void <init>()>
<org.pjsip.pjsua.Callback: org.pjsip.pjsua.pjsip_redirect_op on_call_redirected(int,org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.service.SipService$1$25: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int)>
<com.csipsimple.utils.MD5: java.lang.String calculateMD5(java.io.File)>
<com.actionbarsherlock.internal.widget.ActionBarView: void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<com.csipsimple.widgets.EditSipUri$ToCall: void <init>(com.csipsimple.widgets.EditSipUri,java.lang.Long,java.lang.String)>
<com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void run()>
<com.csipsimple.ui.messages.MessageFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean generateForSetCall()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: boolean tryShow()>
<com.actionbarsherlock.internal.widget.IcsView: void <init>()>
<org.pjsip.pjsua.pjmedia_port: org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int getPut_frame()>
<com.csipsimple.db.DBProvider: void <clinit>()>
<com.csipsimple.models.Filter: int getPositionForMatcher(java.lang.Integer)>
<com.csipsimple.wizards.impl.HalooCentrala: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.view.menu.SubMenuBuilder: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl)>
<org.pjsip.pjsua.pjsua_stun_use: void <clinit>()>
<com.csipsimple.ui.account.AccountsEditListFragment: void onActivityResult(int,int,android.content.Intent)>
<com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void execute(java.lang.Runnable)>
<com.actionbarsherlock.internal.utils.Utility9: void <init>()>
<dummyMainClass: com.csipsimple.ui.calllog.CallLogDetailsFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogDetailsFragment(android.content.Intent,android.app.Activity)>
<org.pjsip.pjsua.pjsua_med_tp_st$SwigNext: void <init>()>
<com.csipsimple.wizards.impl.Localphone: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.SWIGTYPE_p_pjsip_method getPjsip_info_method()>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory get_pool_factory()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setAnimatedValue(java.lang.Object)>
<com.actionbarsherlock.ActionBarSherlock: void <init>(android.app.Activity,int)>
<org.pjsip.pjsua.pjsip_event_id_e: void <clinit>()>
<com.csipsimple.wizards.impl.Viva: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler: void handleMessage(android.os.Message)>
<com.csipsimple.ui.prefs.CodecsFragment: void access$1(com.csipsimple.ui.prefs.CodecsFragment,java.lang.String,short)>
<com.csipsimple.wizards.impl.Betamax$AccountBalance: org.apache.http.client.methods.HttpRequestBase getRequest(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.widget.ActivityChooserView: boolean showPopup()>
<com.csipsimple.widgets.AccountWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.service.SipService$1$17: void <init>(com.csipsimple.service.SipService$1,int,float)>
<com.csipsimple.ui.incall.InCallActivity$4: void <init>(com.csipsimple.ui.incall.InCallActivity)>
<com.csipsimple.ui.prefs.PrefsFast: void onDestroy()>
<com.csipsimple.wizards.impl.Ovh: void updateDescriptions()>
<com.csipsimple.pjsip.PjSipAccount: void <init>()>
<com.csipsimple.service.SipService$1$10: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int,int)>
<com.actionbarsherlock.internal.utils.Utility7: void <init>()>
<com.csipsimple.api.SipConfigManager: void setPreferenceBooleanValue(android.content.Context,java.lang.String,boolean)>
<com.csipsimple.wizards.impl.BaseImplementation: void <init>()>
<com.csipsimple.service.SipService$1: void zrtpSASVerified(int)>
<com.csipsimple.utils.contacts.ContactsWrapper$Phone: void <init>(com.csipsimple.utils.contacts.ContactsWrapper,java.lang.String,java.lang.String)>
<com.csipsimple.pjsip.PjSipService: void removeBuddy(java.lang.String)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat$1: void <init>(com.actionbarsherlock.internal.ActionBarSherlockCompat)>
<org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_vid_req_keyframe_method)>
<com.csipsimple.api.SipCallSession$1: com.csipsimple.api.SipCallSession createFromParcel(android.os.Parcel)>
<com.csipsimple.wizards.impl.MondotalkCreate$1: void <init>(com.csipsimple.wizards.impl.MondotalkCreate)>
<com.csipsimple.ui.incall.InCallCard$2: void run()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void: void <init>(long,boolean)>
<com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.csipsimple.widgets.ShortcutWidgetConfigure$Shortcut: void <init>(int,int,android.content.Intent)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem findItem(int)>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidAnywayConnectionFor(android.net.NetworkInfo,java.lang.String)>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void <init>(android.content.Context,int,int)>
<com.csipsimple.wizards.impl.BTone: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void changeCursor(android.database.Cursor)>
<com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: int getIntValue(float)>
<com.csipsimple.widgets.contactbadge.ContactBadgeContract: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void <init>(android.content.Context)>
<com.csipsimple.ui.incall.InCallInfoGrid: void <init>(android.content.Context)>
<com.csipsimple.utils.UriUtils: boolean isUriNumber(java.lang.String)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean reserveOverflow(android.content.Context)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void init(android.view.View)>
<com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(int,com.csipsimple.utils.ContactsAsyncHelper$OnImageLoadCompleteListener,java.lang.Object,android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>
<org.pjsip.pjsua.pjsua_media_transport: void <init>()>
<com.csipsimple.wizards.impl.EuroTelefon: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.wizards.impl.VoipMS: void fillLayout(com.csipsimple.api.SipProfile)>
<org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory: void <init>(org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory)>
<com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator: java.lang.Float evaluate(float,java.lang.Number,java.lang.Number)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator clone()>
<com.csipsimple.utils.Base64: void encodeFileToFile(java.lang.String,java.lang.String)>
<com.csipsimple.wizards.impl.TOnline: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.app.SherlockListActivity: void openOptionsMenu()>
<com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender: void <init>(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender)>
<com.csipsimple.wizards.impl.Freephonie: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.MiTelefono: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.db.DBAdapter: void <init>(android.content.Context)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.csipsimple.wizards.impl.Local$1: void <init>()>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index getVid_cap_dev()>
<com.csipsimple.utils.CollectLogs: android.content.Intent getLogReportIntent(java.lang.String,android.content.Context)>
<org.pjsip.pjsua.pjsip_cred_data_type: org.pjsip.pjsua.pjsip_cred_data_type swigToEnum(int)>
<com.csipsimple.api.SipMessage: java.lang.String getDisplayName()>
<com.csipsimple.ui.SipHome: void postStartSipService()>
<com.csipsimple.wizards.impl.Sapo: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.PreferencesProviderWrapper: int getUdpKeepAliveInterval()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence)>
<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipCallSession getCallInfo(int)>
<com.csipsimple.pjsip.PjSipService: void setEchoCancellation(boolean)>
<com.csipsimple.utils.DialingFeedback: void resume()>
<com.csipsimple.widgets.AccountChooserButton: void access$0(com.csipsimple.widgets.AccountChooserButton)>
<com.csipsimple.wizards.impl.Voocall: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.wizards.impl.Flowroute: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.utils.PreferencesProviderWrapper: long getClockRate()>
<com.csipsimple.ui.SipHome: void access$0(com.csipsimple.ui.SipHome)>
<com.csipsimple.wizards.impl.Betamax: boolean canSave()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setFeatureInt(int,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>(long,boolean)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1: void <init>()>
<com.csipsimple.wizards.impl.XNet: boolean canSave()>
<com.csipsimple.wizards.impl.Broadsoft: void updateDescriptions()>
<com.csipsimple.ui.incall.InCallInfoGrid: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.wizards.impl.Sapo: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.widgets.ShortcutWidgetConfigure: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<org.pjsip.pjsua.Callback: void on_call_media_state(int)>
<com.csipsimple.utils.CallHandlerPlugin: void <init>(android.content.Context)>
<org.webrtc.videoengine.ViEAndroidGLES20: void <init>(android.content.Context,boolean,int,int)>
<com.csipsimple.utils.audio.AudioFocusWrapper: void <init>()>
<com.csipsimple.wizards.impl.SipCel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.ui.calllog.CallLogDetailsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.actionbarsherlock.app.SherlockListActivity: void onDestroy()>
<com.csipsimple.wizards.impl.Expert$1: void <init>()>
<com.csipsimple.widgets.SlidingTab: boolean onTouchEvent(android.view.MotionEvent)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor: boolean onTouch(android.view.View,android.view.MotionEvent)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setFloatValues(float[])>
<com.actionbarsherlock.internal.view.menu.ActionMenu: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[])>
<com.actionbarsherlock.app.SherlockDialogFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<com.csipsimple.wizards.impl.SimpleImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.CollectLogs: void <init>()>
<com.actionbarsherlock.app.SherlockFragmentActivity: void closeOptionsMenu()>
<com.csipsimple.wizards.WizardUtils: java.util.Locale locale(java.lang.String)>
<com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void <init>(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)>
<org.pjsip.pjsua.pj_pool_t: org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory getFactory()>
<com.csipsimple.utils.Ringer: void ring(java.lang.String,java.lang.String)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.csipsimple.ui.filters.AccountFiltersListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
<com.csipsimple.utils.PreferencesWrapper: boolean dialPressTone()>
<com.csipsimple.wizards.WizardChooser: void onCreate(android.os.Bundle)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence)>
<com.csipsimple.service.SipService$1$5: void <init>(com.csipsimple.service.SipService$1,java.lang.String,int,android.os.Bundle)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_transport: void <init>()>
<com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$1: void <init>(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>
<com.csipsimple.utils.Base64: byte[] decode(byte[])>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void: void <init>()>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void setSplitActionBar(boolean)>
<com.csipsimple.wizards.impl.Advanced: void <clinit>()>
<com.actionbarsherlock.internal.widget.AbsActionBarView: boolean showOverflowMenu()>
<com.csipsimple.wizards.impl.Sipgate: void updateDescriptions()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub: void <init>()>
<com.csipsimple.ui.filters.EditFilter: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float,int)>
<com.csipsimple.models.Filter: android.database.Cursor getFiltersCursorForAccount(android.content.Context,long)>
<com.csipsimple.utils.Base64: java.lang.Object decodeToObject(java.lang.String)>
<com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForReplace()>
<com.csipsimple.widgets.Dialpad: void <clinit>()>
<com.csipsimple.pjsip.UAStateReceiver: int timer_cancel(int,int)>
<com.csipsimple.pjsip.UAStateReceiver: void on_call_media_state(int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)>
<com.csipsimple.wizards.impl.Basic: void <clinit>()>
<org.pjsip.pjsua.pjsua_acc_config: void <init>(long,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.SubMenu getSubMenu()>
<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>
<com.csipsimple.ui.help.Faq$1: void <init>(com.csipsimple.ui.help.Faq)>
<com.csipsimple.ui.calllog.CallLogAdapter$CallRowInfos: void <init>(com.csipsimple.ui.calllog.CallLogAdapter)>
<dummyMainClass: com.csipsimple.service.OutgoingCall dummyMainMethod_com_csipsimple_service_OutgoingCall(android.content.Intent)>
<com.actionbarsherlock.R$string: void <init>()>
<com.csipsimple.utils.Compatibility: boolean shouldUseModeApi()>
<org.pjsip.pjsua.pjsua_vid_win_info: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index getRdr_dev()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport_info: void <init>()>
<com.csipsimple.wizards.impl.Broadsoft: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getUserAgent(android.content.Context)>
<com.csipsimple.ui.messages.ConversationsListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem)>
<com.csipsimple.api.SipProfile$1: void <init>()>
<com.csipsimple.pjsip.UAStateReceiver: void access$5(com.csipsimple.pjsip.UAStateReceiver,int)>
<com.csipsimple.wizards.impl.VoipNor: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void onCreate(android.os.Bundle)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void requestWindowFeature(long)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void: void <init>(long,boolean)>
<com.csipsimple.service.receiver.DynamicReceiver4$2$1: void <init>(com.csipsimple.service.receiver.DynamicReceiver4$2)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>
<com.csipsimple.wizards.impl.Mobex$AccountBalance: java.lang.String parseResponseLine(java.lang.String)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: int loadUiOptionsFromManifest(android.app.Activity)>
<org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pj_qos_type getQos_type()>
<com.csipsimple.wizards.impl.Blicnet: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.utils.PreferencesWrapper: org.json.JSONObject serializeSipSettings()>
<com.csipsimple.ui.favorites.PresenceStatusSpinner: void access$2(com.csipsimple.ui.favorites.PresenceStatusSpinner)>
<com.csipsimple.utils.Base64: java.lang.Object decodeToObject(java.lang.String,int,java.lang.ClassLoader)>
<com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister)>
<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter,com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter$AccListItemViewTag)>
<com.csipsimple.ui.account.AccountsEditListFragment$3: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.ui.PickupSipUri: void sendPositiveResult()>
<com.csipsimple.service.MediaManager: void <init>(com.csipsimple.service.SipService)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setAnimatedValue(java.lang.Object)>
<org.pjsip.pjsua.pj_stun_resolve_result: org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr getAddr()>
<org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_redirect_op)>
<com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long)>
<org.webrtc.videoengine.ViESurfaceRenderer: void saveBitmapToJPEG(int,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void <init>()>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu()>
<com.actionbarsherlock.R: void <init>()>
<com.csipsimple.wizards.impl.IiNet: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pj_pool_t: void <init>(long,boolean)>
<dummyMainClass: com.csipsimple.ui.prefs.AudioTester dummyMainMethod_com_csipsimple_ui_prefs_AudioTester(android.content.Intent)>
<com.csipsimple.wizards.impl.Advanced: void updateDescriptions()>
<com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getCSipPhonesContact(android.content.Context,java.lang.Long)>
<com.csipsimple.wizards.impl.Mobile4U: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_logging_config: org.pjsip.pjsua.pj_str_t getLog_filename()>
<com.actionbarsherlock.widget.ShareActionProvider: android.view.View onCreateActionView()>
<com.csipsimple.ui.SipHome$1: void <init>(com.csipsimple.ui.SipHome)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void onStop()>
<org.pjsip.pjsua.Callback: void on_call_replaced(int,int)>
<org.pjsip.pjsua.Callback: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setFloatValues(float[])>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void VerifyCapabilities()>
<com.csipsimple.ui.favorites.FavAdapter: void access$1(com.csipsimple.ui.favorites.FavAdapter,android.content.Context,java.lang.Long,java.lang.String)>
<com.csipsimple.wizards.impl.Betamax: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.widget.ShareActionProvider: void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu)>
<com.csipsimple.pjsip.UAStateReceiver: void on_setup_audio()>
<org.pjsip.pjsua.pjsua_state: org.pjsip.pjsua.pjsua_state swigToEnum(int)>
<org.pjsip.pjsua.pjsua_buddy_config: org.pjsip.pjsua.pj_str_t getUri()>
<com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator: void <init>()>
<com.csipsimple.wizards.impl.CongstarTelekom: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsuaConstants: void <clinit>()>
<com.csipsimple.pjsip.PjSipCalls: void updateSession(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsua_call_info,com.csipsimple.pjsip.PjSipService)>
<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getRingtone()>
<com.csipsimple.utils.TimerWrapper: void setContext(com.csipsimple.service.SipService)>
<com.csipsimple.service.PresenceManager: void addBuddiesForAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_dtmf_digit(org.pjsip.pjsua.Callback,int,int)>
<com.csipsimple.wizards.WizardUtils$WizardPrioComparator: void <init>()>
<com.csipsimple.widgets.AccountChooserButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.wizards.impl.Sapo: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry: void <init>()>
<com.csipsimple.models.Filter$RegExpRepresentation: void <init>()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: boolean performExpand()>
<com.csipsimple.wizards.impl.MondotalkCreate: boolean retrieveCaptcha()>
<com.csipsimple.ui.incall.InCallActivity: void attachVideoPreview()>
<com.csipsimple.service.Downloader: void onHandleIntent(android.content.Intent)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void getOn_typing()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void setSupportProgressBarVisibility(boolean)>
<com.csipsimple.utils.CallHandlerPlugin$1: void onReceive(android.content.Context,android.content.Intent)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void getOn_call_transfer_request2()>
<com.csipsimple.wizards.impl.Scarlet: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.contacts.ContactsUtils5: void <init>()>
<com.csipsimple.utils.SmileyParser: void <init>(android.content.Context)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void show()>
<com.csipsimple.ui.incall.InCallMediaControl$2: void <init>(com.csipsimple.ui.incall.InCallMediaControl)>
<com.csipsimple.widgets.Dialpad: void onFinishInflate()>
<org.pjsip.pjsua.pjsip_status_code$SwigNext: void <init>()>
<com.csipsimple.wizards.impl.Advanced: boolean canSave()>
<com.actionbarsherlock.view.MenuInflater: void <init>(android.content.Context)>
<com.csipsimple.service.SipService: com.csipsimple.api.SipProfileState getSipProfileState(int)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: int getPositionForView(android.view.View)>
<com.csipsimple.service.SipService$DestroyRunnable: void <init>(com.csipsimple.service.SipService)>
<org.pjsip.pjsua.pjsua_codec_info: org.pjsip.pjsua.pj_str_t getCodec_id()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setupEndValues()>
<com.csipsimple.utils.Ringer$RingerThread: void run()>
<com.csipsimple.wizards.impl.Phonzo: void updateDescriptions()>
<com.csipsimple.utils.PreferencesWrapper: boolean dialPressVibrate()>
<com.csipsimple.utils.DialingFeedback: void giveFeedback(int)>
<com.csipsimple.service.SipService$1: int answer(int,int)>
<com.actionbarsherlock.R$attr: void <init>()>
<org.pjsip.pjsua.pjrpid_activity: org.pjsip.pjsua.pjrpid_activity swigToEnum(int)>
<com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipContactInfos parseSipContact(java.lang.String)>
<dummyMainClass: com.csipsimple.ui.favorites.FavListFragment dummyMainMethod_com_csipsimple_ui_favorites_FavListFragment(android.content.Intent,android.app.Activity)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_reg_state(org.pjsip.pjsua.Callback,int)>
<com.csipsimple.ui.incall.InCallAnswerControls: void setCallState(com.csipsimple.api.SipCallSession)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback: void <init>()>
<com.csipsimple.wizards.impl.OnSip: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.ui.prefs.PrefsLogic: boolean onMainActivityOptionsItemSelected(com.actionbarsherlock.view.MenuItem,android.content.Context,com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options: void <init>()>
<com.csipsimple.utils.Ringer$RingerThread: void <init>(com.csipsimple.utils.Ringer)>
<com.csipsimple.models.Filter: int getMatcherForPosition(java.lang.Integer)>
<com.csipsimple.utils.PreferencesProviderWrapper: long getEchoCancellationTail()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void: void <init>()>
<org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int,int)>
<com.csipsimple.service.SipService$1$24: void <init>(com.csipsimple.service.SipService$1,int)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>
<com.csipsimple.service.SipService: void treatDeferUnregistersForOutgoing()>
<com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
<org.pjsip.pjsua.Callback: int on_validate_audio_clock_rate(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setKeyframes(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_pj_ice_strans_op_int_p_void__void: void <init>()>
<com.csipsimple.wizards.impl.SipMe: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.utils.NightlyUpdater: int getLastOnlineVersion()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()>
<org.pjsip.pjsua.pjsua_acc_info: org.pjsip.pjsua.pjrpid_element getRpid()>
<com.actionbarsherlock.app.SherlockFragment: void onAttach(android.app.Activity)>
<org.pjsip.pjsua.pjsua_call_flag$SwigNext: void <init>()>
<com.actionbarsherlock.internal.widget.CapitalizingTextView: void setTextCompat(java.lang.CharSequence)>
<com.csipsimple.utils.TimerWrapper: int doSchedule(int,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: java.lang.Object getValue()>
<com.actionbarsherlock.internal.utils.Utility4: void <init>()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgress(int)>
<com.csipsimple.wizards.impl.MondotalkCreate$2: void <init>(com.csipsimple.wizards.impl.MondotalkCreate)>
<com.csipsimple.ui.messages.ConversationsListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.csipsimple.ui.SipHome: void applyTheme()>
<com.csipsimple.widgets.HorizontalQuickActionWindow$1: void <init>(com.csipsimple.widgets.HorizontalQuickActionWindow)>
<com.csipsimple.utils.contacts.ContactsUtils5: void updateCSipPresence(android.content.Context,java.lang.String,com.csipsimple.api.SipManager$PresenceStatus,java.lang.String)>
<org.pjsip.pjsua.pjmedia_tone_desc: org.pjsip.pjsua.pjmedia_tone_desc[] cArrayWrap(long[],boolean)>
<com.csipsimple.service.SipService$1$8: java.lang.Object runWithReturn()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void: void <init>(long,boolean)>
<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void setRowViewAlpha(android.view.View,float)>
<com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.Vegatel: void <init>()>
<com.csipsimple.wizards.impl.Sonetel: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port: void <init>(long,boolean)>
<com.csipsimple.pjsip.PjStreamDialtoneGenerator: int startDialtoneGenerator()>
<com.csipsimple.utils.PreferencesProviderWrapper: int getTurnEnabled()>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setSupportAlpha(float)>
<com.csipsimple.ui.incall.InCallCard: void access$4(com.csipsimple.ui.incall.InCallCard)>
<com.csipsimple.wizards.impl.Ajtel: void updateDescriptions()>
<com.csipsimple.pjsip.PjSipService: void updateProfileStateFromService(int)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[])>
<com.actionbarsherlock.app.SherlockFragmentActivity: void setSupportProgress(int)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int getOn_call_media_transport_state()>
<org.pjsip.pjsua.pjmedia_port_info: org.pjsip.pjsua.pjmedia_dir getDir()>
<com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable)>
<com.actionbarsherlock.widget.ActivityChooserView$SetActivated: void <init>()>
<com.csipsimple.wizards.impl.Ip2Mobile: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String)>
<org.pjsip.pjsua.pjsip_tls_setting: void <init>(long,boolean)>
<com.csipsimple.utils.SmileyParser: java.util.Map buildSmileyToRes()>
<com.csipsimple.utils.Ringer$VibratorThread: void <init>(com.csipsimple.utils.Ringer)>
<com.csipsimple.ui.incall.InCallMediaControl: void access$2(com.csipsimple.ui.incall.InCallMediaControl)>
<dummyMainClass: com.csipsimple.ui.calllog.CallLogListFragment dummyMainMethod_com_csipsimple_ui_calllog_CallLogListFragment(android.content.Intent,android.app.Activity)>
<com.csipsimple.ui.messages.ConversationsListFragment$2: void <init>(com.csipsimple.ui.messages.ConversationsListFragment)>
<com.csipsimple.service.SipService$ServicePhoneStateReceiver: void onCallStateChanged(int,java.lang.String)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op: void <clinit>()>
<com.csipsimple.utils.clipboard.ClipboardWrapper: void <init>()>
<org.pjsip.pjsua.pjsua_logging_config: void <init>(long,boolean)>
<com.csipsimple.ui.help.Help: void onAttach(android.app.Activity)>
<com.csipsimple.wizards.impl.Phonzo: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.favorites.FavAdapter$2: void <init>(com.csipsimple.ui.favorites.FavAdapter)>
<com.csipsimple.ui.filters.EditFilter: void onNothingSelected(android.widget.AdapterView)>
<com.csipsimple.wizards.impl.Flowroute: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void getOn_call_transfer_request()>
<org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int)>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidMobileConnectionFor(android.net.NetworkInfo,java.lang.String)>
<com.csipsimple.pjsip.UAStateReceiver: int timer_schedule(int,int,int)>
<com.csipsimple.service.SipService$2: void setPreferenceBoolean(java.lang.String,boolean)>
<com.csipsimple.ui.account.AccountsEditListFragment$4: void <init>(com.csipsimple.ui.account.AccountsEditListFragment,com.csipsimple.widgets.DragnDropListView)>
<com.csipsimple.service.receiver.DynamicReceiver4: void onReceiveInternal(android.content.Context,android.content.Intent,boolean)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void start()>
<com.csipsimple.ui.dialpad.DialerFragment$7: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: long getAccountToCallTo()>
<com.csipsimple.ui.filters.AccountFiltersListFragment: void <init>()>
<com.csipsimple.utils.Base64$InputStream: int read()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void getOn_nat_detect()>
<com.csipsimple.ui.prefs.AudioTester$1: void <init>(com.csipsimple.ui.prefs.AudioTester)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int__int: void <init>()>
<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<com.actionbarsherlock.app.SherlockListFragment: void onPrepareOptionsMenu(android.view.Menu)>
<com.csipsimple.ui.calllog.CallLogGroupBuilder: void <init>(com.csipsimple.ui.calllog.CallLogGroupBuilder$GroupCreator)>
<com.csipsimple.ui.prefs.GenericPrefs: void setListFieldSummary(java.lang.String)>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1: void <init>(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup)>
<com.csipsimple.service.SipService$1$4: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.api.SipProfile,int)>
<com.csipsimple.ui.SipHome: void access$3(com.csipsimple.ui.SipHome)>
<com.csipsimple.service.SipService$1: int xfer(int,java.lang.String)>
<com.csipsimple.service.SipService: boolean loadStack()>
<org.pjsip.pjsua.pjsua_buddy_info: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.SWIGTYPE_p_pjsip_method getPjsip_message_method()>
<org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int: void <init>(long,boolean)>
<com.csipsimple.pjsip.UAStateReceiver: void sendPendingDtmf(int)>
<com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String dumpRoutes()>
<dummyMainClass: com.csipsimple.ui.help.Legal dummyMainMethod_com_csipsimple_ui_help_Legal(android.content.Intent,android.app.Activity)>
<org.pjsip.pjsua.pjsua_create_media_transport_flag: void <clinit>()>
<com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnVpnIcs(com.csipsimple.utils.PreferencesProviderWrapper)>
<com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void <init>(com.actionbarsherlock.widget.ActivityChooserModel)>
<com.csipsimple.ui.prefs.CodecsFragment: void setCodecActivated(java.util.Map,short)>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t codecs_vid_get_id(int)>
<com.actionbarsherlock.app.SherlockListActivity: void onPostCreate(android.os.Bundle)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void: void <init>()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.wizards.impl.VoipTel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.pjsip.PjSipService: java.lang.String pjStrToString(org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.wizards.impl.DeltaThree: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pjmedia_srtp_use getUseSrtp()>
<com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor$1: void <init>(com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor,java.lang.Runnable)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void cleanupTabs()>
<org.pjsip.pjsua.pjsip_transport_type_e$SwigNext: void <init>()>
<com.csipsimple.service.SipNotifications: void showNotificationForVoiceMail(com.csipsimple.api.SipProfile,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_info: void <init>()>
<com.csipsimple.ui.prefs.GenericPrefs: void onResume()>
<org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port: void <init>()>
<com.csipsimple.ui.account.AccountsEditListFragment: boolean onContextItemSelected(android.view.MenuItem)>
<com.csipsimple.wizards.impl.Optimus: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.wizards.impl.BelCentrale: java.lang.String getDomain()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void animateToMode(boolean)>
<org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int,int)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin: void <init>(com.actionbarsherlock.internal.widget.IcsAbsSpinner)>
<com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sendMessage(java.lang.String,java.lang.String,long)>
<com.csipsimple.wizards.impl.Sonetel: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.wizards.impl.Scarlet: boolean canSave()>
<com.csipsimple.ui.filters.EditFilter: void access$0(com.csipsimple.ui.filters.EditFilter)>
<com.csipsimple.wizards.impl.Cryptel$1: void <init>(com.csipsimple.wizards.impl.Cryptel)>
<com.csipsimple.service.SipService$1$6: void <init>(com.csipsimple.service.SipService$1,java.lang.String,java.lang.String,long)>
<com.csipsimple.ui.prefs.GenericPrefs: void onCreate(android.os.Bundle)>
<com.csipsimple.service.SipService: boolean stopSipStack()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.app.ActionBar getActionBar()>
<org.pjsip.pjsua.pjrpid_element: org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type getType()>
<org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pjmedia_srtp_use getUse_srtp()>
<com.csipsimple.wizards.impl.BelCentrale: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.api.SipProfile$1: java.lang.Object createFromParcel(android.os.Parcel)>
<com.csipsimple.ui.account.AccountsEditListFragment$3$1: void onClick(android.content.DialogInterface,int)>
<com.actionbarsherlock.app.SherlockActivity: void onConfigurationChanged(android.content.res.Configuration)>
<com.actionbarsherlock.app.SherlockActivity: void setSupportSecondaryProgress(int)>
<com.csipsimple.pjsip.UAStateReceiver$3: void doRun()>
<org.pjsip.pjsua.pjsua_call_hold_type$SwigNext: void <init>()>
<com.csipsimple.utils.PreferencesProviderWrapper: int getHeadsetAction()>
<org.webrtc.videoengine.VideoCaptureAndroid: void <init>(int,long,android.hardware.Camera,org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice)>
<com.csipsimple.utils.PreferencesProviderWrapper: int getTCPTransportPort()>
<com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: void <init>(android.view.MenuItem)>
<org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pjsip_cred_info getCred_info()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: int buildDropDown()>
<com.csipsimple.ui.incall.CallProximityManager: void restartTimer()>
<org.pjsip.pjsua.pjsua_ice_config_use: org.pjsip.pjsua.pjsua_ice_config_use swigToEnum(int)>
<org.pjsip.pjsua.pjsua_100rel_use: void <clinit>()>
<com.csipsimple.ui.calllog.CallTypeIconsView: void add(int)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void: void <init>(long,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuItemMule: void <init>(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.utils.contacts.ContactsUtils5: void <clinit>()>
<com.actionbarsherlock.app.SherlockActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>
<org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam: void <init>()>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setIcon(int)>
<com.csipsimple.ui.incall.InCallActivity$CallsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int)>
<com.csipsimple.ui.calllog.CallLogAdapter$1: void <init>(com.csipsimple.ui.calllog.CallLogAdapter)>
<com.csipsimple.ui.dialpad.DialerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.actionbarsherlock.widget.ActivityChooserView$2: void <init>(com.actionbarsherlock.widget.ActivityChooserView)>
<com.csipsimple.wizards.impl.Basic$1: void <init>()>
<org.pjsip.pjsua.pjsip_status_code: void <clinit>()>
<org.pjsip.pjsua.pjsua_call_hold_type: org.pjsip.pjsua.pjsua_call_hold_type swigToEnum(int)>
<com.csipsimple.service.SipService: com.csipsimple.api.SipProfile getAccount(long)>
<com.csipsimple.service.SipService$SyncStartRunnable: void <init>(com.csipsimple.service.SipService)>
<com.csipsimple.wizards.impl.Mobex: void updateAccountInfos(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.incall.InCallMediaControl$UpdateConfLevelRunnable: void <init>(com.csipsimple.ui.incall.InCallMediaControl,int,int)>
<com.csipsimple.api.MediaState$1: void <init>()>
<org.pjsip.pjsua.pjsip_inv_state: org.pjsip.pjsua.pjsip_inv_state swigToEnum(int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void: void <init>()>
<com.csipsimple.ui.warnings.WarningVpnIcs: void onClick(android.view.View)>
<org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory[] getExtra_vid_codecs()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data: void <init>()>
<com.csipsimple.wizards.impl.UkrTelecom: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.wizards.BasePrefsWizard: void onActivityResult(int,int,android.content.Intent)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,java.util.ArrayList)>
<com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String)>
<com.csipsimple.wizards.impl.MundoR: java.lang.String getDefaultFieldSummary(java.lang.String)>
<org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int)>
<com.csipsimple.ui.filters.EditFilter: void onCreate(android.os.Bundle)>
<com.csipsimple.service.receiver.DynamicReceiver4: void onReceive(android.content.Context,android.content.Intent)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data: void <init>()>
<org.pjsip.pjsua.pjsua_call_setting: void <init>(long,boolean)>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera$Parameters SearchOldFrontFacingCameras(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice)>
<com.csipsimple.wizards.impl.Callcentric: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.api.SipUri: com.csipsimple.api.SipUri$ParsedSipUriInfos parseSipUri(java.lang.String)>
<com.csipsimple.service.SipService$1$4: void doRun()>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: void <init>(com.actionbarsherlock.internal.ActionBarSherlockNative,com.actionbarsherlock.view.ActionMode$Callback)>
<org.pjsip.pjsua.pjsua_msg_data: void <init>(long,boolean)>
<com.csipsimple.ui.filters.EditFilter: void checkFormValidity()>
<com.csipsimple.service.SipService$1$14: void <init>(com.csipsimple.service.SipService$1,boolean)>
<com.csipsimple.service.SipService$1$26: void <init>(com.csipsimple.service.SipService$1)>
<com.csipsimple.wizards.impl.Sipgate: void updateAccountInfos(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_acc_info: org.pjsip.pjsua.pj_str_t getOnline_status_text()>
<com.csipsimple.wizards.impl.PlanetPhone: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.service.SipService$1$18: void <init>(com.csipsimple.service.SipService$1,int,float)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: java.lang.String cleanActivityName(java.lang.String,java.lang.String)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setAdapter(android.widget.Adapter)>
<com.csipsimple.ui.calllog.CallLogListFragment: void deleteAllCalls()>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void <init>(int,android.content.Context)>
<com.csipsimple.service.SipService$AccountStatusContentObserver: void onChange(boolean)>
<org.pjsip.pjsua.pjsua_med_tp_st: void <clinit>()>
<com.actionbarsherlock.app.SherlockActivity: void setContentView(int)>
<com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>
<com.csipsimple.models.Filter: boolean isMustCallNumber(android.content.Context,long,java.lang.String)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$1: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>()>
<com.csipsimple.wizards.impl.Phonzo: boolean canSave()>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void loadStaticMethods()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void: void <init>(long,boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_method: void <init>()>
<com.csipsimple.service.MediaManager: void onBluetoothStateChanged(int)>
<com.csipsimple.utils.PreferencesWrapper: void cleanLogsFiles(android.content.Context)>
<com.csipsimple.service.SipService: void setNoSnd()>
<com.actionbarsherlock.view.MenuInflater$MenuState: void addItem()>
<com.csipsimple.ui.messages.ConversationsListFragment$4: void <init>(com.csipsimple.ui.messages.ConversationsListFragment,java.lang.String)>
<com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFolder(android.content.Context)>
<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onMenuOpened(int,android.view.Menu)>
<com.csipsimple.wizards.impl.VoipMS: void updateDescriptions()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
<com.csipsimple.ui.messages.MessageFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.csipsimple.ui.messages.MessageFragment: void onResume()>
<com.csipsimple.wizards.impl.IiNet: java.lang.String getDefaultFieldSummary(java.lang.String)>
<org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pj_str_t getUser_agent()>
<com.csipsimple.wizards.impl.BaseImplementation: boolean isEmpty(android.preference.EditTextPreference)>
<com.csipsimple.service.SipService$ServicePhoneStateReceiver$1: void doRun()>
<com.csipsimple.ui.account.AccountsLoader: java.lang.Object loadInBackground()>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void <init>(android.content.Context)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_100rel_use getRequire_100rel()>
<com.csipsimple.api.SipMessage: java.lang.String getRemoteNumber()>
<com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)>
<org.webrtc.videoengine.VideoCaptureAndroid: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<com.actionbarsherlock.app.SherlockListActivity: boolean onMenuOpened(int,android.view.Menu)>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t get_error_message(int)>
<com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void run()>
<com.csipsimple.widgets.ScreenLocker: void delayedLock(int)>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getLocal_contact()>
<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.ui.incall.CallProximityManager: void updateProximitySensorMode()>
<com.csipsimple.wizards.impl.VoipBel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory[] getExtra_aud_codecs()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<com.csipsimple.utils.PreferencesWrapper: java.io.File getConfigFolder(android.content.Context)>
<com.csipsimple.utils.Compatibility: java.lang.String getCpuAbi()>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pjmedia_port set_no_snd_dev()>
<com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.app.ActionBar$Tab newTab()>
<com.csipsimple.service.SipService$1$28: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int)>
<com.actionbarsherlock.R$bool: void <init>()>
<com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void <init>(com.csipsimple.ui.incall.InCallMediaControl)>
<org.pjsip.pjsua.pjrpid_activity$SwigNext: void <init>()>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_stun_use getMedia_stun_use()>
<com.csipsimple.service.SipService$1: int hangup(int,int)>
<com.csipsimple.wizards.impl.Betamax: void <init>()>
<com.csipsimple.wizards.impl.Sipkom: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.wizards.WizardUtils: java.util.HashMap getWizardsList()>
<com.csipsimple.wizards.impl.OSTN: void <init>()>
<com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1: void <init>()>
<com.actionbarsherlock.internal.app.ActionBarImpl$2: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)>
<com.csipsimple.service.SipService$1: void setEchoCancellation(boolean)>
<com.csipsimple.api.SipProfile: java.util.ArrayList getAllProfiles(android.content.Context,boolean,java.lang.String[])>
<dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallListFragment dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallListFragment(android.content.Intent,android.app.Activity)>
<org.pjsip.pjsua.dynamic_factory: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.Expert: void updateDescriptions()>
<com.actionbarsherlock.app.SherlockActivity: void onStop()>
<com.csipsimple.wizards.impl.Cryptel: boolean saveAndQuit()>
<com.csipsimple.ui.dialpad.DialerFragment: boolean onLongClick(android.view.View)>
<com.csipsimple.widgets.EditSipUri$1: void onChooseAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.app.SherlockListActivity: void onTitleChanged(java.lang.CharSequence,int)>
<org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pj_str_t getStun_host()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>()>
<com.csipsimple.utils.contacts.ContactsUtils5: boolean insertOrUpdateCSipUri(android.content.Context,long,java.lang.String)>
<com.csipsimple.ui.help.Help$HelpEntry: void <init>(com.csipsimple.ui.help.Help,int,int,int)>
<com.actionbarsherlock.internal.utils.Utility4: java.lang.CharSequence stringToUpper(java.lang.CharSequence)>
<com.csipsimple.pjsip.UAStateReceiver: void on_reg_state(int)>
<com.csipsimple.ui.incall.InCallCard: void terminate()>
<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>
<com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)>
<com.csipsimple.pjsip.UAStateReceiver: void updateZrtpInfos(int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info: void <init>(long,boolean)>
<com.csipsimple.R$layout: void <init>()>
<com.csipsimple.utils.PreferencesProviderWrapper: int getAutoCloseTime()>
<com.csipsimple.utils.PreferencesWrapper: java.io.File getSubFolder(android.content.Context,java.lang.String,boolean)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)>
<org.pjsip.pjsua.pjsuaJNI: void <init>()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem add(int)>
<org.pjsip.pjsua.pjsua_acc_info: org.pjsip.pjsua.pj_str_t getAcc_uri()>
<com.csipsimple.service.SipService$1$12: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int)>
<com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[])>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void: void <init>(long,boolean)>
<com.csipsimple.service.SipService$StopRunnable: void <init>(com.csipsimple.service.SipService)>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.SWIGTYPE_p_pjsip_dialog_cap_status call_remote_has_cap(int,int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: void <init>(long,boolean)>
<com.csipsimple.utils.Base64: java.lang.String encodeFromFile(java.lang.String)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres: void <init>(long,boolean)>
<com.csipsimple.utils.Base64: byte[] decode(java.lang.String)>
<org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int,int)>
<com.csipsimple.utils.Columns: org.json.JSONObject contentValueToJSON(android.content.ContentValues)>
<com.csipsimple.api.MediaState$1: java.lang.Object createFromParcel(android.os.Parcel)>
<com.actionbarsherlock.app.SherlockActivity: void onTitleChanged(java.lang.CharSequence,int)>
<com.csipsimple.utils.Ringer: void stopRing()>
<com.csipsimple.ui.SipHome$3: void <init>(com.csipsimple.ui.SipHome,java.lang.String)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void setupSetter(java.lang.Class)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_dialog_cap_status: void <init>(long,boolean)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void onDestroy()>
<org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int: void <init>(long,boolean)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onDestroy()>
<com.csipsimple.ui.account.AccountsEditListFragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>
<org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int)>
<com.csipsimple.wizards.impl.Keyyo: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.models.Filter: void <init>()>
<com.csipsimple.widgets.AccountChooserButton: void <init>(android.content.Context)>
<org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.pj_str_t getPassword()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher getCiphers()>
<com.csipsimple.ui.help.Legal$1: void <init>(com.csipsimple.ui.help.Legal)>
<com.actionbarsherlock.app.SherlockListFragment: void onAttach(android.app.Activity)>
<com.csipsimple.utils.CallLogHelper: void <init>()>
<com.csipsimple.service.MediaManager: com.csipsimple.api.MediaState getMediaState()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setIntValues(int[])>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void: void <init>(long,boolean)>
<com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable: void run()>
<org.pjsip.pjsua.pjsip_inv_state$SwigNext: void <init>()>
<com.csipsimple.api.SipMessage: void <init>(android.database.Cursor)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: java.lang.Object clone()>
<org.pjsip.pjsua.pjsip_redirect_op$SwigNext: void <init>()>
<com.csipsimple.wizards.impl.Mobile4U: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.DeltaThree: void <init>()>
<org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void: void <init>()>
<com.csipsimple.ui.calllog.CallLogDetailsFragment: void configureCallButton(java.lang.String,java.lang.CharSequence,java.lang.CharSequence)>
<com.actionbarsherlock.app.SherlockListActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.csipsimple.R$integer: void <init>()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int)>
<com.csipsimple.wizards.impl.OnSip: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int,int)>
<com.csipsimple.wizards.impl.Betamax: void updateAccountInfos(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.messages.MessageActivity: void onStart()>
<org.pjsip.pjsua.pjsua_call_media_info: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type getType()>
<org.pjsip.pjsua.pj_qos_type: org.pjsip.pjsua.pj_qos_type swigToEnum(int)>
<com.csipsimple.ui.incall.AccelerometerListener$1: void <init>(com.csipsimple.ui.incall.AccelerometerListener)>
<com.csipsimple.ui.calllog.CallLogDetailsFragment: void <init>()>
<com.csipsimple.wizards.impl.AlternateServerImplementation: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.utils.PreferencesProviderWrapper: int getTLSMethod()>
<com.csipsimple.ui.calllog.PhoneCallDetailsViews: void <init>(android.widget.TextView,android.view.View,com.csipsimple.ui.calllog.CallTypeIconsView,android.widget.TextView,android.widget.TextView)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void onTitleChanged(java.lang.CharSequence,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void access$6(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_state(org.pjsip.pjsua.Callback,int,long)>
<com.csipsimple.BuildConfig: void <init>()>
<com.csipsimple.wizards.impl.MagicJack: void <init>()>
<com.csipsimple.ui.prefs.GenericPrefs: void setPasswordFieldSummary(java.lang.String)>
<com.csipsimple.utils.DialingFeedback$ThreadedTonePlay: void <init>(com.csipsimple.utils.DialingFeedback,int)>
<com.csipsimple.wizards.impl.Nymgo: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.wizards.impl.Ajtel: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pj_stun_resolve_result: org.pjsip.pjsua.pj_str_t getName()>
<org.pjsip.pjsua.pjsua_vid_preview_param: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index getRend_id()>
<com.csipsimple.utils.MD5: void <init>()>
<com.actionbarsherlock.app.SherlockListActivity: void setSupportProgressBarIndeterminate(boolean)>
<com.csipsimple.service.SipService$1$25: java.lang.Object runWithReturn()>
<com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener: void <init>(android.content.Context,java.lang.String)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context)>
<com.csipsimple.wizards.impl.Mondotalk: void updateAccountInfos(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.account.AccountsEditListFragment: com.csipsimple.api.SipProfile profileFromContextMenuInfo(android.view.ContextMenu$ContextMenuInfo)>
<com.csipsimple.service.SipService$1$15: void doRun()>
<com.csipsimple.utils.contacts.ContactsWrapper: java.lang.String formatNumber(java.lang.String,java.lang.String)>
<com.csipsimple.api.SipCallSession: void <init>(android.os.Parcel,com.csipsimple.api.SipCallSession)>
<com.csipsimple.ui.dialpad.DialerFragment$3: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToTab(int)>
<com.csipsimple.utils.PreferencesWrapper: boolean hasStunServer(java.lang.String)>
<com.actionbarsherlock.app.SherlockListActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<com.csipsimple.widgets.SlidingTab: void setLeftTabDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.csipsimple.ui.messages.ConversationsListFragment$3: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.ui.account.AccountsEditListFragment: void onToggleRow(com.csipsimple.ui.account.AccountsEditListAdapter$AccountRowTag)>
<org.webrtc.videoengine.ViERenderer: android.view.SurfaceView CreateRenderer(android.content.Context,boolean)>
<com.csipsimple.ui.filters.AccountFiltersListFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<org.pjsip.pjsua.csipsimple_acc_config: void <init>()>
<com.actionbarsherlock.widget.ActivityChooserModel: void setIntent(android.content.Intent)>
<org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pj_str_t getStun_domain()>
<org.pjsip.pjsua.pjmedia_tone_digit: org.pjsip.pjsua.pjmedia_tone_digit[] cArrayWrap(long[],boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type: void <init>(long,boolean)>
<com.actionbarsherlock.Manifest: void <init>()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey: boolean get(android.content.Context)>
<com.csipsimple.wizards.impl.Mondotalk$1: void <init>(com.csipsimple.wizards.impl.Mondotalk)>
<com.csipsimple.pjsip.PjSipAccount: boolean equals(java.lang.Object)>
<com.csipsimple.utils.ArrayUtils: void <init>()>
<com.csipsimple.service.SipService$1$20: void <init>(com.csipsimple.service.SipService$1,int)>
<org.webrtc.videoengine.ViEAndroidGLES20: void access$1(java.lang.String,javax.microedition.khronos.egl.EGL10)>
<com.csipsimple.wizards.impl.Blicnet: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int,int)>
<org.pjsip.pjsua.pjsip_redirect_op: org.pjsip.pjsua.pjsip_redirect_op swigToEnum(int)>
<com.csipsimple.service.receiver.DynamicReceiver4$2$1: void doRun()>
<com.csipsimple.ui.incall.InCallInfoGrid$1: void <init>(com.csipsimple.ui.incall.InCallInfoGrid)>
<com.csipsimple.wizards.impl.Cotas: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.ZengCn: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.app.SherlockActivity: void onPanelClosed(int,android.view.Menu)>
<com.csipsimple.service.SipService$1$8: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int)>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getState_text()>
<com.actionbarsherlock.internal.widget.AbsActionBarView: void postShowOverflowMenu()>
<org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int)>
<com.csipsimple.service.PresenceManager$AccountStatusContentObserver: void onChange(boolean)>
<com.csipsimple.utils.Compatibility: int getDefaultAudioImplementation()>
<com.actionbarsherlock.internal.view.menu.SubMenuWrapper: void <init>(android.view.SubMenu)>
<com.csipsimple.ui.favorites.FavAdapter: void access$2(com.csipsimple.ui.favorites.FavAdapter,android.content.Context,java.lang.Long,java.lang.String,java.lang.String)>
<org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pj_str_t getBound_addr()>
<com.csipsimple.utils.CollectLogs: java.lang.String getApplicationInfo(android.content.Context)>
<com.csipsimple.service.SipService$1: void forceStopService()>
<com.csipsimple.ui.incall.DtmfDialogFragment$1: void <init>(com.csipsimple.ui.incall.DtmfDialogFragment)>
<com.csipsimple.wizards.impl.Telsome: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.R$attr: void <init>()>
<com.csipsimple.utils.Compatibility: int getInCallStream()>
<com.csipsimple.widgets.RegistrationNotification: void addAccountInfos(android.content.Context,java.util.ArrayList)>
<com.csipsimple.utils.PreferencesWrapper: java.io.File getStorageFolder(android.content.Context,boolean)>
<com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String,java.lang.Boolean)>
<com.csipsimple.ui.filters.AccountFiltersListFragment$1: void <init>(com.csipsimple.ui.filters.AccountFiltersListFragment)>
<com.csipsimple.ui.favorites.FavListFragment: void attachAdapter()>
<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<org.pjsip.pjsua.pj_stun_nat_detect_result: void <init>(long,boolean)>
<com.csipsimple.ui.warnings.WarningUtils: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setupSetter(java.lang.Class)>
<com.csipsimple.ui.prefs.PrefsFast$Profile: void <init>(java.lang.String,int)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getContact_uri_params()>
<com.actionbarsherlock.internal.widget.ActionBarView: void setNavigationMode(int)>
<com.csipsimple.Manifest: void <init>()>
<org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int,int)>
<org.pjsip.pjsua.pjsua_vid_preview_param: void <init>()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void setSupportTranslationY(float)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void getOn_incoming_subscribe()>
<com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: void <init>(com.csipsimple.ui.calllog.CallLogListFragment,com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void setTarget(java.lang.Object)>
<org.pjsip.pjsua.pjsua_ice_config: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.AccountBalanceHelper$1: void <init>(com.csipsimple.wizards.impl.AccountBalanceHelper,com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier: void <init>(com.actionbarsherlock.internal.widget.IcsAdapterView,com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void getOn_buddy_evsub_state()>
<org.pjsip.pjsua.pjsua_create_media_transport_flag$SwigNext: void <init>()>
<org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int)>
<com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)>
<com.actionbarsherlock.internal.widget.IcsSpinner: void onLayout(boolean,int,int,int,int)>
<com.csipsimple.models.Filter: boolean isCallableNumber(android.content.Context,long,java.lang.String)>
<com.csipsimple.wizards.impl.Local: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.MultifonRu: java.lang.String getDefaultFieldSummary(java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_pjrpid_element_type: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_codec_param: void <init>()>
<com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<com.csipsimple.wizards.impl.VoipLlama: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.service.PresenceManager: void startMonitoring(com.csipsimple.service.SipService)>
<com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String)>
<com.csipsimple.ui.messages.MessageFragment$1: void <init>(com.csipsimple.ui.messages.MessageFragment)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.internal.widget.IcsProgressBar getHorizontalProgressBar(boolean)>
<com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setCallCountAndDate(com.csipsimple.ui.calllog.PhoneCallDetailsViews,java.lang.Integer,java.lang.CharSequence)>
<com.csipsimple.wizards.impl.FringTalkTw: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.ui.incall.InCallCard$1: void <init>(com.csipsimple.ui.incall.InCallCard)>
<com.csipsimple.ui.SipHome: void onAttachFragment(android.support.v4.app.Fragment)>
<com.csipsimple.service.SipService$1: void setPresence(int,java.lang.String,long)>
<com.csipsimple.utils.MD5: java.lang.String MD5Hash(java.lang.String)>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForOutgoing()>
<com.csipsimple.service.SipService$ToCall: void <init>(java.lang.Integer,java.lang.String)>
<com.csipsimple.service.MediaManager: void setSoftwareVolume()>
<org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: void <init>()>
<org.pjsip.pjsua.pjsua_transport_info: org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port getLocal_name()>
<org.pjsip.pjsua.Callback: void on_pager2(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
<org.pjsip.pjsua.pjsip_cred_info: org.pjsip.pjsua.pj_str_t getRealm()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start()>
<com.csipsimple.service.MediaManager$1: void <init>(com.csipsimple.service.MediaManager,float,float,boolean)>
<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void initIndexes(android.database.Cursor)>
<org.pjsip.pjsua.Callback: void on_typing(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,int)>
<com.csipsimple.widgets.DragnDropListView: boolean onTouchEvent(android.view.MotionEvent)>
<com.csipsimple.ui.filters.EditFilter$1: void <init>(com.csipsimple.ui.filters.EditFilter)>
<com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.service.SipNotifications: void searchNotificationPrimaryText(android.content.Context)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void onConfigurationChanged(android.content.res.Configuration)>
<com.csipsimple.wizards.impl.OXO810: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.AccountCreationWebview$JSInterface: void <init>(com.csipsimple.wizards.impl.AccountCreationWebview)>
<com.csipsimple.service.SipService$1$7: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.Object clone()>
<com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)>
<com.csipsimple.wizards.impl.SipMe: boolean canSave()>
<com.actionbarsherlock.internal.widget.IcsSpinner: void <init>(android.content.Context,android.util.AttributeSet)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void: void <init>()>
<com.actionbarsherlock.app.SherlockFragmentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void: void <init>()>
<com.csipsimple.utils.PreferencesProviderWrapper: float getPreferenceFloatValue(java.lang.String,float)>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser$1: void <init>(com.csipsimple.ui.outgoingcall.OutgoingCallChooser)>
<com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type: void <init>()>
<com.csipsimple.pjsip.PjSipService: org.pjsip.pjsua.pj_str_t[] getNameservers()>
<com.csipsimple.wizards.impl.Catitel: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t call_secure_info(int)>
<org.pjsip.pjsua.pjrpid_element: void <init>(long,boolean)>
<org.pjsip.pjsua.Callback: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup: void show()>
<com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long,java.lang.CharSequence,int,java.lang.CharSequence,android.net.Uri,android.net.Uri)>
<com.csipsimple.service.SipService$StartRunnable: void <init>(com.csipsimple.service.SipService)>
<com.csipsimple.ui.favorites.PresenceStatusSpinner: void onAttachedToWindow()>
<com.actionbarsherlock.R$styleable: void <init>()>
<com.csipsimple.utils.Compatibility: boolean needSGSWorkaround()>
<com.csipsimple.service.SipService: void onDestroy()>
<com.csipsimple.pjsip.UAStateReceiver$5: void <init>(com.csipsimple.pjsip.UAStateReceiver,int)>
<com.csipsimple.utils.Base64$OutputStream: void write(int)>
<org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_status_code)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>
<com.actionbarsherlock.internal.view.menu.MenuItemImpl: void <init>(com.actionbarsherlock.internal.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int)>
<com.csipsimple.wizards.impl.SimpleImplementation$1: void <init>()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: android.view.ViewGroup generateLayout()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchCloseOptionsMenu()>
<org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void <init>(int,int,int,int,int,int)>
<org.pjsip.pjsua.pjsua_msg_data: org.pjsip.pjsua.pj_str_t getMsg_body()>
<com.csipsimple.wizards.impl.Zeng: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.service.SipService$1$23: void <init>(com.csipsimple.service.SipService$1,int,java.lang.String,long)>
<org.pjsip.pjsua.pjsua_call_media_status: org.pjsip.pjsua.pjsua_call_media_status swigToEnum(int)>
<com.csipsimple.wizards.WizardUtils: int getWizardIconRes(java.lang.String)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem add(int,int,int,int)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onPostResume()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e: void <init>(long,boolean)>
<com.csipsimple.ui.incall.InCallCard$ContactLoadedHandler: void handleMessage(android.os.Message)>
<com.csipsimple.pjsip.PjSipService: int sendDtmf(int,int)>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void setSupportAlpha(float)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void end()>
<com.csipsimple.ui.calllog.CallLogAdapter: void findAndCacheViews(android.view.View)>
<com.csipsimple.wizards.impl.LiberTalk: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onTitleChanged(java.lang.CharSequence,int)>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean forceDtmfInBand()>
<com.csipsimple.service.SipService$1$9: java.lang.Object runWithReturn()>
<com.csipsimple.utils.Compatibility: boolean needToneWorkaround()>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void AddDeviceSpecificCapability(org.webrtc.videoengine.CaptureCapabilityAndroid)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void getOn_call_rx_offer()>
<com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.Long,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)>
<com.csipsimple.utils.PreferencesProviderWrapper: int getLogLevel()>
<com.csipsimple.api.SipProfileState$1: java.lang.Object createFromParcel(android.os.Parcel)>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidWifiConnectionFor(android.net.NetworkInfo,java.lang.String)>
<com.csipsimple.ui.prefs.CodecsFragment: boolean onContextItemSelected(android.view.MenuItem)>
<org.pjsip.pjsua.pj_stun_nat_detect_result: org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type getNat_type()>
<com.csipsimple.wizards.impl.Scarlet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.favorites.FavLoader: void onCanceled(android.database.Cursor)>
<com.csipsimple.ui.messages.MessageFragment: void sendMessage()>
<com.csipsimple.wizards.BasePrefsWizard: void onPause()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<org.pjsip.pjsua.Callback: void on_pager_status2(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
<com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString()>
<com.csipsimple.wizards.impl.VoipTel$1: void <init>(com.csipsimple.wizards.impl.VoipTel)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param: void <init>()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void incrementSecondaryProgressBy(int)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void setContentView(android.view.View)>
<com.csipsimple.wizards.impl.Voocall: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.account.AccountsEditListAdapter$AccountListItemViews: void <init>()>
<com.csipsimple.pjsip.PjSipService: int makeCall(java.lang.String,int,android.os.Bundle)>
<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>
<org.webrtc.videoengine.camera.CameraUtilsWrapper: org.webrtc.videoengine.camera.CameraUtilsWrapper getInstance()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state: void <init>()>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager_status(org.pjsip.pjsua.Callback,int,long,long,int,long)>
<com.csipsimple.models.Filter: int getPositionForAction(java.lang.Integer)>
<com.csipsimple.pjsip.PjSipService: java.io.File getRecordFile(java.lang.String)>
<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>
<org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int)>
<com.csipsimple.service.Downloader$1: void <init>(com.csipsimple.service.Downloader,android.app.Notification)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: java.lang.Object getValue()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
<com.csipsimple.service.SipService$1: void reAddAllAccounts()>
<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,android.content.pm.ResolveInfo)>
<com.csipsimple.service.SipService$1: int reinvite(int,boolean)>
<com.csipsimple.api.SipManager: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config: void <init>(long,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: void <init>(android.view.Menu)>
<com.csipsimple.ui.dialpad.DialerFragment$5: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
<org.pjsip.pjsua.pjsip_cred_info: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.Ippi: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void jumpDrawablesToCurrentState()>
<com.csipsimple.utils.Threading: void <init>()>
<com.csipsimple.wizards.impl.OXO810: java.lang.String getDomain()>
<com.csipsimple.wizards.impl.Speakezi: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.ui.filters.AccountFiltersListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence)>
<com.csipsimple.service.SipService$1: void updateCallOptions(int,android.os.Bundle)>
<org.pjsip.pjsua.SWIGTYPE_p_unsigned_int: void <init>()>
<com.actionbarsherlock.app.SherlockActivity: void openOptionsMenu()>
<com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(android.view.View)>
<com.csipsimple.service.SipService$RestartRunnable: void <init>(com.csipsimple.service.SipService)>
<com.csipsimple.wizards.impl.VoipBel: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>
<com.csipsimple.utils.Columns: void j2cvInt(org.json.JSONObject,android.content.ContentValues,java.lang.String)>
<com.csipsimple.wizards.impl.Odorik: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.pjsip.UAStateReceiver$5: void doRun()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()>
<com.csipsimple.ui.dialpad.DialerFragment: void placeCall()>
<com.csipsimple.wizards.impl.DeltaThree: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addSubMenu(int)>
<com.csipsimple.utils.Base64: byte[] decode(byte[],int,int,int)>
<com.csipsimple.ui.prefs.PrefsLogic: void <init>()>
<dummyMainClass: com.csipsimple.ui.prefs.hc.PrefsLoaderFragment dummyMainMethod_com_csipsimple_ui_prefs_hc_PrefsLoaderFragment(android.content.Intent,android.app.Activity)>
<org.pjsip.pjsua.pjsua_100rel_use: org.pjsip.pjsua.pjsua_100rel_use swigToEnum(int)>
<com.csipsimple.utils.contacts.ContactsUtils3: com.csipsimple.utils.contacts.ContactsWrapper$ContactInfo getContactInfo(android.content.Context,android.database.Cursor)>
<org.pjsip.pjsua.pjsip_event: void <init>(long,boolean)>
<com.csipsimple.ui.calllog.CallLogListItemHelper: void <init>(com.csipsimple.ui.calllog.PhoneCallDetailsHelper,android.content.Context)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state: void <init>(long,boolean)>
<com.csipsimple.ui.incall.InCallAnswerControls: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.service.SipService$1$7: java.lang.Object runWithReturn()>
<com.csipsimple.wizards.impl.Balses: java.lang.String getDefaultFieldSummary(java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int: void <init>(long,boolean)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void setOnClickListener(android.view.View$OnClickListener)>
<com.csipsimple.wizards.impl.Ovh: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Mobex: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setSupportTranslationX(float)>
<com.actionbarsherlock.app.SherlockActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<com.actionbarsherlock.widget.ActivityChooserView: void showPopupUnchecked(int)>
<com.csipsimple.service.SipService$1: void setMicrophoneMute(boolean)>
<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getTurnServer()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.csipsimple.pjsip.UAStateReceiver: void <init>()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void setSupportProgressBarIndeterminateVisibility(boolean)>
<org.pjsip.pjsua.pjmedia_dir: org.pjsip.pjsua.pjmedia_dir swigToEnum(int)>
<com.csipsimple.wizards.impl.BGTel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.wizards.impl.Mondotalk: void onActivityResult(int,int,android.content.Intent)>
<org.pjsip.pjsua.pjsua_config: void <init>(long,boolean)>
<com.csipsimple.utils.SipProfileJson: void <init>()>
<com.csipsimple.utils.Ringer: android.media.Ringtone getRingtone(java.lang.String,java.lang.String)>
<com.csipsimple.wizards.impl.VoipNor: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjmedia_srtp_use getUse_srtp()>
<com.csipsimple.api.SipCallSession: void <init>(android.os.Parcel)>
<org.pjsip.pjsua.pjsua_buddy_status$SwigNext: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type: void <init>()>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void setContentView(android.view.View)>
<com.csipsimple.wizards.impl.CongstarQSC: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void onConfigurationChanged(android.content.res.Configuration)>
<com.csipsimple.wizards.impl.Ip2Mobile: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.help.Help$1: void <init>(com.csipsimple.ui.help.Help)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,int[])>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void onPostResume()>
<org.pjsip.pjsua.pjsua_destroy_flag: org.pjsip.pjsua.pjsua_destroy_flag swigToEnum(int)>
<com.csipsimple.ui.filters.AccountFiltersListFragment$3: void <init>(com.csipsimple.ui.filters.AccountFiltersListFragment)>
<com.actionbarsherlock.app.SherlockActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfileState getProfileState(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.keyguard.KeyguardWrapper: void <init>()>
<org.pjsip.pjsua.pjsua_buddy_config: void <init>(long,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onGlobalLayout()>
<com.csipsimple.ui.account.AccountsLoader: void onCanceled(java.lang.Object)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey: void <init>()>
<com.csipsimple.ui.favorites.FavAdapter: void onClick(android.view.View)>
<com.csipsimple.wizards.impl.VoipTel: boolean saveAndQuit()>
<com.csipsimple.utils.Compatibility: java.lang.String guessInCallMode()>
<com.csipsimple.wizards.impl.Sipgate: void <init>()>
<org.pjsip.pjsua.pjsuaJNI: int SwigDirector_Callback_on_set_micro_source(org.pjsip.pjsua.Callback)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void onPostResume()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.csipsimple.ui.incall.DtmfDialogFragment: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.csipsimple.wizards.impl.AbcVoip: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void: void <init>()>
<com.actionbarsherlock.R$array: void <init>()>
<com.actionbarsherlock.internal.widget.AbsActionBarView: void <init>(android.content.Context)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_transport_config getRtp_cfg()>
<com.csipsimple.ui.calllog.CallLogDetailsFragment: void onResume()>
<com.csipsimple.wizards.impl.Flowroute: void <init>()>
<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>
<com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs: void <init>(com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void <init>(long,boolean)>
<com.csipsimple.api.MediaState: void <init>(android.os.Parcel)>
<com.csipsimple.utils.Base64: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void setIntValues(int[])>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void initActionBar()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd: void <init>()>
<com.csipsimple.wizards.impl.Fayn: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.actionbarsherlock.app.ActionBar$Tab: void <init>()>
<com.csipsimple.wizards.impl.Tecobu: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>
<org.pjsip.pjsua.pjsua_conf_port_info: void <init>(long,boolean)>
<com.csipsimple.service.SipNotifications: void stopForegroundCompat(int)>
<com.csipsimple.wizards.impl.MondotalkCreate: boolean access$12(com.csipsimple.wizards.impl.MondotalkCreate,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void: void <init>(long,boolean)>
<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>
<com.csipsimple.ui.account.AccountsEditListFragment$2: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_transfer_status(org.pjsip.pjsua.Callback,int,int,long,int,long)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void: void <init>()>
<com.csipsimple.ui.prefs.CodecsFragment$1: void <init>(com.csipsimple.ui.prefs.CodecsFragment)>
<org.webrtc.videoengine.VideoCaptureAndroid: int tryStartCapture(int,int,int)>
<com.csipsimple.api.SipConfigManager: java.lang.Integer getPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void loadStaticMethods()>
<com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClass(java.lang.String)>
<com.csipsimple.api.SipUri$ParsedSipContactInfos: java.lang.String toString(boolean)>
<com.csipsimple.wizards.impl.Zadarma: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.Theme: void applyBackgroundDrawable(android.view.View,java.lang.String)>
<org.pjsip.pjsua.pjsua_transport_info: org.pjsip.pjsua.pjsip_transport_type_e getType()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<com.csipsimple.service.SipNotifications: void <clinit>()>
<org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.pj_str_t getCa_list_file()>
<com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition: void <init>(java.lang.String,int)>
<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setPreferenceScreenType(java.lang.String,int)>
<com.csipsimple.service.SipService$1$21: void <init>(com.csipsimple.service.SipService$1,int)>
<org.pjsip.pjsua.pjsua_transport_info: org.pjsip.pjsua.pj_str_t getInfo()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: void <init>(float,java.lang.Object)>
<org.pjsip.pjsua.pjsua_state: void <clinit>()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat: void <init>(long,boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.Ekiga: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_resolve_result__void: void <init>()>
<com.csipsimple.service.SipService$FinalizeDestroyRunnable: void <init>(com.csipsimple.service.SipService)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void setSupportProgress(int)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void: void <init>()>
<com.csipsimple.service.SipService$SyncStopRunnable: void <init>(com.csipsimple.service.SipService)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onMenuOpened(int,android.view.Menu)>
<com.csipsimple.utils.ContactsAsyncHelper$WorkerArgs: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getReg_uri()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,android.view.View)>
<com.csipsimple.wizards.impl.AuthorizationImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View)>
<com.csipsimple.ui.messages.ConversationsListFragment$3: void <init>(com.csipsimple.ui.messages.ConversationsListFragment)>
<com.csipsimple.ui.favorites.FavAdapter$ConfigureObj: void <init>(com.csipsimple.ui.favorites.FavAdapter)>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: int measureContentWidth()>
<com.csipsimple.ui.incall.InCallActivity$ShowZRTPInfoRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,int,java.lang.String)>
<com.csipsimple.widgets.contactbadge.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.pjsip.pjsua.pj_qos_type$SwigNext: void <init>()>
<com.csipsimple.utils.CallHandlerPlugin: void fillWith(java.lang.String,android.os.Bundle)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.csipsimple.ui.PickupSipUri: void onCreate(android.os.Bundle)>
<com.csipsimple.wizards.impl.Sipgate$AccountBalance: java.lang.String parseResponseLine(java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_endpoint: void <init>()>
<com.csipsimple.utils.Base64: byte[] decodeFromFile(java.lang.String)>
<com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[],int)>
<com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[],int,int)>
<com.csipsimple.service.SipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)>
<org.pjsip.pjsua.pjsua_call_media_info: void <init>(long,boolean)>
<com.csipsimple.service.SipService$SyncRestartRunnable: void <init>(com.csipsimple.service.SipService)>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getLocal_info()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref: void <init>(long,boolean)>
<com.csipsimple.utils.PreferencesWrapper: java.lang.Class gPrefClass(java.lang.String)>
<com.csipsimple.service.SipService$1$11: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr: void <init>()>
<com.csipsimple.utils.bluetooth.BluetoothWrapper: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: void <init>(float)>
<com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void <init>(com.actionbarsherlock.widget.ActivityChooserModel)>
<org.pjsip.pjsua.pjsip_event_id_e: org.pjsip.pjsua.pjsip_event_id_e swigToEnum(int)>
<com.csipsimple.utils.AccountListUtils$AccountStatusDisplay: void <init>()>
<com.csipsimple.ui.prefs.AudioTester: void onResume()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void: void <init>()>
<com.actionbarsherlock.widget.ActivityChooserModel: boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord)>
<com.actionbarsherlock.app.SherlockActivity: void setSupportProgressBarIndeterminate(boolean)>
<com.csipsimple.service.SipService$1$19: void <init>(com.csipsimple.service.SipService$1,boolean)>
<com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: void <init>(com.csipsimple.utils.NightlyUpdater,android.content.Context,int)>
<org.pjsip.pjsua.pjsua_msg_data: org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type getMultipart_ctype()>
<com.csipsimple.ui.filters.AccountFiltersListFragment: void onActivityCreated(android.os.Bundle)>
<com.csipsimple.wizards.BasePrefsWizard: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pj_str_t[] getNameserver()>
<com.csipsimple.widgets.RegistrationNotification: void <clinit>()>
<com.csipsimple.ui.calllog.CallLogDetailsFragment: void <clinit>()>
<org.pjsip.pjsua.pj_time_val: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.BaseImplementation: void setStringFieldSummary(java.lang.String)>
<com.csipsimple.utils.contacts.ContactsUtils5: java.lang.CharSequence transformToSipUri(android.content.Context,android.database.Cursor)>
<org.pjsip.pjsua.pjsua_mwi_info: void <init>()>
<com.csipsimple.wizards.impl.Mobex$AccountBalance: org.apache.http.client.methods.HttpRequestBase getRequest(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void setSupportProgress(int)>
<com.csipsimple.service.MediaManager: void playInCallTone(int)>
<com.csipsimple.wizards.impl.Betamax$2: void <init>()>
<com.actionbarsherlock.internal.widget.ActionBarView$2: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)>
<org.pjsip.pjsua.pjsua_sip_timer_use$SwigNext: void <init>()>
<com.csipsimple.wizards.impl.Sipgate: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.models.Filter: void resetCache()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgress(int,boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void: void <init>()>
<com.csipsimple.wizards.impl.VoipLlama: void <init>()>
<com.csipsimple.wizards.impl.Fritzbox: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int)>
<com.csipsimple.wizards.impl.Betamax$AccountBalance: java.lang.String parseResponseLine(java.lang.String)>
<com.csipsimple.ui.calllog.CallLogAdapter$2: void <init>(com.csipsimple.ui.calllog.CallLogAdapter)>
<org.webrtc.videoengine.camera.CameraUtils9: void <init>()>
<com.csipsimple.ui.filters.AccountFiltersListFragment$2: void <init>(com.csipsimple.ui.filters.AccountFiltersListFragment,com.csipsimple.widgets.DragnDropListView)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View)>
<com.csipsimple.service.SipService: void <init>()>
<com.csipsimple.api.SipCallSession$1: void <init>()>
<com.csipsimple.service.SipService: void access$1(com.csipsimple.service.SipService,boolean)>
<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void <init>(android.content.Context,android.util.AttributeSet)>
<org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory[] getExtra_vid_codecs_destroy()>
<org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.pj_str_t getCert_file()>
<com.csipsimple.utils.contacts.ContactsWrapper$1: void <init>(com.csipsimple.utils.contacts.ContactsWrapper,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected,android.widget.ArrayAdapter)>
<com.csipsimple.api.SipProfileState$2: void <init>()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void setSupportProgressBarIndeterminate(boolean)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider)>
<org.pjsip.pjsua.pjmedia_srtp_use$SwigNext: void <init>()>
<com.csipsimple.ui.account.AccountsEditListFragment$1: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)>
<org.pjsip.pjsua.pjsua_stream_stat: void <init>()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int__int getOn_snd_dev_operation()>
<com.csipsimple.ui.calllog.PhoneCallDetails: void <init>(java.lang.CharSequence,java.lang.CharSequence,int[],long,long,java.lang.Long,int,java.lang.String,java.lang.CharSequence,int,java.lang.CharSequence,android.net.Uri,android.net.Uri)>
<com.actionbarsherlock.R$xml: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()>
<com.csipsimple.R$xml: void <init>()>
<org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pj_str_t getStatus_text()>
<com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void loadStaticMethods()>
<com.csipsimple.utils.PreferencesProviderWrapper: int getRTPPort()>
<com.csipsimple.ui.incall.CallProximityManager: boolean shouldUseTimeoutOverlay()>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.wizards.impl.Blicnet: boolean canSave()>
<com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet)>
<org.pjsip.pjsua.pj_pool_t: org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block getBlock_list()>
<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)>
<com.csipsimple.ui.messages.MessageFragment: void onActivityResult(int,int,android.content.Intent)>
<com.csipsimple.ui.dialpad.DialerFragment$6: void onClick(android.content.DialogInterface,int)>
<org.pjsip.pjsua.pjsua_stream_info: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type getType()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void closeOptionsMenu()>
<org.pjsip.pjsua.pjrpid_activity: void <clinit>()>
<org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_100rel_use)>
<com.csipsimple.R$dimen: void <init>()>
<com.csipsimple.wizards.impl.OXO810: void <init>()>
<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession access$12(com.csipsimple.pjsip.UAStateReceiver,java.lang.Integer,org.pjsip.pjsua.pjsip_event)>
<com.csipsimple.wizards.impl.OnSip$1: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int: void <init>()>
<com.csipsimple.ui.incall.InCallCard$2: void <init>(com.csipsimple.ui.incall.InCallCard)>
<com.csipsimple.wizards.impl.Sonetel: boolean canSave()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)>
<com.csipsimple.service.SipService$1$1: void <init>(com.csipsimple.service.SipService$1)>
<org.pjsip.pjsua.pjsua_sip_timer_use: org.pjsip.pjsua.pjsua_sip_timer_use swigToEnum(int)>
<com.actionbarsherlock.internal.widget.IcsSpinner: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>
<com.csipsimple.utils.PreferencesWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
<com.csipsimple.utils.Log: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: void setValue(java.lang.Object)>
<com.actionbarsherlock.app.SherlockListActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>
<org.pjsip.pjsua.Callback: void on_call_tsx_state(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction,org.pjsip.pjsua.pjsip_event)>
<com.csipsimple.service.SipService$1$16: void doRun()>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void onStop()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor)>
<com.csipsimple.wizards.impl.AuthorizationImplementation$1: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.csipsimple.wizards.impl.Betamax: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsua_med_tp_state_info__int: void <init>()>
<com.csipsimple.utils.contacts.ContactsUtils3: android.database.Cursor searchContact(android.content.Context,java.lang.CharSequence)>
<com.actionbarsherlock.R$color: void <init>()>
<com.csipsimple.utils.Compatibility: boolean shouldFocusAudio()>
<com.csipsimple.utils.keyguard.KeyguardWrapper: com.csipsimple.utils.keyguard.KeyguardWrapper getKeyguardManager(android.app.Activity)>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int)>
<com.csipsimple.service.SipService: void reAddAllAccounts()>
<org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pj_str_t getPublic_addr()>
<com.csipsimple.utils.contacts.ContactsUtils3: java.lang.CharSequence transformToSipUri(android.content.Context,android.database.Cursor)>
<com.csipsimple.wizards.impl.VoipLlama: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int,int)>
<org.webrtc.videoengine.CaptureCapabilityAndroid: void <init>()>
<com.csipsimple.wizards.impl.Keyyo: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void <init>(com.csipsimple.ui.prefs.cupcake.MainPrefs,java.lang.String,java.lang.String,int,android.content.Intent)>
<com.csipsimple.ui.calllog.CallTypeIconsView: void <init>(android.content.Context)>
<com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>
<com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender: void <init>(com.actionbarsherlock.internal.widget.IcsProgressBar)>
<org.pjsip.pjsua.pjsua_acc_info: org.pjsip.pjsua.pjsip_status_code getStatus()>
<org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data: void <init>(long,boolean)>
<com.csipsimple.widgets.ShortcutWidgetConfigure: void onCreate(android.os.Bundle)>
<com.actionbarsherlock.view.ActionProvider: void <init>(android.content.Context)>
<org.pjsip.pjsua.pjsua_vid_req_keyframe_method$SwigNext: void <init>()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener)>
<org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_turn_config_use)>
<com.csipsimple.ui.calllog.CallLogListFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.csipsimple.R$anim: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>
<com.csipsimple.service.Downloader$FileStreamResponseHandler: void <init>(com.csipsimple.service.Downloader,java.io.File,com.csipsimple.service.Downloader$Progress)>
<com.actionbarsherlock.R$integer: void <init>()>
<org.pjsip.pjsua.pjsua_turn_config: org.pjsip.pjsua.pj_str_t getTurn_server()>
<com.csipsimple.service.SipService$1: void makeCall(java.lang.String,int)>
<com.actionbarsherlock.internal.widget.ActionBarView: void onConfigurationChanged(android.content.res.Configuration)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr: void <init>(long,boolean)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.csipsimple.wizards.WizardUtils$WizardInfo: void <init>(java.lang.String,java.lang.String,int,int,java.util.Locale[],boolean,boolean,java.lang.Class)>
<com.csipsimple.utils.accessibility.AccessibilityWrapper: com.csipsimple.utils.accessibility.AccessibilityWrapper getInstance()>
<com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator: java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t[] getProxy()>
<com.csipsimple.wizards.impl.Gradwell: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.api.SipProfileState: void <init>()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op getOn_call_redirected()>
<com.csipsimple.wizards.impl.AuthorizationImplementation: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_media_config: org.pjsip.pjsua.pj_str_t getTurn_server()>
<com.csipsimple.pjsip.PjSipService: void silenceRinger()>
<org.pjsip.pjsua.pjmedia_srtp_use: void <clinit>()>
<org.pjsip.pjsua.pjsua_call_vid_strm_op_param: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index getCap_dev()>
<com.csipsimple.service.receiver.DynamicReceiver4$1: void <init>(com.csipsimple.service.receiver.DynamicReceiver4,android.content.Context,android.content.Intent)>
<org.pjsip.pjsua.Callback: void on_dtmf_digit(int,int)>
<com.csipsimple.pjsip.NativeLibManager: java.io.File getLibFileFromPackage(android.content.pm.ApplicationInfo,java.lang.String,boolean)>
<org.pjsip.pjsua.pjsua_stream_stat: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state getJbuf()>
<com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void afterBuildPrefs()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: void <init>(float,float)>
<com.csipsimple.utils.Theme: java.lang.Integer getDimension(java.lang.String)>
<com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.csipsimple.service.SipService: void unregisterForOutgoing(android.content.ComponentName)>
<com.csipsimple.wizards.impl.Keyyo: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.ui.calllog.CallLogAdapter: void setPhoto(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.models.CallerInfo)>
<com.csipsimple.utils.CallLogHelper: android.content.ContentValues logValuesForCall(android.content.Context,com.csipsimple.api.SipCallSession,long)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void getOn_pager2()>
<com.csipsimple.wizards.impl.Innotel: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()>
<com.csipsimple.wizards.impl.Haloo: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.api.SipUri$ParsedSipUriInfos: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part: void <init>()>
<com.csipsimple.wizards.impl.Broadsoft$1: void <init>()>
<dummyMainClass: com.csipsimple.service.PreferenceProvider dummyMainMethod_com_csipsimple_service_PreferenceProvider(android.content.Intent)>
<com.csipsimple.ui.messages.MessageFragment: void setupFrom(java.lang.String,java.lang.String)>
<com.csipsimple.service.MediaManager: void setAudioInCall()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchInvalidateOptionsMenu()>
<com.csipsimple.ui.dialpad.DialerFragment: void placeVideoCall()>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.utils.PreferencesProviderWrapper: java.io.File getRecordsFolder(android.content.Context)>
<org.pjsip.pjsua.SWIGTYPE_p_int: void <init>(long,boolean)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void setSupportProgressBarIndeterminate(boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int__void: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter: void <init>()>
<org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void setSupportTranslationX(float)>
<com.csipsimple.ui.calllog.CallLogListFragment$4: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<org.pjsip.pjsua.pjsua_media_transport: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport getTransport()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void requestWindowFeature(long)>
<com.actionbarsherlock.app.SherlockActivity: void requestWindowFeature(long)>
<com.csipsimple.ui.calllog.CallLogListFragment$1: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)>
<com.csipsimple.ui.calllog.CallLogListFragment$2$1: void <init>(com.csipsimple.ui.calllog.CallLogListFragment$2,int,long[])>
<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter)>
<com.csipsimple.ui.messages.ConversationsListFragment$5$1: void <init>(com.csipsimple.ui.messages.ConversationsListFragment$5,int,java.lang.String,java.lang.String)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void getOn_call_state()>
<com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1: void <init>(com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader)>
<org.pjsip.pjsua.SWIGTYPE_p_p_pjsip_tx_data: void <init>()>
<com.actionbarsherlock.R$drawable: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code: void <init>()>
<com.csipsimple.wizards.impl.Amivox: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.dialpad.DialerFragment$8: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
<com.csipsimple.utils.TimerWrapper: void destroy()>
<com.actionbarsherlock.app.SherlockActivity: void setSupportProgressBarVisibility(boolean)>
<com.csipsimple.ui.favorites.PresenceStatusSpinner$1: void <init>(com.csipsimple.ui.favorites.PresenceStatusSpinner)>
<com.csipsimple.service.SipService$1$2: void <init>(com.csipsimple.service.SipService$1)>
<com.actionbarsherlock.internal.utils.UtilityWrapper: java.lang.reflect.Method safelyGetSuperclassMethod(java.lang.Class,java.lang.String,java.lang.Class[])>
<org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int)>
<com.csipsimple.ui.prefs.CodecsFragment: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.csipsimple.models.Filter: int isAutoAnswerNumber(android.content.Context,long,java.lang.String)>
<com.csipsimple.wizards.impl.Phonzo: void <init>()>
<com.actionbarsherlock.internal.widget.IcsSpinner: void setAdapter(android.widget.SpinnerAdapter)>
<org.pjsip.pjsua.pjsua_stun_use: org.pjsip.pjsua.pjsua_stun_use swigToEnum(int)>
<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState: void <clinit>()>
<com.csipsimple.wizards.impl.FringTalkTw: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsip_redirect_op: void <clinit>()>
<com.csipsimple.utils.contacts.ContactsUtils3: void <init>()>
<com.csipsimple.models.Filter: void <clinit>()>
<com.csipsimple.widgets.ScreenLocker: void setVisibility(int)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onStop()>
<org.pjsip.pjsua.pjsua_call_vid_strm_op: org.pjsip.pjsua.pjsua_call_vid_strm_op swigToEnum(int)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void openOptionsMenu()>
<com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag: void <init>()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onMenuOpened(int,android.view.Menu)>
<com.csipsimple.widgets.DragnDropListView: void doExpansion()>
<com.actionbarsherlock.R$layout: void <init>()>
<org.pjsip.pjsua.pjsip_cred_info: org.pjsip.pjsua.pj_str_t getUsername()>
<com.csipsimple.widgets.SeekBarPreference: android.view.View onCreateDialogView()>
<com.csipsimple.wizards.impl.Ecs: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e: void <init>()>
<com.csipsimple.wizards.impl.AlternateServerImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjmedia_tone_digit: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.Mobex: boolean canSave()>
<com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: void <init>(android.content.ComponentName,long,float)>
<com.csipsimple.ui.account.AccountsEditListFragment$3: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener: void <init>(com.actionbarsherlock.internal.widget.ScrollingTabContainerView)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setFloatValues(float[])>
<org.pjsip.pjsua.SWIGTYPE_p_int: void <init>()>
<com.csipsimple.ui.prefs.Codecs$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class)>
<com.csipsimple.service.SipService$2: void setPreferenceString(java.lang.String,java.lang.String)>
<org.pjsip.pjsua.pjsua_media_config: void <init>()>
<com.csipsimple.widgets.AccountWidgetProvider: void updateWidget(android.content.Context)>
<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void onCreate(android.os.Bundle)>
<com.csipsimple.wizards.impl.MiTelefono: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.TOnline: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.actionbarsherlock.app.SherlockActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>
<org.webrtc.videoengine.ViESurfaceRenderer: void <init>(android.view.SurfaceView)>
<com.csipsimple.widgets.AccountChooserButton$2: void <init>(com.csipsimple.widgets.AccountChooserButton)>
<com.actionbarsherlock.widget.ActivityChooserView: boolean isShowingPopup()>
<com.csipsimple.wizards.impl.Balses: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.service.SipService$1$12: java.lang.Object runWithReturn()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref: void <init>()>
<com.actionbarsherlock.app.SherlockActivity: void setSupportProgressBarIndeterminateVisibility(boolean)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void reverse()>
<com.csipsimple.widgets.ShortcutWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>
<com.csipsimple.service.SipService$1: boolean canRecord(int)>
<com.csipsimple.ui.favorites.FavAdapter$3: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.database.Cursor,android.content.Context,java.lang.Long)>
<com.csipsimple.service.HeadsetButtonReceiver: void onReceive(android.content.Context,android.content.Intent)>
<org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.pj_str_t getPrivkey_file()>
<org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int,int)>
<org.pjsip.pjsua.Callback: void on_buddy_state(int)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper: void <init>(com.actionbarsherlock.internal.ActionBarSherlockCompat,com.actionbarsherlock.view.ActionMode$Callback)>
<org.pjsip.pjsua.pjsua_create_media_transport_flag: org.pjsip.pjsua.pjsua_create_media_transport_flag swigToEnum(int)>
<com.csipsimple.ui.warnings.WarningFragment: void bindView()>
<com.actionbarsherlock.internal.widget.CapitalizingButton: void setTextCompat(java.lang.CharSequence)>
<org.pjsip.pjsua.pjsua_vid_win_info: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd getHwnd()>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType: void <clinit>()>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(int)>
<com.csipsimple.api.SipConfigManager: void setPreferenceIntegerValue(android.content.Context,java.lang.String,java.lang.Integer)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void calculateValue(float)>
<com.csipsimple.ui.dialpad.DialerFragment: void onCreate(android.os.Bundle)>
<com.csipsimple.utils.SmileyParser$Smileys: void <init>()>
<com.csipsimple.service.PresenceManager$2: void <init>(com.csipsimple.service.PresenceManager,java.util.List)>
<com.actionbarsherlock.internal.ResourcesCompat: void <init>()>
<org.pjsip.pjsua.pjsip_cred_info: org.pjsip.pjsua.pj_str_t getData()>
<com.csipsimple.wizards.impl.Mobile4U: java.lang.String getDefaultFieldSummary(java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction: void <init>(long,boolean)>
<com.actionbarsherlock.view.MenuInflater$MenuState: void <init>(com.actionbarsherlock.view.MenuInflater,com.actionbarsherlock.view.Menu)>
<com.csipsimple.utils.RewriterPlugin: void <init>()>
<org.pjsip.pjsua.pjsua_call_info: void <init>(long,boolean)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(int,int,int,int)>
<com.csipsimple.utils.PreferencesProviderWrapper: long getMediaQuality()>
<com.csipsimple.ui.calllog.CallLogListFragment$2: void <init>(com.csipsimple.ui.calllog.CallLogListFragment,int)>
<org.pjsip.pjsua.Callback: void on_stream_created(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream,long,org.pjsip.pjsua.SWIGTYPE_p_p_pjmedia_port)>
<com.csipsimple.wizards.impl.Zadarma$1: void <init>(com.csipsimple.wizards.impl.Zadarma)>
<com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: float getFloatValue(float)>
<com.actionbarsherlock.app.SherlockListActivity: void requestWindowFeature(long)>
<com.csipsimple.ui.incall.CallProximityManager: void onSensorChanged(android.hardware.SensorEvent)>
<com.csipsimple.ui.prefs.GenericPrefs: void setStringFieldSummary(java.lang.String)>
<com.csipsimple.ui.account.AccountsEditListFragment$5: void <init>(com.csipsimple.ui.account.AccountsEditListFragment)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup: void onDismiss()>
<com.csipsimple.widgets.SlidingTab: void setRightTabDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.actionbarsherlock.app.SherlockListActivity: void setSupportSecondaryProgress(int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config: void <init>()>
<org.pjsip.pjsua.pj_str_t: org.pjsip.pjsua.pj_str_t[] cArrayWrap(long[],boolean)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void onDismiss()>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidOtherConnectionFor(android.net.NetworkInfo,java.lang.String)>
<com.csipsimple.ui.incall.InCallActivity$CallsAdapter: int getCount()>
<com.csipsimple.wizards.impl.Cotas: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder 'with'(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone()>
<org.pjsip.pjsua.pjsua_media_config: void <init>(long,boolean)>
<com.csipsimple.widgets.AccountChooserButton: void onAttachedToWindow()>
<com.csipsimple.pjsip.PjSipService: int addBuddy(java.lang.String)>
<com.actionbarsherlock.R$anim: void <init>()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void onVisibilityChanged(android.view.View,int)>
<com.csipsimple.ui.messages.MessageFragment: void onPause()>
<org.pjsip.pjsua.pjsua_codec_info: void <init>()>
<com.csipsimple.pjsip.UAStateReceiver: com.csipsimple.api.SipCallSession updateCallInfoFromStack(java.lang.Integer,org.pjsip.pjsua.pjsip_event)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet)>
<com.csipsimple.widgets.EditSipUri$1: void <init>(com.csipsimple.widgets.EditSipUri)>
<com.csipsimple.widgets.AccountChooserButton$1: void <init>(com.csipsimple.widgets.AccountChooserButton,com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.widget.ActionBarView$3: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)>
<com.csipsimple.utils.Compatibility: boolean shouldUseRoutingApi()>
<com.csipsimple.service.SipService: void setPrivateVideoWindow(int,java.lang.Object)>
<com.csipsimple.ui.prefs.GenericPrefs: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.ui.calllog.GroupingListAdapter: void <init>(android.content.Context)>
<com.csipsimple.ui.incall.DtmfDialogFragment: void onTrigger(int,int)>
<com.csipsimple.ui.calllog.CallLogListFragment: void fetchCalls()>
<com.csipsimple.utils.contacts.ContactsUtils5: void bindContactPhoneView(android.view.View,android.content.Context,android.database.Cursor)>
<com.csipsimple.utils.TimerWrapper: void onReceive(android.content.Context,android.content.Intent)>
<com.csipsimple.wizards.impl.OnSip: void <init>()>
<com.csipsimple.utils.contacts.ContactsUtils5: android.content.Intent getAddContactIntent(java.lang.String,java.lang.String)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_zrtp_show_sas(org.pjsip.pjsua.Callback,int,long,int)>
<org.pjsip.pjsua.pjsua_media_config: org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred getTurn_auth_cred()>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt getPublish_opt()>
<com.actionbarsherlock.app.ActionBar: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone()>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block: void <init>()>
<com.csipsimple.ui.favorites.FavAdapter$MenuCallback: void <init>(com.csipsimple.ui.favorites.FavAdapter,android.content.Context,java.lang.Long,java.lang.String,java.lang.String,boolean)>
<com.csipsimple.ui.favorites.FavLoader: android.database.Cursor createHeaderCursorFor(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Vitelity: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.incall.InCallActivity$CallsAdapter: long getItemId(int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port: void <init>(long,boolean)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void onMeasure(int,int)>
<org.pjsip.pjsua.pjsip_cred_info: org.pjsip.pjsua.pj_str_t getScheme()>
<com.csipsimple.wizards.impl.Ecs$1: void <init>()>
<org.pjsip.pjsua.pjsua: void <init>()>
<com.csipsimple.wizards.BasePrefsWizard: void beforeBuildPrefs()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session: void <init>()>
<com.csipsimple.service.Downloader$FileStreamResponseHandler: java.lang.Boolean handleResponse(org.apache.http.HttpResponse)>
<org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int: void <init>()>
<com.csipsimple.service.SipService$1$29: void doRun()>
<org.pjsip.pjsua.pjsua_turn_config: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int,int)>
<com.csipsimple.service.SipService$1$3: void doRun()>
<org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.pj_str_t getStorage_folder()>
<com.csipsimple.utils.PreferencesProviderWrapper: int getTLSTransportPort()>
<com.csipsimple.utils.audio.AudioFocus8: void init(com.csipsimple.service.SipService,android.media.AudioManager)>
<com.actionbarsherlock.app.SherlockListActivity: void onPanelClosed(int,android.view.Menu)>
<com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setCurrentTimeForTest(long)>
<com.csipsimple.ui.prefs.CodecsFragment$4: void <init>(com.csipsimple.ui.prefs.CodecsFragment,java.util.Map,short)>
<com.csipsimple.wizards.impl.Zadarma: boolean saveAndQuit()>
<com.csipsimple.api.SipProfile: android.content.ContentValues getDbContentValues()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size: void <init>(long,boolean)>
<com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: void <init>(com.actionbarsherlock.widget.ShareActionProvider,com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener)>
<com.csipsimple.utils.Columns$Type: void <clinit>()>
<com.csipsimple.wizards.impl.SipCel: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.dynamic_factory: org.pjsip.pjsua.pj_str_t getShared_lib_path()>
<org.pjsip.pjsua.pjmedia_tone_desc: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua_msg_data: org.pjsip.pjsua.pj_str_t getContent_type()>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void closeOptionsMenu()>
<com.csipsimple.ui.calllog.CallLogListFragment$2$1: void run()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void updateMenuView(boolean)>
<com.csipsimple.ui.filters.AccountFiltersListFragment$2: void drop(int,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class)>
<com.csipsimple.widgets.EditSipUri: com.csipsimple.api.SipProfile getSelectedAccount()>
<com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter: void <init>(android.widget.SpinnerAdapter)>
<com.csipsimple.wizards.impl.Ippi$1: void <init>(com.csipsimple.wizards.impl.Ippi)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat: void <init>()>
<com.csipsimple.service.PresenceManager$1: void doRun()>
<com.csipsimple.service.SipService$3: void <init>(com.csipsimple.service.SipService,int,java.lang.Object)>
<org.pjsip.pjsua.pj_str_t: void <init>(long,boolean)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: void initActionBar()>
<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void <init>(com.csipsimple.ui.outgoingcall.OutgoingCallListFragment,android.app.PendingIntent,long)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr: void <init>()>
<com.csipsimple.ui.calllog.CallDetailHistoryAdapter: java.lang.String formatDuration(long)>
<org.webrtc.videoengine.ViEAndroidGLES20: void <init>(android.content.Context)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void onPanelClosed(int,android.view.Menu)>
<org.pjsip.pjsua.pjsua_acc_info: void <init>()>
<org.pjsip.pjsua.pjmedia_port: void <init>(long,boolean)>
<com.csipsimple.pjsip.UAStateReceiver$3: void <init>(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)>
<com.csipsimple.service.SipWakeLock: void <init>(android.os.PowerManager)>
<com.csipsimple.service.SipService$1$23: void doRun()>
<org.pjsip.pjsua.Callback: void on_call_state(int,org.pjsip.pjsua.pjsip_event)>
<org.webrtc.videoengine.camera.CameraUtilsWrapper: void <init>()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void getOn_stream_destroyed()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback: void <init>()>
<com.csipsimple.ui.calllog.CallLogAdapter: void bindStandAloneView(int,android.view.View,android.content.Context,android.database.Cursor)>
<org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <init>(java.lang.String,int)>
<com.csipsimple.pjsip.PjSipCalls: void <init>()>
<com.csipsimple.api.SipMessage: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,int,java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_info: void <init>()>
<com.csipsimple.wizards.impl.Cellip: java.lang.String getDefaultFieldSummary(java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format: void <init>()>
<com.actionbarsherlock.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: void <init>()>
<com.actionbarsherlock.app.SherlockFragmentActivity: void setSupportProgressBarIndeterminateVisibility(boolean)>
<com.csipsimple.pjsip.NativeLibManager: void <init>()>
<org.pjsip.pjsua.pj_qos_params: org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio getWmm_prio()>
<com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable: void <init>(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean)>
<com.csipsimple.utils.contacts.ContactsWrapper: void <init>()>
<com.csipsimple.service.SipService$2: java.lang.String getPreferenceString(java.lang.String)>
<com.csipsimple.service.SipService$1$13: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,boolean)>
<com.csipsimple.ui.incall.InCallActivity: void applyTheme()>
<org.pjsip.pjsua.pjsua_turn_config_use$SwigNext: void <init>()>
<com.csipsimple.wizards.impl.Pfingo: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.ui.prefs.CodecsFragment$2: void <init>(com.csipsimple.ui.prefs.CodecsFragment)>
<com.csipsimple.ui.incall.InCallControls$1: void <init>(com.csipsimple.ui.incall.InCallControls,android.content.Context)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void openOptionsMenu()>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: void select()>
<com.csipsimple.widgets.ShortcutWidgetConfigure: int getActionForWidget(android.content.Context,int)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
<com.csipsimple.api.MediaState$1: com.csipsimple.api.MediaState createFromParcel(android.os.Parcel)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void setSupportProgressBarIndeterminateVisibility(boolean)>
<com.actionbarsherlock.app.SherlockActivity: void onDestroy()>
<org.pjsip.pjsua.pjsua_call_flag: void <clinit>()>
<org.pjsip.pjsua.pjsua_100rel_use: void <init>(java.lang.String,int)>
<com.csipsimple.utils.TimerWrapper$TimerJob: void <init>(com.csipsimple.utils.TimerWrapper,int)>
<com.csipsimple.service.SipService$1$20: void doRun()>
<com.csipsimple.utils.contacts.ContactsUtils3: void <clinit>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: void <init>(float,int)>
<com.csipsimple.pjsip.UAStateReceiver: void updateRecordingStatus(int,boolean,boolean)>
<org.pjsip.pjsua.Callback: void on_call_sdp_created(int,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session,org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session)>
<com.actionbarsherlock.internal.widget.ActionBarContainer: void <init>(android.content.Context)>
<org.pjsip.pjsua.csipsimple_acc_config: void <init>(long,boolean)>
<com.csipsimple.ui.calllog.CallLogListItemViews: void <init>(com.csipsimple.widgets.contactbadge.QuickContactBadge,android.view.View,android.widget.ImageView,android.view.View,com.csipsimple.ui.calllog.PhoneCallDetailsViews,android.view.View)>
<com.csipsimple.service.SipService$1$15: void <init>(com.csipsimple.service.SipService$1,boolean)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void onIntChanged(int,int)>
<com.actionbarsherlock.widget.ActivityChooserModel$SerialExecutor: void <init>()>
<com.csipsimple.ui.SipHome: void onWarningRemoved(java.lang.String)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setIntValues(int[])>
<com.csipsimple.api.SipProfile: java.lang.String getReadParcelableString(java.lang.String)>
<com.csipsimple.R$menu: void <init>()>
<com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$2: void <init>(com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher)>
<com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterContextMenuInfo: void <init>(android.view.View,int,long)>
<com.csipsimple.service.SipService$1$22: void doRun()>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice: void <init>(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid)>
<com.csipsimple.wizards.BasePrefsWizard$2: void <init>(com.csipsimple.wizards.BasePrefsWizard)>
<com.csipsimple.api.SipManager$PresenceStatus: void <init>(java.lang.String,int)>
<com.csipsimple.ui.incall.InCallAnswerControls: void <init>(android.content.Context)>
<org.pjsip.pjsua.pjsua_stun_use$SwigNext: void <init>()>
<org.pjsip.pjsua.pjsua_call_flag: org.pjsip.pjsua.pjsua_call_flag swigToEnum(int)>
<com.actionbarsherlock.internal.widget.AbsActionBarView$1: void <init>(com.actionbarsherlock.internal.widget.AbsActionBarView)>
<org.pjsip.pjsua.pjsua_vid_req_keyframe_method: org.pjsip.pjsua.pjsua_vid_req_keyframe_method swigToEnum(int)>
<org.pjsip.pjsua.pjsip_status_code: void <init>(java.lang.String,int)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>
<com.csipsimple.ui.calllog.CallLogListFragment$1: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void setSupportSecondaryProgress(int)>
<com.csipsimple.ui.account.AccountsEditListAdapter$AccountRowTag: void <init>()>
<com.csipsimple.ui.incall.InCallActivity$CallsAdapter: boolean isValidCallForAdapter(com.csipsimple.api.SipCallSession)>
<org.pjsip.pjsua.pjsua_100rel_use$SwigNext: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: boolean animationFrame(long)>
<com.csipsimple.wizards.impl.Ovh: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void closeMode()>
<com.csipsimple.wizards.impl.XNet: void <init>()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void getOn_call_media_event()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void getOn_typing2()>
<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String,java.lang.String)>
<com.csipsimple.wizards.impl.CongstarTelekom: void <init>()>
<com.csipsimple.R$drawable: void <init>()>
<com.csipsimple.api.SipCallSession: void <init>()>
<com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: void <init>(com.actionbarsherlock.widget.ShareActionProvider)>
<com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)>
<com.csipsimple.utils.Columns: void j2cvBoolean(org.json.JSONObject,android.content.ContentValues,java.lang.String)>
<com.csipsimple.utils.TimerWrapper: void <clinit>()>
<com.csipsimple.ui.messages.ConversationsListFragment: void onActivityCreated(android.os.Bundle)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.csipsimple.widgets.ScreenLocker$ShowHideHandler: void handleMessage(android.os.Message)>
<com.csipsimple.utils.PreferencesWrapper: void resetAllDefaultValues()>
<com.csipsimple.service.SipService$ReturnRunnable: void <init>(com.csipsimple.service.SipService)>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: com.actionbarsherlock.view.MenuInflater getMenuInflater()>
<org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onPanelClosed(int,android.view.Menu)>
<com.actionbarsherlock.widget.ActivityChooserView$SetActivated: void invoke(android.view.View,boolean)>
<org.pjsip.pjsua.pjsua_logging_config: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void getCb()>
<com.csipsimple.utils.PreferencesWrapper: java.lang.Integer needUpgrade()>
<com.csipsimple.service.PresenceManager$2: void doRun()>
<com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow()>
<com.actionbarsherlock.app.SherlockExpandableListActivity: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.csipsimple.service.SipService$ServicePhoneStateReceiver$1: void <init>(com.csipsimple.service.SipService$ServicePhoneStateReceiver,int,java.lang.String)>
<com.csipsimple.utils.PreferencesWrapper: int getGsmIntegrationType()>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void setSupportSecondaryProgress(int)>
<org.pjsip.pjsua.pjsua_destroy_flag$SwigNext: void <init>()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size: void <init>()>
<com.csipsimple.widgets.SlidingTab$Slider: void access$8(com.csipsimple.widgets.SlidingTab$Slider,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.csipsimple.utils.Columns: void j2cvString(org.json.JSONObject,android.content.ContentValues,java.lang.String)>
<com.csipsimple.utils.audio.AudioFocusWrapper: com.csipsimple.utils.audio.AudioFocusWrapper getInstance()>
<com.csipsimple.ui.account.AccountsLoader: android.database.Cursor createCursorForAccount(com.csipsimple.ui.account.AccountsLoader$FilteredProfile)>
<com.csipsimple.ui.calllog.CallLogDetailsFragment$1: void <init>(com.csipsimple.ui.calllog.CallLogDetailsFragment)>
<org.pjsip.pjsua.pj_stun_resolve_result: void <init>()>
<com.actionbarsherlock.app.SherlockFragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
<com.csipsimple.wizards.impl.Speakezi: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.models.CallerInfo$CallerInfoLruCache: java.lang.Object create(java.lang.Object)>
<com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister: void run()>
<com.csipsimple.ui.SipHome: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_stream: void <init>()>
<com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceStringValue(java.lang.String,java.lang.String)>
<com.csipsimple.R$styleable: void <init>()>
<com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean gPrefBooleanValue(android.content.SharedPreferences,java.lang.String)>
<com.actionbarsherlock.view.MenuInflater$MenuState: com.actionbarsherlock.view.SubMenu addSubMenuItem()>
<com.csipsimple.utils.ExtraPlugins: void <init>()>
<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.MenuInflater getSupportMenuInflater()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()>
<com.csipsimple.utils.PreferencesWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
<org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int,int)>
<com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: void initIndexes(android.database.Cursor)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t_p_pjsip_tx_data_p_pjsip_rx_data_int__void: void <init>()>
<com.csipsimple.plugins.telephony.CallHandler: void onReceive(android.content.Context,android.content.Intent)>
<com.actionbarsherlock.app.SherlockListActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.csipsimple.utils.ContactsAsyncHelper: void defaultImage(android.widget.ImageView,int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItem: void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence)>
<com.actionbarsherlock.app.SherlockListActivity: void setSupportProgress(int)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void onProgressRefresh(float,boolean)>
<org.pjsip.pjsua.pjmedia_srtp_use: org.pjsip.pjsua.pjmedia_srtp_use swigToEnum(int)>
<org.pjsip.pjsua.pjsip_redirect_op: void <init>(java.lang.String,int)>
<com.csipsimple.wizards.impl.Advanced$1: void <init>()>
<com.csipsimple.ui.favorites.FavAdapter$1: void <init>(com.csipsimple.ui.favorites.FavAdapter)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: void <init>(float)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void removeTabAt(int)>
<com.csipsimple.ui.SipHome$2: void <init>(com.csipsimple.ui.SipHome)>
<com.csipsimple.models.Filter: void setReplaceRepresentation(com.csipsimple.models.Filter$RegExpRepresentation)>
<com.csipsimple.utils.Ringer: void stopVibrator()>
<com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type: void <init>()>
<com.csipsimple.wizards.impl.LiberTalk: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.account.AccountsEditListAdapter: void <init>(android.content.Context,android.database.Cursor)>
<org.pjsip.pjsua.pjsip_status_code: org.pjsip.pjsua.pjsip_status_code swigToEnum(int)>
<com.csipsimple.ui.calllog.CallLogAdapter: void bindChildView(int,android.view.View,android.content.Context,android.database.Cursor)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void onPause()>
<com.csipsimple.pjsip.PjSipService: void setSpeakerphoneOn(boolean)>
<com.actionbarsherlock.widget.ShareActionProvider: void setActivityChooserPolicyIfNeeded()>
<com.csipsimple.service.SipService$1: int stopLoopbackTest()>
<com.actionbarsherlock.app.SherlockActivity: boolean onMenuOpened(int,android.view.Menu)>
<com.csipsimple.service.SipService$1$10: java.lang.Object runWithReturn()>
<com.actionbarsherlock.R$style: void <init>()>
<com.csipsimple.ui.account.AccountsEditListFragment: void onResume()>
<com.actionbarsherlock.app.SherlockListActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.actionbarsherlock.app.SherlockActivity: void onPause()>
<com.csipsimple.wizards.impl.Ekiga: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo: boolean equals(java.lang.Object)>
<com.csipsimple.pjsip.UAStateReceiver$1: void <init>(com.csipsimple.pjsip.UAStateReceiver,int)>
<com.csipsimple.utils.CallHandlerPlugin: java.lang.Long getAccountIdForCallHandler(android.content.Context,java.lang.String)>
<org.webrtc.videoengine.ViERenderer: void <init>()>
<com.csipsimple.wizards.impl.Scarlet: void <init>()>
<com.actionbarsherlock.app.SherlockActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem add(int,int,int,int)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.csipsimple.service.SipService$1$29: void <init>(com.csipsimple.service.SipService$1,int,android.os.Bundle)>
<com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnPrivilegedIntent(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)>
<com.actionbarsherlock.R$dimen: void <init>()>
<com.csipsimple.ui.prefs.CodecsFragment$4: void onClick(android.content.DialogInterface,int)>
<org.pjsip.pjsua.pjsip_transport_type_e: org.pjsip.pjsua.pjsip_transport_type_e swigToEnum(int)>
<com.csipsimple.ui.calllog.CallLogDetailsFragment$2: void <init>(com.csipsimple.ui.calllog.CallLogDetailsFragment,android.content.Intent)>
<com.csipsimple.utils.PreferencesProviderWrapper: int getPrefPort(java.lang.String)>
<com.csipsimple.ui.messages.ConverstationsAdapter: java.lang.CharSequence formatMessage(android.database.Cursor)>
<com.csipsimple.api.SipConfigManager: java.lang.Float getPreferenceFloatValue(android.content.Context,java.lang.String,java.lang.Float)>
<org.pjsip.pjsua.pjsua_media_transport: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info getSkinfo()>
<com.csipsimple.R$string: void <init>()>
<com.csipsimple.utils.Columns: void j2cvFloat(org.json.JSONObject,android.content.ContentValues,java.lang.String)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void invalidateOptionsMenu()>
<com.csipsimple.utils.PreferencesWrapper: java.lang.Integer getPreferenceIntegerValue(java.lang.String)>
<com.csipsimple.utils.Compatibility: void <init>()>
<com.csipsimple.utils.Compatibility: boolean isInstalledOnSdCard(android.content.Context)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsua_srv_pres: void <init>()>
<com.csipsimple.wizards.impl.MondotalkCreate$AccountCreationResult: void <init>(com.csipsimple.wizards.impl.MondotalkCreate,java.lang.String,java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void: void <init>()>
<org.pjsip.pjsua.Callback: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)>
<org.pjsip.pjsua.pjsua_turn_config: org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred getTurn_auth_cred()>
<com.csipsimple.utils.ArrayUtils: java.lang.Object[] emptyArray(java.lang.Class)>
<com.csipsimple.wizards.impl.MiTelefono: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.ui.calllog.CallLogListFragment$3: void <init>(com.csipsimple.ui.calllog.CallLogListFragment)>
<com.csipsimple.R$array: void <init>()>
<com.csipsimple.ui.incall.InCallActivity$3: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.api.SipCallSession,java.util.ArrayList)>
<com.csipsimple.utils.PreferencesWrapper$3: void <init>()>
<com.actionbarsherlock.app.SherlockListActivity: void closeOptionsMenu()>
<org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pjsua_callback getCb()>
<com.csipsimple.ui.favorites.FavAdapter: void showDialogForSipData(android.content.Context,java.lang.Long,java.lang.String,java.lang.String)>
<com.actionbarsherlock.app.SherlockListActivity: void setContentView(android.view.View)>
<com.csipsimple.utils.PreferencesProviderWrapper: void setLibCapability(java.lang.String,boolean)>
<com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,com.csipsimple.api.SipProfile,boolean)>
<org.pjsip.pjsua.pjsip_cred_data_type: void <clinit>()>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean useSipInfoDtmf()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void setMax(int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_dialog_cap_status: void <init>()>
<org.pjsip.pjsua.pjsua_ice_config: org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options getIce_opt()>
<com.csipsimple.ui.favorites.PresenceStatusSpinner: void updateRegistration()>
<com.csipsimple.wizards.impl.Cellip: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.ui.PickupSipUri$1: void <init>(com.csipsimple.ui.PickupSipUri)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void: void <init>()>
<dummyMainClass: com.csipsimple.wizards.impl.MondotalkCreate dummyMainMethod_com_csipsimple_wizards_impl_MondotalkCreate(android.content.Intent)>
<com.csipsimple.wizards.impl.CallRomania: java.lang.String getDefaultFieldSummary(java.lang.String)>
<org.pjsip.pjsua.pjmedia_snd_dev_info: void <init>(long,boolean)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void setSupportSecondaryProgress(int)>
<com.csipsimple.api.SipCallSession$InvState: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.csipsimple.utils.contacts.ContactsUtils3: void bindContactPhoneView(android.view.View,android.content.Context,android.database.Cursor)>
<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
<com.csipsimple.service.SipService$SipRunnable: void <init>()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void run()>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: int GetOrientation(java.lang.String)>
<com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void <init>(android.content.res.Resources)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void: void <init>()>
<com.csipsimple.wizards.impl.Tanstagi: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.dialpad.DialerFragment$1: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
<org.pjsip.pjsua.csipsimple_config: void <init>(long,boolean)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<org.pjsip.pjsua.pjsua_transport_config: void <init>(long,boolean)>
<com.csipsimple.pjsip.PjSipService: int callXfer(int,java.lang.String)>
<org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int)>
<com.csipsimple.wizards.BasePrefsWizard$1: void <init>(com.csipsimple.wizards.BasePrefsWizard)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void onDestroy()>
<com.csipsimple.wizards.impl.Catitel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.wizards.impl.Expert: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.Manifest$permission: void <init>()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1: com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel)>
<com.csipsimple.ui.messages.ConversationsListFragment: void access$1(com.csipsimple.ui.messages.ConversationsListFragment,java.lang.String)>
<com.csipsimple.ui.filters.EditFilter$2: void <init>(com.csipsimple.ui.filters.EditFilter)>
<org.pjsip.pjsua.pjsip_ssl_method: org.pjsip.pjsua.pjsip_ssl_method swigToEnum(int)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int)>
<com.csipsimple.ui.SipHome$4: void onClick(android.content.DialogInterface,int)>
<com.csipsimple.wizards.WizardUtils: java.util.Map wizardInfoToMap(com.csipsimple.wizards.WizardUtils$WizardInfo,boolean)>
<com.actionbarsherlock.app.SherlockActivity: void invalidateOptionsMenu()>
<com.csipsimple.ui.messages.ConversationsListFragment$5$1: void run()>
<com.csipsimple.service.SipService: void registerBroadcasts()>
<com.csipsimple.ui.dialpad.DialerFragment$OnAutoCompleteListItemClicked: void <init>(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.utils.contacts.ContactsSearchAdapter)>
<com.csipsimple.ui.SipHome$4: void <init>(com.csipsimple.ui.SipHome)>
<com.csipsimple.service.PresenceManager: void access$0(com.csipsimple.service.PresenceManager)>
<com.csipsimple.service.SipService: void access$0(com.csipsimple.service.SipService)>
<com.actionbarsherlock.app.SherlockListActivity: void onPause()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: void <init>()>
<org.pjsip.pjsua.Callback: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.pjsip.UAStateReceiver: int on_set_micro_source()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void: void <init>()>
<com.csipsimple.ui.incall.InCallActivity: void delayedQuit()>
<com.csipsimple.utils.Theme: void <init>(android.content.Context,java.lang.String)>
<org.pjsip.pjsua.pjsip_event_id_e$SwigNext: void <init>()>
<com.csipsimple.wizards.impl.SipMe: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.Ringer: void stopRinger()>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionForIncoming()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node,int)>
<com.csipsimple.utils.PreferencesProviderWrapper: int getKeepAliveInterval(java.lang.String,java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void: void <init>(long,boolean)>
<com.csipsimple.api.SipProfileState$1: com.csipsimple.api.SipProfileState createFromParcel(android.os.Parcel)>
<com.csipsimple.utils.contacts.ContactsWrapper: void treatContactPickerPositiveResult(android.content.Context,android.content.Intent,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected)>
<com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity)>
<com.csipsimple.wizards.impl.Zadarma$AccountBalance: java.lang.String parseResponseLine(java.lang.String)>
<com.csipsimple.wizards.impl.MundoR: void <init>()>
<com.csipsimple.wizards.impl.VoipMuch: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.widgets.SlidingTab$Slider: void <init>(android.view.ViewGroup,int,int,int,int)>
<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void setSupportTranslationY(float)>
<com.csipsimple.ui.account.AccountsEditListFragment$3$1: void <init>(com.csipsimple.ui.account.AccountsEditListFragment$3,java.io.File,java.lang.String[])>
<com.csipsimple.wizards.impl.Amivox: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.utils.Base64: int decode4to3(byte[],int,byte[],int,int)>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean forceDtmfRTP()>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: java.lang.String getPhoneNumber()>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: org.webrtc.videoengine.CaptureCapabilityAndroid[] GetCapabilityArray(java.lang.String)>
<com.csipsimple.service.receiver.DynamicReceiver4: void startMonitoring()>
<com.csipsimple.pjsip.PjSipService: void setMicrophoneMute(boolean)>
<org.webrtc.videoengine.VideoCaptureAndroid: void SetPreviewRotation(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)>
<com.csipsimple.utils.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>
<com.csipsimple.ui.warnings.WarningUtils: com.csipsimple.ui.warnings.WarningUtils$WarningBlockView getViewForWarning(android.content.Context,java.lang.String)>
<com.csipsimple.ui.calllog.CallLogListFragment: void attachAdapter()>
<com.csipsimple.wizards.BasePrefsWizard$2: void onClick(android.view.View)>
<com.csipsimple.utils.Ringer$VibratorThread: void run()>
<com.csipsimple.widgets.AccountWidgetConfigure: void onCreate(android.os.Bundle)>
<com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoFromSipUri(android.content.Context,java.lang.String)>
<com.csipsimple.wizards.impl.Tanstagi: void updateAccountInfos(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void onPanelClosed(int,android.view.Menu)>
<com.actionbarsherlock.internal.utils.UtilityWrapper: void <init>()>
<com.csipsimple.wizards.impl.Expert: int getIntValue(android.preference.EditTextPreference,int)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void getOn_srv_subscribe_state()>
<org.pjsip.pjsua.Callback: void on_call_transfer_request(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.SWIGTYPE_p_pjsip_status_code)>
<com.actionbarsherlock.app.SherlockActivity: void setContentView(android.view.View)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: java.lang.Object getAnimatedValue()>
<com.csipsimple.R$bool: void <init>()>
<com.csipsimple.wizards.impl.CallRomania: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setSelectedNavigationItem(int)>
<com.csipsimple.wizards.impl.Local: java.lang.String getLocalIpAddresses()>
<com.csipsimple.ui.prefs.AudioTester$MonitorThread: void <init>(com.csipsimple.ui.prefs.AudioTester)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: java.lang.Object getAnimatedValue()>
<org.pjsip.pjsua.Callback: void on_teardown_audio()>
<com.csipsimple.utils.PreferencesProviderWrapper: void <init>(android.content.Context)>
<com.csipsimple.ui.account.AccountsEditListFragment$4: void drop(int,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_transaction: void <init>()>
<org.pjsip.pjsua.Callback: int on_set_micro_source()>
<com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier: void <init>(com.actionbarsherlock.internal.widget.IcsAdapterView)>
<com.actionbarsherlock.app.SherlockFragmentActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.csipsimple.ui.prefs.PrefsFast: void setProfile(com.csipsimple.ui.prefs.PrefsFast$Profile)>
<com.csipsimple.wizards.impl.Messagenet: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.BGTel: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setTarget(java.lang.Object)>
<com.csipsimple.wizards.impl.CongstarTelekom: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.ui.account.AccountsLoader$FilteredProfile$1: void <init>(com.csipsimple.ui.account.AccountsLoader$FilteredProfile,java.util.concurrent.Semaphore)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.csipsimple.ui.SipHome$TabsAdapter: java.lang.Integer getPositionForId(int)>
<com.csipsimple.pjsip.UAStateReceiver: void on_teardown_audio()>
<org.pjsip.pjsua.pjsip_cred_data_type$SwigNext: void <init>()>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)>
<com.csipsimple.ui.favorites.FavAdapter$6: void <init>(com.csipsimple.ui.favorites.FavAdapter,java.lang.String,java.lang.String,java.lang.Long)>
<com.csipsimple.ui.messages.MessageFragment: void loadMessageContent()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupEndValue(java.lang.Object)>
<org.pjsip.pjsua.pjsua_call_media_status$SwigNext: void <init>()>
<com.csipsimple.pjsip.PjSipService: void unsetAudioInCall()>
<com.csipsimple.utils.contacts.ContactsUtils5: android.database.Cursor getContactsPhones(android.content.Context)>
<org.webrtc.videoengine.ViEAndroidGLES20: void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10)>
<com.csipsimple.utils.PreferencesWrapper: void restoreSipSettings(org.json.JSONObject)>
<com.csipsimple.wizards.impl.UkrTelecom: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.PhoneCapabilityTester: void <init>()>
<com.csipsimple.service.receiver.DynamicReceiver4: void access$4(com.csipsimple.service.receiver.DynamicReceiver4,android.net.NetworkInfo,boolean)>
<com.csipsimple.utils.Ringer: void <init>(android.content.Context)>
<com.csipsimple.ui.messages.ConversationsListFragment$1: void <init>(com.csipsimple.ui.messages.ConversationsListFragment)>
<org.pjsip.pjsua.pjsip_ssl_method: void <clinit>()>
<com.csipsimple.api.SipConfigManager: void setPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupStartValue(java.lang.Object)>
<com.csipsimple.wizards.impl.Basic: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_turn_config_use: void <init>(java.lang.String,int)>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder,android.view.View,boolean)>
<com.csipsimple.ui.messages.MessageAdapter: void <init>(android.content.Context,android.database.Cursor)>
<com.csipsimple.service.SipService$1: void playWaveFile(java.lang.String,int,int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: android.hardware.Camera AllocateEVOFrontFacingCamera()>
<com.csipsimple.utils.ContactsAsyncHelper$WorkerHandler: void handleMessage(android.os.Message)>
<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
<com.csipsimple.service.MediaManager: void toggleMute()>
<com.actionbarsherlock.app.SherlockFragmentActivity: void onConfigurationChanged(android.content.res.Configuration)>
<com.actionbarsherlock.internal.widget.ActionBarView$1: void <init>(com.actionbarsherlock.internal.widget.ActionBarView)>
<com.csipsimple.wizards.impl.Netelip: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
<com.csipsimple.wizards.impl.ZonPt: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void setContentView(int)>
<com.csipsimple.service.SipService$SipServiceExecutor: void execute(java.lang.Runnable)>
<com.csipsimple.wizards.impl.CongstarQSC: java.lang.String getDefaultFieldSummary(java.lang.String)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void getOn_call_replace_request2()>
<com.actionbarsherlock.internal.widget.IcsLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.wizards.impl.Optimus: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews: java.lang.String getRemoteNumber()>
<com.csipsimple.api.SipProfile: void <init>(android.os.Parcel,com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.pjsip.PjStreamDialtoneGenerator: void <init>(int)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op$SwigNext: void <init>()>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void setContentView(int)>
<org.pjsip.pjsua.pjsip_ssl_method$SwigNext: void <init>()>
<org.pjsip.pjsua.pj_pool_t: org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback getCallback()>
<com.csipsimple.ui.calllog.CallLogListFragment: void access$4(com.csipsimple.ui.calllog.CallLogListFragment)>
<org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_med_tp_st)>
<org.pjsip.pjsua.Callback: void on_call_replace_request(int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data,org.pjsip.pjsua.SWIGTYPE_p_int,org.pjsip.pjsua.pj_str_t)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: void setValue(java.lang.Object)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: void onPostCreate(android.os.Bundle)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void getOn_call_transfer_status()>
<com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenType(java.lang.String,int)>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<com.csipsimple.ui.calllog.GroupingListAdapter$PositionMetadata: void <init>()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void getOn_reg_state2()>
<com.csipsimple.pjsip.PjSipService$1$1: void doRun()>
<org.pjsip.pjsua.SWIGTYPE_p_pj_pool_factory: void <init>()>
<com.csipsimple.wizards.impl.Freephonie: java.lang.String getDefaultFieldSummary(java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord: void <init>()>
<com.csipsimple.api.SipMessage: android.content.ContentValues getContentValues()>
<com.actionbarsherlock.app.SherlockListActivity: void setSupportProgressBarIndeterminateVisibility(boolean)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])>
<com.csipsimple.utils.PreferencesWrapper$2: void <init>()>
<com.csipsimple.utils.Compatibility: boolean needPspWorkaround()>
<com.csipsimple.utils.Compatibility: boolean useFlipAnimation()>
<com.actionbarsherlock.app.SherlockListActivity: void onPostResume()>
<org.pjsip.pjsua.pjsua_med_tp_st: void <init>(java.lang.String,int)>
<com.actionbarsherlock.app.SherlockDialogFragment: void onAttach(android.app.Activity)>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)>
<com.csipsimple.ui.dialpad.DialerFragment: void onResume()>
<com.csipsimple.utils.Theme: void applyBackgroundStateListSelectableDrawable(android.view.View,java.lang.String)>
<com.csipsimple.wizards.impl.Sip2Sip: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state: void <init>()>
<com.csipsimple.utils.NightlyUpdater: void <init>(android.content.Context)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: void onTitleChanged(java.lang.CharSequence,int)>
<com.csipsimple.pjsip.PjSipService: java.lang.String sanitizeForFile(java.lang.String)>
<com.actionbarsherlock.app.SherlockListActivity: void supportInvalidateOptionsMenu()>
<org.pjsip.pjsua.Callback: void on_nat_detect(org.pjsip.pjsua.pj_stun_nat_detect_result)>
<org.pjsip.pjsua.Callback: void on_zrtp_show_sas(int,org.pjsip.pjsua.pj_str_t,int)>
<com.csipsimple.utils.CallsUtils: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void animateValue(float)>
<com.csipsimple.wizards.WizardUtils: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code__void: void <init>()>
<com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean)>
<com.csipsimple.api.ISipConfiguration$Stub: com.csipsimple.api.ISipConfiguration asInterface(android.os.IBinder)>
<com.csipsimple.pjsip.PjSipService: void <init>()>
<com.csipsimple.wizards.WizardUtils: com.csipsimple.wizards.WizardUtils$WizardInfo getWizardClassInfos(java.lang.Class)>
<org.pjsip.pjsua.pjmedia_dir: void <init>(java.lang.String,int)>
<com.csipsimple.ui.incall.InCallCard$LoadCallerInfoMessage: void <init>(com.csipsimple.ui.incall.InCallCard,com.csipsimple.ui.incall.InCallCard,com.csipsimple.models.CallerInfo)>
<com.actionbarsherlock.R$menu: void <init>()>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$FrontFacingCameraType: void <init>(java.lang.String,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupValue(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe)>
<com.csipsimple.wizards.impl.VoipTiger: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.api.SipConfigManager: java.lang.String getCodecKey(java.lang.String,java.lang.String)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow)>
<com.csipsimple.wizards.impl.ReachPhones: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView access$1(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean)>
<com.csipsimple.wizards.impl.Pozitel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.ui.incall.CallProximityManager: void <clinit>()>
<com.csipsimple.api.SipConfigManager: java.lang.String getPreferenceStringValue(android.content.Context,java.lang.String,java.lang.String)>
<com.actionbarsherlock.app.SherlockListActivity: void setSupportProgressBarVisibility(boolean)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: boolean showOverflowMenu()>
<com.csipsimple.ui.calllog.CallLogGroupBuilder: void addGroups(android.database.Cursor)>
<com.csipsimple.api.ISipConfiguration$Stub$Proxy: void <init>(android.os.IBinder)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback getOn_transport_state()>
<com.csipsimple.ui.dialpad.DialerFragment$6: void <init>(com.csipsimple.ui.dialpad.DialerFragment,long)>
<com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<com.csipsimple.api.SipMessage: boolean isOutgoing()>
<org.pjsip.pjsua.Callback: void on_call_transfer_status(int,int,org.pjsip.pjsua.pj_str_t,int,org.pjsip.pjsua.SWIGTYPE_p_int)>
<com.csipsimple.service.MediaManager$InCallTonePlayer: void <init>(com.csipsimple.service.MediaManager,int)>
<com.csipsimple.widgets.SeekBarPreference: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_host_port: void <init>()>
<com.csipsimple.api.MediaState: void <init>()>
<com.csipsimple.wizards.impl.Anv: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_acc_info: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua_state: void <init>(java.lang.String,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone()>
<com.csipsimple.wizards.impl.SipWise: void <init>()>
<com.csipsimple.utils.Compatibility: java.lang.String getDefaultMicroSource()>
<com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener: void <init>(com.actionbarsherlock.internal.widget.AbsActionBarView)>
<com.csipsimple.wizards.impl.Innotel: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.csipsimple.api.SipUri$ParsedSipContactInfos: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void: void <init>()>
<com.csipsimple.models.Filter: void setMatcherRepresentation(com.csipsimple.models.Filter$RegExpRepresentation)>
<com.csipsimple.wizards.impl.CamundaNet: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.WizardChooser$1: void <init>(com.csipsimple.wizards.WizardChooser)>
<com.csipsimple.utils.bluetooth.BluetoothUtils14: void <init>()>
<com.actionbarsherlock.app.SherlockFragmentActivity: void setSupportProgressBarIndeterminate(boolean)>
<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
<com.csipsimple.pjsip.PjSipService: void sendPendingDtmf(int)>
<com.csipsimple.wizards.impl.MultifonRu: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.api.SipUri: void <init>()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void getOn_stream_created()>
<com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet clone()>
<com.csipsimple.ui.incall.InCallAnswerControls: void setCallLockerVisibility(int)>
<org.pjsip.pjsua.pjrpid_activity: void <init>(java.lang.String,int)>
<com.csipsimple.api.SipCallSession$MediaState: void <init>()>
<com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.utils.Columns$Type: void <init>(java.lang.String,int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: void <init>(android.content.Context)>
<com.csipsimple.utils.CustomDistribution: void <init>()>
<com.csipsimple.ui.calllog.CallLogGroupBuilder: boolean equalNumbers(java.lang.String,java.lang.String)>
<org.pjsip.pjsua.pjsua_reg_info: org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam getCbparam()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <init>(java.lang.String)>
<com.csipsimple.wizards.impl.Gizmo5: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.messages.MessageFragment$2: void <init>(com.csipsimple.ui.messages.MessageFragment)>
<com.csipsimple.service.SipService$1$28: java.lang.Object runWithReturn()>
<com.csipsimple.ui.dialpad.DialerFragment$2: void <init>(com.csipsimple.ui.dialpad.DialerFragment)>
<org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status getPres_status()>
<com.csipsimple.wizards.impl.Tanstagi$1: void <init>(com.csipsimple.wizards.impl.Tanstagi)>
<com.csipsimple.widgets.SlidingTab$Slider: void setDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<org.pjsip.pjsua.Callback: void on_reg_state(int)>
<com.csipsimple.service.SipNotifications: void onServiceDestroy()>
<org.pjsip.pjsua.pjsua_turn_config_use: org.pjsip.pjsua.pjsua_turn_config_use swigToEnum(int)>
<com.csipsimple.wizards.impl.Expert: int getIntValue(android.preference.ListPreference,int)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.app.ActionBar getSupportActionBar()>
<org.pjsip.pjsua.pjsua_destroy_flag: void <init>(java.lang.String,int)>
<com.csipsimple.service.SipService$ToCall: void <init>(java.lang.Integer,java.lang.String,java.lang.String)>
<com.csipsimple.utils.Compatibility: boolean needWebRTCImplementation()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void setSecondaryProgress(int)>
<com.actionbarsherlock.app.SherlockActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<org.pjsip.pjsua.pjsua_callback: void <init>(long,boolean)>
<com.actionbarsherlock.view.MenuInflater: void inflate(int,com.actionbarsherlock.view.Menu)>
<com.csipsimple.utils.Threading: void stopHandlerThread(android.os.HandlerThread,boolean)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void init()>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void <init>(android.content.Context,android.util.AttributeSet)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_event__void: void <init>(long,boolean)>
<com.csipsimple.ui.incall.AccelerometerListener: void <init>(android.content.Context,com.csipsimple.ui.incall.AccelerometerListener$OrientationListener)>
<com.actionbarsherlock.widget.ActivityChooserModel: void <clinit>()>
<com.csipsimple.widgets.EditSipUri: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: java.lang.String toString()>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_stream_destroyed(org.pjsip.pjsua.Callback,int,long,long)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>
<com.csipsimple.pjsip.UAStateReceiver$4: void doRun()>
<com.csipsimple.wizards.impl.Mondotalk: void <init>()>
<org.pjsip.pjsua.pjsua_call_hold_type: void <clinit>()>
<com.csipsimple.service.SipNotifications: void cancelAll()>
<com.csipsimple.wizards.impl.SimpleImplementation: void <clinit>()>
<org.webrtc.videoengine.camera.CameraUtils8: void <init>()>
<com.csipsimple.ui.calllog.CallLogListFragment: void onVisibilityChanged(boolean)>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setText(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void start()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t__void getOn_call_replace_request()>
<com.csipsimple.ui.calllog.CallLogAdapter: void <init>(android.content.Context,com.csipsimple.ui.calllog.CallLogAdapter$CallFetcher)>
<com.csipsimple.utils.TimerWrapper: void <init>(com.csipsimple.service.SipService)>
<com.csipsimple.models.Filter: int getActionForPosition(java.lang.Integer)>
<com.csipsimple.pjsip.PjSipService: void adjustStreamVolume(int,int,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void startAnimation()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int__void: void <init>(long,boolean)>
<com.csipsimple.ui.calllog.CallLogAdapter: android.view.View newGroupView(android.content.Context,android.view.ViewGroup)>
<com.csipsimple.utils.CallHandlerPlugin: com.csipsimple.api.SipProfile getFakeProfile()>
<com.csipsimple.widgets.EditSipUri: void afterTextChanged(android.text.Editable)>
<com.csipsimple.api.SipProfile: java.lang.String getSipUserName()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>
<com.csipsimple.service.MediaManager: void setSpeakerphoneOn(boolean)>
<com.csipsimple.wizards.impl.Eutelia: void <init>()>
<com.csipsimple.wizards.impl.ZonPt: void <init>()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean isReservingOverflow()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t__void getOn_pager()>
<com.csipsimple.widgets.AccountChooserButton$1: void onClick(android.view.View)>
<com.csipsimple.utils.SmileyParser: void init(android.content.Context)>
<com.csipsimple.wizards.BasePrefsWizard: void onCreate(android.os.Bundle)>
<com.csipsimple.utils.audio.AudioFocus8: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.csipsimple.ui.incall.InCallCard: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,java.lang.String,java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_f_p_void__void: void <init>(long,boolean)>
<com.csipsimple.utils.Base64: byte[] encodeBytesToBytes(byte[])>
<com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeBaseFilter(com.csipsimple.models.Filter)>
<com.csipsimple.wizards.impl.Optimus: void <init>()>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_time_val getConnect_duration()>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_stream_rc_config getVid_stream_rc_cfg()>
<com.csipsimple.ui.filters.AccountFilters: void onCreate(android.os.Bundle)>
<org.pjsip.pjsua.pjsua_buddy_config: void <init>()>
<com.csipsimple.ui.incall.InCallActivity: void onConfigurationChanged(android.content.res.Configuration)>
<com.csipsimple.wizards.impl.CongstarQSC: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem)>
<com.csipsimple.wizards.impl.VoipNor: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.SipHome$2: void run()>
<com.csipsimple.ui.warnings.WarningPrivilegedIntent: void onClick(android.view.View)>
<com.csipsimple.ui.account.AccountsEditListAdapter: com.csipsimple.ui.account.AccountsEditListAdapter$AccountListItemViews tagRowView(android.view.View)>
<com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void <clinit>()>
<com.csipsimple.ui.calllog.CallLogDetailsFragment: com.csipsimple.ui.calllog.PhoneCallDetails getPhoneCallDetailsForUri(android.net.Uri)>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getRemote_contact()>
<org.pjsip.pjsua.pjsua_media_transport: void <init>(long,boolean)>
<dummyMainClass: com.csipsimple.ui.account.AccountsEditListFragment dummyMainMethod_com_csipsimple_ui_account_AccountsEditListFragment(android.content.Intent,android.app.Activity)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int__void getOn_call_media_state()>
<com.csipsimple.ui.incall.InCallMediaControl: void updateUIFromMedia()>
<com.csipsimple.ui.incall.InCallInfoGrid$CallDataObserver: void onInvalidated()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone()>
<com.csipsimple.utils.Ringer$RingerThread: void <init>(com.csipsimple.utils.Ringer,com.csipsimple.utils.Ringer$RingerThread)>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState: void <clinit>()>
<org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.pj_qos_type getQos_type()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void onRestoreInstanceState(android.os.Parcelable)>
<com.csipsimple.wizards.BasePrefsWizard: boolean setWizardId(java.lang.String)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: java.lang.String toString()>
<com.csipsimple.ui.incall.InCallActivity$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.csipsimple.api.SipProfileState: void <clinit>()>
<com.csipsimple.widgets.EditSipUri$ContactAdapter: void <init>(com.csipsimple.widgets.EditSipUri,android.content.Context,android.database.Cursor)>
<com.csipsimple.wizards.impl.EuroTelefon: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.service.SipService$1: void confAdjustTxLevel(int,float)>
<com.csipsimple.utils.PreferencesWrapper: java.io.File getRecordsFolder(android.content.Context)>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: com.actionbarsherlock.view.Menu getMenu()>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t codecs_get_id(int)>
<com.csipsimple.ui.help.Legal: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.csipsimple.service.SipService: void applyComponentEnablingState(boolean)>
<com.csipsimple.utils.contacts.ContactsUtils3: com.csipsimple.models.CallerInfo findCallerInfoForUri(android.content.Context,java.lang.String)>
<org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_method: void <init>(long,boolean)>
<com.csipsimple.ui.calllog.CallLogListItemHelper: void setPhoneCallDetails(com.csipsimple.ui.calllog.CallLogListItemViews,com.csipsimple.ui.calllog.PhoneCallDetails)>
<com.csipsimple.utils.Ringer$VibratorThread: void <init>(com.csipsimple.utils.Ringer,com.csipsimple.utils.Ringer$VibratorThread)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: void <init>(android.app.Activity)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op_param: void <init>()>
<com.csipsimple.service.SipService$1: boolean isRecording(int)>
<com.actionbarsherlock.app.SherlockFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<com.csipsimple.wizards.impl.CongstarQSC: void <init>()>
<com.csipsimple.wizards.impl.AccountCreationWebview: void <init>(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void incrementProgressBy(int)>
<com.csipsimple.wizards.impl.MagicJack: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.incall.InCallMediaControl$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_incoming_call(org.pjsip.pjsua.Callback,int,int,long)>
<com.actionbarsherlock.app.SherlockExpandableListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
<com.csipsimple.utils.Base64$InputStream: int read(byte[],int,int)>
<com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipSettings(android.content.Context)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: boolean showOverflowMenu()>
<com.csipsimple.wizards.BasePrefsWizard: void saveAccount(java.lang.String)>
<com.csipsimple.utils.audio.AudioFocus8: void focus()>
<dummyMainClass: com.csipsimple.service.DeviceStateReceiver dummyMainMethod_com_csipsimple_service_DeviceStateReceiver(android.content.Intent)>
<org.pjsip.pjsua.pjsua_acc_info: org.pjsip.pjsua.pj_str_t getStatus_text()>
<com.csipsimple.widgets.EditSipUri: void access$0(com.csipsimple.widgets.EditSipUri)>
<com.csipsimple.wizards.impl.Vegatel: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.service.SipService: void onCreate()>
<org.pjsip.pjsua.pjsua_call_vid_strm_op: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_vid_strm_op)>
<org.pjsip.pjsua.pjsua_call_flag: void <init>(java.lang.String,int,int)>
<com.csipsimple.utils.bluetooth.BluetoothUtils8: void <init>()>
<org.pjsip.pjsua.pjsuaJNI: int SwigDirector_Callback_on_call_redirected(org.pjsip.pjsua.Callback,int,long)>
<com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void <init>(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)>
<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<com.csipsimple.ui.messages.MessageFragment$2: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.widgets.AccountChooserButton$AccountStatusContentObserver: void onChange(boolean)>
<com.csipsimple.pjsip.PjSipService: boolean setAccountRegistration(com.csipsimple.api.SipProfile,int,boolean)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void setTabSelected(int)>
<org.pjsip.pjsua.pjsua_reg_info: void <init>(long,boolean)>
<com.csipsimple.widgets.contactbadge.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet)>
<dummyMainClass: com.csipsimple.widgets.ShortcutWidgetConfigure dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetConfigure(android.content.Intent)>
<com.csipsimple.wizards.impl.Nymgo: void <init>()>
<com.csipsimple.utils.TimerWrapper: void treatAlarm(int)>
<com.csipsimple.wizards.impl.Freeconet: void <init>()>
<com.csipsimple.ui.dialpad.DialerFragment: void initButtons(android.view.View)>
<com.csipsimple.widgets.contactbadge.QuickContactBadge$ArrowPosition: void <clinit>()>
<com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)>
<org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_nat_detect_result__void: void <init>(long,boolean)>
<com.csipsimple.api.SipProfile: void <init>(android.os.Parcel)>
<com.csipsimple.wizards.impl.IPshka: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context)>
<com.csipsimple.wizards.impl.Ajtel: void <init>()>
<com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void updateDescriptions()>
<org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getVideo_capture_implementation()>
<com.csipsimple.wizards.impl.Vegatel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.filters.EditFilter$2: void onClick(android.view.View)>
<com.csipsimple.wizards.impl.BelCentrale: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.DeltaThree: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Sip2Sip: void <init>()>
<com.csipsimple.wizards.impl.Ippi: void <init>()>
<com.csipsimple.ui.SipHome: void onDestroy()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)>
<com.csipsimple.service.SipService: void addAllAccounts()>
<com.csipsimple.ui.filters.AccountFiltersListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_pool_t pjsua_pool_create(java.lang.String,long,long)>
<com.csipsimple.ui.incall.DtmfDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.csipsimple.wizards.impl.MultifonRu: void <init>()>
<com.csipsimple.service.MediaManager: void stopRing()>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void selectionChanged()>
<com.csipsimple.wizards.impl.IpTel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.messages.ConverstationsAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<com.csipsimple.service.SipService: void onStart(android.content.Intent,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>
<org.pjsip.pjsua.SWIGTYPE_p_pj_ice_sess_options: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.BTone: void <init>()>
<com.csipsimple.utils.Theme: com.csipsimple.utils.Theme getCurrentTheme(android.content.Context)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void playTogether(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[])>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()>
<com.csipsimple.widgets.AccountChooserButton$2: void onLoad(com.csipsimple.utils.CallHandlerPlugin)>
<com.csipsimple.wizards.impl.Broadsoft: boolean canSave()>
<com.csipsimple.wizards.impl.Zadarma: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.ZonPt: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter$AccListItemViewTag: void <init>(com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter,com.csipsimple.ui.account.AccountsChooserListFragment$AccountsChooserAdapter$AccListItemViewTag)>
<com.csipsimple.utils.contacts.ContactsAutocompleteAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<com.csipsimple.ui.incall.InCallActivity: void <init>()>
<com.csipsimple.wizards.impl.Netelip: void <init>()>
<com.csipsimple.service.SipService: void restartSipStack()>
<com.csipsimple.ui.calllog.CallLogDetailsFragment: void loadContactPhotos(android.net.Uri,android.net.Uri)>
<org.pjsip.pjsua.pjsua_mwi_info: void <init>(long,boolean)>
<com.csipsimple.ui.incall.InCallCard: void updateRemoteName()>
<com.csipsimple.pjsip.UAStateReceiver: void on_zrtp_show_sas(int,org.pjsip.pjsua.pj_str_t,int)>
<com.csipsimple.service.SipService$1: void stopRecording(int)>
<com.actionbarsherlock.view.MenuInflater$MenuState: void setItem(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.wizards.impl.Tlenofon: void <init>()>
<com.csipsimple.ui.incall.InCallCard: void initControllerView()>
<com.csipsimple.service.SipService$StopRunnable: void doRun()>
<com.csipsimple.wizards.BasePrefsWizard: void onResume()>
<com.csipsimple.wizards.impl.Mondotalk: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.UkrTelecom: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone()>
<com.csipsimple.api.SipProfile: void <clinit>()>
<com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)>
<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.actionbarsherlock.internal.widget.ActionBarView: void onRestoreInstanceState(android.os.Parcelable)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_transfer_request(org.pjsip.pjsua.Callback,int,long,long)>
<com.csipsimple.wizards.impl.NeufTalk: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Pbxes: void <init>()>
<org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_sip_timer_use)>
<com.actionbarsherlock.app.SherlockActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
<com.csipsimple.ui.messages.MessageActivity: void onCreate(android.os.Bundle)>
<com.csipsimple.wizards.impl.Mobex: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.MiTelefono: void <init>()>
<com.csipsimple.wizards.impl.Sonetel: void <init>()>
<com.csipsimple.wizards.impl.FreephoneLineCa: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Tecobu: void <init>()>
<com.csipsimple.ui.incall.InCallActivity: void OnDtmf(int,int,int)>
<com.csipsimple.wizards.impl.Svanto: void <init>()>
<com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setProgressBarIndeterminate(boolean)>
<com.csipsimple.wizards.impl.Sipkom: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsuaJNI: int SwigDirector_Callback_timer_cancel(org.pjsip.pjsua.Callback,int,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_info: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua_vid_req_keyframe_method: void <clinit>()>
<com.csipsimple.service.SipService$1: void setBluetoothOn(boolean)>
<com.csipsimple.api.MediaState: void <clinit>()>
<com.csipsimple.wizards.impl.Advanced: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getCall_id()>
<com.csipsimple.ui.incall.InCallAnswerControls: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.wizards.impl.Blueface: void <init>()>
<com.csipsimple.ui.incall.InCallActivity: void onResume()>
<org.pjsip.pjsua.pjmedia_port: org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port__int getOn_destroy()>
<com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceFloatValue(java.lang.String,float)>
<com.csipsimple.api.SipCallSession: void <clinit>()>
<com.csipsimple.service.MediaManager: void unsetAudioInCall()>
<com.csipsimple.pjsip.PjSipService: void setAudioInCall()>
<com.csipsimple.ui.incall.InCallCard$1: void run()>
<com.csipsimple.utils.bluetooth.BluetoothUtils3: void <init>()>
<com.csipsimple.wizards.impl.Blicnet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager_status2(org.pjsip.pjsua.Callback,int,long,long,int,long,long,long)>
<com.csipsimple.ui.help.Help: android.app.Dialog onCreateDialog(android.os.Bundle)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsip_timer_setting getTimer_setting()>
<com.csipsimple.wizards.impl.DvcNg: void <init>()>
<com.csipsimple.wizards.impl.Pennytel: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setSecondaryProgress(int)>
<com.csipsimple.pjsip.PjSipService: com.csipsimple.service.SipService$ToCall sanitizeSipUri(java.lang.String,long)>
<dummyMainClass: com.actionbarsherlock.app.SherlockListFragment dummyMainMethod_com_actionbarsherlock_app_SherlockListFragment(android.content.Intent,android.app.Activity)>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pj_str_t getRemote_info()>
<org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub_state getSub_state()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_regc_cbparam: void <init>(long,boolean)>
<com.csipsimple.models.CallerInfo: com.csipsimple.models.CallerInfo getCallerInfoForSelf(android.content.Context)>
<com.csipsimple.wizards.impl.MundoR: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void initAnimation()>
<org.pjsip.pjsua.pj_qos_type: void <clinit>()>
<com.csipsimple.service.PresenceManager: java.util.List getBuddiesForAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.SWIGTYPE_p_f_p_q_const__pj_stun_resolve_result__void: void <init>(long,boolean)>
<com.actionbarsherlock.internal.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.wizards.impl.IPshka: void <init>()>
<com.csipsimple.service.PreferenceProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<org.pjsip.pjsua.pjsua_stun_use: void <init>(java.lang.String,int,int)>
<com.csipsimple.wizards.impl.Local: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_pj_stun_nat_type: void <init>(long,boolean)>
<com.csipsimple.ui.help.Help: android.view.View getCustomView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: void AddDeviceInfo(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid$AndroidVideoCaptureDevice,android.hardware.Camera$Parameters)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_zrtp_update_transport(org.pjsip.pjsua.Callback,int)>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper: void <init>(com.actionbarsherlock.internal.ActionBarSherlockNative,android.view.ActionMode)>
<com.csipsimple.wizards.impl.HalooCentrala: void <init>()>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: int Init()>
<com.csipsimple.wizards.impl.Gradwell: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>
<com.csipsimple.wizards.impl.LiberTalk: void <init>()>
<com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()>
<com.csipsimple.pjsip.PjSipService: int callAnswer(int,int)>
<com.csipsimple.wizards.impl.Vono: void <init>()>
<com.csipsimple.service.SipService: void removeBuddy(java.lang.String)>
<com.actionbarsherlock.internal.view.StandaloneActionMode: com.actionbarsherlock.view.MenuInflater getMenuInflater()>
<com.csipsimple.wizards.impl.Ip2Mobile: void <init>()>
<com.csipsimple.ui.prefs.CodecsFragment: void userActivateCodec(java.util.Map,boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_p_q_const__pj_str_t_pjsip_evsub_state_p_pjsip_event__void: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.VoipPlanet: void <init>()>
<com.csipsimple.ui.PickupSipUri: void access$0(com.csipsimple.ui.PickupSipUri)>
<dummyMainClass: com.csipsimple.ui.prefs.CodecsFragment dummyMainMethod_com_csipsimple_ui_prefs_CodecsFragment(android.content.Intent,android.app.Activity)>
<com.csipsimple.utils.TimerWrapper: int schedule(int,int,int)>
<com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.actionbarsherlock.app.SherlockListActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
<com.csipsimple.ui.messages.ConversationsListFragment$2: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.service.SipService$1$19: void doRun()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void refreshProgress(int,int,boolean)>
<com.csipsimple.utils.PreferencesProviderWrapper: void setVideoCodecList(java.util.List)>
<com.csipsimple.wizards.impl.Cellip: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.calllog.PhoneCallDetailsViews: com.csipsimple.ui.calllog.PhoneCallDetailsViews fromView(android.view.View)>
<com.csipsimple.wizards.impl.SipSorcery: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_mwi_info__void getOn_mwi_info()>
<com.csipsimple.wizards.impl.MondotalkCreate: boolean access$4(com.csipsimple.wizards.impl.MondotalkCreate)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_multipart_part: void <init>(long,boolean)>
<com.csipsimple.pjsip.PjSipService: void onGSMStateChanged(int,java.lang.String)>
<org.pjsip.pjsua.pjsua_conf_port_info: void <init>()>
<com.csipsimple.wizards.impl.BGTel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Anv: void <init>()>
<com.actionbarsherlock.widget.ActivityChooserView: void onLayout(boolean,int,int,int,int)>
<com.csipsimple.api.SipUri: java.lang.String getDisplayedSimpleContact(java.lang.CharSequence)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int__void: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.DeltaThree: boolean canSave()>
<com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation()>
<com.csipsimple.service.SipService$SyncRestartRunnable: java.lang.Object runWithReturn()>
<com.csipsimple.wizards.impl.Ecs: void updateDescriptions()>
<com.csipsimple.pjsip.PjSipService: void startRecording(int)>
<com.csipsimple.service.SipService: void access$2(com.csipsimple.service.SipService)>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean getPreferenceBooleanValue(java.lang.String,boolean)>
<dummyMainClass: com.csipsimple.ui.messages.MessageFragment dummyMainMethod_com_csipsimple_ui_messages_MessageFragment(android.content.Intent,android.app.Activity)>
<com.csipsimple.wizards.impl.ReachPhones: void <init>()>
<com.csipsimple.service.PresenceManager: void updateRegistrations()>
<com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void show()>
<com.csipsimple.utils.Compatibility: void resetCodecsSettings(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.ui.dialpad.DialerFragment$2: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: android.os.Parcelable onSaveInstanceState()>
<org.pjsip.pjsua.pjsua_transport_info: org.pjsip.pjsua.pj_str_t getType_name()>
<org.pjsip.pjsua.pjsua_call_media_status: void <init>(java.lang.String,int,int)>
<dummyMainClass: com.csipsimple.ui.prefs.hc.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_hc_MainPrefs(android.content.Intent)>
<com.csipsimple.wizards.impl.Beeztel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<org.webrtc.videoengine.ViEAndroidGLES20: void init(boolean,int,int)>
<com.csipsimple.pjsip.PjStreamDialtoneGenerator: int sendPjMediaDialTone(java.lang.String)>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsip_status_code getLast_status()>
<com.csipsimple.wizards.impl.AccountBalanceHelper: void launchRequest(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Innotel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void performCollapse()>
<com.csipsimple.utils.PreferencesProviderWrapper: short getCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>
<com.csipsimple.service.SipService$DestroyRunnable: void doRun()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_endpt: void <init>(long,boolean)>
<com.csipsimple.widgets.ShortcutWidgetProvider: void onDeleted(android.content.Context,int[])>
<com.csipsimple.widgets.ShortcutWidgetConfigure: void <clinit>()>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onCreate(android.os.Bundle)>
<com.csipsimple.wizards.impl.Localphone: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjmedia_port_info: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_format getFmt()>
<com.csipsimple.ui.messages.ConversationsListFragment$1: void onClick(android.view.View)>
<com.csipsimple.ui.incall.InCallMediaControl: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<com.csipsimple.wizards.impl.Fritzbox: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.BroadVoice: void <init>()>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[])>
<com.csipsimple.wizards.WizardUtils: android.graphics.Bitmap getWizardBitmap(android.content.Context,com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Local: void <clinit>()>
<com.csipsimple.utils.DialingFeedback: void <init>(android.app.Activity,boolean)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofPropertyValuesHolder(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[])>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object)>
<com.csipsimple.pjsip.PjSipService: boolean canRecord(int)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub_p_pjsip_event__void: void <init>(long,boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>(long,boolean)>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>
<com.csipsimple.ui.calllog.CallLogListFragment$3: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>
<com.csipsimple.wizards.impl.Orbtalk: void <init>()>
<com.csipsimple.ui.prefs.hc.MainPrefs: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<dummyMainClass: com.csipsimple.ui.prefs.Codecs dummyMainMethod_com_csipsimple_ui_prefs_Codecs(android.content.Intent)>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.view.ActionMode$Callback)>
<com.csipsimple.wizards.impl.CongstarTelekom: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean enableDNSSRV()>
<com.csipsimple.ui.prefs.cupcake.MainPrefs: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.service.MediaManager: void startService()>
<dummyMainClass: com.csipsimple.ui.help.Faq dummyMainMethod_com_csipsimple_ui_help_Faq(android.content.Intent,android.app.Activity)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable: void run()>
<org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.pj_time_val getTimeout()>
<com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity)>
<org.pjsip.pjsua.pjrpid_element: org.pjsip.pjsua.pjrpid_activity getActivity()>
<com.csipsimple.utils.contacts.ContactsUtils14: void <init>()>
<com.csipsimple.pjsip.PjSipCalls: java.lang.String dumpCallInfo(int)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void <init>(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,android.content.Context,com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_media_state(org.pjsip.pjsua.Callback,int)>
<com.actionbarsherlock.internal.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)>
<dummyMainClass: com.csipsimple.ui.prefs.cupcake.MainPrefs dummyMainMethod_com_csipsimple_ui_prefs_cupcake_MainPrefs(android.content.Intent)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_q_const__pj_str_t_int_p_int__void: void <init>(long,boolean)>
<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void <init>(android.content.Context)>
<com.csipsimple.wizards.impl.Flowroute: void fillLayout(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean initializePanelMenu()>
<org.pjsip.pjsua.pjmedia_dir: void <clinit>()>
<org.pjsip.pjsua.pjsip_tls_setting: org.pjsip.pjsua.pj_qos_params getQos_params()>
<com.csipsimple.widgets.AccountChooserButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.utils.PreferencesProviderWrapper: int getStunEnabled()>
<org.pjsip.pjsua.pjsua_call_info: void <init>()>
<com.csipsimple.ui.prefs.hc.MainPrefs: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.ui.messages.MessageFragment: void onAttach(android.app.Activity)>
<com.csipsimple.wizards.impl.Globtelecom: void <init>()>
<com.csipsimple.service.SipService$1: void sipStop()>
<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofInt(int[])>
<com.csipsimple.ui.messages.MessageAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<com.actionbarsherlock.internal.utils.UtilityWrapper: com.actionbarsherlock.internal.utils.UtilityWrapper getInstance()>
<com.csipsimple.wizards.impl.VoipTel: void updateAccountInfos(com.csipsimple.api.SipProfile)>
<com.csipsimple.pjsip.PjSipService: boolean sipStop()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void <init>(android.content.Context)>
<com.csipsimple.wizards.impl.IPComms: void <init>()>
<com.csipsimple.wizards.impl.AbcVoip: void <init>()>
<com.actionbarsherlock.app.SherlockListFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
<org.pjsip.pjsua.pjsua_acc_config: void <init>()>
<com.csipsimple.ui.incall.CallProximityManager: void acquire()>
<com.csipsimple.wizards.impl.Basic: boolean canSave()>
<com.csipsimple.api.SipCallSession$1: java.lang.Object createFromParcel(android.os.Parcel)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void bindTab(com.actionbarsherlock.app.ActionBar$Tab)>
<com.csipsimple.ui.messages.MessageAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<org.pjsip.pjsua.pjsua_vid_win_info: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_coord getPos()>
<com.csipsimple.service.PreferenceProvider: boolean onCreate()>
<com.csipsimple.ui.favorites.FavAdapter$MenuCallback: boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem)>
<com.csipsimple.ui.dialpad.DialerFragment: void setTextDialing(boolean,boolean)>
<com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord: void <init>(java.lang.String,long,float)>
<org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int,int)>
<com.csipsimple.ui.messages.ConversationsListFragment: void onClickAddMessage()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void scheduleAccessibilityEventSender()>
<com.csipsimple.ui.SipHome: void asyncSanityCheck()>
<com.csipsimple.service.SipService$1$11: java.lang.Object runWithReturn()>
<com.csipsimple.wizards.impl.InterTelecomGr: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setProgress(int)>
<com.actionbarsherlock.widget.ShareActionProvider: void <init>(android.content.Context)>
<com.csipsimple.wizards.impl.Ekiga: void <init>()>
<com.csipsimple.wizards.impl.BaseImplementation: void setListFieldSummary(java.lang.String)>
<com.csipsimple.wizards.impl.AuthorizationImplementation: void <init>()>
<com.csipsimple.pjsip.UAStateReceiver$2: void doRun()>
<org.pjsip.pjsua.csipsimple_acc_config: org.pjsip.pjsua.pj_str_t getP_preferred_identity()>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: com.actionbarsherlock.view.MenuInflater getMenuInflater()>
<com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)>
<com.csipsimple.wizards.impl.EasyBell: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.service.SipService$1$16: void <init>(com.csipsimple.service.SipService$1,boolean)>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.SWIGTYPE_p_pjsip_endpoint get_pjsip_endpt()>
<org.pjsip.pjsua.SWIGTYPE_p_pj_timer_entry: void <init>(long,boolean)>
<com.csipsimple.ui.dialpad.DialerFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
<com.csipsimple.ui.warnings.WarningFragment: void setWarningList(java.util.List)>
<org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pj_qos_params getQos_params()>
<com.csipsimple.wizards.impl.Vono: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.utils.Utility4: int loadLogoFromManifest(android.app.Activity)>
<com.csipsimple.ui.account.AccountsLoader$FilteredProfile: java.lang.String rewriteNumber(java.lang.String)>
<com.csipsimple.ui.incall.CallProximityManager: void release(int)>
<com.csipsimple.pjsip.UAStateReceiver: org.pjsip.pjsua.pjsip_redirect_op on_call_redirected(int,org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.wizards.impl.Sip2Sip: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void animateValue(float)>
<com.csipsimple.wizards.BasePrefsWizard: void onDestroy()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_sdp_session_p_pj_pool_t_p_q_const__pjmedia_sdp_session__void getOn_call_sdp_created()>
<com.csipsimple.wizards.impl.Voipdoup: void <init>()>
<com.csipsimple.utils.Base64: java.lang.String encodeBytes(byte[],int,int,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet)>
<com.csipsimple.ui.messages.ConversationsListFragment: boolean onContextItemSelected(android.view.MenuItem)>
<com.csipsimple.ui.incall.InCallActivity$UpdateUIFromCallRunnable: void run()>
<com.csipsimple.api.SipProfile: java.lang.String getDefaultDomain()>
<com.csipsimple.utils.Compatibility: void updateApiVersion(com.csipsimple.utils.PreferencesWrapper,int,int)>
<com.csipsimple.wizards.impl.SipSorcery: void <init>()>
<com.csipsimple.utils.ExtraPlugins$DynCodecInfos: void <init>(android.content.Context,android.content.ComponentName)>
<dummyMainClass: com.csipsimple.ui.dialpad.DialerAutocompleteDetailsFragment dummyMainMethod_com_csipsimple_ui_dialpad_DialerAutocompleteDetailsFragment(android.content.Intent,android.app.Activity)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void <init>()>
<com.csipsimple.wizards.impl.LiberTalk: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getCSipPhonesByGroup(android.content.Context,java.lang.String)>
<com.csipsimple.wizards.impl.Expert: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void access$0(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean,boolean)>
<com.csipsimple.wizards.impl.Localphone: void <init>()>
<com.csipsimple.wizards.impl.BelCentrale: void updateDescriptions()>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_ice_config_use getIce_cfg_use()>
<com.csipsimple.utils.Theme: void applyLayoutMargin(android.view.View,java.lang.String)>
<com.csipsimple.ui.incall.InCallInfoGrid: void setAdapter(android.widget.ListAdapter)>
<org.pjsip.pjsua.Callback: void <init>()>
<com.actionbarsherlock.app.SherlockListFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<com.csipsimple.wizards.impl.Vitelity: void updateDescriptions()>
<com.actionbarsherlock.internal.view.StandaloneActionMode: void <init>(android.content.Context,com.actionbarsherlock.internal.widget.ActionBarContextView,com.actionbarsherlock.view.ActionMode$Callback,boolean)>
<com.csipsimple.wizards.impl.SipCel: void <init>()>
<com.csipsimple.utils.Base64: byte[] decode(java.lang.String,int)>
<com.csipsimple.utils.ContactsAsyncHelper: void updateImageViewWithContactPhotoAsync(android.content.Context,android.widget.ImageView,com.csipsimple.models.CallerInfo,int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setFloatValues(float[])>
<com.csipsimple.utils.CollectLogs: com.csipsimple.utils.CollectLogs$LogResult getLogs(android.content.Context)>
<com.actionbarsherlock.widget.ActivityChooserModel: com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String)>
<com.csipsimple.wizards.WizardUtils: void initWizards()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void calculateValue(float)>
<com.csipsimple.wizards.impl.IiNet: void <init>()>
<com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onClick(android.view.View)>
<org.pjsip.pjsua.pjsua_vid_win_info: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rect_size getSize()>
<dummyMainClass: com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity dummyMainMethod_com_csipsimple_ui_prefs_cupcake_PrefsLoaderActivity(android.content.Intent)>
<com.csipsimple.service.SipService$1$14: void doRun()>
<dummyMainClass: com.csipsimple.service.Downloader dummyMainMethod_com_csipsimple_service_Downloader(android.content.Intent)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void playTogether(java.util.Collection)>
<com.csipsimple.ui.prefs.CodecsFragment: void access$3(com.csipsimple.ui.prefs.CodecsFragment,java.util.Map,short)>
<com.csipsimple.pjsip.NativeLibManager: java.io.File getBundledStackLibFile(android.content.Context,java.lang.String)>
<com.csipsimple.wizards.impl.Ovh: void <init>()>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void <init>(android.content.Context)>
<com.csipsimple.utils.SipProfileJson: org.json.JSONArray serializeSipProfiles(android.content.Context)>
<com.csipsimple.service.SipService$1: int sendDtmf(int,int)>
<com.csipsimple.wizards.impl.Freephonie: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.utils.PreferencesProviderWrapper: float getPreferenceFloatValue(java.lang.String)>
<dummyMainClass: com.csipsimple.widgets.AccountWidgetConfigure dummyMainMethod_com_csipsimple_widgets_AccountWidgetConfigure(android.content.Intent)>
<org.pjsip.pjsua.pjsua_ice_config_use: void <init>(java.lang.String,int,int)>
<dummyMainClass: com.csipsimple.service.HeadsetButtonReceiver dummyMainMethod_com_csipsimple_service_HeadsetButtonReceiver(android.content.Intent)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void reopenMenu(boolean)>
<com.csipsimple.wizards.impl.Flowroute: boolean canSave()>
<com.csipsimple.wizards.impl.XNet: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean useRoutingApi()>
<com.csipsimple.utils.contacts.ContactsWrapper$ContactInfo: void <init>(com.csipsimple.utils.contacts.ContactsWrapper)>
<com.csipsimple.wizards.impl.Balses: void <init>()>
<com.csipsimple.utils.PreferencesProviderWrapper: int getTlsKeepAliveInterval()>
<org.pjsip.pjsua.pjsua_transport_config: org.pjsip.pjsua.pjsip_tls_setting getTls_setting()>
<com.csipsimple.wizards.impl.VoipMS: void <init>()>
<com.csipsimple.service.SipNotifications: void notifyRegisteredAccounts(java.util.ArrayList,boolean)>
<com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu)>
<com.csipsimple.models.Filter: java.util.List getFiltersForAccount(android.content.Context,long)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.csipsimple.utils.contacts.ContactsUtils3: com.csipsimple.models.CallerInfo findCallerInfo(android.content.Context,java.lang.String)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_call_hold_type getCall_hold_type()>
<com.csipsimple.ui.calllog.CallLogDetailsActivity: void onStart()>
<com.csipsimple.ui.prefs.GenericPrefs: void onPause()>
<org.pjsip.pjsua.pj_stun_resolve_result: void <init>(long,boolean)>
<org.webrtc.videoengine.ViEAndroidGLES20$ContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder: void <init>(java.lang.String,float[])>
<com.csipsimple.wizards.impl.Cryptel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(long)>
<com.csipsimple.wizards.impl.FringTalkTw: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_f_int__int: void <init>(long,boolean)>
<dummyMainClass: com.csipsimple.ui.filters.EditFilter dummyMainMethod_com_csipsimple_ui_filters_EditFilter(android.content.Intent)>
<com.csipsimple.service.SipService$1$3: void <init>(com.csipsimple.service.SipService$1)>
<com.csipsimple.ui.prefs.Codecs: void onCreate(android.os.Bundle)>
<com.actionbarsherlock.app.SherlockFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.csipsimple.wizards.impl.Keyyo: void <init>()>
<org.pjsip.pjsua.pjsip_inv_state: void <clinit>()>
<com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.pjsip.pjsua.pjsua_call_vid_strm_op_param: org.pjsip.pjsua.pjmedia_dir getDir()>
<com.csipsimple.ui.incall.InCallInfoGrid$1: void run()>
<com.csipsimple.service.SipService$1: com.csipsimple.api.MediaState getCurrentMediaState()>
<com.csipsimple.ui.incall.InCallMediaControl: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getContact_params()>
<com.csipsimple.api.MediaState: void <init>(android.os.Parcel,com.csipsimple.api.MediaState)>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsua_call_media_info getMedia()>
<com.csipsimple.db.DBProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<dummyMainClass: com.csipsimple.ui.PickupSipUri dummyMainMethod_com_csipsimple_ui_PickupSipUri(android.content.Intent)>
<com.csipsimple.ui.favorites.FavAdapter: void applyNumbersToCSip(java.lang.String,int,java.lang.String,long)>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean isTCPEnabled()>
<org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int,int)>
<com.csipsimple.service.SipService$1: com.csipsimple.api.SipProfileState getSipProfileState(int)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_typing(org.pjsip.pjsua.Callback,int,long,long,long,int)>
<com.csipsimple.ui.favorites.PresenceStatusSpinner: void <init>(android.content.Context,android.util.AttributeSet)>
<org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pjsua_buddy_status getStatus()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_tp_state_callback: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_sip_timer_use getUse_timer()>
<org.pjsip.pjsua.pjrpid_element: org.pjsip.pjsua.pj_str_t getId()>
<org.pjsip.pjsua.SWIGTYPE_p_unsigned_int: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjmedia_dir getMedia_dir()>
<com.actionbarsherlock.ActionBarSherlock: void <clinit>()>
<org.pjsip.pjsua.pjsua_mwi_info: org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data getRdata()>
<com.csipsimple.api.SipProfileState: void <init>(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean isTLSEnabled()>
<com.csipsimple.ui.calllog.CallLogListFragment: void access$0(com.csipsimple.ui.calllog.CallLogListFragment)>
<com.csipsimple.ui.incall.InCallActivity$CallsAdapter: java.lang.Object getItem(int)>
<com.csipsimple.wizards.impl.FreephoneLineCa: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.ui.SipHome: void <init>()>
<com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>
<com.csipsimple.utils.Theme: void applyLayoutSize(android.view.View,java.lang.String)>
<com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)>
<com.csipsimple.wizards.impl.VoipTiger: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Betamax: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.pjsip.UAStateReceiver: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.utils.contacts.ContactsAutocompleteAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
<com.csipsimple.wizards.impl.MondotalkCreate: void onCreate(android.os.Bundle)>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsip_inv_state getState()>
<com.actionbarsherlock.internal.ActionBarSherlockNative: boolean dispatchCreateOptionsMenu(android.view.Menu)>
<com.csipsimple.widgets.EditSipUri: void onTextChanged(java.lang.CharSequence,int,int,int)>
<com.csipsimple.wizards.impl.Blicnet: void <init>()>
<com.csipsimple.service.MediaManager: int getAudioTargetMode()>
<com.csipsimple.wizards.impl.Cellip: void <init>()>
<com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void <init>(com.csipsimple.ui.incall.InCallActivity,com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable)>
<org.pjsip.pjsua.pjsua_med_tp_state_info: org.pjsip.pjsua.pjsua_med_tp_st getState()>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_replace_request(org.pjsip.pjsua.Callback,int,long,long,long)>
<com.csipsimple.ui.calllog.PhoneCallDetailsViews: com.csipsimple.ui.calllog.PhoneCallDetailsViews createForTest(android.content.Context)>
<com.csipsimple.wizards.impl.Cryptel: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void <init>(android.app.Activity,int)>
<com.csipsimple.wizards.impl.Sipgate$AccountBalance: org.apache.http.client.methods.HttpRequestBase getRequest(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.MondotalkCreate$2: void run()>
<com.csipsimple.wizards.impl.Anv: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.models.CallerInfo: void <clinit>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_pres_status: void <init>(long,boolean)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateProgressBars(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone()>
<com.csipsimple.service.SipService: void unregisterAllAccounts(boolean)>
<com.csipsimple.ui.account.AccountsLoader: void onCanceled(android.database.Cursor)>
<com.csipsimple.wizards.impl.CallRomania: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.api.SipManager$PresenceStatus: void <clinit>()>
<org.pjsip.pjsua.pjsua_sip_timer_use: void <init>(java.lang.String,int,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_pool_callback: void <init>(long,boolean)>
<com.csipsimple.ui.prefs.AudioTester$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_event_id_e)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: void <init>(android.app.Activity,int)>
<com.csipsimple.service.MediaManager: void setBluetoothOn(boolean)>
<com.csipsimple.models.Filter: java.lang.String getRepresentation(android.content.Context)>
<com.csipsimple.api.SipProfile: java.lang.String getDisplayName()>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getRfc5626_instance_id()>
<com.csipsimple.service.SipService$1: int hold(int)>
<com.actionbarsherlock.internal.app.ActionBarWrapper: com.actionbarsherlock.app.ActionBar$Tab newTab()>
<org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getVid_converter()>
<com.csipsimple.wizards.impl.WiMobile: void <init>()>
<com.csipsimple.ui.dialpad.DialerFragment: void <init>()>
<com.csipsimple.wizards.impl.Beeztel: void <init>()>
<com.csipsimple.wizards.impl.Gizmo5: void <init>()>
<com.csipsimple.pjsip.UAStateReceiver: boolean handleHeadsetButton()>
<com.csipsimple.wizards.impl.Sipkom: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader)>
<com.csipsimple.wizards.impl.Ecs: void <init>()>
<com.csipsimple.service.SipService$1: void confAdjustRxLevel(int,float)>
<com.csipsimple.pjsip.PjSipService: void playWaveFile(java.lang.String,int,int)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void <init>(android.content.Context)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjmedia_sdp_session_p_void_p_enum_pjsip_status_code_p_pjsua_call_setting__void: void <init>(long,boolean)>
<com.csipsimple.api.SipProfile: void <init>(android.database.Cursor)>
<com.csipsimple.service.receiver.DynamicReceiver4$1: void doRun()>
<com.csipsimple.widgets.AccountWidgetConfigure: void onAccountClicked(long)>
<com.csipsimple.wizards.impl.Local: boolean canSave()>
<com.csipsimple.ui.help.Help: boolean isRecording()>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_media_type: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.Amivox: void <init>()>
<com.csipsimple.models.CallerInfo$CallerInfoLruCache: com.csipsimple.models.CallerInfo create(java.lang.String)>
<dummyMainClass: com.csipsimple.ui.account.AccountsEditList dummyMainMethod_com_csipsimple_ui_account_AccountsEditList(android.content.Intent)>
<com.csipsimple.ui.calllog.CallDetailHistoryAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat$1: void run()>
<com.csipsimple.wizards.impl.AlternateServerImplementation: boolean canSave()>
<com.csipsimple.wizards.impl.Blicnet: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnSDCard(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)>
<com.csipsimple.ui.prefs.PrefsFast$Profile: void <clinit>()>
<com.csipsimple.wizards.impl.DeltaThree: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_event__void: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsip_cred_data_type: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_cred_data_type)>
<com.csipsimple.service.SipService$1$1: void doRun()>
<com.actionbarsherlock.widget.ActivityChooserModel: void loadActivitiesLocked()>
<com.actionbarsherlock.internal.app.ActionBarImpl: void <init>(android.app.Dialog)>
<com.csipsimple.db.DBProvider: java.lang.String getType(android.net.Uri)>
<com.csipsimple.service.PresenceManager: void changeBuddyState(java.lang.String,int,com.csipsimple.api.SipManager$PresenceStatus,java.lang.String)>
<org.pjsip.pjsua.pjsua_media_config: org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type getTurn_conn_type()>
<com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: void <init>(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe[])>
<com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getKa_data()>
<com.csipsimple.ui.favorites.FavLoader: void onCanceled(java.lang.Object)>
<com.csipsimple.ui.favorites.FavAdapter$6: void onClick(android.content.DialogInterface,int)>
<com.csipsimple.pjsip.PjSipAccount: void <init>(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.audio.AudioFocus3: void restartMusic()>
<com.actionbarsherlock.internal.view.menu.MenuBuilder: com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__char_int__void: void <init>(long,boolean)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void removeAllTabs()>
<com.csipsimple.service.SipNotifications: void setViewingMessageFrom(java.lang.String)>
<com.csipsimple.pjsip.PjSipService: void setPresence(com.csipsimple.api.SipManager$PresenceStatus,java.lang.String,long)>
<com.csipsimple.ui.calllog.CallTypeIconsView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout: void loadStaticMethods()>
<com.csipsimple.service.SipService$1$6: void doRun()>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout: void <init>(android.content.Context)>
<org.pjsip.pjsua.pjsip_event_id_e: void <init>(java.lang.String,int,int)>
<org.pjsip.pjsua.csipsimple_config: org.pjsip.pjsua.dynamic_factory getAudio_implementation()>
<com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.models.CallerInfo findCallerInfo(android.content.Context,java.lang.String)>
<com.csipsimple.service.SipNotifications: void onServiceCreate()>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_buddy_state(org.pjsip.pjsua.Callback,int)>
<com.actionbarsherlock.widget.ActivityChooserView: com.actionbarsherlock.internal.widget.IcsListPopupWindow access$1(com.actionbarsherlock.widget.ActivityChooserView)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: void <init>(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet)>
<org.pjsip.pjsua.pjsua_sip_timer_use: void <clinit>()>
<org.pjsip.pjsua.pjmedia_snd_dev_info: void <init>()>
<com.csipsimple.service.SipService$1$9: void <init>(com.csipsimple.service.SipService$1,com.csipsimple.service.SipService,int,java.lang.String)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void updateInt(int,int,boolean)>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: com.actionbarsherlock.app.ActionBar$Tab setCustomView(int)>
<com.csipsimple.wizards.impl.PlanetPhone: void <init>()>
<com.csipsimple.wizards.impl.MegaVoip: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.wizards.impl.SipMe: void <init>()>
<com.csipsimple.wizards.impl.FastVoip: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.csipsimple.service.MediaManager: void startRing(java.lang.String)>
<org.pjsip.pjsua.pjsua_mwi_info: org.pjsip.pjsua.SWIGTYPE_p_pjsip_evsub getEvsub()>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pjsua_msg_data msg_data_clone(org.pjsip.pjsua.pj_pool_t,org.pjsip.pjsua.pjsua_msg_data)>
<com.csipsimple.wizards.impl.VoipLlama: boolean canSave()>
<com.csipsimple.pjsip.PjSipService: void setNoSnd()>
<com.csipsimple.wizards.impl.SipMe: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.accessibility.Accessibility4: void <init>()>
<org.pjsip.pjsua.pjsua_stream_stat: org.pjsip.pjsua.SWIGTYPE_p_pjmedia_rtcp_stat getRtcp()>
<com.csipsimple.wizards.impl.Keyyo: void setKeyyoDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_qos_wmm_prio: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua_config: void <init>()>
<com.csipsimple.wizards.impl.Gradwell: void <init>()>
<com.actionbarsherlock.internal.widget.IcsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_publishc_opt: void <init>(long,boolean)>
<com.csipsimple.ui.account.AccountsEditListFragment: void onActivityCreated(android.os.Bundle)>
<com.csipsimple.wizards.impl.Sapo: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone()>
<org.pjsip.pjsua.pjsua_transport_info: void <init>(long,boolean)>
<com.csipsimple.db.DBProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<org.webrtc.videoengine.VideoCaptureAndroid: int StartCapture(int,int,int)>
<com.actionbarsherlock.app.SherlockDialogFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.csipsimple.ui.messages.ConversationsListFragment$5: void run()>
<com.csipsimple.wizards.impl.Fayn: void <init>()>
<com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)>
<com.csipsimple.service.SipService$1: void addAllAccounts()>
<com.csipsimple.wizards.impl.Catitel: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void <init>()>
<com.actionbarsherlock.internal.widget.ActionBarView: void setDropdownAdapter(android.widget.SpinnerAdapter)>
<com.csipsimple.wizards.impl.Vanbergsystems: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjmedia_stream_unsigned_int_p_p_pjmedia_port__void: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua_create_media_transport_flag: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_create_media_transport_flag)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_codec_param: void <init>(long,boolean)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_evsub__void: void <init>(long,boolean)>
<com.csipsimple.ui.filters.EditFilter: void onTextChanged(java.lang.CharSequence,int,int,int)>
<com.csipsimple.wizards.impl.Pozitel: void <init>()>
<dummyMainClass: com.csipsimple.ui.prefs.PrefsFilters dummyMainMethod_com_csipsimple_ui_prefs_PrefsFilters(android.content.Intent)>
<com.csipsimple.utils.PreferencesProviderWrapper: void setCodecList(java.util.List)>
<com.csipsimple.wizards.impl.ITTelenet: void <init>()>
<com.actionbarsherlock.widget.ActivityChooserModel: void persistHistoricalData()>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter: void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<com.csipsimple.wizards.impl.MegaVoip: void <init>()>
<com.csipsimple.ui.filters.EditFilter: boolean matcherNeedsText()>
<com.csipsimple.wizards.impl.FreephoneLineCa: void <init>()>
<org.pjsip.pjsua.pjsua_msg_data: org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr getHdr_list()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sdp_session: void <init>(long,boolean)>
<com.actionbarsherlock.internal.utils.Utility5: void <init>()>
<com.csipsimple.ui.SipHome: void onNewIntent(android.content.Intent)>
<com.actionbarsherlock.view.MenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu)>
<com.csipsimple.wizards.impl.Optimus: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr getSub_hdr_list()>
<com.csipsimple.utils.PreferencesProviderWrapper: int getIceEnabled()>
<com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView: void <init>(android.content.Context)>
<com.csipsimple.wizards.impl.TOnline: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.api.SipProfile: java.lang.String getSipDomain()>
<com.csipsimple.utils.Base64: void decodeFileToFile(java.lang.String,java.lang.String)>
<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: boolean isEnabled(int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_tx_data: void <init>(long,boolean)>
<com.csipsimple.service.SipService$1$2: void doRun()>
<com.csipsimple.ui.favorites.FavAdapter: void showDialogForGroupSelection(android.content.Context,java.lang.Long,java.lang.String)>
<com.csipsimple.wizards.impl.Expert: boolean canSave()>
<com.csipsimple.utils.contacts.ContactsSearchAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<com.csipsimple.service.SipService: int shouldAutoAnswer(java.lang.String,com.csipsimple.api.SipProfile)>
<com.csipsimple.service.SipService$1$13: java.lang.Object runWithReturn()>
<com.csipsimple.service.SipService$1: void removeAllAccounts()>
<com.csipsimple.utils.PreferencesProviderWrapper: int getTcpKeepAliveInterval()>
<com.csipsimple.wizards.impl.Zadarma: void <init>()>
<com.csipsimple.models.Filter: com.csipsimple.models.Filter$RegExpRepresentation getRepresentationForMatcher()>
<org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_buddy_status)>
<com.csipsimple.wizards.impl.Advanced: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_ssl_cipher: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsuaJNI: int SwigDirector_Callback_timer_schedule(org.pjsip.pjsua.Callback,int,int,int)>
<com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.actionbarsherlock.widget.ActivityChooserModel: void setDefaultActivity(int)>
<com.csipsimple.wizards.impl.Tanstagi: void <init>()>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_nat_detect(org.pjsip.pjsua.Callback,long)>
<com.csipsimple.wizards.impl.SiptelPt: void <init>()>
<com.csipsimple.service.SipService$SyncStopRunnable: java.lang.Object runWithReturn()>
<com.csipsimple.widgets.contactbadge.ContactBadge3: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>
<dummyMainClass: com.csipsimple.ui.incall.InCallMediaControl dummyMainMethod_com_csipsimple_ui_incall_InCallMediaControl(android.content.Intent)>
<com.csipsimple.service.SipService$2: boolean getPreferenceBoolean(java.lang.String)>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean hasEchoCancellation()>
<com.csipsimple.ui.prefs.PrefsFast: void onCreate(android.os.Bundle)>
<com.csipsimple.utils.PreferencesProviderWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
<com.csipsimple.wizards.impl.Sbohempevnalinko: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_rx_data_p_int_p_pj_str_t_p_pjsua_call_setting__void: void <init>(long,boolean)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setContentView(int)>
<com.actionbarsherlock.internal.widget.ActionBarContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_unsigned_int_p_pjmedia_transport_unsigned_int__p_pjmedia_transport: void <init>(long,boolean)>
<com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: java.lang.Object getValue(float)>
<com.csipsimple.service.SipService$1$24: void doRun()>
<com.actionbarsherlock.internal.widget.IcsSpinner: void onMeasure(int,int)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_teardown_audio(org.pjsip.pjsua.Callback)>
<com.actionbarsherlock.internal.app.ActionBarImpl$1: void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float,float)>
<com.csipsimple.utils.SipProfileJson: boolean restoreSipProfile(org.json.JSONObject,android.content.ContentResolver)>
<com.csipsimple.wizards.impl.OXO810: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_index: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.Innotel: void <init>()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int__void getOn_reg_state()>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_call_replaced(org.pjsip.pjsua.Callback,int,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_sock_info: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.CallRomania: void <init>()>
<org.pjsip.pjsua.pjmedia_srtp_use: void <init>(java.lang.String,int,org.pjsip.pjsua.pjmedia_srtp_use)>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean isUDPEnabled()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone()>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onDestroy()>
<com.csipsimple.service.SipService: int addBuddy(java.lang.String)>
<com.csipsimple.service.SipService$1: java.lang.String showCallInfosDialog(int)>
<com.csipsimple.utils.PreferencesProviderWrapper: int getPreferenceIntegerValue(java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua_med_tp_state_info: void <init>()>
<com.csipsimple.wizards.impl.Vitelity: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_transport_info: org.pjsip.pjsua.SWIGTYPE_p_pj_sockaddr getLocal_addr()>
<com.csipsimple.utils.contacts.ContactsUtils3: java.util.List getPhoneNumbers(android.content.Context,long,int)>
<com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: void <init>(com.actionbarsherlock.internal.app.ActionBarImpl)>
<com.csipsimple.api.SipProfile: java.util.ArrayList getAllProfiles(android.content.Context,boolean)>
<com.csipsimple.utils.MD5: boolean checkMD5(java.lang.String,java.io.File)>
<com.csipsimple.ui.incall.InCallActivity: void onPause()>
<com.csipsimple.wizards.impl.IpTel: void <init>()>
<com.csipsimple.ui.prefs.hc.MainPrefs: void onCreate(android.os.Bundle)>
<com.csipsimple.utils.PreferencesWrapper: java.io.File getLogsFile(android.content.Context,boolean)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void setNavigationMode(int)>
<org.pjsip.pjsua.pjsua_vid_win_info: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsua_call_setting getSetting()>
<com.actionbarsherlock.app.SherlockFragmentActivity: void supportInvalidateOptionsMenu()>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean)>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean useIPv6()>
<com.csipsimple.service.SipService$1$27: void <init>(com.csipsimple.service.SipService$1)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable: void <init>(com.actionbarsherlock.internal.widget.IcsListPopupWindow,com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable)>
<com.csipsimple.wizards.impl.BGTel: void <init>()>
<com.actionbarsherlock.internal.widget.IcsAbsSpinner: void setAdapter(android.widget.SpinnerAdapter)>
<com.csipsimple.utils.contacts.ContactsSearchAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
<org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_inv_state)>
<com.csipsimple.utils.clipboard.Clipboard11: void <init>()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchConfigurationChanged(android.content.res.Configuration)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_int_p_pjsip_rx_data_int__void: void <init>(long,boolean)>
<com.csipsimple.utils.ContactsAsyncHelper: void <init>()>
<dummyMainClass: com.csipsimple.widgets.AccountWidgetProvider dummyMainMethod_com_csipsimple_widgets_AccountWidgetProvider(android.content.Intent)>
<com.csipsimple.service.SipService$RestartRunnable: void doRun()>
<com.actionbarsherlock.widget.ActivityChooserView: void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel)>
<com.csipsimple.ui.favorites.FavAdapter: void <init>(android.content.Context,android.database.Cursor)>
<com.csipsimple.wizards.impl.CongstarTelekom: boolean canSave()>
<com.csipsimple.utils.PreferencesProviderWrapper: void setPreferenceBooleanValue(java.lang.String,boolean)>
<com.csipsimple.ui.outgoingcall.OutgoingAccountsAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<com.csipsimple.wizards.impl.VoipBel: void <init>()>
<com.csipsimple.utils.PreferencesProviderWrapper: boolean isValidConnectionFor(android.net.NetworkInfo,java.lang.String)>
<com.csipsimple.wizards.impl.Fritzbox: java.lang.String getDefaultFieldSummary(java.lang.String)>
<org.pjsip.pjsua.pjsua_vid_preview_param: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.Zadarma$AccountBalance: org.apache.http.client.methods.HttpRequestBase getRequest(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Mobex: void <init>()>
<com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void setStringFieldSummary(java.lang.String)>
<com.csipsimple.utils.TimerWrapper: int cancel(int,int)>
<com.csipsimple.wizards.impl.BroadVoice: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.WizardUtils: java.util.ArrayList getWizardsGroupedList()>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])>
<com.csipsimple.utils.PreferencesProviderWrapper: void setCodecPriority(java.lang.String,java.lang.String,java.lang.String)>
<com.csipsimple.ui.messages.ConversationsListFragment: void confirmDeleteThread(java.lang.String)>
<com.csipsimple.ui.messages.ConversationsListFragment: void onResume()>
<com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet clone()>
<com.csipsimple.utils.keyguard.Keyguard5: void <init>()>
<com.csipsimple.wizards.impl.Sipnet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void show()>
<com.csipsimple.pjsip.UAStateReceiver: void on_call_state(int,org.pjsip.pjsua.pjsip_event)>
<com.csipsimple.wizards.impl.Callcentric: void <init>()>
<com.csipsimple.utils.audio.AudioFocus3: void <init>()>
<com.csipsimple.ui.calllog.CallLogListFragment$2: void run()>
<com.csipsimple.wizards.impl.Ippi: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.incall.InCallInfoGrid: void removeViewAt(int)>
<com.csipsimple.wizards.impl.IiNet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<dummyMainClass: com.csipsimple.ui.filters.AccountFiltersListFragment dummyMainMethod_com_csipsimple_ui_filters_AccountFiltersListFragment(android.content.Intent,android.app.Activity)>
<com.actionbarsherlock.internal.view.menu.ActionMenuView: void <init>(android.content.Context,android.util.AttributeSet)>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_setup_audio(org.pjsip.pjsua.Callback)>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_pool_t pool_create(java.lang.String,long,long)>
<com.csipsimple.wizards.impl.VoipBel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.widgets.SlidingTab: void <init>(android.content.Context)>
<com.csipsimple.wizards.impl.FastVoip: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.calllog.CallLogAdapter: android.view.View newStandAloneView(android.content.Context,android.view.ViewGroup)>
<com.csipsimple.wizards.impl.OnSip: void <clinit>()>
<com.actionbarsherlock.internal.widget.ActionBarView: void initProgress()>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu)>
<com.csipsimple.service.SipNotifications: void showNotificationForMessage(com.csipsimple.api.SipMessage)>
<com.csipsimple.ui.favorites.FavAdapter$1: void onClick(android.view.View)>
<com.csipsimple.utils.Columns: android.content.ContentValues jsonToContentValues(org.json.JSONObject)>
<com.csipsimple.ui.PickupSipUri: void onClick(android.view.View)>
<com.csipsimple.service.SipService: void cleanStop()>
<com.csipsimple.utils.TimerWrapper: void quit()>
<com.csipsimple.ui.prefs.Codecs$TabsAdapter: void onPageScrollStateChanged(int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_aud_dev_cap: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.XNet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[])>
<com.csipsimple.service.receiver.DynamicReceiver4: java.lang.String access$1(com.csipsimple.service.receiver.DynamicReceiver4)>
<com.csipsimple.utils.accessibility.Accessibility3: void <init>()>
<com.csipsimple.ui.SipHome$TabsAdapter: void onPageScrollStateChanged(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofInt(int[])>
<org.pjsip.pjsua.pjsua_destroy_flag: void <clinit>()>
<com.csipsimple.wizards.impl.Keyyo: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Broadsoft: void <init>()>
<com.csipsimple.pjsip.PjSipService: com.csipsimple.api.SipProfile getAccountForPjsipId(int)>
<com.csipsimple.ui.messages.MessageFragment$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void playSequentially(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[])>
<com.csipsimple.ui.calllog.CallLogListFragment: void viewDetails(int,long[])>
<com.csipsimple.ui.prefs.cupcake.MainPrefs: boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu)>
<com.actionbarsherlock.internal.view.menu.SubMenuWrapper: com.actionbarsherlock.view.MenuItem getItem()>
<com.csipsimple.wizards.impl.Interphone365: void <init>()>
<com.csipsimple.wizards.impl.SimpleImplementation: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void getOn_reg_started()>
<org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsip_ssl_method)>
<com.csipsimple.ui.warnings.WarningUtils$WarningBlockView: void onClick(android.view.View)>
<com.csipsimple.ui.SipHome: void onPause()>
<org.pjsip.pjsua.pjsua_buddy_status: void <init>(java.lang.String,int,int)>
<com.csipsimple.wizards.impl.MiTelefono: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.NeufTalk: void <init>()>
<org.pjsip.pjsua.pjsip_transport_type_e: void <clinit>()>
<com.csipsimple.pjsip.PjSipService: void stopRecording(int)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsip_transaction_p_pjsip_event__void getOn_call_tsx_state()>
<com.csipsimple.wizards.impl.Ecs: void <clinit>()>
<com.csipsimple.service.SipService$1: void sipStart()>
<com.csipsimple.ui.SipHome: void access$4(com.csipsimple.ui.SipHome)>
<com.csipsimple.utils.contacts.ContactsWrapper: void treatContactPickerPositiveResult(android.content.Context,java.lang.String,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected)>
<com.csipsimple.wizards.impl.Ecs: boolean canSave()>
<com.csipsimple.widgets.contactbadge.ContactBadge5: void <init>(android.content.Context,android.util.AttributeSet,int,com.csipsimple.widgets.contactbadge.QuickContactBadge)>
<com.csipsimple.utils.PreferencesWrapper: void <clinit>()>
<com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy: void <init>(com.actionbarsherlock.widget.ShareActionProvider,com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.SWIGTYPE_p_pjsip_hdr getReg_hdr_list()>
<com.csipsimple.service.Downloader$FileStreamResponseHandler: java.lang.Object handleResponse(org.apache.http.HttpResponse)>
<org.pjsip.pjsua.pjsip_ssl_method: void <init>(java.lang.String,int,int)>
<com.csipsimple.wizards.impl.ZonPt: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.wizards.impl.Pbxes: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Sipnet: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_vid_dev_hwnd: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int__void getOn_buddy_state()>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_stun_use getSip_stun_use()>
<com.csipsimple.widgets.ScreenLocker: void show()>
<com.csipsimple.ui.incall.InCallActivity: void access$15(com.csipsimple.ui.incall.InCallActivity)>
<com.csipsimple.service.SipService$1: long confGetRxTxLevel(int)>
<com.csipsimple.wizards.impl.VoipTiger: void <init>()>
<com.csipsimple.wizards.impl.Haloo: void <init>()>
<org.pjsip.pjsua.pjsua_call_media_info: org.pjsip.pjsua.pjsua_call_media_status getStatus()>
<com.csipsimple.api.SipConfigManager: java.lang.Boolean getPreferenceBooleanValue(android.content.Context,java.lang.String)>
<com.csipsimple.utils.PreferencesWrapper: java.lang.Float getPreferenceFloatValue(java.lang.String)>
<org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pj_str_t[] getOutbound_proxy()>
<com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void <init>(com.actionbarsherlock.widget.ActivityChooserView,com.actionbarsherlock.widget.ActivityChooserView$Callbacks)>
<com.csipsimple.ui.dialpad.DialerFragment$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.csipsimple.wizards.impl.VoipMuch: void <init>()>
<com.csipsimple.api.SipProfile$1: com.csipsimple.api.SipProfile createFromParcel(android.os.Parcel)>
<com.actionbarsherlock.internal.utils.Utility16: void <init>()>
<com.csipsimple.wizards.impl.A1: void <init>()>
<com.csipsimple.wizards.impl.MundoR: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Callcentric: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.widgets.EditSipUri$ContactAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<com.csipsimple.service.MediaManager: void setMicrophoneMute(boolean)>
<com.csipsimple.ui.prefs.CodecsFragment: void initDatas()>
<com.csipsimple.wizards.impl.Cotas: void <init>()>
<com.csipsimple.wizards.impl.Vanbergsystems: void <init>()>
<com.csipsimple.wizards.impl.Cryptel: void <init>()>
<com.csipsimple.ui.messages.MessageFragment: void onClick(android.view.View)>
<org.pjsip.pjsua.dynamic_factory: org.pjsip.pjsua.dynamic_factory[] cArrayWrap(long[],boolean)>
<com.actionbarsherlock.app.SherlockFragment: void onPrepareOptionsMenu(android.view.Menu)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsip_cred_info getCred_info()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setProgressBarIndeterminateVisibility(boolean)>
<com.csipsimple.wizards.impl.Basic: void <init>()>
<com.csipsimple.ui.favorites.FavListFragment: void onVisibilityChanged(boolean)>
<org.pjsip.pjsua.pj_qos_type: void <init>(java.lang.String,int,org.pjsip.pjsua.pj_qos_type)>
<org.pjsip.pjsua.pjsua_stream_stat: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.SimpleImplementation: void updateDescriptions()>
<org.pjsip.pjsua.pjsua_buddy_info: org.pjsip.pjsua.pjrpid_element getRpid()>
<com.csipsimple.ui.prefs.AudioTester: void <init>()>
<com.actionbarsherlock.internal.widget.IcsSpinner: void layout(int,boolean)>
<org.pjsip.pjsua.dynamic_factory: org.pjsip.pjsua.pj_str_t getInit_factory_name()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_void_enum_pjsip_status_code_p_q_const__pj_str_t__void getOn_pager_status()>
<com.csipsimple.wizards.impl.Catitel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>
<dummyMainClass: com.csipsimple.wizards.WizardChooser dummyMainMethod_com_csipsimple_wizards_WizardChooser(android.content.Intent)>
<com.csipsimple.service.SipService: void setVideoWindow(int,java.lang.Object)>
<com.csipsimple.wizards.impl.AbcVoip: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjmedia_port: org.pjsip.pjsua.SWIGTYPE_p_f_p_pjmedia_port_p_pjmedia_frame__int getGet_frame()>
<com.csipsimple.wizards.impl.SimpleImplementation: boolean canSave()>
<com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet: java.lang.Object getValue(float)>
<com.csipsimple.ui.calllog.CallLogAdapter: android.view.View newChildView(android.content.Context,android.view.ViewGroup)>
<com.csipsimple.widgets.ScreenLocker: void hide()>
<com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void <init>()>
<com.csipsimple.utils.contacts.ContactsAutocompleteAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>
<com.actionbarsherlock.internal.view.menu.ActionMenu: com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence)>
<com.csipsimple.utils.keyguard.Keyguard3: void <init>()>
<org.pjsip.pjsua.pjsuaJNI: void SwigDirector_Callback_on_pager(org.pjsip.pjsua.Callback,int,long,long,long,long,long)>
<org.pjsip.pjsua.pjsua_stream_info: void <init>(long,boolean)>
<com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState: void <init>(android.os.Parcel)>
<com.csipsimple.wizards.impl.Sipgate: java.lang.String getDefaultFieldSummary(java.lang.String)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView: void init(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean)>
<com.csipsimple.wizards.impl.Ippi$AccountBalance: org.apache.http.client.methods.HttpRequestBase getRequest(com.csipsimple.api.SipProfile)>
<com.csipsimple.service.SipService$1: void makeCallWithOptions(java.lang.String,int,android.os.Bundle)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchPostCreate(android.os.Bundle)>
<com.csipsimple.widgets.AccountWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>
<com.csipsimple.wizards.impl.Viva: void <init>()>
<com.actionbarsherlock.internal.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pjsip_uri_p_q_const__pjsip_event__pjsip_redirect_op: void <init>(long,boolean)>
<com.csipsimple.utils.contacts.ContactsSearchAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>
<com.actionbarsherlock.internal.nineoldandroids.animation.Animator: com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone()>
<com.actionbarsherlock.widget.ActivityChooserView$Callbacks: boolean onLongClick(android.view.View)>
<com.csipsimple.pjsip.UAStateReceiver$2: void <init>(com.csipsimple.pjsip.UAStateReceiver,int)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_q_const__pj_str_t_p_pjsip_rx_data_int__void: void <init>(long,boolean)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_reg_info__void: void <init>(long,boolean)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])>
<com.csipsimple.wizards.impl.Messagenet: void <init>()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe clone()>
<com.csipsimple.service.SipService$1$22: void <init>(com.csipsimple.service.SipService$1,java.lang.String,int,int)>
<org.pjsip.pjsua.SWIGTYPE_p_pjsip_transport: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_turn_config getTurn_cfg()>
<com.actionbarsherlock.internal.widget.AbsActionBarView$1: void run()>
<com.csipsimple.utils.PreferencesWrapper: void addStunServer(java.lang.String)>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone()>
<com.csipsimple.wizards.impl.Expert: void <clinit>()>
<org.pjsip.pjsua.pjmedia_port: org.pjsip.pjsua.pjmedia_port_info getInfo()>
<com.actionbarsherlock.internal.utils.Utility8: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_jb_state: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.Telsome: void <init>()>
<com.actionbarsherlock.internal.widget.ActionBarView$HomeView: void <init>(android.content.Context)>
<org.pjsip.pjsua.pjsua_turn_config: org.pjsip.pjsua.SWIGTYPE_p_pj_turn_tp_type getTurn_conn_type()>
<com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter: void <init>(com.actionbarsherlock.widget.ActivityChooserModel,com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter)>
<com.csipsimple.ui.account.AccountsEditList: void onCreate(android.os.Bundle)>
<com.csipsimple.utils.contacts.ContactsUtils5: com.csipsimple.models.CallerInfo findCallerInfoForUri(android.content.Context,java.lang.String)>
<com.csipsimple.service.SipService$1: com.csipsimple.api.SipCallSession getCallInfo(int)>
<com.csipsimple.service.PresenceManager$1: void <init>(com.csipsimple.service.PresenceManager,java.util.List)>
<com.csipsimple.service.SipService$1: int xferReplace(int,int,int)>
<org.pjsip.pjsua.pjsua_codec_info: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.Basic: void fillLayout(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_buddy_status: void <clinit>()>
<com.csipsimple.wizards.impl.Nymgo: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.api.SipProfileState: void <init>(android.os.Parcel)>
<org.pjsip.pjsua.pjsip_transport_type_e: void <init>(java.lang.String,int,int)>
<com.csipsimple.wizards.impl.A1: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.SWIGTYPE_p_pjsip_auth_clt_pref getAuth_pref()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_transport_info: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.MondotalkCreate: boolean saveOnline(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.csipsimple.wizards.impl.SipWise: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.webrtc.videoengine.ViEAndroidGLES20$ConfigChooser: void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])>
<com.csipsimple.ui.incall.InCallAnswerControls: void applyTheme(com.csipsimple.utils.Theme)>
<com.csipsimple.wizards.impl.Freephonie: void <init>()>
<org.pjsip.pjsua.pjsua_call_hold_type: void <init>(java.lang.String,int,org.pjsip.pjsua.pjsua_call_hold_type)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_stun_auth_cred: void <init>(long,boolean)>
<com.csipsimple.widgets.ShortcutWidgetProvider: void updateWidget(android.content.Context)>
<com.csipsimple.wizards.impl.AlternateServerImplementation: void <init>()>
<com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag: void <init>(com.csipsimple.utils.ContactsAsyncHelper$PhotoViewTag)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet: void playSequentially(java.util.List)>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_int_p_pjsip_rx_data__void getOn_incoming_call()>
<com.csipsimple.pjsip.PjSipService: int updateCallOptions(int,android.os.Bundle)>
<org.pjsip.pjsua.pjsua_config: org.pjsip.pjsua.pjsua_sip_timer_use getUse_timer()>
<com.csipsimple.ui.incall.InCallMediaControl$MonitorThread: void <init>(com.csipsimple.ui.incall.InCallMediaControl,com.csipsimple.ui.incall.InCallMediaControl$MonitorThread)>
<com.csipsimple.pjsip.PjSipService$1$1: void <init>(com.csipsimple.pjsip.PjSipService$1,int)>
<com.csipsimple.models.Filter: void <init>(android.database.Cursor)>
<com.csipsimple.wizards.impl.Pfingo: void <init>()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void setProgressBarVisibility(boolean)>
<com.csipsimple.wizards.impl.BaseImplementation: void setPasswordFieldSummary(java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_f_int_p_pjsua_srv_pres_int_p_q_const__pj_str_t_p_pjsip_rx_data_p_enum_pjsip_status_code_p_pj_str_t_p_pjsua_msg_data__void: void <init>(long,boolean)>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.SWIGTYPE_p_pjsip_role_e getRole()>
<com.csipsimple.ui.calllog.CallLogDetailsActivity: void onCreate(android.os.Bundle)>
<com.actionbarsherlock.widget.ActivityChooserView: void <init>(android.content.Context)>
<com.csipsimple.ui.prefs.AudioTester$MonitorThread: void run()>
<com.csipsimple.service.SipNotifications: boolean recurseSearchNotificationPrimaryText(android.view.ViewGroup)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void <init>(android.app.Activity,int)>
<com.csipsimple.utils.PreferencesProviderWrapper: java.util.ArrayList getAllIncomingNetworks()>
<com.csipsimple.widgets.HorizontalQuickActionWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getRfc5626_reg_id()>
<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: java.lang.Object clone()>
<com.csipsimple.wizards.impl.Freeconet: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.widget.ActionBarView: void initIndeterminateProgress()>
<com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe: com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone()>
<com.csipsimple.ui.favorites.FavLoader: java.lang.Object loadInBackground()>
<com.csipsimple.service.MediaManager: void resetSettings()>
<com.csipsimple.wizards.impl.Tanstagi: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Odorik: void <init>()>
<com.csipsimple.ui.help.Faq: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.csipsimple.widgets.Dialpad: void onClick(android.view.View)>
<com.csipsimple.service.SipService$1: void sendMessage(java.lang.String,java.lang.String,long)>
<com.csipsimple.models.Filter: boolean mustCall(android.content.Context,java.lang.String)>
<com.csipsimple.wizards.impl.Sbohempevnalinko: void <init>()>
<com.csipsimple.wizards.impl.VoipTel: void <init>()>
<org.pjsip.pjsua.pjsua_call_media_info: org.pjsip.pjsua.pjmedia_dir getDir()>
<com.csipsimple.wizards.impl.FringTalkTw: void setDefaultParams(com.csipsimple.utils.PreferencesWrapper)>
<com.csipsimple.widgets.contactbadge.QuickContactBadge: void <init>(android.content.Context)>
<com.csipsimple.ui.favorites.FavLoader: android.database.Cursor createContentCursorFor(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pj_str_t pj_str_copy(java.lang.String)>
<org.pjsip.pjsua.SWIGTYPE_p_pj_pool_block: void <init>(long,boolean)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.app.ActionBar getActionBar()>
<com.csipsimple.ui.incall.InCallControls: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.actionbarsherlock.internal.widget.IcsAdapterView: void handleDataChanged()>
<com.csipsimple.wizards.impl.Gizmo5: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pj_str_t getPidf_tuple_id()>
<com.actionbarsherlock.internal.widget.IcsProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)>
<com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)>
<com.actionbarsherlock.internal.view.menu.MenuWrapper: com.actionbarsherlock.view.MenuItem getItem(int)>
<org.pjsip.pjsua.pjsua: org.pjsip.pjsua.pjsua_state get_state()>
<com.actionbarsherlock.ActionBarSherlock: com.actionbarsherlock.view.MenuInflater getMenuInflater()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone()>
<com.csipsimple.wizards.impl.ZengCn: void <init>()>
<com.actionbarsherlock.internal.view.StandaloneActionMode: void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder)>
<com.csipsimple.ui.dialpad.DialerFragment: void onTrigger(int,int)>
<com.csipsimple.wizards.impl.Sipkom: void <init>()>
<com.csipsimple.wizards.impl.AuthorizationImplementation: boolean canSave()>
<com.csipsimple.ui.prefs.CodecsFragment$3: void drop(int,int)>
<com.csipsimple.service.SipService$1: void setAccountRegistration(int,int)>
<com.csipsimple.wizards.impl.Mobile4U: void <init>()>
<org.pjsip.pjsua.SWIGTYPE_p_pjmedia_type: void <init>(long,boolean)>
<com.csipsimple.wizards.impl.UkrTelecom: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Smarto: void <init>()>
<com.csipsimple.ui.SipHome: void applyWarning(java.lang.String,boolean)>
<org.pjsip.pjsua.pjsip_inv_state: void <init>(java.lang.String,int,int)>
<com.csipsimple.ui.prefs.AudioTester$MonitorThread: void <init>(com.csipsimple.ui.prefs.AudioTester,com.csipsimple.ui.prefs.AudioTester$MonitorThread)>
<com.csipsimple.utils.clipboard.Clipboard1: void <init>()>
<com.csipsimple.service.SipService: void acquireResources()>
<com.csipsimple.wizards.impl.BelCentrale: void <init>()>
<org.pjsip.pjsua.pjrpid_element: org.pjsip.pjsua.pj_str_t getNote()>
<org.pjsip.pjsua.pjsua_callback: org.pjsip.pjsua.SWIGTYPE_p_f_int_int__void getOn_call_replaced()>
<com.csipsimple.utils.contacts.ContactsUtils5: java.util.List getPhoneNumbers(android.content.Context,long,int)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void updateTab(int)>
<com.csipsimple.wizards.impl.Rapidvox: void <init>()>
<com.csipsimple.wizards.impl.EasyBell: void <init>()>
<com.csipsimple.wizards.impl.VoipNor: void <init>()>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsua_call_media_status getMedia_status()>
<com.csipsimple.utils.SipProfileJson: void restoreSipSettings(android.content.Context,org.json.JSONObject)>
<com.csipsimple.wizards.impl.EuroTelefon: void <init>()>
<org.pjsip.pjsua.pjsua_call_info: org.pjsip.pjsua.pjsua_call_media_info getProv_media()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void start(boolean)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: void setContentView(int)>
<org.pjsip.pjsua.pjsua_conf_port_info: org.pjsip.pjsua.pj_str_t getName()>
<com.actionbarsherlock.internal.ActionBarSherlockNative: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>
<com.csipsimple.wizards.impl.VPhone: void <init>()>
<org.pjsip.pjsua.pjsua_acc_config: org.pjsip.pjsua.pjsua_turn_config_use getTurn_cfg_use()>
<com.csipsimple.wizards.impl.Advanced: void <init>()>
<com.csipsimple.wizards.impl.Betamax: void <clinit>()>
<com.csipsimple.ui.incall.InCallActivity$UpdateUIFromMediaRunnable: void run()>
<com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeBaseSipProfile(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.SipHome: void startSipService()>
<com.csipsimple.widgets.ShortcutWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
<org.pjsip.pjsua.pjsua_buddy_info: void <init>()>
<com.csipsimple.wizards.impl.Beeztel: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.DvcNg: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.Sipgate: com.csipsimple.api.SipProfile buildAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.utils.Base64: int access$2(byte[],int,byte[],int,int)>
<com.csipsimple.ui.prefs.CodecsFragment: void setCodecPriority(java.lang.String,short)>
<org.webrtc.videoengine.ViERenderer: android.view.SurfaceView CreateRenderer(android.content.Context)>
<org.pjsip.pjsua.pjsua_logging_config: void <init>()>
<com.csipsimple.wizards.impl.SipCel: java.util.List getDefaultFilters(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.help.Help$2: void run()>
<dummyMainClass: com.actionbarsherlock.app.SherlockFragment dummyMainMethod_com_actionbarsherlock_app_SherlockFragment(android.content.Intent,android.app.Activity)>
<com.csipsimple.ui.account.AccountsEditListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<com.csipsimple.ui.SipHome: void onResume()>
<com.csipsimple.service.PreferenceProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.csipsimple.service.SipService$SipRunnable: void run()>
<com.csipsimple.service.MediaManager: void actualSetAudioInCall()>
<com.actionbarsherlock.widget.ActivityChooserModel: void readHistoricalData()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void end()>
<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[])>
<com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder: void setupGetter(java.lang.Class)>
<dummyMainClass: com.csipsimple.wizards.BasePrefsWizard dummyMainMethod_com_csipsimple_wizards_BasePrefsWizard(android.content.Intent)>
<com.csipsimple.utils.Ringer: void updateRingerMode()>
<com.csipsimple.pjsip.PjSipCalls: void updateSessionFromPj(com.csipsimple.api.SipCallSession,org.pjsip.pjsua.pjsip_event,com.csipsimple.pjsip.PjSipService)>
<dummyMainClass: com.csipsimple.ui.messages.ConversationsListFragment dummyMainMethod_com_csipsimple_ui_messages_ConversationsListFragment(android.content.Intent,android.app.Activity)>
<com.csipsimple.service.SipService: void updateRegistrationsState()>
<dummyMainClass: com.csipsimple.ui.warnings.WarningFragment dummyMainMethod_com_csipsimple_ui_warnings_WarningFragment(android.content.Intent,android.app.Activity)>
<com.csipsimple.ui.incall.InCallActivity: void onLeftRightChoice(int)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setIntValues(int[])>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: void installDecor()>
<com.csipsimple.pjsip.UAStateReceiver: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)>
<com.csipsimple.ui.calllog.CallLogAdapter: void bindView(int,android.view.View,android.database.Cursor,int)>
<com.csipsimple.ui.filters.EditFilter: void fillLayout()>
<com.csipsimple.utils.contacts.ContactsUtils3: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)>
<com.csipsimple.utils.PreferencesWrapper: java.lang.String getPreferenceStringValue(java.lang.String)>
<dummyMainClass: com.actionbarsherlock.app.SherlockDialogFragment dummyMainMethod_com_actionbarsherlock_app_SherlockDialogFragment(android.content.Intent,android.app.Activity)>
<com.actionbarsherlock.internal.widget.AbsActionBarView: void animateToVisibility(int)>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchOpenOptionsMenu()>
<com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)>
<com.csipsimple.ui.account.AccountsLoader: android.database.Cursor loadInBackground()>
<com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnNoStun(com.csipsimple.utils.PreferencesProviderWrapper)>
<com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.csipsimple.utils.TimerWrapper: void create(com.csipsimple.service.SipService)>
<com.csipsimple.models.Filter: com.csipsimple.models.Filter getFilterFromDbId(android.content.Context,long,java.lang.String[])>
<dummyMainClass: com.csipsimple.ui.outgoingcall.OutgoingCallChooser dummyMainMethod_com_csipsimple_ui_outgoingcall_OutgoingCallChooser(android.content.Intent)>
<com.actionbarsherlock.internal.ActionBarSherlockNative: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: void initForMode(com.actionbarsherlock.view.ActionMode)>
<com.csipsimple.pjsip.PjSipService$1: void run()>
<com.csipsimple.ui.incall.InCallCard: void setCallState(com.csipsimple.api.SipCallSession)>
<com.actionbarsherlock.app.SherlockPreferenceActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
<com.csipsimple.pjsip.PjSipService: boolean addAccount(com.csipsimple.api.SipProfile)>
<dummyMainClass: com.csipsimple.ui.filters.AccountFilters dummyMainMethod_com_csipsimple_ui_filters_AccountFilters(android.content.Intent)>
<com.csipsimple.wizards.impl.VoipTel: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.wizards.impl.AlternateServerImplementation: void updateDescriptions()>
<com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)>
<com.csipsimple.service.SipNotifications: void <init>(android.content.Context)>
<com.csipsimple.ui.filters.EditFilter: void saveFilter()>
<com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)>
<com.csipsimple.ui.calllog.PhoneCallDetailsHelper: void setPhoneCallDetails(com.csipsimple.ui.calllog.PhoneCallDetailsViews,com.csipsimple.ui.calllog.PhoneCallDetails)>
<com.csipsimple.wizards.impl.MondotalkCreate: void onClick(android.view.View)>
<org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid: org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid CreateVideoCaptureDeviceInfoAndroid(int,android.content.Context)>
<com.actionbarsherlock.internal.widget.ActionBarContextView: com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation()>
<com.csipsimple.widgets.AccountChooserButton: void updateRegistration()>
<com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()>
<com.csipsimple.service.MediaManager: void stopRingAndUnfocus()>
<com.csipsimple.pjsip.UAStateReceiver: void on_buddy_state(int)>
<com.csipsimple.wizards.impl.Ippi: void updateAccountInfos(com.csipsimple.api.SipProfile)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofObject(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])>
<dummyMainClass: com.csipsimple.ui.prefs.PrefsFast dummyMainMethod_com_csipsimple_ui_prefs_PrefsFast(android.content.Intent)>
<com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)>
<com.csipsimple.ui.calllog.CallLogDetailsFragment$1: void onClick(android.view.View)>
<com.actionbarsherlock.internal.widget.ScrollingTabContainerView: void onMeasure(int,int)>
<com.csipsimple.wizards.impl.Cryptel: void fillLayout(com.csipsimple.api.SipProfile)>
<dummyMainClass: com.csipsimple.ui.incall.DtmfDialogFragment dummyMainMethod_com_csipsimple_ui_incall_DtmfDialogFragment(android.content.Intent,android.app.Activity)>
<com.csipsimple.utils.AccountListUtils: com.csipsimple.utils.AccountListUtils$AccountStatusDisplay getAccountDisplay(android.content.Context,long)>
<com.csipsimple.service.SipService$FinalizeDestroyRunnable: void doRun()>
<dummyMainClass: com.csipsimple.ui.messages.MessageActivity dummyMainMethod_com_csipsimple_ui_messages_MessageActivity(android.content.Intent)>
<com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)>
<com.csipsimple.ui.dialpad.DialerFragment: void applyTheme(android.view.View)>
<com.csipsimple.wizards.impl.Mondotalk: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])>
<com.csipsimple.pjsip.UAStateReceiver$1: void doRun()>
<com.csipsimple.service.MediaManager: void saveAudioState()>
<com.actionbarsherlock.widget.ShareActionProvider: void setShareIntent(android.content.Intent)>
<com.csipsimple.wizards.impl.Sipgate: void fillLayout(com.csipsimple.api.SipProfile)>
<com.csipsimple.ui.calllog.CallLogListItemViews: com.csipsimple.ui.calllog.CallLogListItemViews fromView(android.view.View)>
<com.csipsimple.widgets.Dialpad: void applyTheme(com.csipsimple.utils.Theme)>
<com.csipsimple.pjsip.PjSipService: java.lang.Integer createTransport(org.pjsip.pjsua.pjsip_transport_type_e,int)>
<com.csipsimple.wizards.impl.Zadarma: void updateAccountInfos(com.csipsimple.api.SipProfile)>
<com.csipsimple.service.PresenceManager: void deleteBuddiesForAccount(com.csipsimple.api.SipProfile)>
<com.csipsimple.widgets.AccountChooserButton$2$1: void onClick(android.view.View)>
<com.actionbarsherlock.internal.widget.ActionBarView: void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback)>
<com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)>
<com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)>
<com.csipsimple.ui.incall.CallProximityManager: void <init>(android.content.Context,com.csipsimple.ui.incall.CallProximityManager$ProximityDirector,com.csipsimple.widgets.ScreenLocker)>
<com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet: com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofKeyframe(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[])>
<com.csipsimple.utils.contacts.ContactsUtils14: com.csipsimple.models.CallerInfo findSelfInfo(android.content.Context)>
<com.csipsimple.service.SipService: boolean isConnectivityValid()>
<com.csipsimple.ui.calllog.CallLogListFragment: void turnOnActionMode()>
<dummyMainClass: com.csipsimple.service.SipService dummyMainMethod_com_csipsimple_service_SipService(android.content.Intent)>
<com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.ActionBarSherlock getSherlock()>
<com.csipsimple.ui.prefs.cupcake.MainPrefs: void onCreate(android.os.Bundle)>
<com.csipsimple.widgets.EditSipUri: void <init>(android.content.Context,android.util.AttributeSet)>
<com.csipsimple.pjsip.PjSipService: void cleanPjsua()>
<com.csipsimple.ui.prefs.PrefsFast: void applyPrefs()>
<com.csipsimple.ui.messages.ConversationsListFragment: void onVisibilityChanged(boolean)>
<com.csipsimple.ui.prefs.CodecsFragment: void onActivityCreated(android.os.Bundle)>
<com.csipsimple.ui.calllog.CallLogListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)>
<com.csipsimple.utils.SipProfileJson: boolean saveSipConfiguration(android.content.Context)>
<com.actionbarsherlock.internal.view.StandaloneActionMode: boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder)>
<com.csipsimple.ui.favorites.FavAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<com.actionbarsherlock.internal.widget.IcsListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.csipsimple.ui.incall.InCallCard: void updateMenuView()>
<com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)>
<com.csipsimple.service.SipService$1: void adjustVolume(com.csipsimple.api.SipCallSession,int,int)>
<com.csipsimple.ui.dialpad.DialerFragment: void onAttach(android.app.Activity)>
<dummyMainClass: com.csipsimple.ui.account.AccountEdit dummyMainMethod_com_csipsimple_ui_account_AccountEdit(android.content.Intent)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void hide()>
<com.csipsimple.ui.prefs.CodecsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.csipsimple.api.SipProfile: com.csipsimple.api.SipProfile getProfileFromDbId(android.content.Context,long,java.lang.String[])>
<com.actionbarsherlock.internal.widget.ActionBarView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.actionbarsherlock.widget.ActivityChooserView$2: void onGlobalLayout()>
<com.csipsimple.pjsip.PjSipService: int sendDtmf(int,java.lang.String)>
<com.csipsimple.utils.PreferencesWrapper: java.lang.Boolean getPreferenceBooleanValue(java.lang.String)>
<com.csipsimple.wizards.impl.Basic: void updateDescriptions()>
<com.csipsimple.pjsip.PjSipService: void setCodecsPriorities()>
<com.csipsimple.service.MediaManager: void restoreAudioState()>
<dummyMainClass: com.csipsimple.widgets.ShortcutWidgetProvider dummyMainMethod_com_csipsimple_widgets_ShortcutWidgetProvider(android.content.Intent)>
<com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node: com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone()>
<com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator: void setCurrentPlayTime(long)>
<com.csipsimple.widgets.EditSipUri: com.csipsimple.widgets.EditSipUri$ToCall getValue()>
<org.webrtc.videoengine.camera.CameraUtils5: void Init(org.webrtc.videoengine.VideoCaptureDeviceInfoAndroid,java.util.List)>
<com.actionbarsherlock.internal.app.ActionBarImpl: void show(boolean)>
<com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator: void <init>(java.lang.Object,java.lang.String)>
<com.csipsimple.pjsip.PjSipService: boolean sipStart()>
<dummyMainClass: com.csipsimple.ui.SipHome dummyMainMethod_com_csipsimple_ui_SipHome(android.content.Intent)>
<dummyMainClass: com.csipsimple.db.DBProvider dummyMainMethod_com_csipsimple_db_DBProvider(android.content.Intent)>
<com.actionbarsherlock.internal.app.ActionBarImpl: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)>
<dummyMainClass: com.csipsimple.ui.incall.InCallActivity dummyMainMethod_com_csipsimple_ui_incall_InCallActivity(android.content.Intent)>
<com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)>
<com.csipsimple.ui.messages.MessageFragment: void onCreate(android.os.Bundle)>
<com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])>
