<?xml version="1.0" encoding="UTF-8"?>

<root> 
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void broadcastMediaChanged()&gt;"> 
    <node type="StaticCreateMethod" unit="$r2 = r0.&lt;com.csipsimple.service.MediaManager: android.content.Intent mediaStateChangedIntent&gt;"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r1.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;($r2, &quot;android.permission.USE_SIP&quot;)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.contacts.ContactsUtils3: android.content.Intent getViewContactIntent(java.lang.Long)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context,android.view.View)&gt;"> 
    <node type="setContentView" unit="specialinvoke r0.&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void setContentView(int)&gt;(2130903113)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context,android.view.View)&gt;($r1, null)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenType(java.lang.Class,java.lang.String,int)&gt;"> 
    <node type="CreateMethod" unit="r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, r1)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;preference_type&quot;, $i0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.preference.Preference: void setIntent(android.content.Intent)&gt;(r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.receiver.DynamicReceiver5: boolean compatIsInitialStickyBroadcast(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.hc.MainPrefs: void onBuildHeaders(java.util.List)&gt;"> 
    <node type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>  
    <node type="StaticCreateMethod" unit="r4.&lt;android.preference.PreferenceActivity$Header: android.content.Intent intent&gt; = $r5"/>  
    <node type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>  
    <node type="StaticCreateMethod" unit="r4.&lt;android.preference.PreferenceActivity$Header: android.content.Intent intent&gt; = $r5"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.PJ_TIMER&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;entry&quot;, $i0)"/>  
    <node type="PassOutIntent" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, r1, 268435456)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.TimerWrapper: void quit()&gt;"> 
    <node type="ReceiveIntentFromRetValue" unit="$r10 = specialinvoke r0.&lt;com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)&gt;($i0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.app.AlarmManager: void cancel(android.app.PendingIntent)&gt;($r10)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.TimerWrapper: void setContext(com.csipsimple.service.SipService)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.utils.TimerWrapper: void quit()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.TimerWrapper: void &lt;init&gt;(com.csipsimple.service.SipService)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.utils.TimerWrapper: void setContext(com.csipsimple.service.SipService)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.TimerWrapper: void create(com.csipsimple.service.SipService)&gt;"> 
    <node unit="specialinvoke $r2.&lt;com.csipsimple.utils.TimerWrapper: void &lt;init&gt;(com.csipsimple.service.SipService)&gt;($r0)"/>  
    <node unit="specialinvoke $r2.&lt;com.csipsimple.utils.TimerWrapper: void setContext(com.csipsimple.service.SipService)&gt;($r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;org.openintents.audio.action_volume_update&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_stream_type&quot;, $i0)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_volume_index&quot;, $i1)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;org.openintents.audio.extra_ringer_mode&quot;, -9999)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, null)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, $i1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void restoreAudioState()&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i0, $i1, 0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void &lt;init&gt;(com.csipsimple.service.SipService)&gt;"> 
    <node type="CreateMethod" unit="$r7 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MEDIA_CHANGED&quot;)"/>  
    <node type="StaticCreateMethod" unit="r0.&lt;com.csipsimple.service.MediaManager: android.content.Intent mediaStateChangedIntent&gt; = $r7"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void restoreAudioState()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void onBluetoothStateChanged(int)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastMediaChanged()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void startService()&gt;"> 
    <node unit="virtualinvoke $r2.&lt;com.csipsimple.utils.bluetooth.BluetoothWrapper: void setBluetoothChangeListener(com.csipsimple.utils.bluetooth.BluetoothWrapper$BluetoothChangeListener)&gt;(r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;"> 
    <node type="CreateMethod" unit="r6 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r1)"/>  
    <node type="PassOutIntent" unit="$r10 = virtualinvoke $r9.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r6, 0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.TimerWrapper: void destroy()&gt;"> 
    <node unit="specialinvoke $r1.&lt;com.csipsimple.utils.TimerWrapper: void quit()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.PjSipService: void cleanPjsua()&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.utils.TimerWrapper: void destroy()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.PjSipService: boolean sipStart()&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.utils.TimerWrapper: void create(com.csipsimple.service.SipService)&gt;($r7)"/>  
    <node unit="specialinvoke $r10.&lt;com.csipsimple.service.MediaManager: void &lt;init&gt;(com.csipsimple.service.SipService)&gt;($r7)"/>  
    <node unit="virtualinvoke $r10.&lt;com.csipsimple.service.MediaManager: void startService()&gt;()"/>  
    <node unit="$r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.codecs.action.REGISTER_CODEC&quot;)"/>  
    <node unit="$r13 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r7, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.pjsip.PjSipService: void cleanPjsua()&gt;()"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.pjsip.PjSipService: void cleanPjsua()&gt;()"/>  
    <node unit="virtualinvoke $r10.&lt;com.csipsimple.service.MediaManager: void startService()&gt;()"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.pjsip.PjSipService: void cleanPjsua()&gt;()"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.pjsip.PjSipService: void cleanPjsua()&gt;()"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.pjsip.PjSipService: void cleanPjsua()&gt;()"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.pjsip.PjSipService: void cleanPjsua()&gt;()"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.pjsip.PjSipService: void cleanPjsua()&gt;()"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.pjsip.PjSipService: void cleanPjsua()&gt;()"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.pjsip.PjSipService: void cleanPjsua()&gt;()"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.pjsip.PjSipService: void cleanPjsua()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService: void startSipStack()&gt;"> 
    <node unit="$z0 = virtualinvoke $r2.&lt;com.csipsimple.pjsip.PjSipService: boolean sipStart()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService: void access$9(com.csipsimple.service.SipService)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.service.SipService: void startSipStack()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenSub(java.lang.String,java.lang.Class,java.lang.Class,int)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenType(java.lang.Class,java.lang.String,int)&gt;(r2, $r1, $i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.db.DBProvider: void broadcastRegistrationChange(long)&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.REGISTRATION_CHANGED&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;id&quot;, $l0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r2.&lt;android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, &quot;android.permission.USE_SIP&quot;)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/cupcake/PrefsLoaderActivity;&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;preference_type&quot;, $i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean invoke()&gt;"> 
    <node type="StaticCreateMethod" unit="$r1 = r0.&lt;com.actionbarsherlock.internal.view.menu.ActionMenuItem: android.content.Intent mIntent&gt;"/>  
    <node type="StaticCreateMethod" unit="$r1 = r0.&lt;com.actionbarsherlock.internal.view.menu.ActionMenuItem: android.content.Intent mIntent&gt;"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.CallLogHelper: void addCallLog(android.content.Context,android.content.ContentValues,android.content.ContentValues)&gt;"> 
    <node type="CreateMethod" unit="r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;de.ub0r.android.callmeter.SAVE_SIPCALL&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;uri&quot;, $r6)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;provider&quot;, $r6)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;(r3)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;(r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter: void sort(android.content.Intent,java.util.List,java.util.List)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL_PRIVILEGED&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$StartRunnable: void doRun()&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.service.SipService: void access$9(com.csipsimple.service.SipService)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void broadCastAndroidCallState(java.lang.String,java.lang.String)&gt;"> 
    <node type="CreateMethod" unit="r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PHONE_STATE&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;state&quot;, $r1)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;($r1, 1)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r5.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r3, &quot;android.permission.READ_PHONE_STATE&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;incoming_number&quot;, $r2)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;($r1, 1)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r5.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r3, &quot;android.permission.READ_PHONE_STATE&quot;)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.filters.AccountFiltersListFragment: void showDetails(long)&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/csipsimple/ui/filters/EditFilter;&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;android.intent.extra.UID&quot;, $l0)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;account&quot;, $l0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.filters.AccountFiltersListFragment: void startActivity(android.content.Intent)&gt;(r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent getIntent()&gt;"> 
    <node type="StaticCreateMethod" unit="r3 = r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent mIntent&gt;"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.incall.InCallActivity: void onActivityResult(int,int,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>  
    <node type="PassOutIntent" unit="specialinvoke r0.&lt;com.actionbarsherlock.app.SherlockFragmentActivity: void onActivityResult(int,int,android.content.Intent)&gt;($i0, $i1, $r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.PrefsFilters: void onAccountClicked(long)&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/filters/AccountFilters;&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;id&quot;, $l0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.prefs.PrefsFilters: void startActivity(android.content.Intent)&gt;(r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.MessageFragment: void chooseSipUri()&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/csipsimple/ui/PickupSipUri;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.messages.MessageFragment: void startActivityForResult(android.content.Intent,int)&gt;(r1, 0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.ActionMenuItem: com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
    <node type="StaticCreateMethod" unit="r0.&lt;com.actionbarsherlock.internal.view.menu.ActionMenuItem: android.content.Intent mIntent&gt; = $r1"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.help.Help: void onActivityResult(int,int,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>  
    <node type="PassOutIntent" unit="specialinvoke r0.&lt;com.actionbarsherlock.app.SherlockDialogFragment: void onActivityResult(int,int,android.content.Intent)&gt;($i0, $i1, $r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsEditListFragment: void onClickAddAccount()&gt;"> 
    <node type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r2, class &quot;Lcom/csipsimple/wizards/WizardChooser;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.account.AccountsEditListFragment: void startActivityForResult(android.content.Intent,int)&gt;($r1, 0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsEditListFragment: void showDetails(long,java.lang.String)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="InitIntent" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;()&gt;()"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lcom/csipsimple/wizards/BasePrefsWizard;&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;id&quot;, $l0)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r1)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.account.AccountsEditListFragment: void startActivity(android.content.Intent)&gt;(r2)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r1)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.account.AccountsEditListFragment: void startActivity(android.content.Intent)&gt;(r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
    <node type="PassOutIntent" unit="$r4 = virtualinvoke $r3.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65600)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.contacts.ContactsUtils3: android.content.Intent getAddContactIntent(java.lang.String,java.lang.String)&gt;"> 
    <node type="CreateMethod" unit="r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.INSERT&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;name&quot;, $r1)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;im_handle&quot;, $r2)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;im_protocol&quot;, &quot;csip&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;im_handle&quot;, $r2)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;im_protocol&quot;, &quot;csip&quot;)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void finishServiceIfNeeded(boolean)&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;($r3)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r2)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void sendBroadcast(android.content.Intent)&gt;(r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsEditListFragment: void access$1(com.csipsimple.ui.account.AccountsEditListFragment)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.ui.account.AccountsEditListFragment: void onClickAddAccount()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.Tanstagi$1: void onClick(android.view.View)&gt;"> 
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="InitIntent" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri)&gt;(&quot;android.intent.action.VIEW&quot;, $r3)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r5.&lt;com.csipsimple.wizards.BasePrefsWizard: void startActivity(android.content.Intent)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$SyncStartRunnable: java.lang.Object runWithReturn()&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.service.SipService: void access$9(com.csipsimple.service.SipService)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.BaseImplementation: void onActivityResult(int,int,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
    <node type="PassOutIntent" unit="interfaceinvoke $r2.&lt;android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.String,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)&gt;"> 
    <node type="CreateMethod" unit="r4 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.HANDLE_CALL&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;android.intent.extra.PHONE_NUMBER&quot;, $r2)"/>  
    <node type="SetAttribute" unit="virtualinvoke r4.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r7)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r8.&lt;android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)&gt;(r4, &quot;android.permission.PROCESS_OUTGOING_CALLS&quot;, $r5, $r6, -1, null, null)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.content.Intent getIntent()&gt;"> 
    <node type="StaticCreateMethod" unit="r1 = r0.&lt;com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.content.Intent mIntent&gt;"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogDetailsFragment$2: void onClick(android.view.View)&gt;"> 
    <node type="StaticCreateMethod" unit="$r3 = r0.&lt;com.csipsimple.ui.calllog.CallLogDetailsFragment$2: android.content.Intent val$mainActionIntent&gt;"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r2.&lt;com.csipsimple.ui.calllog.CallLogDetailsFragment: void startActivity(android.content.Intent)&gt;($r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.CallHandlerPlugin: android.app.PendingIntent getIntent()&gt;"> 
    <node type="StaticCreateMethod" unit="r1 = r0.&lt;com.csipsimple.utils.CallHandlerPlugin: android.app.PendingIntent pendingIntent&gt;"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.MenuItemMule: android.view.MenuItem setIntent(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void onBroadcastCallState(com.csipsimple.api.SipCallSession)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.CALL_CHANGED&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;call_info&quot;, $r1)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r4.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r2, &quot;android.permission.USE_SIP&quot;)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.ActionMenuItem: android.content.Intent getIntent()&gt;"> 
    <node type="StaticCreateMethod" unit="r1 = r0.&lt;com.actionbarsherlock.internal.view.menu.ActionMenuItem: android.content.Intent mIntent&gt;"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()&gt;"> 
    <node type="StaticCreateMethod" unit="$r2 = r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent mIntent&gt;"/>  
    <node type="PassOutIntent" unit="interfaceinvoke $r4.&lt;com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter: void sort(android.content.Intent,java.util.List,java.util.List)&gt;($r2, $r3, $r5)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.MenuItemImpl: com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
    <node type="StaticCreateMethod" unit="r0.&lt;com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.content.Intent mIntent&gt; = $r1"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipNotifications: void showNotificationForCall(com.csipsimple.api.SipCallSession)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.INCALL&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;call_info&quot;, $r1)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(805306368)"/>  
    <node type="PassOutIntent" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r3, 0, r2, 268435456)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r6)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.Compatibility: android.content.Intent getContactPhoneIntent()&gt;"> 
    <node type="CreateMethod" unit="r0 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r0.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.PICK&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r0.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/>  
    <node type="SetAttribute" unit="virtualinvoke r0.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.db.DBProvider: void broadcastAccountChange(long)&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACCOUNT_CHANGED&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;id&quot;, $l0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r2.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;(r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.contacts.ContactsUtils5: android.content.Intent getViewContactIntent(java.lang.Long)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService: android.os.IBinder onBind(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/>  
    <node type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;com.csipsimple.service.SipService: android.content.Intent getIntent()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.PhoneCapabilityTester: boolean isIntentRegistered(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter1: android.content.Intent"/>  
    <node type="PassOutIntent" unit="$r3 = virtualinvoke $r2.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r1, 65536)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment: void placeCall(java.lang.String,java.lang.Long)&gt;"> 
    <node type="CreateMethod" unit="r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r4)"/>  
    <node type="SetAttribute" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;acc_id&quot;, $r2)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.support.v4.app.FragmentActivity: void startActivity(android.content.Intent)&gt;(r3)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.support.v4.app.FragmentActivity: void startActivity(android.content.Intent)&gt;(r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void access$3(com.csipsimple.pjsip.UAStateReceiver,java.lang.String,java.lang.String)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.pjsip.UAStateReceiver: void broadCastAndroidCallState(java.lang.String,java.lang.String)&gt;($r1, $r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.incall.InCallMediaControl: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallMediaControl: void setContentView(int)&gt;(2130903104)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsEditListFragment$1: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.ui.account.AccountsEditListFragment: void access$1(com.csipsimple.ui.account.AccountsEditListFragment)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;"> 
    <node type="ReceiveIntentFromRetValue" unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.Intent getPriviledgedIntent(java.lang.String)&gt;(&quot;123&quot;)"/>  
    <node type="PassOutIntent" unit="$r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List getPossibleActivities(android.content.Context,android.content.Intent)&gt;($r0, $r3)"/>  
    <node type="PassOutIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)&gt;($r3, 65536)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.filters.AccountFiltersListFragment: void onClickAddFilter()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.filters.AccountFiltersListFragment: void showDetails(long)&gt;(-1L)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.AudioTester: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.prefs.AudioTester: void setContentView(int)&gt;(2130903071)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipNotifications: void showNotificationForMissedCall(android.content.ContentValues)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.CALLLOG&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
    <node type="PassOutIntent" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r3, 0, r2, 268435456)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r5.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r6)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.plugins.codecs.ReceiverSilk: void onReceive(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.csipsimple.plugins.codecs.ReceiverSilk: android.content.Intent getIntent()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void onActivityResult(int,int,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>  
    <node type="PassOutIntent" unit="specialinvoke r0.&lt;com.actionbarsherlock.app.SherlockFragmentActivity: void onActivityResult(int,int,android.content.Intent)&gt;($i0, $i1, $r1)"/>  
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_SIP_REQUEST_RESTART&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void sendBroadcast(android.content.Intent)&gt;($r2)"/>  
    <node type="PassOutIntent" unit="specialinvoke r0.&lt;com.actionbarsherlock.app.SherlockFragmentActivity: void onActivityResult(int,int,android.content.Intent)&gt;($i0, $i1, $r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsEditListFragment$5: void onClick(android.view.View)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.ui.account.AccountsEditListFragment: void access$1(com.csipsimple.ui.account.AccountsEditListFragment)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.NightlyUpdater: void applyUpdate(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
    <node type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)&gt;($r3, &quot;application/vnd.android.package-archive&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke $r1.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r4.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onBackPressed()&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void finishServiceIfNeeded(boolean)&gt;(0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.filters.AccountFiltersListFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.filters.AccountFiltersListFragment: void showDetails(long)&gt;($l0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ActivityChooserModel: void access$7(com.actionbarsherlock.widget.ActivityChooserModel)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: boolean onKeyDown(int,android.view.KeyEvent)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onBackPressed()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.Mondotalk$1: void onClick(android.view.View)&gt;"> 
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lcom/csipsimple/wizards/impl/MondotalkCreate;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r4.&lt;com.csipsimple.wizards.BasePrefsWizard: void startActivityForResult(android.content.Intent,int)&gt;($r2, $i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.filters.AccountFiltersListFragment: void access$0(com.csipsimple.ui.filters.AccountFiltersListFragment)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.ui.filters.AccountFiltersListFragment: void onClickAddFilter()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.filters.AccountFiltersListFragment$3: void onClick(android.view.View)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.ui.filters.AccountFiltersListFragment: void access$0(com.csipsimple.ui.filters.AccountFiltersListFragment)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ActivityChooserModel: void setHistoryMaxSize(int)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.pm.ResolveInfo resolveActivityForPriviledgedCall(android.content.Context)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.PhoneCapabilityTester: boolean isSmsIntentRegistered(android.content.Context)&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="InitIntent" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri)&gt;(&quot;android.intent.action.SENDTO&quot;, $r2)"/>  
    <node type="PassOutIntent" unit="$z0 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: boolean isIntentRegistered(android.content.Context,android.content.Intent)&gt;($r0, r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.Compatibility: boolean shouldUsePriviledgedIntegration(android.content.Context)&gt;"> 
    <node unit="$z0 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)&gt;($r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.Downloader: android.os.IBinder onBind(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="parameter0 := @parameter0: android.content.Intent"/>  
    <node type="ReceiveIntentFromRetValue" unit="parameter0 = virtualinvoke this.&lt;com.csipsimple.service.Downloader: android.content.Intent getIntent()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"> 
    <node type="StaticCreateMethod" unit="$r8 = r7.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: android.content.Intent intent&gt;"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: void startActivity(android.content.Intent)&gt;($r8)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.RewriterPlugin: java.lang.String rewriteNumber(android.content.Context,java.lang.String,java.lang.String)&gt;"> 
    <node type="CreateMethod" unit="r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.REWRITE_NUMBER&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;android.intent.extra.PHONE_NUMBER&quot;, $r2)"/>  
    <node type="SetAttribute" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r5)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r0.&lt;android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)&gt;(r3, &quot;android.permission.PROCESS_OUTGOING_CALLS&quot;, r4, null, -1, null, null)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher$1: void onClick(android.content.DialogInterface,int)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="InitIntent" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;()&gt;()"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r8)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)&gt;($r9, class &quot;Lcom/csipsimple/service/Downloader;&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;icon&quot;, 2130837685)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;title&quot;, &quot;CSipSimple nightly build&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;checkMd5&quot;, 1)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;outpath&quot;, $r7)"/>  
    <node type="CreateMethod" unit="r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, class &quot;Lcom/csipsimple/service/DeviceStateReceiver;&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent setAction(java.lang.String)&gt;(&quot;com.csipsimple.action.APPLY_NIGHTLY&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;dl_version&quot;, $i0)"/>  
    <node type="PassOutIntent" unit="$r11 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r9, 0, r3, 134217728)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;pendingIntent&quot;, $r11)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r9.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;(r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy: boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
    <node type="PassOutIntent" unit="$z0 = interfaceinvoke $r4.&lt;com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener: boolean onShareTargetSelected(com.actionbarsherlock.widget.ShareActionProvider,android.content.Intent)&gt;($r3, $r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1: void run()&gt;"> 
    <node unit="staticinvoke &lt;com.actionbarsherlock.widget.ActivityChooserModel: void access$7(com.actionbarsherlock.widget.ActivityChooserModel)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void access$6(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.pjsip.UAStateReceiver: void onBroadcastCallState(com.csipsimple.api.SipCallSession)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean invoke()&gt;"> 
    <node type="StaticCreateMethod" unit="$r6 = r0.&lt;com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.content.Intent mIntent&gt;"/>  
    <node type="StaticCreateMethod" unit="$r6 = r0.&lt;com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.content.Intent mIntent&gt;"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r7.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r6)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.RewriterPlugin: java.util.Map getAvailableRewriters(android.content.Context)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.REWRITE_NUMBER&quot;)"/>  
    <node type="PassOutIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r2, 0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.HANDLE_CALL&quot;)"/>  
    <node type="PassOutIntent" unit="$r6 = virtualinvoke $r5.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r2, 0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ActivityChooserModel: void setActivitySorter(com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List resolveActivitiesForPriviledgedCall(android.content.Context)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: void initialize(android.content.Context)&gt;($r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.incall.InCallActivity: void onNewIntent(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void setIntent(android.content.Intent)&gt;($r1)"/>  
    <node type="PassOutIntent" unit="specialinvoke r0.&lt;com.actionbarsherlock.app.SherlockFragmentActivity: void onNewIntent(android.content.Intent)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.accounts.activate&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;id&quot;, $l0)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)&gt;(&quot;active&quot;, $z0)"/>  
    <node type="PassOutIntent" unit="$r4 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)&gt;($r0, $i1, r1, 134217728)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.filters.AccountFiltersListFragment$1: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.ui.filters.AccountFiltersListFragment: void access$0(com.csipsimple.ui.filters.AccountFiltersListFragment)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.Theme: java.util.HashMap getAvailableThemes(android.content.Context)&gt;"> 
    <node type="CreateMethod" unit="r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.themes.GET_DRAWABLES&quot;)"/>  
    <node type="PassOutIntent" unit="$r8 = virtualinvoke $r7.&lt;android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)&gt;(r3, 0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.RewriterPlugin$OnRewriteReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void launchCallHandler(com.csipsimple.api.SipCallSession)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.INCALL&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;call_info&quot;, $r1)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(805306368)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r4.&lt;com.csipsimple.service.SipService: void startActivity(android.content.Intent)&gt;(r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void disconnect(boolean)&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_OUTGOING_UNREGISTER&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r2)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void sendBroadcast(android.content.Intent)&gt;(r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.ActionMenu: boolean performShortcut(int,android.view.KeyEvent,int)&gt;"> 
    <node unit="$z0 = virtualinvoke $r2.&lt;com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean invoke()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment: void placePluginCall(com.csipsimple.utils.CallHandlerPlugin)&gt;"> 
    <node type="ReceiveIntentFromRetValue" unit="$r4 = virtualinvoke $r1.&lt;com.csipsimple.utils.CallHandlerPlugin: android.app.PendingIntent getIntent()&gt;()"/>  
    <node type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.PendingIntent: void send()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean onMenuItemClick(android.view.MenuItem)&gt;"> 
    <node unit="virtualinvoke r4.&lt;com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean invoke()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment: void actionModeDialpad()&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.DIAL&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r6)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.calllog.CallLogListFragment: void startActivity(android.content.Intent)&gt;(r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)&gt;"> 
    <node unit="$z0 = virtualinvoke r2.&lt;com.actionbarsherlock.internal.view.menu.MenuItemImpl: boolean invoke()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.ActionMenu: boolean performIdentifierAction(int,int)&gt;"> 
    <node unit="$z0 = virtualinvoke $r3.&lt;com.actionbarsherlock.internal.view.menu.ActionMenuItem: boolean invoke()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.ActionMenuView: boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl)&gt;"> 
    <node unit="$z0 = virtualinvoke $r2.&lt;com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)&gt;($r1, 0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment: void access$2(com.csipsimple.ui.calllog.CallLogListFragment)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.ui.calllog.CallLogListFragment: void actionModeDialpad()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment: void access$3(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.utils.CallHandlerPlugin)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.ui.dialpad.DialerFragment: void placePluginCall(com.csipsimple.utils.CallHandlerPlugin)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)&gt;"> 
    <node unit="z0 = virtualinvoke r0.&lt;com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)&gt;($r2, $i1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void access$2(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.pjsip.UAStateReceiver: void launchCallHandler(com.csipsimple.api.SipCallSession)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void access$6(com.csipsimple.ui.SipHome,boolean)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.ui.SipHome: void disconnect(boolean)&gt;($z0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performIdentifierAction(int,int)&gt;"> 
    <node unit="$z0 = virtualinvoke r0.&lt;com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)&gt;($r1, $i1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment$5: void onLoad(com.csipsimple.utils.CallHandlerPlugin)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.ui.dialpad.DialerFragment: void access$3(com.csipsimple.ui.dialpad.DialerFragment,com.csipsimple.utils.CallHandlerPlugin)&gt;($r2, $r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)&gt;"> 
    <node type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke r16.&lt;com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.content.Intent getIntent()&gt;()"/>  
    <node type="PassOutIntent" unit="interfaceinvoke $r13.&lt;android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)&gt;($r15)"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r15 = virtualinvoke r7.&lt;com.actionbarsherlock.internal.view.menu.MenuItemImpl: android.content.Intent getIntent()&gt;()"/>  
    <node type="PassOutIntent" unit="interfaceinvoke $r13.&lt;android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)&gt;($r15)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"> 
    <node unit="virtualinvoke $r4.&lt;com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean performItemAction(com.actionbarsherlock.view.MenuItem,int)&gt;($r5, 0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[])&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent[]"/>  
    <node type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter5: android.content.Intent"/>  
    <node type="PassOutIntent" unit="$r8 = virtualinvoke $r7.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)&gt;($r1, $r2, $r3, 0)"/>  
    <node type="CreateMethod" unit="r5 = new android.content.Intent"/>  
    <node type="PassOutIntent" unit="specialinvoke r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Intent)&gt;($r11)"/>  
    <node type="SetAttribute" unit="virtualinvoke r5.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r1)"/>  
    <node type="PassOutIntent" unit="$r17 = interfaceinvoke $r17.&lt;com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent)&gt;(r5)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.filters.AccountFiltersListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)&gt;"> 
    <node unit="$r3 = interfaceinvoke $r3.&lt;com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)&gt;($r4)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.favorites.PresenceStatusSpinner: void onAttachedToWindow()&gt;"> 
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lcom/csipsimple/service/SipService;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r2, $r4, 1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogDetailsFragment$2: void &lt;init&gt;(com.csipsimple.ui.calllog.CallLogDetailsFragment,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
    <node type="StaticCreateMethod" unit="r0.&lt;com.csipsimple.ui.calllog.CallLogDetailsFragment$2: android.content.Intent val$mainActionIntent&gt; = $r2"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])&gt;"> 
    <node type="PassOutIntent" unit="specialinvoke $r24.&lt;com.csipsimple.ui.calllog.CallLogDetailsFragment$2: void &lt;init&gt;(com.csipsimple.ui.calllog.CallLogDetailsFragment,android.content.Intent)&gt;(r0, r9)"/>  
    <node type="CreateMethod" unit="r9 = new android.content.Intent"/>  
    <node type="InitIntent" unit="specialinvoke r9.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri)&gt;(&quot;android.intent.action.VIEW&quot;, r2)"/>  
    <node type="PassOutIntent" unit="specialinvoke $r24.&lt;com.csipsimple.ui.calllog.CallLogDetailsFragment$2: void &lt;init&gt;(com.csipsimple.ui.calllog.CallLogDetailsFragment,android.content.Intent)&gt;(r0, r9)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogDetailsFragment: void onResume()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.calllog.CallLogDetailsFragment: void updateData(android.net.Uri[])&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)&gt;"> 
    <node unit="$z1 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)&gt;($r2)"/>  
    <node unit="$z1 = staticinvoke &lt;com.csipsimple.utils.Compatibility: boolean shouldUsePriviledgedIntegration(android.content.Context)&gt;($r2)"/>  
    <node unit="$z1 = staticinvoke &lt;com.csipsimple.utils.Compatibility: boolean shouldUsePriviledgedIntegration(android.content.Context)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.PreferencesWrapper: java.lang.Integer needUpgrade()&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.utils.Compatibility: void updateVersion(com.csipsimple.utils.PreferencesWrapper,int,int)&gt;(r0, $i0, $i1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.PreferencesWrapper: void &lt;init&gt;(android.content.Context)&gt;"> 
    <node unit="$r4 = specialinvoke r0.&lt;com.csipsimple.utils.PreferencesWrapper: java.lang.Integer needUpgrade()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.BasePrefsWizard: void saveAccount(java.lang.String)&gt;"> 
    <node unit="specialinvoke r3.&lt;com.csipsimple.utils.PreferencesWrapper: void &lt;init&gt;(android.content.Context)&gt;($r4)"/>  
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_SIP_REQUEST_RESTART&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void sendBroadcast(android.content.Intent)&gt;(r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.BasePrefsWizard: void saveAccount()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void saveAccount(java.lang.String)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void saveAccount()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.Ippi: boolean saveAndQuit()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.ActionBarSherlockNative: void setContentView(int)&gt;"> 
    <node type="setContentView" unit="virtualinvoke $r1.&lt;android.view.Window: void setContentView(int)&gt;($i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)&gt;"> 
    <node unit="specialinvoke r1.&lt;com.csipsimple.utils.PreferencesWrapper: void &lt;init&gt;(android.content.Context)&gt;($r0)"/>  
    <node unit="$z0 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)&gt;($r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.PjSipService: boolean sipStop()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.pjsip.PjSipService: void cleanPjsua()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService: boolean stopSipStack()&gt;"> 
    <node unit="z0 = virtualinvoke $r1.&lt;com.csipsimple.pjsip.PjSipService: boolean sipStop()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$DestroyRunnable: void doRun()&gt;"> 
    <node unit="$z0 = virtualinvoke $r1.&lt;com.csipsimple.service.SipService: boolean stopSipStack()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.VoipTel: boolean saveAndQuit()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.warnings.WarningPrivilegedIntent: void onClick(android.view.View)&gt;"> 
    <node type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_SIP_REQUEST_RESTART&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r2.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r5)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment: void viewDetails(int,long[])&gt;"> 
    <node type="CreateMethod" unit="r4 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, class &quot;Lcom/csipsimple/ui/calllog/CallLogDetailsActivity;&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])&gt;(&quot;EXTRA_CALL_LOG_IDS&quot;, $r1)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r9.&lt;android.support.v4.app.FragmentActivity: void startActivity(android.content.Intent)&gt;(r4)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean initializePanelMenu()&gt;"> 
    <node unit="virtualinvoke $r5.&lt;com.actionbarsherlock.internal.view.menu.MenuBuilder: void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback)&gt;(r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()&gt;"> 
    <node unit="$z1 = specialinvoke r0.&lt;com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean initializePanelMenu()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean dispatchPrepareOptionsMenu(android.view.Menu)&gt;"> 
    <node unit="$z0 = specialinvoke r0.&lt;com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()&gt;()"/>  
    <node unit="$z0 = virtualinvoke $r4.&lt;com.actionbarsherlock.internal.view.menu.MenuBuilder: boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap)&gt;($r1, r0, $r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()&gt;"> 
    <node unit="$r3 = staticinvoke &lt;com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)&gt;($r2)"/>  
    <node unit="$z0 = staticinvoke &lt;com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.CallHandlerPlugin: void &lt;init&gt;(android.content.Context)&gt;"> 
    <node type="StaticCreateMethod" unit="r0.&lt;com.csipsimple.utils.CallHandlerPlugin: android.app.PendingIntent pendingIntent&gt; = null"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)&gt;"> 
    <node unit="$r7 = virtualinvoke $r6.&lt;com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()&gt;()"/>  
    <node unit="specialinvoke r2.&lt;com.csipsimple.utils.CallHandlerPlugin: void &lt;init&gt;(android.content.Context)&gt;($r11)"/>  
    <node unit="virtualinvoke r2.&lt;com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.Long,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)&gt;($r5, $r10, $r12)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment: void placeVideoCall()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)&gt;(r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void onDestroy()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.SipHome: void disconnect(boolean)&gt;(0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment: void placeCall()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.dialpad.DialerFragment: void placeCallWithOption(android.os.Bundle)&gt;(null)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.Mondotalk: void onActivityResult(int,int,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>  
    <node unit="virtualinvoke $r4.&lt;com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.app.SherlockPreferenceActivity: void setContentView(int)&gt;"> 
    <node type="setContentView" unit="virtualinvoke $r1.&lt;com.actionbarsherlock.ActionBarSherlock: void setContentView(int)&gt;($i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)&gt;"> 
    <node type="CreateMethod" unit="$r16 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/PickupSipUri;&quot;)"/>  
    <node type="CreateMethod" unit="$r16 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/PickupSipUri;&quot;)"/>  
    <node type="CreateMethod" unit="$r16 = new android.content.Intent"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void startActivityForResult(android.content.Intent,int)&gt;($r16, 1)"/>  
    <node type="SetAttribute" unit="specialinvoke $r16.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/incall/InCallMediaControl;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void startActivity(android.content.Intent)&gt;($r16)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke $r16.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;call_id&quot;, $i0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void startActivityForResult(android.content.Intent,int)&gt;($r16, 0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.EditSipUri: com.csipsimple.widgets.EditSipUri$ToCall getValue()&gt;"> 
    <node unit="$r6 = virtualinvoke $r5.&lt;com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.PickupSipUri: void sendPositiveResult()&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="InitIntent" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;()&gt;()"/>  
    <node unit="$r3 = virtualinvoke $r2.&lt;com.csipsimple.widgets.EditSipUri: com.csipsimple.widgets.EditSipUri$ToCall getValue()&gt;()"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)&gt;($r5)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;android.intent.extra.PHONE_NUMBER&quot;, $r6)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;id&quot;, $r7)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.PickupSipUri: void setResult(int,android.content.Intent)&gt;(-1, r1)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;android.intent.extra.PHONE_NUMBER&quot;, $r6)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;id&quot;, $r7)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.PickupSipUri: void setResult(int,android.content.Intent)&gt;(-1, r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnPrivilegedIntent(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)&gt;"> 
    <node unit="$z0 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)&gt;($r0)"/>  
    <node unit="$r3 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List resolveActivitiesForPriviledgedCall(android.content.Context)&gt;($r0)"/>  
    <node unit="$r4 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: android.content.pm.ResolveInfo resolveActivityForPriviledgedCall(android.content.Context)&gt;($r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void postStartSipService()&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/BasePrefsWizard;&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r8)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>  
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/account/AccountsEditList;&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/>  
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void access$4(com.csipsimple.ui.SipHome)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.ui.SipHome: void postStartSipService()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService: void restartSipStack()&gt;"> 
    <node unit="$z0 = virtualinvoke r0.&lt;com.csipsimple.service.SipService: boolean stopSipStack()&gt;()"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.service.SipService: void startSipStack()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)&gt;"> 
    <node unit="$z0 = virtualinvoke $r5.&lt;com.csipsimple.service.SipService: boolean stopSipStack()&gt;()"/>  
    <node unit="virtualinvoke $r5.&lt;com.csipsimple.service.SipService: void restartSipStack()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.receiver.DynamicReceiver4: void onReceiveInternal(android.content.Context,android.content.Intent,boolean)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
    <node unit="virtualinvoke $r9.&lt;com.csipsimple.service.SipService: void restartSipStack()&gt;()"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)&gt;(null, $z0)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)&gt;($r8, $z0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.EditSipUri: com.csipsimple.api.SipProfile getSelectedAccount()&gt;"> 
    <node unit="$r1 = virtualinvoke $r2.&lt;com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,java.lang.String,java.lang.String,int,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r4 := @parameter4: android.content.Intent"/>  
    <node type="StaticCreateMethod" unit="r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: android.content.Intent intent&gt; = $r4"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)&gt;"> 
    <node unit="$z0 = staticinvoke &lt;com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton$1: void onClick(android.view.View)&gt;"> 
    <node unit="virtualinvoke $r4.&lt;com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment$2$1: void run()&gt;"> 
    <node unit="virtualinvoke $r2.&lt;com.csipsimple.ui.calllog.CallLogListFragment: void viewDetails(int,long[])&gt;($i0, $r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment$2: void run()&gt;"> 
    <node unit="virtualinvoke $r4.&lt;android.support.v4.app.FragmentActivity: void runOnUiThread(java.lang.Runnable)&gt;($r5)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment: void onVisibilityChanged(boolean)&gt;"> 
    <node unit="virtualinvoke r1.&lt;java.lang.Thread: void start()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,java.lang.String,java.lang.String)&gt;"> 
    <node type="CreateMethod" unit="r4 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r9, class &quot;Lcom/csipsimple/ui/messages/MessageActivity;&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r4.&lt;android.content.Intent: android.content.Intent putExtras(android.os.Bundle)&gt;($r5)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void startActivity(android.content.Intent)&gt;(r4)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment$5$1: void run()&gt;"> 
    <node unit="virtualinvoke $r3.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,java.lang.String,java.lang.String)&gt;($i0, $r1, $r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment$5: void run()&gt;"> 
    <node unit="virtualinvoke $r11.&lt;android.support.v4.app.FragmentActivity: void runOnUiThread(java.lang.Runnable)&gt;($r12)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void onVisibilityChanged(boolean)&gt;"> 
    <node unit="virtualinvoke r1.&lt;java.lang.Thread: void start()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void onAttachFragment(android.support.v4.app.Fragment)&gt;"> 
    <node unit="virtualinvoke r7.&lt;com.csipsimple.ui.calllog.CallLogListFragment: void onVisibilityChanged(boolean)&gt;(1)"/>  
    <node unit="virtualinvoke r8.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void onVisibilityChanged(boolean)&gt;(1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void onActivityCreated(android.os.Bundle)&gt;"> 
    <node unit="virtualinvoke $r2.&lt;android.widget.ListView: void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)&gt;(r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(int)&gt;"> 
    <node type="setContentView" unit="virtualinvoke $r1.&lt;com.actionbarsherlock.ActionBarSherlock: void setContentView(int)&gt;($i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsEditList: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.account.AccountsEditList: void setContentView(int)&gt;(2130903067)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void updateRecordingStatus(int,boolean,boolean)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.pjsip.UAStateReceiver: void onBroadcastCallState(com.csipsimple.api.SipCallSession)&gt;($r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.PjSipService: void startRecording(int)&gt;"> 
    <node unit="virtualinvoke $r5.&lt;com.csipsimple.pjsip.UAStateReceiver: void updateRecordingStatus(int,boolean,boolean)&gt;($i0, 0, 1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$1$20: void doRun()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.pjsip.PjSipService: void startRecording(int)&gt;($i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.audio.AudioFocus3: void pauseMusic()&gt;"> 
    <node type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.android.music.musicservicecommand.pause&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r2.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent)&gt;($r4)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.audio.AudioFocus3: void focus()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.utils.audio.AudioFocus3: void pauseMusic()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()&gt;"> 
    <node unit="$r4 = virtualinvoke $r3.&lt;com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()&gt;()"/>  
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="InitIntent" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri)&gt;(&quot;android.intent.action.CALL&quot;, $r23)"/>  
    <node type="SetAttribute" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent addFlags(int)&gt;(268435456)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.dialpad.DialerFragment: void startActivity(android.content.Intent)&gt;(r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipNotifications: void notifyRegisteredAccounts(java.util.ArrayList,boolean)&gt;"> 
    <node type="CreateMethod" unit="r4 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.DIALER&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r4.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
    <node type="PassOutIntent" unit="$r7 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, r4, 134217728)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r7)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService: void updateRegistrationsState()&gt;"> 
    <node unit="virtualinvoke $r9.&lt;com.csipsimple.service.SipNotifications: void notifyRegisteredAccounts(java.util.ArrayList,boolean)&gt;(r1, $z0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.audio.AudioFocus3: void restartMusic()&gt;"> 
    <node type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.android.music.musicservicecommand.togglepause&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r1.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent)&gt;($r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogDetailsFragment$1: void onClick(android.view.View)&gt;"> 
    <node unit="$r7 = virtualinvoke $r6.&lt;com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()&gt;()"/>  
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r8)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;acc_id&quot;, $l0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r5.&lt;com.csipsimple.ui.calllog.CallLogDetailsFragment: void startActivity(android.content.Intent)&gt;(r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.SipProfileJson: org.json.JSONArray serializeSipProfiles(android.content.Context)&gt;"> 
    <node unit="$r7 = staticinvoke &lt;com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)&gt;($r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipSettings(android.content.Context)&gt;"> 
    <node unit="specialinvoke r1.&lt;com.csipsimple.utils.PreferencesWrapper: void &lt;init&gt;(android.content.Context)&gt;($r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.SipProfileJson: boolean saveSipConfiguration(android.content.Context)&gt;"> 
    <node unit="$r11 = staticinvoke &lt;com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipSettings(android.content.Context)&gt;($r0)"/>  
    <node unit="$r10 = staticinvoke &lt;com.csipsimple.utils.SipProfileJson: org.json.JSONArray serializeSipProfiles(android.content.Context)&gt;($r0)"/>  
    <node unit="$r11 = staticinvoke &lt;com.csipsimple.utils.SipProfileJson: org.json.JSONObject serializeSipSettings(android.content.Context)&gt;($r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.SipProfileJson: void restoreSipSettings(android.content.Context,org.json.JSONObject)&gt;"> 
    <node unit="specialinvoke r2.&lt;com.csipsimple.utils.PreferencesWrapper: void &lt;init&gt;(android.content.Context)&gt;($r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.utils.SipProfileJson: void restoreSipSettings(android.content.Context,org.json.JSONObject)&gt;($r0, r8)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsEditListFragment$3$1: void onClick(android.content.DialogInterface,int)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.utils.SipProfileJson: boolean restoreSipConfiguration(android.content.Context,java.io.File)&gt;($r5, r2)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.utils.SipProfileJson: boolean saveSipConfiguration(android.content.Context)&gt;($r5)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsEditListFragment$3: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)&gt;"> 
    <node unit="virtualinvoke r2.&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)&gt;($r9, $r11)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsEditListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)&gt;"> 
    <node unit="$r3 = interfaceinvoke $r3.&lt;com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)&gt;($r4)"/>  
    <node unit="interfaceinvoke $r3.&lt;com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)&gt;($r6)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment$CallLogActionMode: boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.ui.calllog.CallLogListFragment: void access$2(com.csipsimple.ui.calllog.CallLogListFragment)&gt;($r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment: void turnOnActionMode()&gt;"> 
    <node unit="$r3 = virtualinvoke $r1.&lt;com.actionbarsherlock.app.SherlockFragmentActivity: com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment: void access$4(com.csipsimple.ui.calllog.CallLogListFragment)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.ui.calllog.CallLogListFragment: void turnOnActionMode()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipNotifications: void showNotificationForVoiceMail(com.csipsimple.api.SipProfile,int)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
    <node type="PassOutIntent" unit="$r8 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r4, 0, r2, 268435456)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r8)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r7)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;acc_id&quot;, $l1)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
    <node type="PassOutIntent" unit="$r8 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r4, 0, r2, 268435456)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$SyncRestartRunnable: java.lang.Object runWithReturn()&gt;"> 
    <node unit="$z0 = virtualinvoke $r1.&lt;com.csipsimple.service.SipService: boolean stopSipStack()&gt;()"/>  
    <node unit="staticinvoke &lt;com.csipsimple.service.SipService: void access$9(com.csipsimple.service.SipService)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsEditListFragment: void onActivityResult(int,int,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>  
    <node type="PassOutIntent" unit="specialinvoke r0.&lt;com.csipsimple.widgets.CSSListFragment: void onActivityResult(int,int,android.content.Intent)&gt;($i0, $i1, $r1)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.account.AccountsEditListFragment: void showDetails(long,java.lang.String)&gt;(-1L, $r4)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void actualUnsetAudioInCall()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void restoreAudioState()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void unsetAudioInCall()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void actualUnsetAudioInCall()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.PjSipService: void unsetAudioInCall()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.service.MediaManager: void unsetAudioInCall()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void on_teardown_audio()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.pjsip.PjSipService: void unsetAudioInCall()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.ShortcutWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)&gt;"> 
    <node type="StaticCreateMethod" unit="$r5 = r1.&lt;com.csipsimple.widgets.ShortcutWidgetConfigure$Shortcut: android.content.Intent intent&gt;"/>  
    <node type="PassOutIntent" unit="$r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r0, 0, $r5, 0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r2.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131099907, $r6)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ActivityChooserModel: void loadActivitiesLocked()&gt;"> 
    <node type="StaticCreateMethod" unit="$r2 = r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent mIntent&gt;"/>  
    <node type="StaticCreateMethod" unit="$r2 = r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent mIntent&gt;"/>  
    <node type="PassOutIntent" unit="$r1 = virtualinvoke $r4.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)&gt;($r2, 0)"/>  
    <node unit="specialinvoke r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ActivityChooserModel: void setIntent(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
    <node type="StaticCreateMethod" unit="$r3 = r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent mIntent&gt;"/>  
    <node type="StaticCreateMethod" unit="r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent mIntent&gt; = $r1"/>  
    <node unit="specialinvoke r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: void loadActivitiesLocked()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)&gt;"> 
    <node type="CreateMethod" unit="r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_GLOBAL&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivityForResult(android.content.Intent,int)&gt;(r3, 1)"/>  
    <node type="CreateMethod" unit="r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/account/AccountsEditList;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivity(android.content.Intent)&gt;(r3)"/>  
    <node type="CreateMethod" unit="r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/BasePrefsWizard;&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;wizard&quot;, $r4)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;id&quot;, r19)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivityForResult(android.content.Intent,int)&gt;(r3, 0)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.SipHome: void disconnect(boolean)&gt;(1)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void startActivityForResult(android.content.Intent,int)&gt;(r3, 0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)&gt;"> 
    <node unit="specialinvoke r4.&lt;com.csipsimple.utils.PreferencesWrapper: void &lt;init&gt;(android.content.Context)&gt;($r0)"/>  
    <node type="CreateMethod" unit="r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r0, class &quot;Lcom/csipsimple/ui/prefs/Codecs;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r6.&lt;android.preference.Preference: void setIntent(android.content.Intent)&gt;(r3)"/>  
    <node unit="$r10 = staticinvoke &lt;com.csipsimple.utils.Theme: java.util.HashMap getAvailableThemes(android.content.Context)&gt;($r0)"/>  
    <node unit="$r15 = staticinvoke &lt;com.csipsimple.utils.ExtraPlugins: java.util.Map getDynPlugins(android.content.Context,java.lang.String)&gt;($r0, &quot;com.csipsimple.plugins.action.REGISTER_VIDEO&quot;)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.cupcake.PrefsLoaderActivity: void afterBuildPrefs()&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)&gt;(r0, r0, $i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.account.AccountsChooserListActivity: void setContentView(int)&gt;(2130903064)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountWidgetConfigure: void onCreate(android.os.Bundle)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)&gt;($r1)"/>  
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="InitIntent" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;()&gt;()"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;appWidgetId&quot;, $i0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.widgets.AccountWidgetConfigure: void setResult(int,android.content.Intent)&gt;(0, r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.incall.InCallActivity$1: void onReceive(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.app.SherlockActivity: void setContentView(int)&gt;"> 
    <node type="setContentView" unit="virtualinvoke $r1.&lt;com.actionbarsherlock.ActionBarSherlock: void setContentView(int)&gt;($i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.PreferenceProvider: boolean onCreate()&gt;"> 
    <node unit="specialinvoke $r2.&lt;com.csipsimple.utils.PreferencesWrapper: void &lt;init&gt;(android.content.Context)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent"/>  
    <node type="StaticCreateMethod" unit="r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: android.content.Intent intent&gt; = $r2"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,java.lang.String,java.lang.String)&gt;($i0, $r2, r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)&gt;($i0, r6)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.incall.InCallMediaControl: void onResume()&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.SipService&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallMediaControl: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;(r1, $r2, 1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton$2$1: void onClick(android.view.View)&gt;"> 
    <node unit="virtualinvoke $r3.&lt;com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)&gt;($r5)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton$2: void onLoad(com.csipsimple.utils.CallHandlerPlugin)&gt;"> 
    <node unit="virtualinvoke $r4.&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)&gt;($r5, $r6, $r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.contacts.ContactsUtils5: android.content.Intent getAddContactIntent(java.lang.String,java.lang.String)&gt;"> 
    <node type="CreateMethod" unit="r5 = new android.content.Intent"/>  
    <node type="InitIntent" unit="specialinvoke r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String,android.net.Uri)&gt;(&quot;android.intent.action.INSERT_OR_EDIT&quot;, $r6)"/>  
    <node type="SetAttribute" unit="virtualinvoke r5.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;vnd.android.cursor.item/contact&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r5.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;name&quot;, $r1)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r5.&lt;android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)&gt;(&quot;data&quot;, r4)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r5.&lt;android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)&gt;(&quot;data&quot;, r4)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.Zadarma: boolean saveAndQuit()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)&gt;($i0, r4)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.EditSipUri: void updateDialTextHelper()&gt;"> 
    <node unit="$r5 = virtualinvoke $r4.&lt;com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)&gt;"> 
    <node type="ReceiveIntentFromRetValue" unit="$r11 = staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: android.app.PendingIntent getLaunchPendingIntent(android.content.Context,long,boolean)&gt;($r0, $l1, $z1)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r3.&lt;android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)&gt;(2131099902, $r11)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountWidgetProvider: void updateWidget(android.content.Context)&gt;"> 
    <node unit="$r4 = staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)&gt;($r0, i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountWidgetConfigure: void onAccountClicked(long)&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="InitIntent" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;()&gt;()"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;appWidgetId&quot;, $i1)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.widgets.AccountWidgetConfigure: void setResult(int,android.content.Intent)&gt;(-1, r1)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: void updateWidget(android.content.Context)&gt;(r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)&gt;"> 
    <node unit="$z1 = staticinvoke &lt;com.csipsimple.utils.Compatibility: boolean shouldUsePriviledgedIntegration(android.content.Context)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.PreferencesWrapper: void resetAllDefaultValues()&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.utils.Compatibility: void setFirstRunParameters(com.csipsimple.utils.PreferencesWrapper)&gt;(r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.PreferenceProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])&gt;"> 
    <node unit="virtualinvoke $r9.&lt;com.csipsimple.utils.PreferencesWrapper: void resetAllDefaultValues()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.MessageFragment: void sendMessage()&gt;"> 
    <node unit="$r4 = virtualinvoke $r3.&lt;com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.MessageFragment: void onClick(android.view.View)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.messages.MessageFragment: void chooseSipUri()&gt;()"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.messages.MessageFragment: void sendMessage()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void run()&gt;"> 
    <node type="StaticCreateMethod" unit="$r4 = r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: android.app.PendingIntent pendingIntent&gt;"/>  
    <node unit="virtualinvoke r3.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void finishServiceIfNeeded(boolean)&gt;(0)"/>  
    <node type="sendOutWrapperredIntent" unit="virtualinvoke $r4.&lt;android.app.PendingIntent: void send()&gt;()"/>  
    <node unit="virtualinvoke r3.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void finishServiceIfNeeded(boolean)&gt;(0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.BasePrefsWizard$2: void onClick(android.view.View)&gt;"> 
    <node unit="virtualinvoke $r2.&lt;com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void setMicrophoneMute(boolean)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastMediaChanged()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.PjSipService: void setMicrophoneMute(boolean)&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.service.MediaManager: void setMicrophoneMute(boolean)&gt;($z0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void onClickAddMessage()&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)&gt;($i0, null)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void access$0(com.csipsimple.ui.messages.ConversationsListFragment)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void onClickAddMessage()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment$1: void onClick(android.view.View)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.ui.messages.ConversationsListFragment: void access$0(com.csipsimple.ui.messages.ConversationsListFragment)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()&gt;"> 
    <node unit="virtualinvoke $r2.&lt;android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)&gt;(r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ActivityChooserModel: boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: void sortActivities()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)&gt;"> 
    <node type="CreateMethod" unit="r11 = new android.content.Intent"/>  
    <node type="StaticCreateMethod" unit="r1 = r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent mIntent&gt;"/>  
    <node type="PassOutIntent" unit="specialinvoke r11.&lt;android.content.Intent: void &lt;init&gt;(android.content.Intent)&gt;(r1)"/>  
    <node type="SetAttribute" unit="virtualinvoke r11.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;(r2)"/>  
    <node unit="specialinvoke r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord)&gt;(r3)"/>  
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="PassOutIntent" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Intent)&gt;(r11)"/>  
    <node type="PassOutIntent" unit="$z0 = interfaceinvoke $r12.&lt;com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener: boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent)&gt;(r0, r1)"/>  
    <node unit="specialinvoke r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord)&gt;(r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)&gt;"> 
    <node type="ReceiveIntentFromRetValue" unit="$r6 = virtualinvoke $r5.&lt;com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)&gt;($i0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r6)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastVolumeWillBeUpdated(int,int)&gt;($i0, -9999)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.PjSipService: void adjustStreamVolume(int,int,int)&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.service.MediaManager: void adjustStreamVolume(int,int,int)&gt;($i0, $i1, 1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ActivityChooserModel: void setDefaultActivity(int)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.actionbarsherlock.widget.ActivityChooserModel: boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord)&gt;(r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"> 
    <node type="ReceiveIntentFromRetValue" unit="$r8 = virtualinvoke $r7.&lt;com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)&gt;($i1)"/>  
    <node unit="virtualinvoke $r7.&lt;com.actionbarsherlock.widget.ActivityChooserModel: void setDefaultActivity(int)&gt;($i1)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r9.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r8)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.MenuWrapper: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[])&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent[]"/>  
    <node type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter5: android.content.Intent"/>  
    <node type="PassOutIntent" unit="$i1 = interfaceinvoke $r6.&lt;android.view.Menu: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])&gt;($i0, $i1, $i2, $r1, $r2, $r3, $i3, r5)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.PrefsFilters: void onCreate(android.os.Bundle)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.TimerWrapper: void onReceive(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.BasePrefsWizard: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/filters/AccountFilters;&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;id&quot;, $l1)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void startActivityForResult(android.content.Intent,int)&gt;(r2, 1)"/>  
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/wizards/WizardChooser;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void startActivityForResult(android.content.Intent,int)&gt;(r2, 0)"/>  
    <node unit="virtualinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void actualSetAudioInCall()&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setStreamVolume(int,int,int)&gt;($i1, $i2, 0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void setAudioInCall()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.service.MediaManager: void actualSetAudioInCall()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.PjSipService: void setAudioInCall()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.service.MediaManager: void setAudioInCall()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void on_setup_audio()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.pjsip.PjSipService: void setAudioInCall()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.PjSipService: void stopRecording(int)&gt;"> 
    <node unit="virtualinvoke $r2.&lt;com.csipsimple.pjsip.UAStateReceiver: void updateRecordingStatus(int,boolean,boolean)&gt;($i0, 1, 0)"/>  
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.CALL_RECORDED&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;call_info&quot;, $r6)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;file_path&quot;, r5)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r7.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r1, &quot;android.permission.USE_SIP&quot;)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void on_call_state(int,org.pjsip.pjsua.pjsip_event)&gt;"> 
    <node unit="virtualinvoke $r4.&lt;com.csipsimple.pjsip.PjSipService: void stopRecording(int)&gt;($i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountWidgetProvider: void onReceive(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.csipsimple.widgets.AccountWidgetProvider: android.content.Intent getIntent()&gt;()"/>  
    <node type="PassOutIntent" unit="specialinvoke r0.&lt;android.appwidget.AppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)&gt;($r1, $r2)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: void updateWidget(android.content.Context)&gt;($r1)"/>  
    <node type="PassOutIntent" unit="specialinvoke r0.&lt;android.appwidget.AppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)&gt;($r1, $r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void setBluetoothOn(boolean)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastMediaChanged()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$1$21: void doRun()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.pjsip.PjSipService: void stopRecording(int)&gt;($i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchInvalidateOptionsMenu()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.actionbarsherlock.internal.ActionBarSherlockCompat: boolean preparePanel()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.ActionBarSherlockCompat$1: void run()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.actionbarsherlock.internal.ActionBarSherlockCompat: void dispatchInvalidateOptionsMenu()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.PrefsLogic: boolean onMainActivityOptionsItemSelected(com.actionbarsherlock.view.MenuItem,android.content.Context,com.csipsimple.utils.PreferencesWrapper)&gt;"> 
    <node type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/csipsimple/ui/prefs/AudioTester;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r3)"/>  
    <node unit="virtualinvoke $r2.&lt;com.csipsimple.utils.PreferencesWrapper: void resetAllDefaultValues()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome$3: void run()&gt;"> 
    <node type="CreateMethod" unit="r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r1.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.SipService&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r1.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r2)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r3.&lt;com.csipsimple.ui.SipHome: android.content.ComponentName startService(android.content.Intent)&gt;(r1)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.ui.SipHome: void access$4(com.csipsimple.ui.SipHome)&gt;($r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void startSipService()&gt;"> 
    <node unit="virtualinvoke r1.&lt;java.lang.Thread: void start()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void onResume()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.SipHome: void startSipService()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.GenericPrefs: void onPause()&gt;"> 
    <node unit="interfaceinvoke $r2.&lt;android.content.SharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)&gt;(r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.BasePrefsWizard: void onPause()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.prefs.GenericPrefs: void onPause()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)&gt;"> 
    <node unit="specialinvoke $r8.&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context,android.view.View)&gt;($r9, r0)"/>  
    <node unit="virtualinvoke $r8.&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)&gt;(r4, $r18, $r19)"/>  
    <node unit="virtualinvoke $r8.&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void addItem(android.graphics.drawable.Drawable,java.lang.String,android.view.View$OnClickListener)&gt;(r4, $r18, $r19)"/>  
    <node unit="$r20 = staticinvoke &lt;com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)&gt;($r9)"/>  
    <node unit="$z0 = staticinvoke &lt;com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)&gt;($r9)"/>  
    <node unit="specialinvoke r3.&lt;com.csipsimple.utils.CallHandlerPlugin: void &lt;init&gt;(android.content.Context)&gt;($r9)"/>  
    <node unit="virtualinvoke r3.&lt;com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.String,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)&gt;($r18, null, $r28)"/>  
    <node unit="$r20 = staticinvoke &lt;com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)&gt;($r9)"/>  
    <node unit="$z0 = staticinvoke &lt;com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)&gt;($r9)"/>  
    <node unit="$r20 = staticinvoke &lt;com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)&gt;($r9)"/>  
    <node unit="$z0 = staticinvoke &lt;com.csipsimple.utils.Compatibility: boolean canMakeGSMCall(android.content.Context)&gt;($r9)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.widgets.AccountChooserButton: void setOnClickListener(android.view.View$OnClickListener)&gt;(r0)"/>  
    <node unit="virtualinvoke r0.&lt;com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)&gt;(null)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.widgets.AccountChooserButton: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;($r1, $r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void &lt;init&gt;(com.csipsimple.ui.outgoingcall.OutgoingCallListFragment,android.app.PendingIntent,long)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.app.PendingIntent"/>  
    <node type="StaticCreateMethod" unit="r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: android.app.PendingIntent pendingIntent&gt; = $r2"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.warnings.WarningNoStun: void onClick(android.view.View)&gt;"> 
    <node type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_SIP_REQUEST_RESTART&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r2.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r5)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.receiver.DynamicReceiver4: void access$4(com.csipsimple.service.receiver.DynamicReceiver4,android.net.NetworkInfo,boolean)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.service.receiver.DynamicReceiver4: void onConnectivityChanged(android.net.NetworkInfo,boolean)&gt;($r1, $z0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.receiver.DynamicReceiver4$2$1: void doRun()&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.service.receiver.DynamicReceiver4: void access$4(com.csipsimple.service.receiver.DynamicReceiver4,android.net.NetworkInfo,boolean)&gt;($r1, null, 0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$1: void sendMessage(java.lang.String,java.lang.String,long)&gt;"> 
    <node type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/csipsimple/service/SipService;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r4.&lt;com.csipsimple.service.SipService: android.content.ComponentName startService(android.content.Intent)&gt;($r5)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void setSpeakerphoneOn(boolean)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void broadcastMediaChanged()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.Cryptel: boolean saveAndQuit()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.wizards.BasePrefsWizard: void saveAndFinish()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$1: void makeCallWithOptions(java.lang.String,int,android.os.Bundle)&gt;"> 
    <node type="CreateMethod" unit="$r4 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r4.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r5, class &quot;Lcom/csipsimple/service/SipService;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r3.&lt;com.csipsimple.service.SipService: android.content.ComponentName startService(android.content.Intent)&gt;($r4)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void selectTabWithAction(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void onNewIntent(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
    <node type="PassOutIntent" unit="specialinvoke r0.&lt;com.actionbarsherlock.app.SherlockFragmentActivity: void onNewIntent(android.content.Intent)&gt;($r1)"/>  
    <node type="PassOutIntent" unit="specialinvoke r0.&lt;com.csipsimple.ui.SipHome: void selectTabWithAction(android.content.Intent)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome$4: void onClick(android.content.DialogInterface,int)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.ui.SipHome: void access$6(com.csipsimple.ui.SipHome,boolean)&gt;($r3, 1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.ShortcutWidgetConfigure: void onCreate(android.os.Bundle)&gt;"> 
    <node type="CreateMethod" unit="r4 = new android.content.Intent"/>  
    <node type="InitIntent" unit="specialinvoke r4.&lt;android.content.Intent: void &lt;init&gt;()&gt;()"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r4.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;appWidgetId&quot;, $i0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.widgets.ShortcutWidgetConfigure: void setResult(int,android.content.Intent)&gt;(0, r4)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.EditSipUri: void access$0(com.csipsimple.widgets.EditSipUri)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.widgets.EditSipUri: void updateDialTextHelper()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.EditSipUri$1: void onChooseAccount(com.csipsimple.api.SipProfile)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.widgets.EditSipUri: void access$0(com.csipsimple.widgets.EditSipUri)&gt;($r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)&gt;"> 
    <node unit="virtualinvoke r4.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void finishServiceIfNeeded(boolean)&gt;(1)"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r10 = virtualinvoke $r9.&lt;com.csipsimple.utils.CallHandlerPlugin: android.app.PendingIntent getIntent()&gt;()"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r10 = virtualinvoke $r9.&lt;com.csipsimple.utils.CallHandlerPlugin: android.app.PendingIntent getIntent()&gt;()"/>  
    <node type="PassOutIntent" unit="specialinvoke r2.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void &lt;init&gt;(com.csipsimple.ui.outgoingcall.OutgoingCallListFragment,android.app.PendingIntent,long)&gt;(r0, $r10, $l1)"/>  
    <node unit="virtualinvoke r2.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallListFragment$PluginCallRunnable: void start()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void changeCursor(android.database.Cursor)&gt;"> 
    <node unit="$z0 = specialinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)&gt;($r1)"/>  
    <node unit="$z0 = specialinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)&gt;($r1)"/>  
    <node unit="$z0 = specialinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.app.SherlockExpandableListActivity: void setContentView(int)&gt;"> 
    <node type="setContentView" unit="virtualinvoke $r1.&lt;com.actionbarsherlock.ActionBarSherlock: void setContentView(int)&gt;($i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)&gt;"> 
    <node unit="virtualinvoke r2.&lt;android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)&gt;(r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment: void initButtons(android.view.View)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)&gt;($r1, i0, 1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.TimerWrapper: int doCancel(int)&gt;"> 
    <node type="ReceiveIntentFromRetValue" unit="$r4 = specialinvoke r0.&lt;com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)&gt;($i0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.app.AlarmManager: void cancel(android.app.PendingIntent)&gt;($r4)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.TimerWrapper: int cancel(int,int)&gt;"> 
    <node unit="$i0 = specialinvoke $r0.&lt;com.csipsimple.utils.TimerWrapper: int doCancel(int)&gt;($i1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: int timer_cancel(int,int)&gt;"> 
    <node unit="$i0 = staticinvoke &lt;com.csipsimple.utils.TimerWrapper: int cancel(int,int)&gt;($i0, $i1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton: void updateRegistration()&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.widgets.AccountChooserButton: void setAccount(com.csipsimple.api.SipProfile)&gt;(r9)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.TimerWrapper: int doSchedule(int,int)&gt;"> 
    <node type="ReceiveIntentFromRetValue" unit="$r1 = specialinvoke r0.&lt;com.csipsimple.utils.TimerWrapper: android.app.PendingIntent getPendingIntentForTimer(int)&gt;($i0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r2.&lt;android.app.AlarmManager: void cancel(android.app.PendingIntent)&gt;($r1)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r2.&lt;android.app.AlarmManager: void set(int,long,android.app.PendingIntent)&gt;(2, $l2, $r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.TimerWrapper: int schedule(int,int,int)&gt;"> 
    <node unit="$i0 = specialinvoke $r0.&lt;com.csipsimple.utils.TimerWrapper: int doSchedule(int,int)&gt;($i1, $i2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: int timer_schedule(int,int,int)&gt;"> 
    <node unit="$i0 = staticinvoke &lt;com.csipsimple.utils.TimerWrapper: int schedule(int,int,int)&gt;($i0, $i1, $i2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.incall.InCallMediaControl$1: void onReceive(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipNotifications: void showNotificationForMessage(com.csipsimple.api.SipMessage)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.MESSAGES&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;sender&quot;, $r4)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;body&quot;, $r4)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
    <node type="PassOutIntent" unit="$r8 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r5, 0, r2, 268435456)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r7.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r8)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void on_pager_status(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pjsip_status_code,org.pjsip.pjsua.pj_str_t)&gt;"> 
    <node type="CreateMethod" unit="r6 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MESSAGE_RECEIVED&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r6.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;sender&quot;, $r8)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r14.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r6, &quot;android.permission.USE_SIP&quot;)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.ShortcutWidgetConfigure$Shortcut: void &lt;init&gt;(int,int,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>  
    <node type="StaticCreateMethod" unit="r0.&lt;com.csipsimple.widgets.ShortcutWidgetConfigure$Shortcut: android.content.Intent intent&gt; = $r1"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.MediaManager: void toggleMute()&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.service.MediaManager: void setMicrophoneMute(boolean)&gt;($z0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.favorites.FavAdapter$2: void onClick(android.view.View)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r14)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r7.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;(r2)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)&gt;(&quot;acc_id&quot;, $r8)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r7.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;(r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.NightlyUpdater$UpdaterPopupLauncher: void run()&gt;"> 
    <node unit="$r3 = virtualinvoke $r3.&lt;android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)&gt;(2131427823, $r6)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.help.Help$2: void run()&gt;"> 
    <node unit="virtualinvoke $r4.&lt;android.support.v4.app.FragmentActivity: void runOnUiThread(java.lang.Runnable)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.MessageFragment: void onActivityResult(int,int,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>  
    <node type="PassOutIntent" unit="specialinvoke r0.&lt;com.actionbarsherlock.app.SherlockListFragment: void onActivityResult(int,int,android.content.Intent)&gt;($i0, $i1, $r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsEditListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.account.AccountsEditListFragment: void showDetails(long,java.lang.String)&gt;($l1, $r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.hc.PrefsLoaderFragment: void onCreate(android.os.Bundle)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.ui.prefs.PrefsLogic: void afterBuildPrefsForType(android.content.Context,com.csipsimple.ui.prefs.IPreferenceHelper,int)&gt;($r2, r0, $i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.plugins.telephony.CallHandler: void onReceive(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.csipsimple.plugins.telephony.CallHandler: android.content.Intent getIntent()&gt;()"/>  
    <node unit="$z0 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: boolean isPhone(android.content.Context)&gt;($r1)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r10.&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;(&quot;android.intent.extra.remote_intent_token&quot;, r6)"/>  
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r7)"/>  
    <node type="PassOutIntent" unit="r6 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;($r1, 0, $r2, 0)"/>  
    <node unit="$r8 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List resolveActivitiesForPriviledgedCall(android.content.Context)&gt;($r1)"/>  
    <node unit="$r8 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List resolveActivitiesForPriviledgedCall(android.content.Context)&gt;($r1)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r10.&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;(&quot;android.intent.extra.remote_intent_token&quot;, r6)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r10.&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;(&quot;android.intent.extra.remote_intent_token&quot;, r6)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r10.&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;(&quot;android.intent.extra.remote_intent_token&quot;, r6)"/>  
    <node unit="$r8 = staticinvoke &lt;com.csipsimple.utils.PhoneCapabilityTester: java.util.List resolveActivitiesForPriviledgedCall(android.content.Context)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.Long,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)&gt;"> 
    <node unit="$r5 = staticinvoke &lt;com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)&gt;($r4)"/>  
    <node unit="virtualinvoke r0.&lt;com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.String,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)&gt;(r9, $r2, $r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void &lt;init&gt;(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)&gt;"> 
    <node unit="specialinvoke r3.&lt;com.csipsimple.utils.CallHandlerPlugin: void &lt;init&gt;(android.content.Context)&gt;($r7)"/>  
    <node unit="virtualinvoke r3.&lt;com.csipsimple.utils.CallHandlerPlugin: void loadFrom(java.lang.Long,java.lang.String,com.csipsimple.utils.CallHandlerPlugin$OnLoadListener)&gt;($r8, $r9, $r10)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsLoader: android.database.Cursor loadInBackground()&gt;"> 
    <node unit="specialinvoke $r25.&lt;com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void &lt;init&gt;(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)&gt;(r0, $r10, 0)"/>  
    <node unit="r9 = staticinvoke &lt;com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)&gt;($r3)"/>  
    <node unit="specialinvoke $r25.&lt;com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void &lt;init&gt;(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)&gt;(r0, $r10, 0)"/>  
    <node unit="specialinvoke $r25.&lt;com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void &lt;init&gt;(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)&gt;(r0, $r10, $z0)"/>  
    <node unit="specialinvoke $r25.&lt;com.csipsimple.ui.account.AccountsLoader$FilteredProfile: void &lt;init&gt;(com.csipsimple.ui.account.AccountsLoader,java.lang.String,boolean)&gt;(r0, $r10, $z0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsLoader: java.lang.Object loadInBackground()&gt;"> 
    <node unit="$r1 = virtualinvoke r0.&lt;com.csipsimple.ui.account.AccountsLoader: android.database.Cursor loadInBackground()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.PickupSipUri: void access$0(com.csipsimple.ui.PickupSipUri)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.ui.PickupSipUri: void sendPositiveResult()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.PickupSipUri$1: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.ui.PickupSipUri: void access$0(com.csipsimple.ui.PickupSipUri)&gt;($r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallListFragment: boolean placeCall(android.database.Cursor)&gt;($r5)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.filters.AccountFiltersListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.filters.AccountFiltersListFragment: void showDetails(long)&gt;($l1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.receiver.DynamicReceiver4: boolean compatIsInitialStickyBroadcast(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.ActionMenu: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[])&gt;"> 
    <node type="PassOutIntent" unit="specialinvoke r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Intent)&gt;($r11)"/>  
    <node type="SetAttribute" unit="virtualinvoke r5.&lt;android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)&gt;($r1)"/>  
    <node type="PassOutIntent" unit="$r17 = interfaceinvoke $r17.&lt;com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent)&gt;(r5)"/>  
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter4: android.content.Intent[]"/>  
    <node type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter5: android.content.Intent"/>  
    <node type="PassOutIntent" unit="$r8 = virtualinvoke $r7.&lt;android.content.pm.PackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)&gt;($r1, $r2, $r3, 0)"/>  
    <node type="CreateMethod" unit="r5 = new android.content.Intent"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.ShortcutWidgetProvider: void updateWidget(android.content.Context)&gt;"> 
    <node unit="$r4 = staticinvoke &lt;com.csipsimple.widgets.ShortcutWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)&gt;($r0, i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.ShortcutWidgetConfigure: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"> 
    <node type="CreateMethod" unit="r3 = new android.content.Intent"/>  
    <node type="InitIntent" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;()&gt;()"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;appWidgetId&quot;, $i0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.widgets.ShortcutWidgetConfigure: void setResult(int,android.content.Intent)&gt;(-1, r3)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.widgets.ShortcutWidgetProvider: void updateWidget(android.content.Context)&gt;(r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.PjSipService: void setBluetoothOn(boolean)&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.service.MediaManager: void setBluetoothOn(boolean)&gt;($z0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$1$14: void doRun()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.pjsip.PjSipService: void setBluetoothOn(boolean)&gt;($z0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment$2: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.ui.messages.ConversationsListFragment: void access$0(com.csipsimple.ui.messages.ConversationsListFragment)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.bluetooth.BluetoothUtils8$1: void onReceive(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void asyncSanityCheck()&gt;"> 
    <node unit="$z0 = staticinvoke &lt;com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnPrivilegedIntent(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)&gt;(r0, $r8)"/>  
    <node unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void runOnUiThread(java.lang.Runnable)&gt;($r5)"/>  
    <node unit="$z0 = staticinvoke &lt;com.csipsimple.ui.warnings.WarningUtils: boolean shouldWarnPrivilegedIntent(android.content.Context,com.csipsimple.utils.PreferencesProviderWrapper)&gt;(r0, $r8)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void access$3(com.csipsimple.ui.SipHome)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.ui.SipHome: void asyncSanityCheck()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome$2: void run()&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.ui.SipHome: void access$3(com.csipsimple.ui.SipHome)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.PjSipService: void setSpeakerphoneOn(boolean)&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.service.MediaManager: void setSpeakerphoneOn(boolean)&gt;($z0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$1$16: void doRun()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.pjsip.PjSipService: void setSpeakerphoneOn(boolean)&gt;($z0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenType(java.lang.String,int)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.prefs.GenericPrefs: void setPreferenceScreenType(java.lang.Class,java.lang.String,int)&gt;($r2, $r1, $i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.app.SherlockListActivity: void setContentView(int)&gt;"> 
    <node type="setContentView" unit="virtualinvoke $r1.&lt;com.actionbarsherlock.ActionBarSherlock: void setContentView(int)&gt;($i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton: void access$0(com.csipsimple.widgets.AccountChooserButton)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.widgets.AccountChooserButton: void updateRegistration()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton$AccountStatusContentObserver: void onChange(boolean)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.widgets.AccountChooserButton: void access$0(com.csipsimple.widgets.AccountChooserButton)&gt;($r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.BasePrefsWizard: void onActivityResult(int,int,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter2: android.content.Intent"/>  
    <node type="PassOutIntent" unit="specialinvoke r0.&lt;com.csipsimple.ui.prefs.GenericPrefs: void onActivityResult(int,int,android.content.Intent)&gt;($i0, $i1, $r1)"/>  
    <node type="PassOutIntent" unit="interfaceinvoke $r5.&lt;com.csipsimple.wizards.WizardIface: void onActivityResult(int,int,android.content.Intent)&gt;($i0, $i1, $r1)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void saveAccount(java.lang.String)&gt;($r3)"/>  
    <node type="PassOutIntent" unit="interfaceinvoke $r5.&lt;com.csipsimple.wizards.WizardIface: void onActivityResult(int,int,android.content.Intent)&gt;($i0, $i1, $r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.CallHandlerPlugin: void fillWith(java.lang.String,android.os.Bundle)&gt;"> 
    <node type="StaticCreateMethod" unit="r0.&lt;com.csipsimple.utils.CallHandlerPlugin: android.app.PendingIntent pendingIntent&gt; = $r4"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.CallHandlerPlugin$1: void onReceive(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
    <node unit="virtualinvoke $r4.&lt;com.csipsimple.utils.CallHandlerPlugin: void fillWith(java.lang.String,android.os.Bundle)&gt;($r5, $r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.MondotalkCreate: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.impl.MondotalkCreate: void setContentView(int)&gt;(2130903123)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void setContentView(int)&gt;(2130903134)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.Ippi: void fillLayout(com.csipsimple.api.SipProfile)&gt;"> 
    <node unit="specialinvoke $r8.&lt;com.csipsimple.wizards.impl.AccountCreationWebview: void &lt;init&gt;(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)&gt;($r4, &quot;https://m.ippi.fr/subscribe/android.php&quot;, r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$StopRunnable: void doRun()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.service.SipService: boolean stopSipStack()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.WizardChooser: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.WizardChooser: void setContentView(int)&gt;(2130903068)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.db.DBProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.db.DBProvider: void broadcastRegistrationChange(long)&gt;(l2)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.db.DBProvider: void broadcastAccountChange(long)&gt;(l2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ShareActionProvider: void setShareIntent(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r4.&lt;com.actionbarsherlock.widget.ActivityChooserModel: void setIntent(android.content.Intent)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.CollectLogs: android.content.Intent getLogReportIntent(java.lang.String,android.content.Context)&gt;"> 
    <node type="CreateMethod" unit="r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.SEND&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;android.intent.extra.SUBJECT&quot;, &quot;CSipSimple Error-Log report&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])&gt;(&quot;android.intent.extra.EMAIL&quot;, $r5)"/>  
    <node type="SetAttribute" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;message/rfc822&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;android.intent.extra.TEXT&quot;, $r0)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;android.intent.extra.STREAM&quot;, $r10)"/>  
    <node type="SetAttribute" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent setType(java.lang.String)&gt;(&quot;message/rfc822&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;android.intent.extra.TEXT&quot;, $r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"> 
    <node type="CreateMethod" unit="r4 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_SIP_REQUEST_RESTART&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r17.&lt;android.support.v4.app.FragmentActivity: void sendBroadcast(android.content.Intent)&gt;(r4)"/>  
    <node unit="virtualinvoke r6.&lt;java.lang.Thread: void start()&gt;()"/>  
    <node type="CreateMethod" unit="r4 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r4.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.VIEW&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke r4.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
    <node type="SetAttribute" unit="virtualinvoke r4.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r16)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.help.Help: void startActivity(android.content.Intent)&gt;(r4)"/>  
    <node type="ReceiveIntentFromRetValue" unit="r4 = staticinvoke &lt;com.csipsimple.utils.CollectLogs: android.content.Intent getLogReportIntent(java.lang.String,android.content.Context)&gt;(&quot;&lt;&lt;&lt;PLEASE ADD THE BUG DESCRIPTION HERE&gt;&gt;&gt;&quot;, $r17)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.help.Help: void startActivityForResult(android.content.Intent,int)&gt;(r4, 0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.db.DBProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.db.DBProvider: void broadcastAccountChange(long)&gt;($l1)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.db.DBProvider: void broadcastRegistrationChange(long)&gt;($l1)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.db.DBProvider: void broadcastRegistrationChange(long)&gt;($l1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$RestartRunnable: void doRun()&gt;"> 
    <node unit="$z0 = virtualinvoke $r1.&lt;com.csipsimple.service.SipService: boolean stopSipStack()&gt;()"/>  
    <node unit="staticinvoke &lt;com.csipsimple.service.SipService: void access$9(com.csipsimple.service.SipService)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.DialingFeedback: void &lt;init&gt;(android.app.Activity,boolean)&gt;"> 
    <node unit="specialinvoke $r3.&lt;com.csipsimple.utils.PreferencesWrapper: void &lt;init&gt;(android.content.Context)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void setContentView(int)&gt;(2130903103)"/>  
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/service/SipService;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r2, $r7, 1)"/>  
    <node unit="specialinvoke $r22.&lt;com.csipsimple.utils.DialingFeedback: void &lt;init&gt;(android.app.Activity,boolean)&gt;(r0, 1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$1: void makeCall(java.lang.String,int)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.service.SipService$1: void makeCallWithOptions(java.lang.String,int,android.os.Bundle)&gt;($r1, $i0, null)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.PickupSipUri: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.PickupSipUri: void setContentView(int)&gt;(2130903112)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup: void onDismiss()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)&gt;"> 
    <node unit="$z0 = staticinvoke &lt;com.csipsimple.ui.prefs.PrefsLogic: boolean onMainActivityOptionsItemSelected(com.actionbarsherlock.view.MenuItem,android.content.Context,com.csipsimple.utils.PreferencesWrapper)&gt;($r1, r0, $r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment: boolean onLongClick(android.view.View)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.ui.dialpad.DialerFragment: void placeVMCall()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void connectService()&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.SipService&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;(r2, $r4, 1)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)&gt;(&quot;outgoing_activity&quot;, $r3)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: android.content.ComponentName startService(android.content.Intent)&gt;(r2)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;(r2, $r4, 1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void setContentView(int)&gt;(2130903111)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void connectService()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver$4: void doRun()&gt;"> 
    <node unit="virtualinvoke $r5.&lt;com.csipsimple.service.MediaManager: void toggleMute()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.Downloader: void onHandleIntent(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.csipsimple.service.Downloader: android.content.Intent getIntent()&gt;()"/>  
    <node type="CreateMethod" unit="$r33 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r33.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/SipHome;&quot;)"/>  
    <node type="PassOutIntent" unit="$r12 = staticinvoke &lt;android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)&gt;(r0, 0, $r33, 134217728)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r5.&lt;android.support.v4.app.NotificationCompat$Builder: android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)&gt;($r12)"/>  
    <node type="StaticCreateMethod" unit="$r15.&lt;android.app.Notification: android.app.PendingIntent contentIntent&gt; = $r12"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton: void onAttachedToWindow()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.widgets.AccountChooserButton: void updateRegistration()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context,android.view.View)&gt;($r1, null)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.receiver.DynamicReceiver4: void access$0(com.csipsimple.service.receiver.DynamicReceiver4,android.content.Context,android.content.Intent,boolean)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter2: android.content.Intent"/>  
    <node type="PassOutIntent" unit="specialinvoke $r0.&lt;com.csipsimple.service.receiver.DynamicReceiver4: void onReceiveInternal(android.content.Context,android.content.Intent,boolean)&gt;($r1, $r2, $z0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.receiver.DynamicReceiver4$1: void doRun()&gt;"> 
    <node type="StaticCreateMethod" unit="$r3 = r0.&lt;com.csipsimple.service.receiver.DynamicReceiver4$1: android.content.Intent val$intent&gt;"/>  
    <node type="StaticCreateMethod" unit="$r4 = r0.&lt;com.csipsimple.service.receiver.DynamicReceiver4$1: android.content.Intent val$intent&gt;"/>  
    <node type="PassOutIntent" unit="$z0 = virtualinvoke $r5.&lt;com.csipsimple.service.receiver.DynamicReceiver4: boolean compatIsInitialStickyBroadcast(android.content.Intent)&gt;($r4)"/>  
    <node type="PassOutIntent" unit="staticinvoke &lt;com.csipsimple.service.receiver.DynamicReceiver4: void access$0(com.csipsimple.service.receiver.DynamicReceiver4,android.content.Context,android.content.Intent,boolean)&gt;($r1, $r2, $r3, $z0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.EditSipUri: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"> 
    <node unit="$r6 = virtualinvoke $r5.&lt;com.csipsimple.widgets.AccountChooserButton: com.csipsimple.api.SipProfile getSelectedAccount()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.EditSipUri: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;"> 
    <node unit="virtualinvoke $r6.&lt;com.csipsimple.widgets.AccountChooserButton: void setOnAccountChangeListener(com.csipsimple.widgets.AccountChooserButton$OnAccountChangeListener)&gt;($r10)"/>  
    <node unit="virtualinvoke $r5.&lt;android.widget.AutoCompleteTextView: void addTextChangedListener(android.text.TextWatcher)&gt;(r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.ShortcutWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])&gt;"> 
    <node unit="$r4 = staticinvoke &lt;com.csipsimple.widgets.ShortcutWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)&gt;($r1, i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton: void &lt;init&gt;(android.content.Context)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.widgets.AccountChooserButton: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;($r1, null)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$AccountStatusContentObserver: void onChange(boolean)&gt;"> 
    <node unit="virtualinvoke $r3.&lt;com.csipsimple.service.SipService: void updateRegistrationsState()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.filters.AccountFilters: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.filters.AccountFilters: void setContentView(int)&gt;(2130903061)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.Mondotalk: void updateAccountInfos(com.csipsimple.api.SipProfile)&gt;"> 
    <node unit="virtualinvoke $r2.&lt;android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)&gt;($r4)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.Mondotalk: void fillLayout(com.csipsimple.api.SipProfile)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.wizards.impl.Mondotalk: void updateAccountInfos(com.csipsimple.api.SipProfile)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.hc.MainPrefs: void onCreate(android.os.Bundle)&gt;"> 
    <node unit="specialinvoke $r2.&lt;com.csipsimple.utils.PreferencesWrapper: void &lt;init&gt;(android.content.Context)&gt;(r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.VoipTel: void fillLayout(com.csipsimple.api.SipProfile)&gt;"> 
    <node unit="specialinvoke $r8.&lt;com.csipsimple.wizards.impl.AccountCreationWebview: void &lt;init&gt;(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)&gt;($r4, &quot;http://212.4.110.135:8080/subscriber/newSubscriberFree/alta?execution=e2s1&quot;, r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.contacts.ContactsWrapper: void treatContactPickerPositiveResult(android.content.Context,android.content.Intent,com.csipsimple.utils.contacts.ContactsWrapper$OnPhoneNumberSelected)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.AccountWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])&gt;"> 
    <node unit="$r4 = staticinvoke &lt;com.csipsimple.widgets.AccountWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context,int)&gt;($r1, i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void selectTabWithAction(android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.MessageFragment: void onViewCreated(android.view.View,android.os.Bundle)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.messages.MessageFragment: void chooseSipUri()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.utils.audio.AudioFocus3: void unFocus()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.utils.audio.AudioFocus3: void restartMusic()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$1$15: void doRun()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.pjsip.PjSipService: void setMicrophoneMute(boolean)&gt;($z0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.Tanstagi: void updateAccountInfos(com.csipsimple.api.SipProfile)&gt;"> 
    <node unit="virtualinvoke $r2.&lt;android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)&gt;($r4)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void on_mwi_info(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)&gt;"> 
    <node unit="virtualinvoke $r11.&lt;com.csipsimple.service.SipNotifications: void showNotificationForVoiceMail(com.csipsimple.api.SipProfile,int)&gt;($r9, i1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.Zadarma: void fillLayout(com.csipsimple.api.SipProfile)&gt;"> 
    <node unit="specialinvoke $r8.&lt;com.csipsimple.wizards.impl.AccountCreationWebview: void &lt;init&gt;(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)&gt;($r4, &quot;https://ss.zadarma.com/android/registration/&quot;, r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsEditListFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;"> 
    <node type="CreateMethod" unit="r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r3.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r6, class &quot;Lcom/csipsimple/wizards/WizardChooser;&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r3.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,long)&gt;(&quot;android.intent.extra.UID&quot;, $l1)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.account.AccountsEditListFragment: void startActivityForResult(android.content.Intent,int)&gt;(r3, 1)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.account.AccountsEditListFragment: void showDetails(long,java.lang.String)&gt;($l1, $r9)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu: void onDismiss()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.actionbarsherlock.internal.view.menu.MenuPopupHelper: void onDismiss()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$SyncStopRunnable: java.lang.Object runWithReturn()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.service.SipService: boolean stopSipStack()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.Cryptel: void fillLayout(com.csipsimple.api.SipProfile)&gt;"> 
    <node unit="specialinvoke $r8.&lt;com.csipsimple.wizards.impl.AccountCreationWebview: void &lt;init&gt;(com.csipsimple.wizards.BasePrefsWizard,java.lang.String,com.csipsimple.wizards.impl.AccountCreationWebview$OnAccountCreationDoneListener)&gt;($r4, &quot;http://50.28.50.63/index.php&quot;, r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.EditSipUri: void onTextChanged(java.lang.CharSequence,int,int,int)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.widgets.EditSipUri: void updateDialTextHelper()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)&gt;"> 
    <node unit="interfaceinvoke $r3.&lt;com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)&gt;($r5)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment$2: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)&gt;"> 
    <node unit="virtualinvoke $r3.&lt;com.csipsimple.ui.dialpad.DialerFragment: void placeCall()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void on_zrtp_show_sas(int,org.pjsip.pjsua.pj_str_t,int)&gt;"> 
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.SHOW_SAS&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;android.intent.extra.SUBJECT&quot;, $r3)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;android.intent.extra.UID&quot;, $i0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r7.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r2, &quot;android.permission.USE_SIP&quot;)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$1: void adjustVolume(com.csipsimple.api.SipCallSession,int,int)&gt;"> 
    <node unit="virtualinvoke $r4.&lt;com.csipsimple.pjsip.PjSipService: void adjustStreamVolume(int,int,int)&gt;($i2, $i0, $i1)"/>  
    <node type="CreateMethod" unit="r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r3, class &quot;Lcom/csipsimple/ui/incall/InCallMediaControl;&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,int)&gt;(&quot;android.intent.extra.KEY_EVENT&quot;, $i0)"/>  
    <node type="SetAttribute" unit="virtualinvoke r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r3.&lt;com.csipsimple.service.SipService: void startActivity(android.content.Intent)&gt;(r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment$1: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.ui.calllog.CallLogListFragment: void access$4(com.csipsimple.ui.calllog.CallLogListFragment)&gt;($r3)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: void onCreate(android.os.Bundle)&gt;"> 
    <node unit="specialinvoke $r3.&lt;com.csipsimple.utils.PreferencesWrapper: void &lt;init&gt;(android.content.Context)&gt;(r0)"/>  
    <node type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>  
    <node type="PassOutIntent" unit="specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427477, 2131427478, 2130837700, $r5)"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(20)"/>  
    <node type="PassOutIntent" unit="specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427479, 2131427480, 2130837704, $r5)"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(0)"/>  
    <node type="PassOutIntent" unit="specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427481, 2131427482, 2130837702, $r5)"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(60)"/>  
    <node type="PassOutIntent" unit="specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427483, 2131427484, 2130837705, $r5)"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r5 = specialinvoke r0.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs: android.content.Intent getIntentForType(int)&gt;(40)"/>  
    <node type="PassOutIntent" unit="specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427485, 2131427486, 2130837699, $r5)"/>  
    <node type="CreateMethod" unit="$r5 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r5.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/ui/prefs/PrefsFilters;&quot;)"/>  
    <node type="PassOutIntent" unit="specialinvoke $r4.&lt;com.csipsimple.ui.prefs.cupcake.MainPrefs$PrefGroup: void &lt;init&gt;(com.csipsimple.ui.prefs.cupcake.MainPrefs,int,int,int,android.content.Intent)&gt;(r0, 2131427796, 2131427797, 2130837701, $r5)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.widget.ActivityChooserView$Callbacks: void onClick(android.view.View)&gt;"> 
    <node type="ReceiveIntentFromRetValue" unit="$r7 = virtualinvoke $r6.&lt;com.actionbarsherlock.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)&gt;($i0)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r8.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r7)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.EditSipUri: void afterTextChanged(android.text.Editable)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.widgets.EditSipUri: void updateDialTextHelper()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.ShortcutWidgetProvider: void onReceive(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.csipsimple.widgets.ShortcutWidgetProvider: android.content.Intent getIntent()&gt;()"/>  
    <node type="PassOutIntent" unit="specialinvoke r0.&lt;android.appwidget.AppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)&gt;($r1, $r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.receiver.DynamicReceiver4$1: void &lt;init&gt;(com.csipsimple.service.receiver.DynamicReceiver4,android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r3 := @parameter2: android.content.Intent"/>  
    <node type="StaticCreateMethod" unit="r0.&lt;com.csipsimple.service.receiver.DynamicReceiver4$1: android.content.Intent val$intent&gt; = $r3"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void on_pager(int,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t,org.pjsip.pjsua.pj_str_t)&gt;"> 
    <node type="CreateMethod" unit="r7 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke r7.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.MESSAGE_RECEIVED&quot;)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r7.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;sender&quot;, $r8)"/>  
    <node type="SetIntentExtra" unit="virtualinvoke r7.&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;(&quot;body&quot;, $r8)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r15.&lt;com.csipsimple.service.SipService: void sendBroadcast(android.content.Intent,java.lang.String)&gt;(r7, &quot;android.permission.USE_SIP&quot;)"/>  
    <node unit="virtualinvoke $r19.&lt;com.csipsimple.service.SipNotifications: void showNotificationForMessage(com.csipsimple.api.SipMessage)&gt;(r6)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.hc.MainPrefs: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)&gt;"> 
    <node unit="$z0 = staticinvoke &lt;com.csipsimple.ui.prefs.PrefsLogic: boolean onMainActivityOptionsItemSelected(com.actionbarsherlock.view.MenuItem,android.content.Context,com.csipsimple.utils.PreferencesWrapper)&gt;($r1, r0, $r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.messages.MessageFragment: void onAttach(android.app.Activity)&gt;"> 
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r4, class &quot;Lcom/csipsimple/service/SipService;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r3.&lt;android.support.v4.app.FragmentActivity: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r2, $r5, 1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.PrefsFast: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.prefs.PrefsFast: void setContentView(int)&gt;(2130903091)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.Codecs: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.prefs.Codecs: void setContentView(int)&gt;(2130903078)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context,android.view.View)&gt;($r1, null)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.HeadsetButtonReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.csipsimple.service.HeadsetButtonReceiver: android.content.Intent getIntent()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.PickupSipUri: void onClick(android.view.View)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.PickupSipUri: void sendPositiveResult()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.actionbarsherlock.internal.view.menu.MenuItemWrapper: com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener)&gt;"> 
    <node unit="interfaceinvoke $r4.&lt;android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.ShortcutWidgetConfigure: void &lt;clinit&gt;()&gt;"> 
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.DIALER&quot;)"/>  
    <node type="PassOutIntent" unit="specialinvoke $r1.&lt;com.csipsimple.widgets.ShortcutWidgetConfigure$Shortcut: void &lt;init&gt;(int,int,android.content.Intent)&gt;(2131427808, 2130837653, $r2)"/>  
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.CALLLOG&quot;)"/>  
    <node type="PassOutIntent" unit="specialinvoke $r1.&lt;com.csipsimple.widgets.ShortcutWidgetConfigure$Shortcut: void &lt;init&gt;(int,int,android.content.Intent)&gt;(2131427809, 2130837656, $r2)"/>  
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.FAVORITES&quot;)"/>  
    <node type="PassOutIntent" unit="specialinvoke $r1.&lt;com.csipsimple.widgets.ShortcutWidgetConfigure$Shortcut: void &lt;init&gt;(int,int,android.content.Intent)&gt;(2131427811, 2130837655, $r2)"/>  
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.phone.action.MESSAGES&quot;)"/>  
    <node type="PassOutIntent" unit="specialinvoke $r1.&lt;com.csipsimple.widgets.ShortcutWidgetConfigure$Shortcut: void &lt;init&gt;(int,int,android.content.Intent)&gt;(2131427810, 2130837657, $r2)"/>  
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_FAST&quot;)"/>  
    <node type="PassOutIntent" unit="specialinvoke $r1.&lt;com.csipsimple.widgets.ShortcutWidgetConfigure$Shortcut: void &lt;init&gt;(int,int,android.content.Intent)&gt;(2131427477, 2130837700, $r2)"/>  
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.ui.action.PREFS_GLOBAL&quot;)"/>  
    <node type="PassOutIntent" unit="specialinvoke $r1.&lt;com.csipsimple.widgets.ShortcutWidgetConfigure$Shortcut: void &lt;init&gt;(int,int,android.content.Intent)&gt;(2131427476, 17301570, $r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.AudioTester: void onResume()&gt;"> 
    <node type="CreateMethod" unit="$r1 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r1.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;(r0, class &quot;Lcom/csipsimple/service/SipService;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke r0.&lt;com.csipsimple.ui.prefs.AudioTester: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r1, $r2, 1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.DeviceStateReceiver: void onReceive(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.csipsimple.service.DeviceStateReceiver: android.content.Intent getIntent()&gt;()"/>  
    <node type="PassOutIntent" unit="virtualinvoke r4.&lt;com.csipsimple.utils.NightlyUpdater: void applyUpdate(android.content.Intent)&gt;($r2)"/>  
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/csipsimple/service/SipService;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r2)"/>  
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(android.content.Context,java.lang.Class)&gt;($r1, class &quot;Lcom/csipsimple/service/SipService;&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: android.content.ComponentName startService(android.content.Intent)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.BasePrefsWizard: void beforeBuildPrefs()&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void setContentView(int)&gt;(2130903132)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment: void fetchCalls()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;android.support.v4.app.LoaderManager: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)&gt;(0, null, r0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void on_incoming_call(int,int,org.pjsip.pjsua.SWIGTYPE_p_pjsip_rx_data)&gt;"> 
    <node unit="virtualinvoke $r10.&lt;com.csipsimple.service.SipNotifications: void showNotificationForCall(com.csipsimple.api.SipCallSession)&gt;(r2)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.pjsip.UAStateReceiver: void launchCallHandler(com.csipsimple.api.SipCallSession)&gt;(r2)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.pjsip.UAStateReceiver: void broadCastAndroidCallState(java.lang.String,java.lang.String)&gt;(&quot;RINGING&quot;, $r8)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.pjsip.UAStateReceiver: void launchCallHandler(com.csipsimple.api.SipCallSession)&gt;(r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver$WorkerHandler: void handleMessage(android.os.Message)&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.pjsip.UAStateReceiver: void access$3(com.csipsimple.pjsip.UAStateReceiver,java.lang.String,java.lang.String)&gt;(r5, &quot;IDLE&quot;, $r8)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.utils.CallLogHelper: void addCallLog(android.content.Context,android.content.ContentValues,android.content.ContentValues)&gt;($r12, $r13, r2)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.pjsip.UAStateReceiver: void access$6(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)&gt;(r5, r6)"/>  
    <node unit="virtualinvoke $r7.&lt;com.csipsimple.service.SipNotifications: void showNotificationForCall(com.csipsimple.api.SipCallSession)&gt;(r6)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.pjsip.UAStateReceiver: void access$2(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)&gt;(r5, r6)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.pjsip.UAStateReceiver: void access$3(com.csipsimple.pjsip.UAStateReceiver,java.lang.String,java.lang.String)&gt;(r5, &quot;OFFHOOK&quot;, $r8)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.pjsip.UAStateReceiver: void access$6(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)&gt;(r5, r6)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.pjsip.UAStateReceiver: void access$6(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)&gt;(r5, r6)"/>  
    <node unit="virtualinvoke $r7.&lt;com.csipsimple.service.SipNotifications: void showNotificationForCall(com.csipsimple.api.SipCallSession)&gt;(r6)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.pjsip.UAStateReceiver: void access$2(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)&gt;(r5, r6)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.pjsip.UAStateReceiver: void access$3(com.csipsimple.pjsip.UAStateReceiver,java.lang.String,java.lang.String)&gt;(r5, &quot;RINGING&quot;, $r8)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.pjsip.UAStateReceiver: void access$6(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)&gt;(r5, r6)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.pjsip.UAStateReceiver: void access$6(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)&gt;(r5, r6)"/>  
    <node unit="virtualinvoke $r7.&lt;com.csipsimple.service.SipNotifications: void showNotificationForMissedCall(android.content.ContentValues)&gt;($r13)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.pjsip.UAStateReceiver: void access$6(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)&gt;(r5, r6)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.pjsip.UAStateReceiver: void access$6(com.csipsimple.pjsip.UAStateReceiver,com.csipsimple.api.SipCallSession)&gt;(r5, $r11)"/>  
    <node unit="staticinvoke &lt;com.csipsimple.utils.CallLogHelper: void addCallLog(android.content.Context,android.content.ContentValues,android.content.ContentValues)&gt;($r12, $r13, r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.dialpad.DialerFragment: void initButtons(android.view.View)&gt;($r4)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService: void onStart(android.content.Intent,int)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r1 := @parameter0: android.content.Intent"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r1 = virtualinvoke r0.&lt;com.csipsimple.service.SipService: android.content.Intent getIntent()&gt;()"/>  
    <node type="PassOutIntent" unit="specialinvoke r0.&lt;android.app.Service: void onStart(android.content.Intent,int)&gt;($r1, $i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.receiver.DynamicReceiver4: void onReceive(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
    <node type="PassOutIntent" unit="specialinvoke $r3.&lt;com.csipsimple.service.receiver.DynamicReceiver4$1: void &lt;init&gt;(com.csipsimple.service.receiver.DynamicReceiver4,android.content.Context,android.content.Intent)&gt;(r0, $r1, $r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.prefs.CodecsFragment: void onActivityCreated(android.os.Bundle)&gt;"> 
    <node unit="specialinvoke $r5.&lt;com.csipsimple.utils.PreferencesWrapper: void &lt;init&gt;(android.content.Context)&gt;($r6)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.warnings.WarningVpnIcs: void onClick(android.view.View)&gt;"> 
    <node type="CreateMethod" unit="$r6 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r6.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.ACTION_SIP_REQUEST_RESTART&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r2.&lt;android.content.Context: void sendBroadcast(android.content.Intent)&gt;($r6)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.incall.InCallActivity: void onLeftRightChoice(int)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)&gt;(1, $r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment: void onAttach(android.app.Activity)&gt;"> 
    <node type="CreateMethod" unit="$r3 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r3.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;com.csipsimple.service.SipService&quot;)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r2.&lt;android.support.v4.app.FragmentActivity: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;($r3, $r4, 1)"/>  
    <node unit="specialinvoke $r5.&lt;com.csipsimple.utils.PreferencesWrapper: void &lt;init&gt;(android.content.Context)&gt;($r2)"/>  
    <node unit="specialinvoke $r6.&lt;com.csipsimple.utils.DialingFeedback: void &lt;init&gt;(android.app.Activity,boolean)&gt;($r2, 0)"/>  
    <node unit="specialinvoke $r6.&lt;com.csipsimple.utils.DialingFeedback: void &lt;init&gt;(android.app.Activity,boolean)&gt;($r2, 0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.SipService$FinalizeDestroyRunnable: void doRun()&gt;"> 
    <node unit="$z0 = virtualinvoke $r1.&lt;com.csipsimple.service.SipService: boolean stopSipStack()&gt;()"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.wizards.impl.Tanstagi: void fillLayout(com.csipsimple.api.SipProfile)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.wizards.impl.Tanstagi: void updateAccountInfos(com.csipsimple.api.SipProfile)&gt;($r1)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.db.DBProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.db.DBProvider: void broadcastRegistrationChange(long)&gt;($l2)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.db.DBProvider: void broadcastRegistrationChange(long)&gt;($l2)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.db.DBProvider: void broadcastAccountChange(long)&gt;($l2)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.db.DBProvider: void broadcastRegistrationChange(long)&gt;($l2)"/>  
    <node unit="specialinvoke r0.&lt;com.csipsimple.db.DBProvider: void broadcastRegistrationChange(long)&gt;($l2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.service.OutgoingCall: void onReceive(android.content.Context,android.content.Intent)&gt;"> 
    <node type="ReceiveIntentFromParatMethod" unit="$r2 := @parameter1: android.content.Intent"/>  
    <node type="ReceiveIntentFromRetValue" unit="$r2 = virtualinvoke r0.&lt;com.csipsimple.service.OutgoingCall: android.content.Intent getIntent()&gt;()"/>  
    <node unit="$r8 = staticinvoke &lt;com.csipsimple.utils.CallHandlerPlugin: java.util.Map getAvailableCallHandlers(android.content.Context)&gt;($r6)"/>  
    <node type="CreateMethod" unit="$r2 = new android.content.Intent"/>  
    <node type="SetAttribute" unit="specialinvoke $r2.&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;(&quot;android.intent.action.CALL&quot;)"/>  
    <node type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setData(android.net.Uri)&gt;($r12)"/>  
    <node type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)&gt;($r1, $r4)"/>  
    <node type="SetAttribute" unit="virtualinvoke $r2.&lt;android.content.Intent: android.content.Intent setFlags(int)&gt;(268435456)"/>  
    <node type="PassOutIntent" unit="virtualinvoke $r1.&lt;android.content.Context: void startActivity(android.content.Intent)&gt;($r2)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.pjsip.UAStateReceiver: void on_call_media_state(int)&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.csipsimple.pjsip.PjSipService: void startRecording(int)&gt;($i0)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.ui.filters.EditFilter: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.filters.EditFilter: void setContentView(int)&gt;(2130903088)"/> 
  </methodSummary>  
  <methodSummary source="&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context,android.view.View)&gt;"> 
    <node type="setContentView" unit="specialinvoke r0.&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void setContentView(int)&gt;(2130903113)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context,android.view.View)&gt;($r1, null)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.prefs.hc.MainPrefs: void onBuildHeaders(java.util.List)&gt;"> 
    <node type="LoadFunction" unit="virtualinvoke r0.&lt;com.csipsimple.ui.prefs.hc.MainPrefs: void loadHeadersFromResource(int,java.util.List)&gt;(2131034115, r1)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction)&gt;"> 
    <node type="getFragment" unit="$r8 = virtualinvoke $r7.&lt;com.actionbarsherlock.app.SherlockFragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
    <node type="beginTransaction" unit="r4 = virtualinvoke $r8.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction)&gt;"> 
    <node type="getFragment" unit="$r9 = virtualinvoke $r8.&lt;com.actionbarsherlock.app.SherlockFragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
    <node type="beginTransaction" unit="$r5 = virtualinvoke $r9.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.incall.InCallMediaControl: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallMediaControl: void setContentView(int)&gt;(2130903104)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.prefs.AudioTester: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.prefs.AudioTester: void setContentView(int)&gt;(2130903071)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.prefs.Codecs$TabsAdapter: void &lt;init&gt;(com.csipsimple.ui.prefs.Codecs,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)&gt;"> 
    <node type="getFragment" unit="$r5 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction)&gt;"> 
    <node type="commit" unit="virtualinvoke r4.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/>  
    <node type="getFragment" unit="$r8 = virtualinvoke $r7.&lt;com.actionbarsherlock.app.SherlockFragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
    <node type="beginTransaction" unit="r4 = virtualinvoke $r8.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
    <node type="commit" unit="virtualinvoke r4.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.SipHome$TabsAdapter: void clearDetails()&gt;"> 
    <node type="getFragment" unit="$r3 = virtualinvoke $r2.&lt;com.csipsimple.ui.SipHome: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
    <node type="beginTransaction" unit="$r4 = virtualinvoke $r3.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
    <node type="replaceFunction" unit="virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131099882, $r1, null)"/>  
    <node type="commit" unit="virtualinvoke $r4.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper: com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener)&gt;"> 
    <node unit="virtualinvoke $r2.&lt;android.app.ActionBar$Tab: android.app.ActionBar$Tab setTabListener(android.app.ActionBar$TabListener)&gt;($r3)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment: void onVisibilityChanged(boolean)&gt;"> 
    <node type="getFragment" unit="$r7 = virtualinvoke r0.&lt;com.csipsimple.ui.dialpad.DialerFragment: android.support.v4.app.FragmentManager getFragmentManager()&gt;()"/>  
    <node type="beginTransaction" unit="$r8 = virtualinvoke $r7.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
    <node type="replaceFunction" unit="virtualinvoke $r8.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131099882, $r3, &quot;autocomplete_dial_side_frag&quot;)"/>  
    <node type="commit" unit="virtualinvoke $r8.&lt;android.support.v4.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.incall.InCallActivity: void showDialpad(int)&gt;"> 
    <node type="getFragment" unit="$r2 = virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
    <node type="dialogShow" unit="virtualinvoke $r1.&lt;com.csipsimple.ui.incall.DtmfDialogFragment: void show(android.support.v4.app.FragmentManager,java.lang.String)&gt;($r2, &quot;dialog&quot;)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.SipHome$TabsAdapter: void onTabSelected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.SipHome$TabsAdapter: void clearDetails()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.SipHome$TabsAdapter: void &lt;init&gt;(com.csipsimple.ui.SipHome,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)&gt;"> 
    <node type="getFragment" unit="$r5 = virtualinvoke $r2.&lt;android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
    <node unit="virtualinvoke $r4.&lt;android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)&gt;(r0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.ActionBarSherlockNative: void setContentView(int)&gt;"> 
    <node type="setContentView" unit="virtualinvoke $r1.&lt;android.view.Window: void setContentView(int)&gt;($i0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment: void viewDetails(int,long[])&gt;"> 
    <node type="getFragment" unit="$r7 = virtualinvoke r0.&lt;com.csipsimple.ui.calllog.CallLogListFragment: android.support.v4.app.FragmentManager getFragmentManager()&gt;()"/>  
    <node type="beginTransaction" unit="$r8 = virtualinvoke $r7.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
    <node type="replaceFunction" unit="virtualinvoke $r8.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131099882, r3, null)"/>  
    <node type="commit" unit="virtualinvoke $r8.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.app.SherlockPreferenceActivity: void setContentView(int)&gt;"> 
    <node type="setContentView" unit="virtualinvoke $r1.&lt;com.actionbarsherlock.ActionBarSherlock: void setContentView(int)&gt;($i0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void showDialpad(int)&gt;($i0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment$2$1: void run()&gt;"> 
    <node unit="virtualinvoke $r2.&lt;com.csipsimple.ui.calllog.CallLogListFragment: void viewDetails(int,long[])&gt;($i0, $r1)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment$2: void run()&gt;"> 
    <node unit="virtualinvoke $r4.&lt;android.support.v4.app.FragmentActivity: void runOnUiThread(java.lang.Runnable)&gt;($r5)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment: void onVisibilityChanged(boolean)&gt;"> 
    <node unit="virtualinvoke r1.&lt;java.lang.Thread: void start()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,java.lang.String,java.lang.String)&gt;"> 
    <node type="getFragment" unit="$r6 = virtualinvoke r0.&lt;com.csipsimple.ui.messages.ConversationsListFragment: android.support.v4.app.FragmentManager getFragmentManager()&gt;()"/>  
    <node type="beginTransaction" unit="$r7 = virtualinvoke $r6.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
    <node type="replaceFunction" unit="virtualinvoke $r7.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)&gt;(2131099882, r3, null)"/>  
    <node type="commit" unit="virtualinvoke $r7.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment$5$1: void run()&gt;"> 
    <node unit="virtualinvoke $r3.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,java.lang.String,java.lang.String)&gt;($i0, $r1, $r2)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment$5: void run()&gt;"> 
    <node unit="virtualinvoke $r11.&lt;android.support.v4.app.FragmentActivity: void runOnUiThread(java.lang.Runnable)&gt;($r12)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void onVisibilityChanged(boolean)&gt;"> 
    <node unit="virtualinvoke r1.&lt;java.lang.Thread: void start()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void onAttachFragment(android.support.v4.app.Fragment)&gt;"> 
    <node unit="virtualinvoke r8.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void onVisibilityChanged(boolean)&gt;(1)"/>  
    <node unit="virtualinvoke r7.&lt;com.csipsimple.ui.calllog.CallLogListFragment: void onVisibilityChanged(boolean)&gt;(1)"/>  
    <node unit="virtualinvoke r5.&lt;com.csipsimple.ui.dialpad.DialerFragment: void onVisibilityChanged(boolean)&gt;(1)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void onActivityCreated(android.os.Bundle)&gt;"> 
    <node type="PassOut" unit="virtualinvoke $r2.&lt;android.widget.ListView: void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener)&gt;(r0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.app.SherlockFragmentActivity: void setContentView(int)&gt;"> 
    <node type="setContentView" unit="virtualinvoke $r1.&lt;com.actionbarsherlock.ActionBarSherlock: void setContentView(int)&gt;($i0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsEditList: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.account.AccountsEditList: void setContentView(int)&gt;(2130903067)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem)&gt;"> 
    <node type="getFragment" unit="$r12 = virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
    <node type="dialogShow" unit="virtualinvoke $r11.&lt;android.support.v4.app.DialogFragment: void show(android.support.v4.app.FragmentManager,java.lang.String)&gt;($r12, &quot;dialog&quot;)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.account.AccountsChooserListActivity: void setContentView(int)&gt;(2130903064)"/>  
    <node type="getFragment" unit="$r2 = virtualinvoke r0.&lt;com.csipsimple.ui.account.AccountsChooserListActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.widgets.AccountWidgetConfigure: void onCreate(android.os.Bundle)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)&gt;($r1)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.app.SherlockActivity: void setContentView(int)&gt;"> 
    <node type="setContentView" unit="virtualinvoke $r1.&lt;com.actionbarsherlock.ActionBarSherlock: void setContentView(int)&gt;($i0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,java.lang.String,java.lang.String)&gt;($i0, $r2, r3)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: boolean onContextItemSelected(android.view.MenuItem)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)&gt;($i0, r6)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.SipHome$TabsAdapter: void onPageScrollStateChanged(int)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.SipHome$TabsAdapter: void clearDetails()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)&gt;($i0, r4)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)&gt;"> 
    <node type="commit" unit="virtualinvoke r2.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/>  
    <node type="getFragment" unit="$r5 = virtualinvoke $r4.&lt;com.actionbarsherlock.app.SherlockFragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
    <node type="beginTransaction" unit="r2 = virtualinvoke $r5.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
    <node type="commit" unit="virtualinvoke r2.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void removeTabAt(int)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)&gt;($r2)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void removeTab(com.actionbarsherlock.app.ActionBar$Tab)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void removeTabAt(int)&gt;($i0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void onClickAddMessage()&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void viewDetails(int,com.csipsimple.ui.messages.ConverstationsAdapter$ConversationListItemViews)&gt;($i0, null)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void access$0(com.csipsimple.ui.messages.ConversationsListFragment)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.ui.messages.ConversationsListFragment: void onClickAddMessage()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment$1: void onClick(android.view.View)&gt;"> 
    <node type="PassOut" unit="staticinvoke &lt;com.csipsimple.ui.messages.ConversationsListFragment: void access$0(com.csipsimple.ui.messages.ConversationsListFragment)&gt;($r2)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.prefs.PrefsFilters: void onCreate(android.os.Bundle)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.account.AccountsChooserListActivity: void onCreate(android.os.Bundle)&gt;($r1)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()&gt;"> 
    <node type="AddTab" unit="virtualinvoke $r5.&lt;com.csipsimple.ui.SipHome$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class,int)&gt;($r9, class &quot;Lcom/csipsimple/ui/warnings/WarningFragment;&quot;, 4)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void access$0(com.csipsimple.ui.SipHome)&gt;"> 
    <node unit="specialinvoke $r0.&lt;com.csipsimple.ui.SipHome: void refreshWarningTabDisplay()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton: void onClick(android.view.View)&gt;"> 
    <node unit="specialinvoke $r8.&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context,android.view.View)&gt;($r9, r0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.widgets.AccountChooserButton: void setOnClickListener(android.view.View$OnClickListener)&gt;(r0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.widgets.AccountChooserButton: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;($r1, $r2)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void cleanupTabs()&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)&gt;(null)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl: void select()&gt;"> 
    <node unit="virtualinvoke $r1.&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)&gt;(r0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.app.SherlockExpandableListActivity: void setContentView(int)&gt;"> 
    <node type="setContentView" unit="virtualinvoke $r1.&lt;com.actionbarsherlock.ActionBarSherlock: void setContentView(int)&gt;($i0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)&gt;"> 
    <node type="PassOut" unit="virtualinvoke r2.&lt;android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)&gt;(r0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment: void initButtons(android.view.View)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.dialpad.DialerFragment: void attachButtonListener(android.view.View,int,boolean)&gt;($r1, i0, 1)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)&gt;($r1)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean)&gt;($r1, $i0, $z0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment$2: boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem)&gt;"> 
    <node type="PassOut" unit="staticinvoke &lt;com.csipsimple.ui.messages.ConversationsListFragment: void access$0(com.csipsimple.ui.messages.ConversationsListFragment)&gt;($r2)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void setSelectedNavigationItem(int)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)&gt;($r5)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)&gt;($r1)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean)&gt;($r1, $z0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.app.SherlockListActivity: void setContentView(int)&gt;"> 
    <node type="setContentView" unit="virtualinvoke $r1.&lt;com.actionbarsherlock.ActionBarSherlock: void setContentView(int)&gt;($i0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.wizards.impl.MondotalkCreate: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.impl.MondotalkCreate: void setContentView(int)&gt;(2130903123)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.SipHome: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.SipHome: void setContentView(int)&gt;(2130903134)"/>  
    <node unit="specialinvoke $r15.&lt;com.csipsimple.ui.SipHome$TabsAdapter: void &lt;init&gt;(com.csipsimple.ui.SipHome,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)&gt;(r0, r0, $r3, $r14)"/>  
    <node type="AddTab" unit="virtualinvoke $r15.&lt;com.csipsimple.ui.SipHome$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class,int)&gt;($r4, class &quot;Lcom/csipsimple/ui/dialpad/DialerFragment;&quot;, 0)"/>  
    <node type="AddTab" unit="virtualinvoke $r15.&lt;com.csipsimple.ui.SipHome$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class,int)&gt;($r5, class &quot;Lcom/csipsimple/ui/calllog/CallLogListFragment;&quot;, 1)"/>  
    <node type="AddTab" unit="virtualinvoke $r15.&lt;com.csipsimple.ui.SipHome$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class,int)&gt;($r6, class &quot;Lcom/csipsimple/ui/favorites/FavListFragment;&quot;, 2)"/>  
    <node type="AddTab" unit="virtualinvoke $r15.&lt;com.csipsimple.ui.SipHome$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class,int)&gt;(r7, class &quot;Lcom/csipsimple/ui/messages/ConversationsListFragment;&quot;, 3)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.wizards.WizardChooser: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.WizardChooser: void setContentView(int)&gt;(2130903068)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.help.Help: void onItemClick(android.widget.AdapterView,android.view.View,int,long)&gt;"> 
    <node type="getFragment" unit="$r14 = virtualinvoke r0.&lt;com.csipsimple.ui.help.Help: android.support.v4.app.FragmentManager getFragmentManager()&gt;()"/>  
    <node type="dialogShow" unit="virtualinvoke $r15.&lt;com.actionbarsherlock.app.SherlockDialogFragment: void show(android.support.v4.app.FragmentManager,java.lang.String)&gt;($r14, &quot;issues&quot;)"/>  
    <node type="getFragment" unit="$r14 = virtualinvoke r0.&lt;com.csipsimple.ui.help.Help: android.support.v4.app.FragmentManager getFragmentManager()&gt;()"/>  
    <node type="dialogShow" unit="virtualinvoke $r13.&lt;com.actionbarsherlock.app.SherlockDialogFragment: void show(android.support.v4.app.FragmentManager,java.lang.String)&gt;($r14, &quot;faq&quot;)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.incall.InCallActivity: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void setContentView(int)&gt;(2130903103)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.PickupSipUri: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.PickupSipUri: void setContentView(int)&gt;(2130903112)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.SipHome$1: void run()&gt;"> 
    <node unit="staticinvoke &lt;com.csipsimple.ui.SipHome: void access$0(com.csipsimple.ui.SipHome)&gt;($r1)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.outgoingcall.OutgoingCallChooser: void setContentView(int)&gt;(2130903111)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.messages.MessageActivity: void onCreate(android.os.Bundle)&gt;"> 
    <node type="getFragment" unit="$r4 = virtualinvoke r0.&lt;com.csipsimple.ui.messages.MessageActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
    <node type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
    <node type="addFunction" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment)&gt;(16908290, r2)"/>  
    <node type="commit" unit="virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context,android.view.View)&gt;($r1, null)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void removeAllTabs()&gt;"> 
    <node unit="specialinvoke r0.&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void cleanupTabs()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.widgets.AccountChooserButton: void &lt;init&gt;(android.content.Context)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.widgets.AccountChooserButton: void &lt;init&gt;(android.content.Context,android.util.AttributeSet)&gt;($r1, null)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.filters.AccountFilters: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.filters.AccountFilters: void setContentView(int)&gt;(2130903061)"/>  
    <node type="getFragment" unit="$r3 = virtualinvoke r0.&lt;com.csipsimple.ui.filters.AccountFilters: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.messages.ConversationsListFragment: void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater)&gt;"> 
    <node unit="interfaceinvoke $r3.&lt;com.actionbarsherlock.view.MenuItem: com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener)&gt;($r5)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void setNavigationMode(int)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void selectTab(com.actionbarsherlock.app.ActionBar$Tab)&gt;(null)"/>  
    <node unit="virtualinvoke r0.&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void setSelectedNavigationItem(int)&gt;($i1)"/>  
    <node unit="virtualinvoke r0.&lt;com.actionbarsherlock.internal.app.ActionBarImpl: void setSelectedNavigationItem(int)&gt;($i1)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.prefs.PrefsFast: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.prefs.PrefsFast: void setContentView(int)&gt;(2130903091)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.prefs.Codecs: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.prefs.Codecs: void setContentView(int)&gt;(2130903078)"/>  
    <node unit="specialinvoke r2.&lt;com.csipsimple.ui.prefs.Codecs$TabsAdapter: void &lt;init&gt;(com.csipsimple.ui.prefs.Codecs,android.support.v4.app.FragmentActivity,com.actionbarsherlock.app.ActionBar,android.support.v4.view.ViewPager)&gt;(r0, r0, $r3, $r5)"/>  
    <node type="AddTab" unit="virtualinvoke r2.&lt;com.csipsimple.ui.prefs.Codecs$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class)&gt;($r7, class &quot;Lcom/csipsimple/ui/prefs/CodecsFragment;&quot;)"/>  
    <node type="AddTab" unit="virtualinvoke r2.&lt;com.csipsimple.ui.prefs.Codecs$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class)&gt;($r8, class &quot;Lcom/csipsimple/ui/prefs/CodecsFragment;&quot;)"/>  
    <node type="AddTab" unit="virtualinvoke r2.&lt;com.csipsimple.ui.prefs.Codecs$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class)&gt;($r7, class &quot;Lcom/csipsimple/ui/prefs/CodecsFragment;&quot;)"/>  
    <node type="AddTab" unit="virtualinvoke r2.&lt;com.csipsimple.ui.prefs.Codecs$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class)&gt;($r8, class &quot;Lcom/csipsimple/ui/prefs/CodecsFragment;&quot;)"/>  
    <node type="AddTab" unit="virtualinvoke r2.&lt;com.csipsimple.ui.prefs.Codecs$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class)&gt;($r7, class &quot;Lcom/csipsimple/ui/prefs/CodecsFragment;&quot;)"/>  
    <node type="AddTab" unit="virtualinvoke r2.&lt;com.csipsimple.ui.prefs.Codecs$TabsAdapter: void addTab(com.actionbarsherlock.app.ActionBar$Tab,java.lang.Class)&gt;($r7, class &quot;Lcom/csipsimple/ui/prefs/CodecsFragment;&quot;)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context,android.util.AttributeSet,int)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.widgets.HorizontalQuickActionWindow: void &lt;init&gt;(android.content.Context,android.view.View)&gt;($r1, null)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.wizards.BasePrefsWizard: void beforeBuildPrefs()&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.wizards.BasePrefsWizard: void setContentView(int)&gt;(2130903132)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogListFragment: void fetchCalls()&gt;"> 
    <node type="PassOut" unit="virtualinvoke $r1.&lt;android.support.v4.app.LoaderManager: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)&gt;(0, null, r0)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.dialpad.DialerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)&gt;"> 
    <node unit="specialinvoke r0.&lt;com.csipsimple.ui.dialpad.DialerFragment: void initButtons(android.view.View)&gt;($r4)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.calllog.CallLogDetailsActivity: void onCreate(android.os.Bundle)&gt;"> 
    <node type="getFragment" unit="$r4 = virtualinvoke r0.&lt;com.csipsimple.ui.calllog.CallLogDetailsActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()&gt;()"/>  
    <node type="beginTransaction" unit="$r5 = virtualinvoke $r4.&lt;android.support.v4.app.FragmentManager: android.support.v4.app.FragmentTransaction beginTransaction()&gt;()"/>  
    <node type="addFunction" unit="$r5 = virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment)&gt;(16908290, r2)"/>  
    <node type="commit" unit="virtualinvoke $r5.&lt;android.support.v4.app.FragmentTransaction: int commit()&gt;()"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.incall.InCallActivity: void onLeftRightChoice(int)&gt;"> 
    <node unit="virtualinvoke r0.&lt;com.csipsimple.ui.incall.InCallActivity: void onTrigger(int,com.csipsimple.api.SipCallSession)&gt;(1, $r1)"/> 
  </methodSummary>
  <methodSummary source="&lt;com.csipsimple.ui.filters.EditFilter: void onCreate(android.os.Bundle)&gt;"> 
    <node type="setContentView" unit="virtualinvoke r0.&lt;com.csipsimple.ui.filters.EditFilter: void setContentView(int)&gt;(2130903088)"/> 
  </methodSummary>
</root>
